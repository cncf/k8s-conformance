  I0410 17:06:16.589864      23 e2e.go:109] Starting e2e run "a0251436-d43b-47c8-bbc5-b091a67705d5" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1744304776 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0410 17:06:16.699480 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:06:16.700149 23 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0410 17:06:16.717669 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0410 17:06:16.719714 23 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kindnet' (0 seconds elapsed)
  I0410 17:06:16.719755 23 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0410 17:06:16.719770 23 e2e.go:245] e2e test version: v1.31.6
  I0410 17:06:16.720318 23 e2e.go:254] kube-apiserver version: v1.31.6
  I0410 17:06:16.720403 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:06:16.722391 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.023 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 04/10/25 17:06:16.81
  I0410 17:06:16.810064 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 17:06:16.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:06:16.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:06:16.822
  STEP: Creating a pod to test downward api env vars @ 04/10/25 17:06:16.823
  STEP: Saw pod success @ 04/10/25 17:06:36.884
  I0410 17:06:36.887728 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downward-api-43b3e07e-7189-4e86-931a-141d9be415ae container dapi-container: <nil>
  STEP: delete the pod @ 04/10/25 17:06:36.907
  I0410 17:06:36.921398 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3821" for this suite. @ 04/10/25 17:06:36.925
• [20.120 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 04/10/25 17:06:36.93
  I0410 17:06:36.930052 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sched-pred @ 04/10/25 17:06:36.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:06:36.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:06:36.945
  I0410 17:06:36.947773 23 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0410 17:06:37.027220 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I0410 17:06:37.028903 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance before test
  I0410 17:06:37.031158 23 predicates.go:957] coredns-7c65d6cfc9-bfx56 from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 17:06:37.031184 23 predicates.go:959] 	Container coredns ready: true, restart count 2
  I0410 17:06:37.031194 23 predicates.go:957] etcd-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 17:06:37.031200 23 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0410 17:06:37.031206 23 predicates.go:957] kindnet-jtksc from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 17:06:37.031212 23 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0410 17:06:37.031219 23 predicates.go:957] kube-apiserver-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 17:06:37.031225 23 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0410 17:06:37.031233 23 predicates.go:957] kube-controller-manager-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 17:06:37.031238 23 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0410 17:06:37.031244 23 predicates.go:957] kube-proxy-f9rvm from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 17:06:37.031257 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0410 17:06:37.031265 23 predicates.go:957] kube-scheduler-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 17:06:37.031275 23 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0410 17:06:37.031282 23 predicates.go:957] storage-provisioner from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 17:06:37.031287 23 predicates.go:959] 	Container storage-provisioner ready: true, restart count 0
  I0410 17:06:37.031294 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-263a75f94ecb4a68-w8pln from sonobuoy started at 2025-04-10 17:05:50 +0000 UTC (2 container statuses recorded)
  I0410 17:06:37.031300 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0410 17:06:37.031306 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0410 17:06:37.031312 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  I0410 17:06:37.033039 23 predicates.go:957] kindnet-x8rsh from kube-system started at 2025-04-10 17:05:26 +0000 UTC (1 container statuses recorded)
  I0410 17:06:37.033054 23 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0410 17:06:37.033060 23 predicates.go:957] kube-proxy-jjf4l from kube-system started at 2025-04-10 17:05:26 +0000 UTC (1 container statuses recorded)
  I0410 17:06:37.033064 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0410 17:06:37.033070 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-10 17:05:45 +0000 UTC (1 container statuses recorded)
  I0410 17:06:37.033074 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0410 17:06:37.033078 23 predicates.go:957] sonobuoy-e2e-job-58df2f5851bb4777 from sonobuoy started at 2025-04-10 17:05:50 +0000 UTC (2 container statuses recorded)
  I0410 17:06:37.033083 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0410 17:06:37.033088 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0410 17:06:37.033092 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-263a75f94ecb4a68-9xh5d from sonobuoy started at 2025-04-10 17:05:50 +0000 UTC (2 container statuses recorded)
  I0410 17:06:37.033098 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0410 17:06:37.033102 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/10/25 17:06:37.033
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/10/25 17:06:39.047
  STEP: Trying to apply a random label on the found node. @ 04/10/25 17:06:39.061
  STEP: verifying the node has the label kubernetes.io/e2e-b145092c-82e2-41c7-8151-cde9f24e13c0 95 @ 04/10/25 17:06:39.07
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/10/25 17:06:39.074
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.49.3 on the node which pod4 resides and expect not scheduled @ 04/10/25 17:06:47.103
  STEP: removing the label kubernetes.io/e2e-b145092c-82e2-41c7-8151-cde9f24e13c0 off the node k8sconformance-m02 @ 04/10/25 17:11:47.118
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-b145092c-82e2-41c7-8151-cde9f24e13c0 @ 04/10/25 17:11:47.13
  I0410 17:11:47.134742 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5840" for this suite. @ 04/10/25 17:11:47.137
• [310.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/10/25 17:11:47.144
  I0410 17:11:47.144211 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pod-network-test @ 04/10/25 17:11:47.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:11:47.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:11:47.161
  STEP: Performing setup for networking test in namespace pod-network-test-3619 @ 04/10/25 17:11:47.163
  STEP: creating a selector @ 04/10/25 17:11:47.163
  STEP: Creating the service pods in kubernetes @ 04/10/25 17:11:47.163
  I0410 17:11:47.163272 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/10/25 17:12:09.253
  I0410 17:12:11.288530 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0410 17:12:11.288585 23 utils.go:496] Going to poll 10.244.0.3 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0410 17:12:11.290934 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.3:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3619 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:12:11.290976 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:12:11.291646 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:12:11.291756 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3619/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.3%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0410 17:12:11.370876 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0410 17:12:11.370938 23 utils.go:496] Going to poll 10.244.1.7 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0410 17:12:11.373932 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.7:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3619 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:12:11.373974 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:12:11.374704 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:12:11.374798 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3619/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.7%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0410 17:12:11.443571 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0410 17:12:11.443766 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3619" for this suite. @ 04/10/25 17:12:11.448
• [24.310 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 04/10/25 17:12:11.454
  I0410 17:12:11.454070 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename crd-webhook @ 04/10/25 17:12:11.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:12:11.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:12:11.465
  STEP: Setting up server cert @ 04/10/25 17:12:11.466
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/10/25 17:12:11.634
  STEP: Deploying the custom resource conversion webhook pod @ 04/10/25 17:12:11.639
  STEP: Wait for the deployment to be ready @ 04/10/25 17:12:11.647
  I0410 17:12:11.651422 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:12:13.665
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:12:13.684
  I0410 17:12:14.685019 23 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0410 17:12:14.689365 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Creating a v1 custom resource @ 04/10/25 17:12:17.248
  STEP: v2 custom resource should be converted @ 04/10/25 17:12:17.251
  I0410 17:12:17.802875 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9126" for this suite. @ 04/10/25 17:12:17.804
• [6.356 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 04/10/25 17:12:17.81
  I0410 17:12:17.810396 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 17:12:17.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:12:17.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:12:17.827
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/10/25 17:12:17.83
  I0410 17:12:17.830837 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-882 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0410 17:12:17.881276 23 builder.go:146] stderr: ""
  I0410 17:12:17.881315 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/10/25 17:12:17.881
  I0410 17:12:17.881395 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-882 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0410 17:12:17.930116 23 builder.go:146] stderr: ""
  I0410 17:12:17.930142 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/10/25 17:12:17.93
  I0410 17:12:17.931899 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-882 delete pods e2e-test-httpd-pod'
  I0410 17:12:19.646330 23 builder.go:146] stderr: ""
  I0410 17:12:19.646388 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0410 17:12:19.646572 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-882" for this suite. @ 04/10/25 17:12:19.651
• [1.846 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/10/25 17:12:19.656
  I0410 17:12:19.656912 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pods @ 04/10/25 17:12:19.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:12:19.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:12:19.67
  I0410 17:12:19.673204 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: creating the pod @ 04/10/25 17:12:19.674
  STEP: submitting the pod to kubernetes @ 04/10/25 17:12:19.674
  I0410 17:12:21.759197 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6982" for this suite. @ 04/10/25 17:12:21.762
• [2.110 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 04/10/25 17:12:21.767
  I0410 17:12:21.767242 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 17:12:21.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:12:21.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:12:21.863
  I0410 17:12:21.866812 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5384 create -f -'
  I0410 17:12:21.942958 23 builder.go:146] stderr: ""
  I0410 17:12:21.942998 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0410 17:12:21.943054 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5384 create -f -'
  I0410 17:12:22.028374 23 builder.go:146] stderr: ""
  I0410 17:12:22.028420 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/10/25 17:12:22.028
  I0410 17:12:23.036426 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0410 17:12:23.036485 23 framework.go:733] Found 1 / 1
  I0410 17:12:23.036514 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0410 17:12:23.039805 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0410 17:12:23.039843 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0410 17:12:23.039912 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5384 describe pod agnhost-primary-wfhqz'
  I0410 17:12:23.088558 23 builder.go:146] stderr: ""
  I0410 17:12:23.088635 23 builder.go:147] stdout: "Name:             agnhost-primary-wfhqz\nNamespace:        kubectl-5384\nPriority:         0\nService Account:  default\nNode:             k8sconformance-m02/192.168.49.3\nStart Time:       Thu, 10 Apr 2025 17:12:21 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.11\nIPs:\n  IP:           10.244.1.11\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   docker://55583797335b9fa785c133c995283e3601be7655144932f6f20cf56690d94fba\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 10 Apr 2025 17:12:22 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-n4gzc (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-n4gzc:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-5384/agnhost-primary-wfhqz to k8sconformance-m02\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0410 17:12:23.088701 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5384 describe rc agnhost-primary'
  I0410 17:12:23.136375 23 builder.go:146] stderr: ""
  I0410 17:12:23.136426 23 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5384\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-wfhqz\n"
  I0410 17:12:23.136481 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5384 describe service agnhost-primary'
  I0410 17:12:23.177887 23 builder.go:146] stderr: ""
  I0410 17:12:23.177939 23 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-5384\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.100.65.46\nIPs:                      10.100.65.46\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.244.1.11:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0410 17:12:23.179608 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5384 describe node k8sconformance'
  I0410 17:12:23.231478 23 builder.go:146] stderr: ""
  I0410 17:12:23.231602 23 builder.go:147] stdout: "Name:               k8sconformance\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8sconformance\n                    kubernetes.io/os=linux\n                    minikube.k8s.io/commit=65ded669affe3b2415e35d6eb8b867ce9a1cef91\n                    minikube.k8s.io/name=k8sconformance\n                    minikube.k8s.io/primary=true\n                    minikube.k8s.io/updated_at=2025_04_10T13_05_00_0700\n                    minikube.k8s.io/version=v1.35.0\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 10 Apr 2025 17:04:57 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8sconformance\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 10 Apr 2025 17:12:17 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Thu, 10 Apr 2025 17:12:09 +0000   Thu, 10 Apr 2025 17:04:56 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Thu, 10 Apr 2025 17:12:09 +0000   Thu, 10 Apr 2025 17:04:56 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Thu, 10 Apr 2025 17:12:09 +0000   Thu, 10 Apr 2025 17:04:56 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Thu, 10 Apr 2025 17:12:09 +0000   Thu, 10 Apr 2025 17:04:57 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.49.2\n  Hostname:    k8sconformance\nCapacity:\n  cpu:                12\n  ephemeral-storage:  954434220Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             31955748Ki\n  pods:               110\nAllocatable:\n  cpu:                12\n  ephemeral-storage:  954434220Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             31955748Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 37667aa54053417d8bbd3b8e35fc8055\n  System UUID:                afc624f4-ecaf-4ff5-a5b3-52a9231698f0\n  Boot ID:                    9df964e4-5595-4916-8feb-c27d38d13e01\n  Kernel Version:             6.11.0-21-generic\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  docker://28.0.4\n  Kubelet Version:            v1.31.6\n  Kube-Proxy Version:         v1.31.6\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-7c65d6cfc9-bfx56                                   100m (0%)     0 (0%)      70Mi (0%)        170Mi (0%)     7m19s\n  kube-system                 etcd-k8sconformance                                        100m (0%)     0 (0%)      100Mi (0%)       0 (0%)         7m24s\n  kube-system                 kindnet-jtksc                                              100m (0%)     100m (0%)   50Mi (0%)        50Mi (0%)      7m19s\n  kube-system                 kube-apiserver-k8sconformance                              250m (2%)     0 (0%)      0 (0%)           0 (0%)         7m24s\n  kube-system                 kube-controller-manager-k8sconformance                     200m (1%)     0 (0%)      0 (0%)           0 (0%)         7m24s\n  kube-system                 kube-proxy-f9rvm                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         7m19s\n  kube-system                 kube-scheduler-k8sconformance                              100m (0%)     0 (0%)      0 (0%)           0 (0%)         7m24s\n  kube-system                 storage-provisioner                                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         7m19s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-263a75f94ecb4a68-w8pln    0 (0%)        0 (0%)      0 (0%)           0 (0%)         6m33s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                850m (7%)   100m (0%)\n  memory             220Mi (0%)  220Mi (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type    Reason                   Age                    From             Message\n  ----    ------                   ----                   ----             -------\n  Normal  Starting                 7m18s                  kube-proxy       \n  Normal  NodeHasSufficientMemory  7m28s (x8 over 7m28s)  kubelet          Node k8sconformance status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    7m28s (x8 over 7m28s)  kubelet          Node k8sconformance status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     7m28s (x7 over 7m28s)  kubelet          Node k8sconformance status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  7m28s                  kubelet          Updated Node Allocatable limit across pods\n  Normal  Starting                 7m24s                  kubelet          Starting kubelet.\n  Normal  NodeAllocatableEnforced  7m24s                  kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeHasSufficientMemory  7m24s                  kubelet          Node k8sconformance status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    7m24s                  kubelet          Node k8sconformance status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     7m24s                  kubelet          Node k8sconformance status is now: NodeHasSufficientPID\n  Normal  RegisteredNode           7m20s                  node-controller  Node k8sconformance event: Registered Node k8sconformance in Controller\n"
  I0410 17:12:23.231682 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5384 describe namespace kubectl-5384'
  I0410 17:12:23.274160 23 builder.go:146] stderr: ""
  I0410 17:12:23.274202 23 builder.go:147] stdout: "Name:         kubectl-5384\nLabels:       e2e-framework=kubectl\n              e2e-run=a0251436-d43b-47c8-bbc5-b091a67705d5\n              kubernetes.io/metadata.name=kubectl-5384\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0410 17:12:23.274312 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5384" for this suite. @ 04/10/25 17:12:23.275
• [1.514 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 04/10/25 17:12:23.281
  I0410 17:12:23.281069 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 17:12:23.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:12:23.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:12:23.388
  STEP: Setting up server cert @ 04/10/25 17:12:23.479
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 17:12:23.68
  STEP: Deploying the webhook pod @ 04/10/25 17:12:23.683
  STEP: Wait for the deployment to be ready @ 04/10/25 17:12:23.69
  I0410 17:12:23.695300 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:12:25.709
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:12:25.726
  I0410 17:12:26.726341 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/10/25 17:12:26.735
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/10/25 17:12:26.756
  STEP: Creating a dummy validating-webhook-configuration object @ 04/10/25 17:12:26.77
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/10/25 17:12:26.778
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/10/25 17:12:26.782
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/10/25 17:12:26.789
  I0410 17:12:26.833838 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7401" for this suite. @ 04/10/25 17:12:26.835
  STEP: Destroying namespace "webhook-markers-3065" for this suite. @ 04/10/25 17:12:26.839
• [3.562 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/10/25 17:12:26.843
  I0410 17:12:26.843209 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename replicaset @ 04/10/25 17:12:26.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:12:26.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:12:26.851
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/10/25 17:12:26.853
  I0410 17:12:26.857464 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0410 17:12:31.860848 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/10/25 17:12:31.86
  STEP: getting scale subresource @ 04/10/25 17:12:35.873
  STEP: updating a scale subresource @ 04/10/25 17:12:35.875
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/10/25 17:12:35.883
  STEP: Patch a scale subresource @ 04/10/25 17:12:35.886
  I0410 17:12:35.896902 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9615" for this suite. @ 04/10/25 17:12:35.902
• [9.067 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/10/25 17:12:35.91
  I0410 17:12:35.910547 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename hostport @ 04/10/25 17:12:35.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:12:35.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:12:35.926
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/10/25 17:12:36.003
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.49.3 on the node which pod1 resides and expect scheduled @ 04/10/25 17:12:38.021
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.49.3 but use UDP protocol on the node which pod2 resides @ 04/10/25 17:12:50.069
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/10/25 17:12:54.106
  I0410 17:12:54.106639 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.49.3 http://127.0.0.1:54323/hostname] Namespace:hostport-4193 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:12:54.106659 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:12:54.107245 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:12:54.107366 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4193/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.49.3+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.49.3, port: 54323 @ 04/10/25 17:12:54.169
  I0410 17:12:54.169968 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.49.3:54323/hostname] Namespace:hostport-4193 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:12:54.169989 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:12:54.170541 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:12:54.170622 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4193/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.49.3%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.49.3, port: 54323 UDP @ 04/10/25 17:12:54.236
  I0410 17:12:54.236162 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.49.3 54323] Namespace:hostport-4193 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:12:54.236184 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:12:54.236602 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:12:54.236644 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4193/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.49.3+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I0410 17:12:59.310036 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4193" for this suite. @ 04/10/25 17:12:59.314
• [23.412 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 04/10/25 17:12:59.322
  I0410 17:12:59.322839 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 17:12:59.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:12:59.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:12:59.339
  STEP: Creating configMap with name cm-test-opt-del-f1f49801-d575-4fed-9b9b-bd06a6fa2a03 @ 04/10/25 17:12:59.414
  STEP: Creating configMap with name cm-test-opt-upd-4a75c3d6-6229-43eb-a11d-d0f79a5065d6 @ 04/10/25 17:12:59.419
  STEP: Creating the pod @ 04/10/25 17:12:59.422
  STEP: Deleting configmap cm-test-opt-del-f1f49801-d575-4fed-9b9b-bd06a6fa2a03 @ 04/10/25 17:13:01.465
  STEP: Updating configmap cm-test-opt-upd-4a75c3d6-6229-43eb-a11d-d0f79a5065d6 @ 04/10/25 17:13:01.47
  STEP: Creating configMap with name cm-test-opt-create-50fd2ac6-c84d-4c6c-93ab-a8c19bbd2ee2 @ 04/10/25 17:13:01.473
  STEP: waiting to observe update in volume @ 04/10/25 17:13:01.476
  I0410 17:13:05.521057 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2944" for this suite. @ 04/10/25 17:13:05.524
• [6.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 04/10/25 17:13:05.531
  I0410 17:13:05.531775 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename containers @ 04/10/25 17:13:05.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:13:05.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:13:05.547
  STEP: Creating a pod to test override arguments @ 04/10/25 17:13:05.551
  STEP: Saw pod success @ 04/10/25 17:13:07.567
  I0410 17:13:07.571014 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod client-containers-445e598d-e802-4818-a6a3-3b1d58f56ec2 container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 17:13:07.578
  I0410 17:13:07.591840 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6278" for this suite. @ 04/10/25 17:13:07.595
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/10/25 17:13:07.606
  I0410 17:13:07.606413 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename proxy @ 04/10/25 17:13:07.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:13:07.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:13:07.622
  STEP: starting an echo server on multiple ports @ 04/10/25 17:13:07.637
  STEP: creating replication controller proxy-service-n4vjw in namespace proxy-7853 @ 04/10/25 17:13:07.637
  I0410 17:13:07.645383      23 runners.go:193] Created replication controller with name: proxy-service-n4vjw, namespace: proxy-7853, replica count: 1
  I0410 17:13:08.696719      23 runners.go:193] proxy-service-n4vjw Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0410 17:13:09.697507      23 runners.go:193] proxy-service-n4vjw Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0410 17:13:09.702016 23 proxy.go:230] setup took 2.075982598s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/10/25 17:13:09.702
  I0410 17:13:09.708315 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 5.774995ms)
  I0410 17:13:09.708406 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 6.056443ms)
  I0410 17:13:09.708389 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 5.877329ms)
  I0410 17:13:09.708394 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 6.038137ms)
  I0410 17:13:09.708374 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 5.843654ms)
  I0410 17:13:09.708641 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 5.948094ms)
  I0410 17:13:09.708851 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 6.521196ms)
  I0410 17:13:09.709561 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 7.092781ms)
  I0410 17:13:09.709609 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 7.228348ms)
  I0410 17:13:09.709630 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 7.067644ms)
  I0410 17:13:09.710127 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 7.602809ms)
  I0410 17:13:09.718307 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 15.812242ms)
  I0410 17:13:09.718293 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 16.028983ms)
  I0410 17:13:09.718341 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 16.084285ms)
  I0410 17:13:09.718369 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 15.944337ms)
  I0410 17:13:09.718558 23 proxy.go:558] (0) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 16.105218ms)
  I0410 17:13:09.725703 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 7.039706ms)
  I0410 17:13:09.725853 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 6.856876ms)
  I0410 17:13:09.725983 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 7.28335ms)
  I0410 17:13:09.727453 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 8.431173ms)
  I0410 17:13:09.727672 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 8.877309ms)
  I0410 17:13:09.727713 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 8.857438ms)
  I0410 17:13:09.727756 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 8.896337ms)
  I0410 17:13:09.727790 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 9.117273ms)
  I0410 17:13:09.727806 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 9.103701ms)
  I0410 17:13:09.727845 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 8.83517ms)
  I0410 17:13:09.727845 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 8.881655ms)
  I0410 17:13:09.727888 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 8.988702ms)
  I0410 17:13:09.727924 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 8.974468ms)
  I0410 17:13:09.728224 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 9.257007ms)
  I0410 17:13:09.728226 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 9.385724ms)
  I0410 17:13:09.728602 23 proxy.go:558] (1) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 9.809444ms)
  I0410 17:13:09.741073 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 12.146093ms)
  I0410 17:13:09.741155 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 12.236218ms)
  I0410 17:13:09.741227 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 12.277121ms)
  I0410 17:13:09.741205 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 12.499894ms)
  I0410 17:13:09.746783 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 17.986624ms)
  I0410 17:13:09.746840 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 18.15832ms)
  I0410 17:13:09.746958 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 18.004239ms)
  I0410 17:13:09.749348 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 20.485051ms)
  I0410 17:13:09.749417 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 20.482328ms)
  I0410 17:13:09.749452 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 20.544453ms)
  I0410 17:13:09.749492 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 20.810246ms)
  I0410 17:13:09.749520 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 20.799107ms)
  I0410 17:13:09.749555 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 20.714312ms)
  I0410 17:13:09.749584 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 20.772655ms)
  I0410 17:13:09.749610 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 20.836757ms)
  I0410 17:13:09.749632 23 proxy.go:558] (2) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 20.684607ms)
  I0410 17:13:09.759572 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 8.654049ms)
  I0410 17:13:09.759584 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 8.271273ms)
  I0410 17:13:09.759980 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 9.217489ms)
  I0410 17:13:09.759989 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 8.970029ms)
  I0410 17:13:09.759991 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 9.877098ms)
  I0410 17:13:09.760381 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 9.273305ms)
  I0410 17:13:09.760749 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 9.570127ms)
  I0410 17:13:09.760862 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 9.877508ms)
  I0410 17:13:09.763261 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 12.654571ms)
  I0410 17:13:09.763325 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 13.114441ms)
  I0410 17:13:09.764913 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 14.514744ms)
  I0410 17:13:09.764924 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 14.613411ms)
  I0410 17:13:09.765222 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 15.228926ms)
  I0410 17:13:09.765434 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 14.75475ms)
  I0410 17:13:09.765462 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 15.731542ms)
  I0410 17:13:09.765461 23 proxy.go:558] (3) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 14.979683ms)
  I0410 17:13:09.767542 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.045766ms)
  I0410 17:13:09.767727 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.239397ms)
  I0410 17:13:09.768051 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 2.545562ms)
  I0410 17:13:09.768115 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.573337ms)
  I0410 17:13:09.768318 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 2.747653ms)
  I0410 17:13:09.768401 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 2.88681ms)
  I0410 17:13:09.768420 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.847325ms)
  I0410 17:13:09.768535 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.9596ms)
  I0410 17:13:09.768549 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 3.024754ms)
  I0410 17:13:09.768568 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 3.015025ms)
  I0410 17:13:09.768581 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 3.0399ms)
  I0410 17:13:09.768804 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 3.231717ms)
  I0410 17:13:09.768993 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 3.433112ms)
  I0410 17:13:09.768995 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 3.458694ms)
  I0410 17:13:09.769009 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 3.506766ms)
  I0410 17:13:09.769039 23 proxy.go:558] (4) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 3.456685ms)
  I0410 17:13:09.771218 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.12631ms)
  I0410 17:13:09.771218 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 2.064525ms)
  I0410 17:13:09.771232 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.150517ms)
  I0410 17:13:09.771218 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.063563ms)
  I0410 17:13:09.771282 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 2.210074ms)
  I0410 17:13:09.771296 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.169762ms)
  I0410 17:13:09.771299 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.117932ms)
  I0410 17:13:09.771359 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.15538ms)
  I0410 17:13:09.771363 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 2.170876ms)
  I0410 17:13:09.771363 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.146477ms)
  I0410 17:13:09.771859 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.643324ms)
  I0410 17:13:09.771875 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.729808ms)
  I0410 17:13:09.771894 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.831258ms)
  I0410 17:13:09.771931 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.760374ms)
  I0410 17:13:09.771903 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.784758ms)
  I0410 17:13:09.771935 23 proxy.go:558] (5) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.762568ms)
  I0410 17:13:09.774239 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.234357ms)
  I0410 17:13:09.774301 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.271644ms)
  I0410 17:13:09.774317 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.257198ms)
  I0410 17:13:09.774331 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.29723ms)
  I0410 17:13:09.774373 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.324746ms)
  I0410 17:13:09.774389 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.398428ms)
  I0410 17:13:09.774419 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 2.407423ms)
  I0410 17:13:09.774440 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.41054ms)
  I0410 17:13:09.774456 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 2.40573ms)
  I0410 17:13:09.774521 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.490919ms)
  I0410 17:13:09.774537 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.519039ms)
  I0410 17:13:09.774564 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.524565ms)
  I0410 17:13:09.774587 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 2.53796ms)
  I0410 17:13:09.774585 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.599691ms)
  I0410 17:13:09.774602 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.614638ms)
  I0410 17:13:09.774611 23 proxy.go:558] (6) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.639185ms)
  I0410 17:13:09.776789 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.126925ms)
  I0410 17:13:09.776826 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 2.148347ms)
  I0410 17:13:09.777060 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 2.324231ms)
  I0410 17:13:09.777081 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.345111ms)
  I0410 17:13:09.777116 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 2.432581ms)
  I0410 17:13:09.777130 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.421984ms)
  I0410 17:13:09.777151 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.432128ms)
  I0410 17:13:09.777162 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.424027ms)
  I0410 17:13:09.777174 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.53089ms)
  I0410 17:13:09.777343 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.620184ms)
  I0410 17:13:09.777374 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.679827ms)
  I0410 17:13:09.777393 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.667047ms)
  I0410 17:13:09.777419 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.685221ms)
  I0410 17:13:09.777431 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.725873ms)
  I0410 17:13:09.777443 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.729338ms)
  I0410 17:13:09.777498 23 proxy.go:558] (7) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.832521ms)
  I0410 17:13:09.779103 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 1.576679ms)
  I0410 17:13:09.779748 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.05385ms)
  I0410 17:13:09.779798 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 1.847549ms)
  I0410 17:13:09.779797 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 1.943421ms)
  I0410 17:13:09.779808 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 1.999462ms)
  I0410 17:13:09.779820 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.07119ms)
  I0410 17:13:09.779830 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 1.96708ms)
  I0410 17:13:09.779823 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 1.878827ms)
  I0410 17:13:09.779826 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 1.908016ms)
  I0410 17:13:09.779829 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 1.954344ms)
  I0410 17:13:09.779847 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 1.872719ms)
  I0410 17:13:09.779863 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 1.984294ms)
  I0410 17:13:09.779901 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 1.931642ms)
  I0410 17:13:09.779909 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 2.003461ms)
  I0410 17:13:09.779914 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.284066ms)
  I0410 17:13:09.779995 23 proxy.go:558] (8) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.058971ms)
  I0410 17:13:09.782065 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 1.985955ms)
  I0410 17:13:09.782117 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.048368ms)
  I0410 17:13:09.782117 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.049005ms)
  I0410 17:13:09.782143 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.046931ms)
  I0410 17:13:09.782156 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.075018ms)
  I0410 17:13:09.782174 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.106612ms)
  I0410 17:13:09.782422 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 2.320511ms)
  I0410 17:13:09.782430 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.330408ms)
  I0410 17:13:09.782493 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.461777ms)
  I0410 17:13:09.782495 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.470084ms)
  I0410 17:13:09.782504 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.467553ms)
  I0410 17:13:09.782507 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.459621ms)
  I0410 17:13:09.782512 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.486552ms)
  I0410 17:13:09.782526 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.450771ms)
  I0410 17:13:09.782524 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.418204ms)
  I0410 17:13:09.782538 23 proxy.go:558] (9) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 2.433331ms)
  I0410 17:13:09.784719 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 2.117227ms)
  I0410 17:13:09.784779 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.210431ms)
  I0410 17:13:09.784786 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 2.162556ms)
  I0410 17:13:09.784803 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.175314ms)
  I0410 17:13:09.784816 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.173561ms)
  I0410 17:13:09.784822 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.200345ms)
  I0410 17:13:09.784830 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.224748ms)
  I0410 17:13:09.784837 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 2.215536ms)
  I0410 17:13:09.784844 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.205829ms)
  I0410 17:13:09.784848 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.199416ms)
  I0410 17:13:09.785455 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.878738ms)
  I0410 17:13:09.785462 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.872845ms)
  I0410 17:13:09.785490 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.869502ms)
  I0410 17:13:09.785492 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.914474ms)
  I0410 17:13:09.785500 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.87073ms)
  I0410 17:13:09.785524 23 proxy.go:558] (10) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.948799ms)
  I0410 17:13:09.787318 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 1.744197ms)
  I0410 17:13:09.787355 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 1.770739ms)
  I0410 17:13:09.787550 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 1.90283ms)
  I0410 17:13:09.787575 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 1.950215ms)
  I0410 17:13:09.787598 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 1.997977ms)
  I0410 17:13:09.787596 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 1.989398ms)
  I0410 17:13:09.787614 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.039624ms)
  I0410 17:13:09.787617 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 1.977366ms)
  I0410 17:13:09.787627 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.006448ms)
  I0410 17:13:09.787671 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.030398ms)
  I0410 17:13:09.788175 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.604252ms)
  I0410 17:13:09.788184 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.568177ms)
  I0410 17:13:09.788178 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.561407ms)
  I0410 17:13:09.788191 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.539405ms)
  I0410 17:13:09.788200 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.561917ms)
  I0410 17:13:09.788188 23 proxy.go:558] (11) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.559002ms)
  I0410 17:13:09.790578 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.176411ms)
  I0410 17:13:09.790578 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.20743ms)
  I0410 17:13:09.790597 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 2.239365ms)
  I0410 17:13:09.790605 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.222697ms)
  I0410 17:13:09.790612 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 2.265025ms)
  I0410 17:13:09.790612 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 2.235762ms)
  I0410 17:13:09.790633 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.280501ms)
  I0410 17:13:09.790648 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.349436ms)
  I0410 17:13:09.790670 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.268616ms)
  I0410 17:13:09.790678 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.261348ms)
  I0410 17:13:09.790693 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.275326ms)
  I0410 17:13:09.790787 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.368247ms)
  I0410 17:13:09.790789 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.397501ms)
  I0410 17:13:09.790796 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.389742ms)
  I0410 17:13:09.790796 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.404718ms)
  I0410 17:13:09.790792 23 proxy.go:558] (12) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.370085ms)
  I0410 17:13:09.792571 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 1.675049ms)
  I0410 17:13:09.792615 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 1.691023ms)
  I0410 17:13:09.792985 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.134708ms)
  I0410 17:13:09.793014 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.128915ms)
  I0410 17:13:09.793029 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.131297ms)
  I0410 17:13:09.793399 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.462514ms)
  I0410 17:13:09.793411 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.447938ms)
  I0410 17:13:09.793412 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.465062ms)
  I0410 17:13:09.793430 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.516081ms)
  I0410 17:13:09.793432 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.469809ms)
  I0410 17:13:09.793479 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.542223ms)
  I0410 17:13:09.793510 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 2.562671ms)
  I0410 17:13:09.793519 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 2.569964ms)
  I0410 17:13:09.793540 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.635023ms)
  I0410 17:13:09.793549 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.584449ms)
  I0410 17:13:09.793569 23 proxy.go:558] (13) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.636818ms)
  I0410 17:13:09.795707 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.058386ms)
  I0410 17:13:09.795730 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 2.069971ms)
  I0410 17:13:09.795710 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.023632ms)
  I0410 17:13:09.795713 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.049508ms)
  I0410 17:13:09.795744 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 2.13689ms)
  I0410 17:13:09.795725 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.051919ms)
  I0410 17:13:09.795751 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.149324ms)
  I0410 17:13:09.795744 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 2.072235ms)
  I0410 17:13:09.795750 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.100308ms)
  I0410 17:13:09.795772 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.146681ms)
  I0410 17:13:09.796231 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.612142ms)
  I0410 17:13:09.796231 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.620961ms)
  I0410 17:13:09.796231 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.580148ms)
  I0410 17:13:09.796265 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.611034ms)
  I0410 17:13:09.796284 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.652214ms)
  I0410 17:13:09.796627 23 proxy.go:558] (14) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.955097ms)
  I0410 17:13:09.798913 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 2.181195ms)
  I0410 17:13:09.798909 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 2.243024ms)
  I0410 17:13:09.798941 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.162504ms)
  I0410 17:13:09.798936 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 2.174604ms)
  I0410 17:13:09.798941 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.15408ms)
  I0410 17:13:09.798955 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.168427ms)
  I0410 17:13:09.798958 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.236146ms)
  I0410 17:13:09.798956 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.205318ms)
  I0410 17:13:09.798909 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.188481ms)
  I0410 17:13:09.798953 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.179344ms)
  I0410 17:13:09.798986 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.248367ms)
  I0410 17:13:09.798992 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.197674ms)
  I0410 17:13:09.799081 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.293098ms)
  I0410 17:13:09.799098 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.326529ms)
  I0410 17:13:09.799098 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.341956ms)
  I0410 17:13:09.799118 23 proxy.go:558] (15) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.328521ms)
  I0410 17:13:09.800876 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 1.730059ms)
  I0410 17:13:09.801148 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 1.969186ms)
  I0410 17:13:09.801176 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.024457ms)
  I0410 17:13:09.801188 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 2.033879ms)
  I0410 17:13:09.801199 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 2.016172ms)
  I0410 17:13:09.801210 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.016721ms)
  I0410 17:13:09.801219 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 2.026283ms)
  I0410 17:13:09.801228 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.032359ms)
  I0410 17:13:09.801312 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.111386ms)
  I0410 17:13:09.801355 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.164697ms)
  I0410 17:13:09.801370 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.228089ms)
  I0410 17:13:09.801378 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.244502ms)
  I0410 17:13:09.801430 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.247092ms)
  I0410 17:13:09.801443 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.25889ms)
  I0410 17:13:09.801450 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.285726ms)
  I0410 17:13:09.801459 23 proxy.go:558] (16) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.300714ms)
  I0410 17:13:09.803314 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 1.499707ms)
  I0410 17:13:09.803314 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 1.749129ms)
  I0410 17:13:09.803315 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 1.840607ms)
  I0410 17:13:09.803415 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 1.695648ms)
  I0410 17:13:09.804193 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.557825ms)
  I0410 17:13:09.804192 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.533087ms)
  I0410 17:13:09.804200 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.583762ms)
  I0410 17:13:09.804201 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.308846ms)
  I0410 17:13:09.804208 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 2.344941ms)
  I0410 17:13:09.804219 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.633209ms)
  I0410 17:13:09.804218 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.451291ms)
  I0410 17:13:09.804227 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.544345ms)
  I0410 17:13:09.804201 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 2.296818ms)
  I0410 17:13:09.804213 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.679523ms)
  I0410 17:13:09.804240 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.401422ms)
  I0410 17:13:09.804219 23 proxy.go:558] (17) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.362651ms)
  I0410 17:13:09.806730 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 2.401797ms)
  I0410 17:13:09.806731 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.383032ms)
  I0410 17:13:09.806912 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.606571ms)
  I0410 17:13:09.807267 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 2.884983ms)
  I0410 17:13:09.807300 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 2.934753ms)
  I0410 17:13:09.807464 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 3.124956ms)
  I0410 17:13:09.807477 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 3.101297ms)
  I0410 17:13:09.807619 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 3.237535ms)
  I0410 17:13:09.807629 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 3.259266ms)
  I0410 17:13:09.807676 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 3.295434ms)
  I0410 17:13:09.807843 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 3.484391ms)
  I0410 17:13:09.808061 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 3.703763ms)
  I0410 17:13:09.808067 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 3.755015ms)
  I0410 17:13:09.808124 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 3.804437ms)
  I0410 17:13:09.808131 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 3.799103ms)
  I0410 17:13:09.808232 23 proxy.go:558] (18) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 3.882931ms)
  I0410 17:13:09.810055 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468/proxy/rewriteme">test</a> (200; 1.78695ms)
  I0410 17:13:09.810114 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:460/proxy/: tls baz (200; 1.799596ms)
  I0410 17:13:09.810136 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:162/proxy/: bar (200; 1.835789ms)
  I0410 17:13:09.810155 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:1080/proxy/rewriteme">... (200; 1.867064ms)
  I0410 17:13:09.810239 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:162/proxy/: bar (200; 1.921623ms)
  I0410 17:13:09.810282 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:462/proxy/: tls qux (200; 1.939955ms)
  I0410 17:13:09.810389 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname2/proxy/: bar (200; 2.103231ms)
  I0410 17:13:09.810406 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/https:proxy-service-n4vjw-47468:443/proxy/tlsrewritem... (200; 2.065985ms)
  I0410 17:13:09.810429 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/pods/http:proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.11757ms)
  I0410 17:13:09.810438 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:160/proxy/: foo (200; 2.094381ms)
  I0410 17:13:09.810645 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/: <a href="/api/v1/namespaces/proxy-7853/pods/proxy-service-n4vjw-47468:1080/proxy/rewriteme">test<... (200; 2.345759ms)
  I0410 17:13:09.810645 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/services/proxy-service-n4vjw:portname1/proxy/: foo (200; 2.286622ms)
  I0410 17:13:09.810656 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname2/proxy/: tls qux (200; 2.32561ms)
  I0410 17:13:09.810669 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/services/https:proxy-service-n4vjw:tlsportname1/proxy/: tls baz (200; 2.359106ms)
  I0410 17:13:09.810678 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname1/proxy/: foo (200; 2.412589ms)
  I0410 17:13:09.810683 23 proxy.go:558] (19) /api/v1/namespaces/proxy-7853/services/http:proxy-service-n4vjw:portname2/proxy/: bar (200; 2.340418ms)
  STEP: deleting ReplicationController proxy-service-n4vjw in namespace proxy-7853, will wait for the garbage collector to delete the pods @ 04/10/25 17:13:09.81
  I0410 17:13:09.870726 23 resources.go:139] Deleting ReplicationController proxy-service-n4vjw took: 8.07187ms
  I0410 17:13:09.971035 23 resources.go:163] Terminating ReplicationController proxy-service-n4vjw pods took: 100.300379ms
  I0410 17:13:12.472211 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7853" for this suite. @ 04/10/25 17:13:12.478
• [4.885 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/10/25 17:13:12.491
  I0410 17:13:12.491481 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename daemonsets @ 04/10/25 17:13:12.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:13:12.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:13:12.509
  I0410 17:13:12.587913 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/10/25 17:13:12.594
  I0410 17:13:12.597641 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:12.597688 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/10/25 17:13:12.597
  I0410 17:13:12.698238 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:12.698346 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:13:13.700299 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:13.700377 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:13:14.696133 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:14.696170 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:13:15.699436 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:15.699503 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:13:16.699459 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:16.699520 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:13:17.696209 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:17.696296 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:13:18.699904 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:18.699970 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:13:19.695843 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:19.695866 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:13:20.700364 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:20.700429 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:13:21.700066 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0410 17:13:21.700138 23 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/10/25 17:13:21.703
  I0410 17:13:21.725017 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:21.725085 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/10/25 17:13:21.725
  I0410 17:13:21.801844 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:21.801909 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:13:22.754195 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:22.754235 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:13:23.744015 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:23.744046 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:13:24.746050 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0410 17:13:24.746098 23 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/10/25 17:13:24.751
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1533, will wait for the garbage collector to delete the pods @ 04/10/25 17:13:24.751
  I0410 17:13:24.813103 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.824784ms
  I0410 17:13:24.913766 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.620478ms
  I0410 17:13:26.517970 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:13:26.518024 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0410 17:13:26.521891 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"1676"},"items":null}

  I0410 17:13:26.524520 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"1676"},"items":null}

  I0410 17:13:26.541443 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1533" for this suite. @ 04/10/25 17:13:26.544
• [14.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 04/10/25 17:13:26.549
  I0410 17:13:26.549285 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 17:13:26.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:13:26.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:13:26.562
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/10/25 17:13:26.564
  I0410 17:13:26.564164 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-9139 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0410 17:13:26.613014 23 builder.go:146] stderr: ""
  I0410 17:13:26.613051 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/10/25 17:13:26.613
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/10/25 17:13:31.663
  I0410 17:13:31.663585 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-9139 get pod e2e-test-httpd-pod -o json'
  I0410 17:13:31.708203 23 builder.go:146] stderr: ""
  I0410 17:13:31.708276 23 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-04-10T17:13:26Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9139\",\n        \"resourceVersion\": \"1690\",\n        \"uid\": \"af983bf1-243e-433f-898a-52b70ab6d6c0\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-hmttg\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8sconformance-m02\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-hmttg\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-10T17:13:27Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-10T17:13:26Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-10T17:13:27Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-10T17:13:27Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-10T17:13:26Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"docker://3d82d62bcbaf33d2b59da2bf99ae95840cb3140a5355337ae6b9a0ff9a1e3381\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-04-10T17:13:27Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-hmttg\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.49.3\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.49.3\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.20\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.20\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-04-10T17:13:26Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/10/25 17:13:31.708
  I0410 17:13:31.708349 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-9139 replace -f -'
  I0410 17:13:31.776784 23 builder.go:146] stderr: ""
  I0410 17:13:31.776826 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 04/10/25 17:13:31.776
  I0410 17:13:31.780764 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-9139 delete pods e2e-test-httpd-pod'
  I0410 17:13:33.630118 23 builder.go:146] stderr: ""
  I0410 17:13:33.630172 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0410 17:13:33.630352 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9139" for this suite. @ 04/10/25 17:13:33.633
• [7.088 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 04/10/25 17:13:33.637
  I0410 17:13:33.637626 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 17:13:33.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:13:33.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:13:33.652
  STEP: creating all guestbook components @ 04/10/25 17:13:33.655
  I0410 17:13:33.655226 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0410 17:13:33.655378 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-1100 create -f -'
  I0410 17:13:33.732960 23 builder.go:146] stderr: ""
  I0410 17:13:33.733096 23 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0410 17:13:33.733244 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0410 17:13:33.733419 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-1100 create -f -'
  I0410 17:13:33.810894 23 builder.go:146] stderr: ""
  I0410 17:13:33.810935 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0410 17:13:33.810976 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0410 17:13:33.811043 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-1100 create -f -'
  I0410 17:13:33.882981 23 builder.go:146] stderr: ""
  I0410 17:13:33.883013 23 builder.go:147] stdout: "service/frontend created\n"
  I0410 17:13:33.883058 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0410 17:13:33.883125 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-1100 create -f -'
  I0410 17:13:33.938716 23 builder.go:146] stderr: ""
  I0410 17:13:33.938757 23 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0410 17:13:33.938812 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0410 17:13:33.938881 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-1100 create -f -'
  I0410 17:13:34.024085 23 builder.go:146] stderr: ""
  I0410 17:13:34.024136 23 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0410 17:13:34.024177 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0410 17:13:34.024226 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-1100 create -f -'
  I0410 17:13:34.089985 23 builder.go:146] stderr: ""
  I0410 17:13:34.090021 23 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/10/25 17:13:34.09
  I0410 17:13:34.090060 23 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I0410 17:13:39.142976 23 kubectl.go:2276] Waiting for frontend to serve content.
  I0410 17:13:39.155492 23 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I0410 17:13:39.164769 23 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/10/25 17:13:39.172
  I0410 17:13:39.172747 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-1100 delete --grace-period=0 --force -f -'
  I0410 17:13:39.231146 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0410 17:13:39.231193 23 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/10/25 17:13:39.231
  I0410 17:13:39.231350 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-1100 delete --grace-period=0 --force -f -'
  I0410 17:13:39.283343 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0410 17:13:39.283373 23 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/10/25 17:13:39.283
  I0410 17:13:39.283447 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-1100 delete --grace-period=0 --force -f -'
  I0410 17:13:39.328190 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0410 17:13:39.328216 23 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/10/25 17:13:39.328
  I0410 17:13:39.328317 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-1100 delete --grace-period=0 --force -f -'
  I0410 17:13:39.368938 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0410 17:13:39.368964 23 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/10/25 17:13:39.369
  I0410 17:13:39.369043 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-1100 delete --grace-period=0 --force -f -'
  I0410 17:13:39.429443 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0410 17:13:39.429481 23 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/10/25 17:13:39.429
  I0410 17:13:39.429584 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-1100 delete --grace-period=0 --force -f -'
  I0410 17:13:39.481087 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0410 17:13:39.481115 23 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0410 17:13:39.481189 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1100" for this suite. @ 04/10/25 17:13:39.483
• [5.851 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 04/10/25 17:13:39.489
  I0410 17:13:39.489231 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 17:13:39.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:13:39.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:13:39.504
  STEP: Setting up server cert @ 04/10/25 17:13:39.604
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 17:13:39.766
  STEP: Deploying the webhook pod @ 04/10/25 17:13:39.772
  STEP: Wait for the deployment to be ready @ 04/10/25 17:13:39.777
  I0410 17:13:39.782882 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:13:41.793
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:13:41.807
  I0410 17:13:42.807925 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/10/25 17:13:42.879
  STEP: Creating a configMap that should be mutated @ 04/10/25 17:13:52.902
  STEP: Deleting the collection of validation webhooks @ 04/10/25 17:13:52.921
  STEP: Creating a configMap that should not be mutated @ 04/10/25 17:13:52.943
  I0410 17:13:52.974926 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4305" for this suite. @ 04/10/25 17:13:52.976
  STEP: Destroying namespace "webhook-markers-3630" for this suite. @ 04/10/25 17:13:52.982
• [13.499 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 04/10/25 17:13:52.989
  I0410 17:13:52.989508 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/10/25 17:13:52.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:13:52.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:13:53.002
  I0410 17:13:53.005006 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:13:56.063566 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5798" for this suite. @ 04/10/25 17:13:56.067
• [3.084 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/10/25 17:13:56.074
  I0410 17:13:56.074072 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename proxy @ 04/10/25 17:13:56.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:13:56.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:13:56.09
  I0410 17:13:56.093676 23 proxy.go:293] Creating pod...
  I0410 17:13:58.108374 23 proxy.go:317] Creating service...
  I0410 17:13:58.120869 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/pods/agnhost/proxy/some/path/with/DELETE
  I0410 17:13:58.126014 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0410 17:13:58.126084 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/pods/agnhost/proxy/some/path/with/GET
  I0410 17:13:58.130007 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0410 17:13:58.130048 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/pods/agnhost/proxy/some/path/with/HEAD
  I0410 17:13:58.131645 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0410 17:13:58.131683 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/pods/agnhost/proxy/some/path/with/OPTIONS
  I0410 17:13:58.133488 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0410 17:13:58.133528 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/pods/agnhost/proxy/some/path/with/PATCH
  I0410 17:13:58.135307 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0410 17:13:58.135347 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/pods/agnhost/proxy/some/path/with/POST
  I0410 17:13:58.137115 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0410 17:13:58.137150 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/pods/agnhost/proxy/some/path/with/PUT
  I0410 17:13:58.138926 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0410 17:13:58.138957 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/services/test-service/proxy/some/path/with/DELETE
  I0410 17:13:58.140866 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0410 17:13:58.140888 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/services/test-service/proxy/some/path/with/GET
  I0410 17:13:58.142536 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0410 17:13:58.142560 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/services/test-service/proxy/some/path/with/HEAD
  I0410 17:13:58.144201 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0410 17:13:58.144232 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/services/test-service/proxy/some/path/with/OPTIONS
  I0410 17:13:58.146762 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0410 17:13:58.146786 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/services/test-service/proxy/some/path/with/PATCH
  I0410 17:13:58.148520 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0410 17:13:58.148552 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/services/test-service/proxy/some/path/with/POST
  I0410 17:13:58.150697 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0410 17:13:58.150728 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1626/services/test-service/proxy/some/path/with/PUT
  I0410 17:13:58.153036 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0410 17:13:58.153184 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1626" for this suite. @ 04/10/25 17:13:58.155
• [2.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 04/10/25 17:13:58.159
  I0410 17:13:58.159150 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:13:58.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:13:58.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:13:58.173
  STEP: Creating configMap with name projected-configmap-test-volume-36eaa98e-725a-4315-a411-6c20efbb361f @ 04/10/25 17:13:58.175
  STEP: Creating a pod to test consume configMaps @ 04/10/25 17:13:58.178
  STEP: Saw pod success @ 04/10/25 17:14:00.192
  I0410 17:14:00.196817 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-5dda0be0-608f-4b42-af8f-d7c43a718eff container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 17:14:00.205
  I0410 17:14:00.223560 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1133" for this suite. @ 04/10/25 17:14:00.227
• [2.072 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 04/10/25 17:14:00.231
  I0410 17:14:00.231629 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 17:14:00.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:14:00.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:14:00.246
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 17:14:00.248
  STEP: Saw pod success @ 04/10/25 17:14:02.262
  I0410 17:14:02.266047 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-4825dcfe-f6f1-4b81-ba67-0d4f711505e0 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 17:14:02.274
  I0410 17:14:02.288766 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2255" for this suite. @ 04/10/25 17:14:02.292
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/10/25 17:14:02.297
  I0410 17:14:02.297905 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-runtime @ 04/10/25 17:14:02.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:14:02.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:14:02.315
  STEP: create the container @ 04/10/25 17:14:02.318
  W0410 17:14:02.325790      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/10/25 17:14:02.325
  STEP: get the container status @ 04/10/25 17:14:05.343
  STEP: the container should be terminated @ 04/10/25 17:14:05.345
  STEP: the termination message should be set @ 04/10/25 17:14:05.345
  I0410 17:14:05.345288 23 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/10/25 17:14:05.345
  I0410 17:14:05.353236 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3040" for this suite. @ 04/10/25 17:14:05.354
• [3.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 04/10/25 17:14:05.357
  I0410 17:14:05.357965 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 17:14:05.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:14:05.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:14:05.368
  I0410 17:14:05.390350 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9542" for this suite. @ 04/10/25 17:14:05.456
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 04/10/25 17:14:05.461
  I0410 17:14:05.461701 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:14:05.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:14:05.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:14:05.478
  STEP: Creating the pod @ 04/10/25 17:14:05.481
  I0410 17:14:08.025714 23 pod_client.go:173] Successfully updated pod "labelsupdatea6a14001-a936-4e4f-aff0-1496ebb74596"
  I0410 17:14:12.059409 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4229" for this suite. @ 04/10/25 17:14:12.063
• [6.608 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/10/25 17:14:12.069
  I0410 17:14:12.069905 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/10/25 17:14:12.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:14:12.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:14:12.085
  STEP: Cleaning up the secret @ 04/10/25 17:14:14.116
  STEP: Cleaning up the configmap @ 04/10/25 17:14:14.124
  STEP: Cleaning up the pod @ 04/10/25 17:14:14.129
  I0410 17:14:14.140303 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3799" for this suite. @ 04/10/25 17:14:14.144
• [2.082 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/10/25 17:14:14.152
  I0410 17:14:14.152579 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename apf @ 04/10/25 17:14:14.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:14:14.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:14:14.167
  STEP: getting /apis @ 04/10/25 17:14:14.171
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/10/25 17:14:14.174
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/10/25 17:14:14.175
  STEP: creating @ 04/10/25 17:14:14.176
  STEP: getting @ 04/10/25 17:14:14.185
  STEP: listing @ 04/10/25 17:14:14.187
  STEP: watching @ 04/10/25 17:14:14.19
  I0410 17:14:14.190195 23 flowcontrol.go:620] starting watch
  STEP: patching @ 04/10/25 17:14:14.191
  STEP: updating @ 04/10/25 17:14:14.196
  I0410 17:14:14.202088 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 04/10/25 17:14:14.202
  STEP: patching /status @ 04/10/25 17:14:14.204
  STEP: updating /status @ 04/10/25 17:14:14.208
  STEP: deleting @ 04/10/25 17:14:14.215
  STEP: deleting a collection @ 04/10/25 17:14:14.223
  I0410 17:14:14.238814 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6141" for this suite. @ 04/10/25 17:14:14.245
• [0.096 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/10/25 17:14:14.248
  I0410 17:14:14.248352 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename subpath @ 04/10/25 17:14:14.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:14:14.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:14:14.266
  STEP: Setting up data @ 04/10/25 17:14:14.268
  STEP: Creating pod pod-subpath-test-secret-jj6t @ 04/10/25 17:14:14.274
  STEP: Creating a pod to test atomic-volume-subpath @ 04/10/25 17:14:14.274
  STEP: Saw pod success @ 04/10/25 17:14:38.35
  I0410 17:14:38.353207 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-secret-jj6t container test-container-subpath-secret-jj6t: <nil>
  STEP: delete the pod @ 04/10/25 17:14:38.362
  STEP: Deleting pod pod-subpath-test-secret-jj6t @ 04/10/25 17:14:38.379
  I0410 17:14:38.379656 23 delete.go:62] Deleting pod "pod-subpath-test-secret-jj6t" in namespace "subpath-2195"
  I0410 17:14:38.382302 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2195" for this suite. @ 04/10/25 17:14:38.385
• [24.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 04/10/25 17:14:38.39
  I0410 17:14:38.391025 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename namespaces @ 04/10/25 17:14:38.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:14:38.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:14:38.407
  STEP: Creating a test namespace @ 04/10/25 17:14:38.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:14:38.506
  STEP: Creating a service in the namespace @ 04/10/25 17:14:38.511
  STEP: Deleting the namespace @ 04/10/25 17:14:38.527
  STEP: Waiting for the namespace to be removed. @ 04/10/25 17:14:38.534
  STEP: Recreating the namespace @ 04/10/25 17:14:44.536
  STEP: Verifying there is no service in the namespace @ 04/10/25 17:14:44.545
  I0410 17:14:44.546263 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5109" for this suite. @ 04/10/25 17:14:44.547
  STEP: Destroying namespace "nsdeletetest-7297" for this suite. @ 04/10/25 17:14:44.55
  I0410 17:14:44.551995 23 framework.go:370] Namespace nsdeletetest-7297 was already deleted
  STEP: Destroying namespace "nsdeletetest-6464" for this suite. @ 04/10/25 17:14:44.552
• [6.163 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 04/10/25 17:14:44.554
  I0410 17:14:44.554454 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/10/25 17:14:44.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:14:44.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:14:44.656
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/10/25 17:14:44.66
  I0410 17:14:44.661484 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:14:45.845918 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:14:50.518408 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7710" for this suite. @ 04/10/25 17:14:50.522
• [5.972 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 04/10/25 17:14:50.527
  I0410 17:14:50.527170 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename dns @ 04/10/25 17:14:50.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:14:50.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:14:50.538
  STEP: Creating a test externalName service @ 04/10/25 17:14:50.539
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5463.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5463.svc.cluster.local; sleep 1; done
   @ 04/10/25 17:14:50.542
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5463.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5463.svc.cluster.local; sleep 1; done
   @ 04/10/25 17:14:50.542
  STEP: creating a pod to probe DNS @ 04/10/25 17:14:50.542
  STEP: submitting the pod to kubernetes @ 04/10/25 17:14:50.542
  STEP: retrieving the pod @ 04/10/25 17:15:08.601
  STEP: looking for the results for each expected name from probers @ 04/10/25 17:15:08.604
  I0410 17:15:08.610299 23 dns_common.go:553] DNS probes using dns-test-133522c1-500e-4fb5-a3c0-f15394b2c233 succeeded

  STEP: changing the externalName to bar.example.com @ 04/10/25 17:15:08.61
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5463.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5463.svc.cluster.local; sleep 1; done
   @ 04/10/25 17:15:08.618
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5463.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5463.svc.cluster.local; sleep 1; done
   @ 04/10/25 17:15:08.618
  STEP: creating a second pod to probe DNS @ 04/10/25 17:15:08.618
  STEP: submitting the pod to kubernetes @ 04/10/25 17:15:08.618
  STEP: retrieving the pod @ 04/10/25 17:15:10.635
  STEP: looking for the results for each expected name from probers @ 04/10/25 17:15:10.639
  I0410 17:15:10.642961 23 dns_common.go:483] File wheezy_udp@dns-test-service-3.dns-5463.svc.cluster.local from pod  dns-5463/dns-test-56c61ab8-059d-45bc-8060-1d53fcc0a315 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0410 17:15:10.645647 23 dns_common.go:483] File jessie_udp@dns-test-service-3.dns-5463.svc.cluster.local from pod  dns-5463/dns-test-56c61ab8-059d-45bc-8060-1d53fcc0a315 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0410 17:15:10.645702 23 dns_common.go:490] Lookups using dns-5463/dns-test-56c61ab8-059d-45bc-8060-1d53fcc0a315 failed for: [wheezy_udp@dns-test-service-3.dns-5463.svc.cluster.local jessie_udp@dns-test-service-3.dns-5463.svc.cluster.local]

  I0410 17:15:10.652331 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 17:15:10.658650 23 dns_common.go:496] Pod client logs for querier: 
  I0410 17:15:10.664502 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 17:15:15.648473 23 dns_common.go:483] File wheezy_udp@dns-test-service-3.dns-5463.svc.cluster.local from pod  dns-5463/dns-test-56c61ab8-059d-45bc-8060-1d53fcc0a315 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0410 17:15:15.652058 23 dns_common.go:483] File jessie_udp@dns-test-service-3.dns-5463.svc.cluster.local from pod  dns-5463/dns-test-56c61ab8-059d-45bc-8060-1d53fcc0a315 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0410 17:15:15.652114 23 dns_common.go:490] Lookups using dns-5463/dns-test-56c61ab8-059d-45bc-8060-1d53fcc0a315 failed for: [wheezy_udp@dns-test-service-3.dns-5463.svc.cluster.local jessie_udp@dns-test-service-3.dns-5463.svc.cluster.local]

  I0410 17:15:15.659652 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 17:15:15.666823 23 dns_common.go:496] Pod client logs for querier: 
  I0410 17:15:15.673728 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 17:15:20.646155 23 dns_common.go:483] File wheezy_udp@dns-test-service-3.dns-5463.svc.cluster.local from pod  dns-5463/dns-test-56c61ab8-059d-45bc-8060-1d53fcc0a315 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0410 17:15:20.649607 23 dns_common.go:483] File jessie_udp@dns-test-service-3.dns-5463.svc.cluster.local from pod  dns-5463/dns-test-56c61ab8-059d-45bc-8060-1d53fcc0a315 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0410 17:15:20.649663 23 dns_common.go:490] Lookups using dns-5463/dns-test-56c61ab8-059d-45bc-8060-1d53fcc0a315 failed for: [wheezy_udp@dns-test-service-3.dns-5463.svc.cluster.local jessie_udp@dns-test-service-3.dns-5463.svc.cluster.local]

  I0410 17:15:20.657171 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 17:15:20.663042 23 dns_common.go:496] Pod client logs for querier: 
  I0410 17:15:20.667578 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 17:15:25.651842 23 dns_common.go:553] DNS probes using dns-test-56c61ab8-059d-45bc-8060-1d53fcc0a315 succeeded

  STEP: changing the service to type=ClusterIP @ 04/10/25 17:15:25.651
  W0410 17:15:25.670587      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5463.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5463.svc.cluster.local; sleep 1; done
   @ 04/10/25 17:15:25.67
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5463.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5463.svc.cluster.local; sleep 1; done
   @ 04/10/25 17:15:25.67
  STEP: creating a third pod to probe DNS @ 04/10/25 17:15:25.67
  STEP: submitting the pod to kubernetes @ 04/10/25 17:15:25.674
  STEP: retrieving the pod @ 04/10/25 17:15:27.692
  STEP: looking for the results for each expected name from probers @ 04/10/25 17:15:27.695
  I0410 17:15:27.702984 23 dns_common.go:553] DNS probes using dns-test-85853330-6a53-4a23-af05-dfe993d6d70d succeeded

  STEP: deleting the pod @ 04/10/25 17:15:27.703
  STEP: deleting the pod @ 04/10/25 17:15:27.715
  STEP: deleting the pod @ 04/10/25 17:15:27.726
  STEP: deleting the test externalName service @ 04/10/25 17:15:27.743
  I0410 17:15:27.771312 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5463" for this suite. @ 04/10/25 17:15:27.773
• [37.249 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 04/10/25 17:15:27.776
  I0410 17:15:27.776742 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 17:15:27.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:15:27.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:15:27.791
  STEP: Setting up server cert @ 04/10/25 17:15:27.893
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 17:15:28.025
  STEP: Deploying the webhook pod @ 04/10/25 17:15:28.03
  STEP: Wait for the deployment to be ready @ 04/10/25 17:15:28.037
  I0410 17:15:28.041965 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:15:30.056
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:15:30.073
  I0410 17:15:31.074425 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/10/25 17:15:31.082
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/10/25 17:15:31.099
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/10/25 17:15:31.108
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/10/25 17:15:31.116
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/10/25 17:15:31.124
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/10/25 17:15:31.13
  I0410 17:15:31.164521 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-680" for this suite. @ 04/10/25 17:15:31.165
  STEP: Destroying namespace "webhook-markers-231" for this suite. @ 04/10/25 17:15:31.17
• [3.399 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 04/10/25 17:15:31.175
  I0410 17:15:31.175697 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename statefulset @ 04/10/25 17:15:31.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:15:31.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:15:31.184
  STEP: Creating service test in namespace statefulset-1758 @ 04/10/25 17:15:31.186
  STEP: Creating statefulset ss in namespace statefulset-1758 @ 04/10/25 17:15:31.192
  I0410 17:15:31.196900 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0410 17:15:41.206031 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/10/25 17:15:41.214
  STEP: Getting /status @ 04/10/25 17:15:41.224
  I0410 17:15:41.228294 23 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/10/25 17:15:41.228
  I0410 17:15:41.236906 23 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/10/25 17:15:41.236
  I0410 17:15:41.238559 23 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I0410 17:15:41.238625 23 statefulset.go:1111] Found Statefulset ss in namespace statefulset-1758 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0410 17:15:41.238647 23 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/10/25 17:15:41.238
  I0410 17:15:41.238698 23 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0410 17:15:41.255880 23 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/10/25 17:15:41.256
  I0410 17:15:41.260652 23 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I0410 17:15:41.260843 23 statefulset.go:138] Deleting all statefulset in ns statefulset-1758
  I0410 17:15:41.265578 23 rest.go:150] Scaling statefulset ss to 0
  I0410 17:15:51.283912 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0410 17:15:51.287006 23 rest.go:88] Deleting statefulset ss
  I0410 17:15:51.298091 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1758" for this suite. @ 04/10/25 17:15:51.301
• [20.132 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 04/10/25 17:15:51.308
  I0410 17:15:51.308099 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 17:15:51.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:15:51.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:15:51.322
  STEP: Creating configMap configmap-911/configmap-test-0b45bb9c-1bf1-4a2c-b4b4-b1ae4b396f72 @ 04/10/25 17:15:51.324
  STEP: Creating a pod to test consume configMaps @ 04/10/25 17:15:51.327
  STEP: Saw pod success @ 04/10/25 17:15:55.349
  I0410 17:15:55.352982 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-447edb83-9b1a-46b4-8881-d24befd8c99a container env-test: <nil>
  STEP: delete the pod @ 04/10/25 17:15:55.361
  I0410 17:15:55.373550 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-911" for this suite. @ 04/10/25 17:15:55.376
• [4.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 04/10/25 17:15:55.387
  I0410 17:15:55.387165 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:15:55.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:15:55.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:15:55.398
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 17:15:55.4
  STEP: Saw pod success @ 04/10/25 17:15:59.417
  I0410 17:15:59.420118 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-a6493993-23a3-41b3-9686-1acae4abf827 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 17:15:59.427
  I0410 17:15:59.443797 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1052" for this suite. @ 04/10/25 17:15:59.447
• [4.066 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 04/10/25 17:15:59.453
  I0410 17:15:59.453115 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename var-expansion @ 04/10/25 17:15:59.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:15:59.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:15:59.469
  STEP: creating the pod @ 04/10/25 17:15:59.472
  STEP: waiting for pod running @ 04/10/25 17:15:59.48
  STEP: creating a file in subpath @ 04/10/25 17:16:01.486
  I0410 17:16:01.487959 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-606 PodName:var-expansion-42b938ea-01e0-4ee6-bbdf-e4367322f964 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:16:01.487986 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:16:01.488463 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:16:01.488514 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-606/pods/var-expansion-42b938ea-01e0-4ee6-bbdf-e4367322f964/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/10/25 17:16:01.54
  I0410 17:16:01.543218 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-606 PodName:var-expansion-42b938ea-01e0-4ee6-bbdf-e4367322f964 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:16:01.543284 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:16:01.544081 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:16:01.544172 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-606/pods/var-expansion-42b938ea-01e0-4ee6-bbdf-e4367322f964/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/10/25 17:16:01.606
  I0410 17:16:02.123605 23 pod_client.go:173] Successfully updated pod "var-expansion-42b938ea-01e0-4ee6-bbdf-e4367322f964"
  STEP: waiting for annotated pod running @ 04/10/25 17:16:02.123
  STEP: deleting the pod gracefully @ 04/10/25 17:16:02.127
  I0410 17:16:02.127571 23 delete.go:62] Deleting pod "var-expansion-42b938ea-01e0-4ee6-bbdf-e4367322f964" in namespace "var-expansion-606"
  I0410 17:16:02.134635 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-42b938ea-01e0-4ee6-bbdf-e4367322f964" to be fully deleted
  I0410 17:16:34.236277 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-606" for this suite. @ 04/10/25 17:16:34.24
• [34.796 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 04/10/25 17:16:34.249
  I0410 17:16:34.249745 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 17:16:34.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:16:34.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:16:34.266
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/10/25 17:16:34.269
  I0410 17:16:34.269274 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-361 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0410 17:16:34.321119 23 builder.go:146] stderr: ""
  I0410 17:16:34.321190 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/10/25 17:16:34.321
  I0410 17:16:34.323999 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-361 delete pods e2e-test-httpd-pod'
  I0410 17:16:35.774379 23 builder.go:146] stderr: ""
  I0410 17:16:35.774430 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0410 17:16:35.774580 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-361" for this suite. @ 04/10/25 17:16:35.777
• [1.532 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 04/10/25 17:16:35.781
  I0410 17:16:35.782004 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename gc @ 04/10/25 17:16:35.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:16:35.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:16:35.793
  I0410 17:16:35.822533 23 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"2c182b92-5e98-4ad1-92fe-7c9c508ed4b3", Controller:(*bool)(0xc00229d2a6), BlockOwnerDeletion:(*bool)(0xc00229d2a7)}}
  I0410 17:16:35.827639 23 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"75a88a15-4e6b-4b6c-8f53-45d0d4a1054d", Controller:(*bool)(0xc0024f6516), BlockOwnerDeletion:(*bool)(0xc0024f6517)}}
  I0410 17:16:35.837285 23 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"73e2286f-c058-4f14-9a4a-84f758583ded", Controller:(*bool)(0xc0024f6746), BlockOwnerDeletion:(*bool)(0xc0024f6747)}}
  I0410 17:16:40.847021 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6285" for this suite. @ 04/10/25 17:16:40.849
• [5.072 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 04/10/25 17:16:40.854
  I0410 17:16:40.854429 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename disruption @ 04/10/25 17:16:40.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:16:40.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:16:40.931
  STEP: creating the pdb @ 04/10/25 17:16:40.935
  STEP: Waiting for the pdb to be processed @ 04/10/25 17:16:40.94
  STEP: updating the pdb @ 04/10/25 17:16:42.947
  STEP: Waiting for the pdb to be processed @ 04/10/25 17:16:42.956
  STEP: patching the pdb @ 04/10/25 17:16:44.963
  STEP: Waiting for the pdb to be processed @ 04/10/25 17:16:44.974
  STEP: Waiting for the pdb to be deleted @ 04/10/25 17:16:46.987
  I0410 17:16:46.990638 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5023" for this suite. @ 04/10/25 17:16:46.994
• [6.145 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 04/10/25 17:16:46.999
  I0410 17:16:47.000006 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename var-expansion @ 04/10/25 17:16:47
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:16:47.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:16:47.017
  STEP: Creating a pod to test substitution in container's command @ 04/10/25 17:16:47.02
  STEP: Saw pod success @ 04/10/25 17:16:49.036
  I0410 17:16:49.039586 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod var-expansion-9f13d0d8-47f4-4efe-a913-fcea6e877a93 container dapi-container: <nil>
  STEP: delete the pod @ 04/10/25 17:16:49.046
  I0410 17:16:49.061689 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3969" for this suite. @ 04/10/25 17:16:49.065
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 04/10/25 17:16:49.073
  I0410 17:16:49.073893 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename svcaccounts @ 04/10/25 17:16:49.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:16:49.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:16:49.09
  I0410 17:16:49.107106 23 service_accounts.go:618] created pod
  STEP: Saw pod success @ 04/10/25 17:16:51.116
  I0410 17:17:21.116902 23 service_accounts.go:624] polling logs
  I0410 17:17:21.127747 23 service_accounts.go:634] Pod logs: 
  I0410 17:16:49.707688       1 log.go:245] OK: Got token
  I0410 17:16:49.707791       1 log.go:245] validating with in-cluster discovery
  I0410 17:16:49.708182       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0410 17:16:49.708492       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9696:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0006a4310), NotBefore:(*jwt.NumericDate)(0xc0006a4400), IssuedAt:(*jwt.NumericDate)(0xc0006a4320), ID:"f94bc866-badf-4fe0-b59d-b3286f1e7a10"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9696", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f68b0e12-43a1-4210-97d5-3f32f982bec1"}}}
  I0410 17:16:49.716892       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0410 17:16:49.721777       1 log.go:245] OK: Validated signature on JWT
  I0410 17:16:49.721865       1 log.go:245] OK: Got valid claims from token!
  I0410 17:16:49.721891       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9696:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0004aeed0), NotBefore:(*jwt.NumericDate)(0xc0004aeef8), IssuedAt:(*jwt.NumericDate)(0xc0004aeed8), ID:"f94bc866-badf-4fe0-b59d-b3286f1e7a10"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9696", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f68b0e12-43a1-4210-97d5-3f32f982bec1"}}}

  I0410 17:17:21.127828 23 service_accounts.go:638] completed pod
  I0410 17:17:21.134963 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9696" for this suite. @ 04/10/25 17:17:21.138
• [32.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 04/10/25 17:17:21.144
  I0410 17:17:21.144735 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 17:17:21.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:17:21.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:17:21.161
  STEP: Setting up server cert @ 04/10/25 17:17:21.262
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 17:17:21.359
  STEP: Deploying the webhook pod @ 04/10/25 17:17:21.363
  STEP: Wait for the deployment to be ready @ 04/10/25 17:17:21.369
  I0410 17:17:21.373572 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:17:23.387
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:17:23.402
  I0410 17:17:24.403461 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/10/25 17:17:24.412
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/10/25 17:17:24.433
  STEP: Creating a configMap that should not be mutated @ 04/10/25 17:17:24.439
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/10/25 17:17:24.451
  STEP: Creating a configMap that should be mutated @ 04/10/25 17:17:24.458
  I0410 17:17:24.510109 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8557" for this suite. @ 04/10/25 17:17:24.512
  STEP: Destroying namespace "webhook-markers-2265" for this suite. @ 04/10/25 17:17:24.518
• [3.379 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 04/10/25 17:17:24.523
  I0410 17:17:24.523759 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename job @ 04/10/25 17:17:24.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:17:24.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:17:24.533
  STEP: Creating a suspended job @ 04/10/25 17:17:24.536
  STEP: Patching the Job @ 04/10/25 17:17:24.539
  STEP: Watching for Job to be patched @ 04/10/25 17:17:24.546
  I0410 17:17:24.547941 23 job.go:1330] Event ADDED observed for Job e2e-hn4wh in namespace job-924 with labels: map[e2e-job-label:e2e-hn4wh] and annotations: map[]
  I0410 17:17:24.547969 23 job.go:1333] Event MODIFIED found for Job e2e-hn4wh in namespace job-924 with labels: map[e2e-hn4wh:patched e2e-job-label:e2e-hn4wh] and annotations: map[]
  STEP: Updating the job @ 04/10/25 17:17:24.547
  STEP: Watching for Job to be updated @ 04/10/25 17:17:24.553
  I0410 17:17:24.554018 23 job.go:1333] Event MODIFIED found for Job e2e-hn4wh in namespace job-924 with labels: map[e2e-hn4wh:patched e2e-job-label:e2e-hn4wh] and annotations: map[updated:true]
  I0410 17:17:24.554057 23 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/10/25 17:17:24.554
  I0410 17:17:24.555214 23 job.go:1233] Job: e2e-hn4wh as labels: map[e2e-hn4wh:patched e2e-job-label:e2e-hn4wh]
  STEP: Waiting for job to complete @ 04/10/25 17:17:24.555
  STEP: Delete a job collection with a labelselector @ 04/10/25 17:17:34.563
  STEP: Watching for Job to be deleted @ 04/10/25 17:17:34.568
  I0410 17:17:34.570124 23 job.go:1330] Event MODIFIED observed for Job e2e-hn4wh in namespace job-924 with labels: map[e2e-hn4wh:patched e2e-job-label:e2e-hn4wh] and annotations: map[updated:true]
  I0410 17:17:34.570154 23 job.go:1330] Event MODIFIED observed for Job e2e-hn4wh in namespace job-924 with labels: map[e2e-hn4wh:patched e2e-job-label:e2e-hn4wh] and annotations: map[updated:true]
  I0410 17:17:34.570170 23 job.go:1330] Event MODIFIED observed for Job e2e-hn4wh in namespace job-924 with labels: map[e2e-hn4wh:patched e2e-job-label:e2e-hn4wh] and annotations: map[updated:true]
  I0410 17:17:34.570282 23 job.go:1330] Event MODIFIED observed for Job e2e-hn4wh in namespace job-924 with labels: map[e2e-hn4wh:patched e2e-job-label:e2e-hn4wh] and annotations: map[updated:true]
  I0410 17:17:34.570348 23 job.go:1330] Event MODIFIED observed for Job e2e-hn4wh in namespace job-924 with labels: map[e2e-hn4wh:patched e2e-job-label:e2e-hn4wh] and annotations: map[updated:true]
  I0410 17:17:34.570368 23 job.go:1333] Event DELETED found for Job e2e-hn4wh in namespace job-924 with labels: map[e2e-hn4wh:patched e2e-job-label:e2e-hn4wh] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/10/25 17:17:34.57
  I0410 17:17:34.571973 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-924" for this suite. @ 04/10/25 17:17:34.573
• [10.053 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/10/25 17:17:34.576
  I0410 17:17:34.576953 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename limitrange @ 04/10/25 17:17:34.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:17:34.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:17:34.589
  STEP: Creating a LimitRange @ 04/10/25 17:17:34.591
  STEP: Setting up watch @ 04/10/25 17:17:34.591
  STEP: Submitting a LimitRange @ 04/10/25 17:17:34.693
  STEP: Verifying LimitRange creation was observed @ 04/10/25 17:17:34.702
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/10/25 17:17:34.702
  I0410 17:17:34.705119 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0410 17:17:34.705182 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/10/25 17:17:34.705
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/10/25 17:17:34.711
  I0410 17:17:34.715303 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0410 17:17:34.715364 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/10/25 17:17:34.715
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/10/25 17:17:34.721
  I0410 17:17:34.725581 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0410 17:17:34.725678 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/10/25 17:17:34.725
  STEP: Failing to create a Pod with more than max resources @ 04/10/25 17:17:34.729
  STEP: Updating a LimitRange @ 04/10/25 17:17:34.731
  STEP: Verifying LimitRange updating is effective @ 04/10/25 17:17:34.735
  STEP: Creating a Pod with less than former min resources @ 04/10/25 17:17:36.741
  STEP: Failing to create a Pod with more than max resources @ 04/10/25 17:17:36.75
  STEP: Deleting a LimitRange @ 04/10/25 17:17:36.754
  STEP: Verifying the LimitRange was deleted @ 04/10/25 17:17:36.759
  I0410 17:17:41.765654 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/10/25 17:17:41.765
  I0410 17:17:41.777123 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4409" for this suite. @ 04/10/25 17:17:41.781
• [7.212 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 04/10/25 17:17:41.788
  I0410 17:17:41.789025 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename svcaccounts @ 04/10/25 17:17:41.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:17:41.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:17:41.808
  STEP: Creating a pod to test service account token:  @ 04/10/25 17:17:41.809
  STEP: Saw pod success @ 04/10/25 17:17:43.881
  I0410 17:17:43.883972 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod test-pod-03b82985-6006-4ebc-a032-2e0623151119 container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 17:17:43.893
  I0410 17:17:43.908044 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5004" for this suite. @ 04/10/25 17:17:43.911
• [2.128 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 04/10/25 17:17:43.916
  I0410 17:17:43.916958 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename replication-controller @ 04/10/25 17:17:43.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:17:43.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:17:43.931
  STEP: Given a ReplicationController is created @ 04/10/25 17:17:43.934
  STEP: When the matched label of one of its pods change @ 04/10/25 17:17:43.938
  I0410 17:17:43.941817 23 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0410 17:17:48.947239 23 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/10/25 17:17:48.957
  I0410 17:17:49.966702 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3878" for this suite. @ 04/10/25 17:17:49.97
• [6.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/10/25 17:17:49.976
  I0410 17:17:49.976543 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename podtemplate @ 04/10/25 17:17:49.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:17:49.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:17:49.993
  STEP: Create a pod template @ 04/10/25 17:17:49.995
  STEP: Replace a pod template @ 04/10/25 17:17:50
  I0410 17:17:50.009282 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0410 17:17:50.009471 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6159" for this suite. @ 04/10/25 17:17:50.072
• [0.103 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 04/10/25 17:17:50.079
  I0410 17:17:50.079702 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 17:17:50.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:17:50.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:17:50.095
  STEP: Setting up server cert @ 04/10/25 17:17:50.19
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 17:17:50.41
  STEP: Deploying the webhook pod @ 04/10/25 17:17:50.413
  STEP: Wait for the deployment to be ready @ 04/10/25 17:17:50.421
  I0410 17:17:50.425972 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:17:52.438
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:17:52.452
  I0410 17:17:53.452887 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/10/25 17:17:53.461
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/10/25 17:17:53.462
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/10/25 17:17:53.483
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/10/25 17:17:54.495
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/10/25 17:17:54.495
  STEP: Having no error when timeout is longer than webhook latency @ 04/10/25 17:17:55.52
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/10/25 17:17:55.52
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/10/25 17:18:00.549
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/10/25 17:18:00.549
  I0410 17:18:05.603742 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2243" for this suite. @ 04/10/25 17:18:05.605
  STEP: Destroying namespace "webhook-markers-2533" for this suite. @ 04/10/25 17:18:05.61
• [15.534 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/10/25 17:18:05.613
  I0410 17:18:05.613754 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename endpointslice @ 04/10/25 17:18:05.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:18:05.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:18:05.623
  STEP: getting /apis @ 04/10/25 17:18:05.625
  STEP: getting /apis/discovery.k8s.io @ 04/10/25 17:18:05.628
  STEP: getting /apis/discovery.k8s.iov1 @ 04/10/25 17:18:05.628
  STEP: creating @ 04/10/25 17:18:05.629
  STEP: getting @ 04/10/25 17:18:05.639
  STEP: listing @ 04/10/25 17:18:05.64
  STEP: watching @ 04/10/25 17:18:05.641
  I0410 17:18:05.641980 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 04/10/25 17:18:05.642
  STEP: cluster-wide watching @ 04/10/25 17:18:05.643
  I0410 17:18:05.643983 23 endpointslice.go:459] starting watch
  STEP: patching @ 04/10/25 17:18:05.644
  STEP: updating @ 04/10/25 17:18:05.647
  I0410 17:18:05.652610 23 endpointslice.go:482] waiting for watch events with expected annotations
  I0410 17:18:05.652658 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 04/10/25 17:18:05.652
  STEP: deleting a collection @ 04/10/25 17:18:05.658
  I0410 17:18:05.665652 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9065" for this suite. @ 04/10/25 17:18:05.706
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 04/10/25 17:18:05.71
  I0410 17:18:05.710972 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:18:05.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:18:05.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:18:05.728
  STEP: Creating configMap with name projected-configmap-test-volume-93275e66-aeb0-4580-a632-b4c3c9517abf @ 04/10/25 17:18:05.729
  STEP: Creating a pod to test consume configMaps @ 04/10/25 17:18:05.732
  STEP: Saw pod success @ 04/10/25 17:18:09.752
  I0410 17:18:09.755058 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-80781b42-847b-4486-926d-9300bdb3e676 container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 17:18:09.762
  I0410 17:18:09.778966 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6366" for this suite. @ 04/10/25 17:18:09.781
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 04/10/25 17:18:09.787
  I0410 17:18:09.787215 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-probe @ 04/10/25 17:18:09.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:18:09.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:18:09.799
  STEP: Creating pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118 @ 04/10/25 17:18:09.801
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/10/25 17:18:11.812
  I0410 17:18:11.814605 23 container_probe.go:1749] Initial restart count of pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef is 0
  I0410 17:18:11.816883 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:13.822276 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:15.829182 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:17.831324 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:19.838621 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:21.844503 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:23.851085 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:25.858200 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:27.864696 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:29.870295 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:31.876520 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:33.882905 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:35.887962 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:37.894146 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:39.899280 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:41.905398 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:43.912215 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:45.919556 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:47.922813 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:49.929393 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:51.934317 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:53.941303 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:55.947889 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:57.950516 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:18:59.957920 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:01.964199 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:03.970054 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:05.976179 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:07.983321 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:09.990195 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:11.996541 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:14.003303 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:16.010869 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:18.017171 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:20.023665 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:22.029183 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:24.035242 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:26.042217 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:28.047201 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:30.053898 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:32.059814 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:34.066736 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:36.074033 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:38.080241 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:40.086596 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:42.092581 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:44.098790 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:46.105101 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:48.112070 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:50.118781 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:52.124368 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:54.131597 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:56.138092 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:19:58.143362 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:00.151123 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:02.158070 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:04.161153 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:06.167702 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:08.174330 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:10.180423 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:12.186714 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:14.189642 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:16.196454 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:18.202826 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:20.209560 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:22.214699 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:24.221281 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:26.224549 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:28.231465 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:30.236980 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:32.241106 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:34.246916 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:36.253436 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:38.259957 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:40.263949 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:42.269918 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:44.276021 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:46.282333 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:48.288367 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:50.292937 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:52.296911 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:54.300072 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:56.302535 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:20:58.309403 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:00.313755 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:02.318143 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:04.323750 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:06.329823 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:08.335947 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:10.340659 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:12.344510 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:14.348883 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:16.355263 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:18.360584 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:20.363991 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:22.369768 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:24.375126 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:26.380032 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:28.387219 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:30.394138 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:32.399662 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:34.406041 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:36.412653 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:38.419443 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:40.427785 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:42.432286 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:44.439000 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:46.446634 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:48.449874 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:50.452317 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:52.458278 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:54.464830 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:56.470843 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:21:58.478602 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:22:00.484531 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:22:02.492791 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:22:04.496200 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:22:06.502212 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:22:08.507342 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  I0410 17:22:10.512786 23 container_probe.go:1759] Get pod test-grpc-fc3ee872-c242-4e02-a52b-61ed199ad7ef in namespace container-probe-8118
  STEP: deleting the pod @ 04/10/25 17:22:12.513
  I0410 17:22:12.531235 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8118" for this suite. @ 04/10/25 17:22:12.537
• [242.757 seconds]
------------------------------
SSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/10/25 17:22:12.543
  I0410 17:22:12.543984 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename conformance-tests @ 04/10/25 17:22:12.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:22:12.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:22:12.558
  STEP: Getting node addresses @ 04/10/25 17:22:12.559
  I0410 17:22:12.559694 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0410 17:22:12.637418 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6319" for this suite. @ 04/10/25 17:22:12.64
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/10/25 17:22:12.647
  I0410 17:22:12.647984 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-runtime @ 04/10/25 17:22:12.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:22:12.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:22:12.658
  STEP: create the container @ 04/10/25 17:22:12.66
  W0410 17:22:12.666337      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/10/25 17:22:12.666
  STEP: get the container status @ 04/10/25 17:22:15.679
  STEP: the container should be terminated @ 04/10/25 17:22:15.683
  STEP: the termination message should be set @ 04/10/25 17:22:15.683
  I0410 17:22:15.683416 23 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/10/25 17:22:15.683
  I0410 17:22:15.697087 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7493" for this suite. @ 04/10/25 17:22:15.699
• [3.057 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 04/10/25 17:22:15.705
  I0410 17:22:15.705301 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 17:22:15.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:22:15.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:22:15.718
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/10/25 17:22:15.72
  STEP: Saw pod success @ 04/10/25 17:22:19.738
  I0410 17:22:19.740155 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-53f70fd5-5e8f-4e8f-9513-4bcad9d25b10 container test-container: <nil>
  STEP: delete the pod @ 04/10/25 17:22:19.749
  I0410 17:22:19.760106 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7685" for this suite. @ 04/10/25 17:22:19.761
• [4.064 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/10/25 17:22:19.769
  I0410 17:22:19.769531 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename certificates @ 04/10/25 17:22:19.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:22:19.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:22:19.778
  STEP: getting /apis @ 04/10/25 17:22:20.118
  STEP: getting /apis/certificates.k8s.io @ 04/10/25 17:22:20.12
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/10/25 17:22:20.121
  STEP: creating @ 04/10/25 17:22:20.122
  STEP: getting @ 04/10/25 17:22:20.134
  STEP: listing @ 04/10/25 17:22:20.136
  STEP: watching @ 04/10/25 17:22:20.137
  I0410 17:22:20.137397 23 certificates.go:316] starting watch
  STEP: patching @ 04/10/25 17:22:20.137
  STEP: updating @ 04/10/25 17:22:20.143
  I0410 17:22:20.146694 23 certificates.go:332] waiting for watch events with expected annotations
  I0410 17:22:20.146732 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 04/10/25 17:22:20.146
  STEP: patching /approval @ 04/10/25 17:22:20.148
  STEP: updating /approval @ 04/10/25 17:22:20.153
  STEP: getting /status @ 04/10/25 17:22:20.158
  STEP: patching /status @ 04/10/25 17:22:20.161
  STEP: updating /status @ 04/10/25 17:22:20.168
  STEP: deleting @ 04/10/25 17:22:20.175
  STEP: deleting a collection @ 04/10/25 17:22:20.186
  I0410 17:22:20.195554 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2349" for this suite. @ 04/10/25 17:22:20.198
• [0.433 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 04/10/25 17:22:20.203
  I0410 17:22:20.203328 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename statefulset @ 04/10/25 17:22:20.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:22:20.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:22:20.216
  STEP: Creating service test in namespace statefulset-3568 @ 04/10/25 17:22:20.218
  I0410 17:22:20.231108 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0410 17:22:30.236158 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/10/25 17:22:30.241
  I0410 17:22:30.255884 23 wait.go:40] Found 1 stateful pods, waiting for 2
  I0410 17:22:40.257940 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0410 17:22:40.258003 23 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/10/25 17:22:40.264
  STEP: Delete all of the StatefulSets @ 04/10/25 17:22:40.267
  STEP: Verify that StatefulSets have been deleted @ 04/10/25 17:22:40.275
  I0410 17:22:40.277907 23 statefulset.go:138] Deleting all statefulset in ns statefulset-3568
  I0410 17:22:40.286007 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3568" for this suite. @ 04/10/25 17:22:40.294
• [20.103 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/10/25 17:22:40.306
  I0410 17:22:40.307011 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename watch @ 04/10/25 17:22:40.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:22:40.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:22:40.329
  STEP: creating a watch on configmaps @ 04/10/25 17:22:40.331
  STEP: creating a new configmap @ 04/10/25 17:22:40.332
  STEP: modifying the configmap once @ 04/10/25 17:22:40.335
  STEP: closing the watch once it receives two notifications @ 04/10/25 17:22:40.34
  I0410 17:22:40.340163 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9410  0cbc101e-6266-4a8c-9205-80b5bbf59902 3843 0 2025-04-10 17:22:40 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-10 17:22:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 17:22:40.340668 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9410  0cbc101e-6266-4a8c-9205-80b5bbf59902 3844 0 2025-04-10 17:22:40 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-10 17:22:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/10/25 17:22:40.34
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/10/25 17:22:40.351
  STEP: deleting the configmap @ 04/10/25 17:22:40.353
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/10/25 17:22:40.356
  I0410 17:22:40.357023 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9410  0cbc101e-6266-4a8c-9205-80b5bbf59902 3845 0 2025-04-10 17:22:40 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-10 17:22:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 17:22:40.357119 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9410  0cbc101e-6266-4a8c-9205-80b5bbf59902 3846 0 2025-04-10 17:22:40 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-10 17:22:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 17:22:40.357210 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9410" for this suite. @ 04/10/25 17:22:40.393
• [0.090 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 04/10/25 17:22:40.396
  I0410 17:22:40.396935 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-probe @ 04/10/25 17:22:40.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:22:40.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:22:40.446
  STEP: Creating pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836 @ 04/10/25 17:22:40.449
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/10/25 17:22:42.465
  I0410 17:22:42.468782 23 container_probe.go:1749] Initial restart count of pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 is 0
  I0410 17:22:42.471370 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:22:44.477415 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:22:46.482964 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:22:48.490739 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:22:50.495863 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:22:52.499451 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:22:54.504031 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:22:56.508605 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:22:58.515576 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:00.522169 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:02.527734 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:04.534138 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:06.539015 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:08.546078 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:10.553042 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:12.558785 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:14.565575 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:16.572289 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:18.579521 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:20.586631 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:22.592478 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:24.598072 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:26.605206 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:28.612232 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:30.619220 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:32.625579 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:34.631018 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:36.634721 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:38.641194 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:40.648707 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:42.654832 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:44.660242 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:46.665740 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:48.672663 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:50.679890 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:52.686815 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:54.693715 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:56.699605 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:23:58.705950 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:00.714245 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:02.718946 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:04.724124 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:06.728496 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:08.736567 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:10.739703 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:12.746851 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:14.751870 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:16.753959 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:18.760542 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:20.767848 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:22.770676 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:24.776224 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:26.782991 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:28.785733 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:30.789182 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:32.794828 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:34.797578 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:36.802661 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:38.808510 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:40.811635 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:42.817125 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:44.822029 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:46.825717 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:48.832751 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:50.839648 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:52.845184 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:54.848120 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:56.854357 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:24:58.858212 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:00.862352 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:02.864777 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:04.868072 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:06.873042 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:08.878839 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:10.885985 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:12.893036 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:14.898529 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:16.904237 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:18.911331 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:20.918272 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:22.923590 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:24.926926 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:26.932902 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:28.938888 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:30.944312 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:32.949199 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:34.952439 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:36.959531 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:38.965346 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:40.970784 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:42.975121 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:44.981152 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:46.988714 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:48.994991 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:51.002509 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:53.007797 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:55.013821 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:57.020432 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:25:59.026960 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:01.033888 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:03.039096 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:05.045867 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:07.052429 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:09.058197 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:11.066720 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:13.070110 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:15.077506 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:17.084163 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:19.087675 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:21.092884 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:23.096736 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:25.102293 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:27.108726 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:29.114389 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:31.120049 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:33.123421 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:35.127569 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:37.132072 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:39.138094 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  I0410 17:26:41.142295 23 container_probe.go:1759] Get pod busybox-0ee5fe83-a00b-41ae-af8b-3f66ded51e15 in namespace container-probe-4836
  STEP: deleting the pod @ 04/10/25 17:26:43.143
  I0410 17:26:43.162006 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4836" for this suite. @ 04/10/25 17:26:43.169
• [242.778 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/10/25 17:26:43.175
  I0410 17:26:43.175909 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename ingressclass @ 04/10/25 17:26:43.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:26:43.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:26:43.194
  STEP: getting /apis @ 04/10/25 17:26:43.196
  STEP: getting /apis/networking.k8s.io @ 04/10/25 17:26:43.2
  STEP: getting /apis/networking.k8s.iov1 @ 04/10/25 17:26:43.201
  STEP: creating @ 04/10/25 17:26:43.202
  STEP: getting @ 04/10/25 17:26:43.211
  STEP: listing @ 04/10/25 17:26:43.213
  STEP: watching @ 04/10/25 17:26:43.216
  I0410 17:26:43.216098 23 ingressclass.go:348] starting watch
  STEP: patching @ 04/10/25 17:26:43.216
  STEP: updating @ 04/10/25 17:26:43.22
  I0410 17:26:43.224347 23 ingressclass.go:364] waiting for watch events with expected annotations
  I0410 17:26:43.224390 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 04/10/25 17:26:43.224
  STEP: deleting a collection @ 04/10/25 17:26:43.233
  I0410 17:26:43.240132 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9441" for this suite. @ 04/10/25 17:26:43.267
• [0.097 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 04/10/25 17:26:43.273
  I0410 17:26:43.273123 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 17:26:43.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:26:43.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:26:43.288
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 17:26:43.29
  STEP: Saw pod success @ 04/10/25 17:26:45.301
  I0410 17:26:45.303452 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-6c574abe-864a-43af-aaa8-f177dda401f7 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 17:26:45.312
  I0410 17:26:45.322821 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7153" for this suite. @ 04/10/25 17:26:45.324
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 04/10/25 17:26:45.329
  I0410 17:26:45.329834 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename statefulset @ 04/10/25 17:26:45.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:26:45.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:26:45.338
  STEP: Creating service test in namespace statefulset-8538 @ 04/10/25 17:26:45.339
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/10/25 17:26:45.343
  STEP: Creating stateful set ss in namespace statefulset-8538 @ 04/10/25 17:26:45.346
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8538 @ 04/10/25 17:26:45.351
  I0410 17:26:45.360882 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0410 17:26:55.358275 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/10/25 17:26:55.358
  I0410 17:26:55.361597 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8538 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0410 17:26:55.471477 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0410 17:26:55.471546 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0410 17:26:55.471571 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0410 17:26:55.475446 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0410 17:27:05.478918 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0410 17:27:05.478994 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0410 17:27:05.580386 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999483s
  I0410 17:27:06.587553 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.914349095s
  I0410 17:27:07.592815 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.907298377s
  I0410 17:27:08.599087 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.902667626s
  I0410 17:27:09.605303 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.89623256s
  I0410 17:27:10.610746 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.890208901s
  I0410 17:27:11.619245 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.884226685s
  I0410 17:27:12.625178 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.876210355s
  I0410 17:27:13.631065 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.870346059s
  I0410 17:27:14.637898 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 864.169824ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8538 @ 04/10/25 17:27:15.638
  I0410 17:27:15.643622 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8538 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0410 17:27:15.736684 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0410 17:27:15.736746 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0410 17:27:15.736769 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0410 17:27:15.739889 23 wait.go:40] Found 1 stateful pods, waiting for 3
  I0410 17:27:25.744876 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0410 17:27:25.744935 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0410 17:27:25.744955 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/10/25 17:27:25.744
  STEP: Scale down will halt with unhealthy stateful pod @ 04/10/25 17:27:25.745
  I0410 17:27:25.751559 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8538 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0410 17:27:25.840409 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0410 17:27:25.840451 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0410 17:27:25.840469 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0410 17:27:25.840516 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8538 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0410 17:27:25.950832 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0410 17:27:25.950903 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0410 17:27:25.950926 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0410 17:27:25.951009 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8538 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0410 17:27:26.048718 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0410 17:27:26.048754 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0410 17:27:26.048765 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0410 17:27:26.048774 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0410 17:27:26.050973 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0410 17:27:36.059141 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0410 17:27:36.059203 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0410 17:27:36.059225 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0410 17:27:36.160969 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999282s
  I0410 17:27:37.168357 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.906063883s
  I0410 17:27:38.174406 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.898971352s
  I0410 17:27:39.181533 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.892201366s
  I0410 17:27:40.188467 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.885901184s
  I0410 17:27:41.194904 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.878861707s
  I0410 17:27:42.202540 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.871656998s
  I0410 17:27:43.209027 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.864828846s
  I0410 17:27:44.212157 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.858488481s
  I0410 17:27:45.214731 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 855.349071ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8538 @ 04/10/25 17:27:46.215
  I0410 17:27:46.217980 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8538 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0410 17:27:46.309526 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0410 17:27:46.309568 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0410 17:27:46.309579 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0410 17:27:46.309620 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8538 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0410 17:27:46.420098 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0410 17:27:46.420127 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0410 17:27:46.420135 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0410 17:27:46.420165 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8538 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0410 17:27:46.508154 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0410 17:27:46.508190 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0410 17:27:46.508203 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0410 17:27:46.508215 23 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/10/25 17:27:56.52
  I0410 17:27:56.520682 23 statefulset.go:138] Deleting all statefulset in ns statefulset-8538
  I0410 17:27:56.523955 23 rest.go:150] Scaling statefulset ss to 0
  I0410 17:27:56.528424 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0410 17:27:56.530912 23 rest.go:88] Deleting statefulset ss
  I0410 17:27:56.545583 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8538" for this suite. @ 04/10/25 17:27:56.548
• [71.224 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 04/10/25 17:27:56.553
  I0410 17:27:56.553728 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/10/25 17:27:56.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:27:56.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:27:56.569
  STEP: create the container to handle the HTTPGet hook request. @ 04/10/25 17:27:56.651
  STEP: create the pod with lifecycle hook @ 04/10/25 17:27:58.677
  STEP: check poststart hook @ 04/10/25 17:28:00.694
  STEP: delete the pod with lifecycle hook @ 04/10/25 17:28:00.698
  I0410 17:28:02.714814 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8354" for this suite. @ 04/10/25 17:28:02.719
• [6.173 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 04/10/25 17:28:02.726
  I0410 17:28:02.726532 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/10/25 17:28:02.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:28:02.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:28:02.743
  I0410 17:28:02.749108 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2994" for this suite. @ 04/10/25 17:28:02.82
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 04/10/25 17:28:02.831
  I0410 17:28:02.831521 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename dns @ 04/10/25 17:28:02.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:28:02.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:28:02.848
  STEP: Creating a test headless service @ 04/10/25 17:28:02.851
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7100.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-7100.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 04/10/25 17:28:02.857
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7100.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7100.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/10/25 17:28:02.857
  STEP: creating a pod to probe DNS @ 04/10/25 17:28:02.857
  STEP: submitting the pod to kubernetes @ 04/10/25 17:28:02.857
  STEP: retrieving the pod @ 04/10/25 17:28:04.875
  STEP: looking for the results for each expected name from probers @ 04/10/25 17:28:04.877
  I0410 17:28:04.884266 23 dns_common.go:528] DNS probes using dns-7100/dns-test-bd0acbb9-fd87-47b2-b59b-40ba4d2d3e65 succeeded

  STEP: deleting the pod @ 04/10/25 17:28:04.884
  STEP: deleting the test headless service @ 04/10/25 17:28:04.891
  I0410 17:28:04.898180 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7100" for this suite. @ 04/10/25 17:28:04.9
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 04/10/25 17:28:04.904
  I0410 17:28:04.904355 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 17:28:04.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:28:04.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:28:04.915
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/10/25 17:28:04.916
  STEP: Saw pod success @ 04/10/25 17:28:06.927
  I0410 17:28:06.931137 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-f98abbef-5174-4a78-bf35-6efe9ed7de50 container test-container: <nil>
  STEP: delete the pod @ 04/10/25 17:28:06.938
  I0410 17:28:06.950642 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2778" for this suite. @ 04/10/25 17:28:06.953
• [2.054 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/10/25 17:28:06.958
  I0410 17:28:06.958783 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-runtime @ 04/10/25 17:28:06.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:28:06.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:28:06.969
  STEP: create the container @ 04/10/25 17:28:06.971
  W0410 17:28:06.976418      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/10/25 17:28:06.976
  STEP: get the container status @ 04/10/25 17:28:08.988
  STEP: the container should be terminated @ 04/10/25 17:28:08.99
  STEP: the termination message should be set @ 04/10/25 17:28:08.99
  I0410 17:28:08.990907 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/10/25 17:28:08.99
  I0410 17:28:09.004381 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7523" for this suite. @ 04/10/25 17:28:09.007
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/10/25 17:28:09.014
  I0410 17:28:09.014832 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename events @ 04/10/25 17:28:09.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:28:09.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:28:09.028
  STEP: creating a test event @ 04/10/25 17:28:09.031
  STEP: listing events in all namespaces @ 04/10/25 17:28:09.037
  STEP: listing events in test namespace @ 04/10/25 17:28:09.042
  STEP: listing events with field selection filtering on source @ 04/10/25 17:28:09.044
  STEP: listing events with field selection filtering on reportingController @ 04/10/25 17:28:09.046
  STEP: getting the test event @ 04/10/25 17:28:09.047
  STEP: patching the test event @ 04/10/25 17:28:09.049
  STEP: getting the test event @ 04/10/25 17:28:09.057
  STEP: updating the test event @ 04/10/25 17:28:09.058
  STEP: getting the test event @ 04/10/25 17:28:09.063
  STEP: deleting the test event @ 04/10/25 17:28:09.065
  STEP: listing events in all namespaces @ 04/10/25 17:28:09.07
  STEP: listing events in test namespace @ 04/10/25 17:28:09.074
  I0410 17:28:09.076507 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9364" for this suite. @ 04/10/25 17:28:09.109
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 04/10/25 17:28:09.117
  I0410 17:28:09.117915 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename field-validation @ 04/10/25 17:28:09.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:28:09.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:28:09.133
  I0410 17:28:09.136077 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  W0410 17:28:09.136714      23 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0049696f0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0410 17:28:11.681725      23 warnings.go:70] unknown field "alpha"
  W0410 17:28:11.681769      23 warnings.go:70] unknown field "beta"
  W0410 17:28:11.681779      23 warnings.go:70] unknown field "delta"
  W0410 17:28:11.681794      23 warnings.go:70] unknown field "epsilon"
  W0410 17:28:11.681802      23 warnings.go:70] unknown field "gamma"
  I0410 17:28:12.217520 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7589" for this suite. @ 04/10/25 17:28:12.22
• [3.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 04/10/25 17:28:12.225
  I0410 17:28:12.225215 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sched-preemption @ 04/10/25 17:28:12.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:28:12.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:28:12.241
  I0410 17:28:12.255053 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0410 17:29:12.261881 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 04/10/25 17:29:12.265
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 04/10/25 17:29:12.276
  I0410 17:29:12.288359 23 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 04/10/25 17:29:12.288
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 04/10/25 17:29:14.296
  I0410 17:29:14.306331 23 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 04/10/25 17:29:14.306
  STEP: Verifying the pod has the pod disruption condition @ 04/10/25 17:29:16.316
  I0410 17:29:16.320275 23 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0410 17:29:16.835020 23 pod_client.go:173] Successfully updated pod "victim-pod"
  I0410 17:29:16.862741 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9893" for this suite. @ 04/10/25 17:29:16.866
• [64.649 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 04/10/25 17:29:16.874
  I0410 17:29:16.874372 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/10/25 17:29:16.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:29:16.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:29:16.89
  STEP: getting /apis @ 04/10/25 17:29:16.895
  STEP: getting /apis/admissionregistration.k8s.io @ 04/10/25 17:29:16.898
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/10/25 17:29:16.899
  STEP: creating @ 04/10/25 17:29:16.899
  STEP: getting @ 04/10/25 17:29:16.919
  STEP: listing @ 04/10/25 17:29:16.921
  STEP: watching @ 04/10/25 17:29:16.923
  I0410 17:29:16.923645 23 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 04/10/25 17:29:16.924
  STEP: updating @ 04/10/25 17:29:16.928
  I0410 17:29:16.934360 23 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 04/10/25 17:29:16.934
  STEP: patching /status @ 04/10/25 17:29:16.936
  STEP: updating /status @ 04/10/25 17:29:16.943
  STEP: deleting @ 04/10/25 17:29:16.948
  STEP: deleting a collection @ 04/10/25 17:29:16.956
  I0410 17:29:16.965175 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1315" for this suite. @ 04/10/25 17:29:16.966
• [0.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 04/10/25 17:29:16.969
  I0410 17:29:16.969508 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename resourcequota @ 04/10/25 17:29:16.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:29:16.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:29:16.984
  STEP: Creating a ResourceQuota @ 04/10/25 17:29:16.985
  STEP: Getting a ResourceQuota @ 04/10/25 17:29:16.987
  STEP: Updating a ResourceQuota @ 04/10/25 17:29:16.989
  STEP: Verifying a ResourceQuota was modified @ 04/10/25 17:29:16.992
  STEP: Deleting a ResourceQuota @ 04/10/25 17:29:16.993
  STEP: Verifying the deleted ResourceQuota @ 04/10/25 17:29:16.998
  I0410 17:29:16.999421 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7087" for this suite. @ 04/10/25 17:29:17.069
• [0.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/10/25 17:29:17.076
  I0410 17:29:17.076075 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename watch @ 04/10/25 17:29:17.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:29:17.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:29:17.092
  STEP: getting a starting resourceVersion @ 04/10/25 17:29:17.095
  STEP: starting a background goroutine to produce watch events @ 04/10/25 17:29:17.098
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/10/25 17:29:17.098
  I0410 17:29:19.884070 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5075" for this suite. @ 04/10/25 17:29:19.93
• [2.906 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 04/10/25 17:29:19.982
  I0410 17:29:19.982145 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/10/25 17:29:19.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:29:19.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:29:19.994
  STEP: creating a policy with variables @ 04/10/25 17:29:19.999
  STEP: waiting until the marker is denied @ 04/10/25 17:29:20.023
  STEP: testing a replicated Deployment to be allowed @ 04/10/25 17:29:20.134
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/10/25 17:29:20.143
  I0410 17:29:20.184897 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4006" for this suite. @ 04/10/25 17:29:20.187
• [0.209 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 04/10/25 17:29:20.19
  I0410 17:29:20.190801 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename gc @ 04/10/25 17:29:20.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:29:20.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:29:20.199
  STEP: create the rc @ 04/10/25 17:29:20.291
  W0410 17:29:20.298146      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/10/25 17:29:26.304
  STEP: wait for the rc to be deleted @ 04/10/25 17:29:26.312
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/10/25 17:29:31.315
  STEP: Gathering metrics @ 04/10/25 17:30:01.327
  I0410 17:30:01.442646 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0410 17:30:01.442687 23 delete.go:95] Deleting pod "simpletest.rc-247wd" in namespace "gc-3146"
  I0410 17:30:01.452176 23 delete.go:95] Deleting pod "simpletest.rc-2lh8l" in namespace "gc-3146"
  I0410 17:30:01.460752 23 delete.go:95] Deleting pod "simpletest.rc-2rhrf" in namespace "gc-3146"
  I0410 17:30:01.474678 23 delete.go:95] Deleting pod "simpletest.rc-2z949" in namespace "gc-3146"
  I0410 17:30:01.488327 23 delete.go:95] Deleting pod "simpletest.rc-499rr" in namespace "gc-3146"
  I0410 17:30:01.499467 23 delete.go:95] Deleting pod "simpletest.rc-4h29x" in namespace "gc-3146"
  I0410 17:30:01.509300 23 delete.go:95] Deleting pod "simpletest.rc-4wvgg" in namespace "gc-3146"
  I0410 17:30:01.523025 23 delete.go:95] Deleting pod "simpletest.rc-4xzd7" in namespace "gc-3146"
  I0410 17:30:01.532922 23 delete.go:95] Deleting pod "simpletest.rc-5bhc6" in namespace "gc-3146"
  I0410 17:30:01.541867 23 delete.go:95] Deleting pod "simpletest.rc-5f66j" in namespace "gc-3146"
  I0410 17:30:01.555528 23 delete.go:95] Deleting pod "simpletest.rc-5gh7b" in namespace "gc-3146"
  I0410 17:30:01.565729 23 delete.go:95] Deleting pod "simpletest.rc-5gpqv" in namespace "gc-3146"
  I0410 17:30:01.581098 23 delete.go:95] Deleting pod "simpletest.rc-5kdcq" in namespace "gc-3146"
  I0410 17:30:01.591595 23 delete.go:95] Deleting pod "simpletest.rc-5mtkb" in namespace "gc-3146"
  I0410 17:30:01.602546 23 delete.go:95] Deleting pod "simpletest.rc-684wr" in namespace "gc-3146"
  I0410 17:30:01.617054 23 delete.go:95] Deleting pod "simpletest.rc-6qshc" in namespace "gc-3146"
  I0410 17:30:01.633158 23 delete.go:95] Deleting pod "simpletest.rc-6xztk" in namespace "gc-3146"
  I0410 17:30:01.645979 23 delete.go:95] Deleting pod "simpletest.rc-7g6pw" in namespace "gc-3146"
  I0410 17:30:01.665075 23 delete.go:95] Deleting pod "simpletest.rc-7gtvh" in namespace "gc-3146"
  I0410 17:30:01.682578 23 delete.go:95] Deleting pod "simpletest.rc-84tk9" in namespace "gc-3146"
  I0410 17:30:01.703443 23 delete.go:95] Deleting pod "simpletest.rc-8cq9p" in namespace "gc-3146"
  I0410 17:30:01.736435 23 delete.go:95] Deleting pod "simpletest.rc-8lbjk" in namespace "gc-3146"
  I0410 17:30:01.755339 23 delete.go:95] Deleting pod "simpletest.rc-8tfnr" in namespace "gc-3146"
  I0410 17:30:01.768900 23 delete.go:95] Deleting pod "simpletest.rc-b427t" in namespace "gc-3146"
  I0410 17:30:01.786430 23 delete.go:95] Deleting pod "simpletest.rc-b6xwf" in namespace "gc-3146"
  I0410 17:30:01.810847 23 delete.go:95] Deleting pod "simpletest.rc-b8f8c" in namespace "gc-3146"
  I0410 17:30:01.828236 23 delete.go:95] Deleting pod "simpletest.rc-b95ks" in namespace "gc-3146"
  I0410 17:30:01.847099 23 delete.go:95] Deleting pod "simpletest.rc-bcj9v" in namespace "gc-3146"
  I0410 17:30:01.860045 23 delete.go:95] Deleting pod "simpletest.rc-c654k" in namespace "gc-3146"
  I0410 17:30:01.883677 23 delete.go:95] Deleting pod "simpletest.rc-c9qp2" in namespace "gc-3146"
  I0410 17:30:01.899624 23 delete.go:95] Deleting pod "simpletest.rc-cr79h" in namespace "gc-3146"
  I0410 17:30:01.920873 23 delete.go:95] Deleting pod "simpletest.rc-dk7tf" in namespace "gc-3146"
  I0410 17:30:01.940948 23 delete.go:95] Deleting pod "simpletest.rc-fbqvm" in namespace "gc-3146"
  I0410 17:30:01.962692 23 delete.go:95] Deleting pod "simpletest.rc-fh2ft" in namespace "gc-3146"
  I0410 17:30:01.983411 23 delete.go:95] Deleting pod "simpletest.rc-fr2wh" in namespace "gc-3146"
  I0410 17:30:01.999567 23 delete.go:95] Deleting pod "simpletest.rc-fw4bg" in namespace "gc-3146"
  I0410 17:30:02.021135 23 delete.go:95] Deleting pod "simpletest.rc-fz6bv" in namespace "gc-3146"
  I0410 17:30:02.043222 23 delete.go:95] Deleting pod "simpletest.rc-g6z7x" in namespace "gc-3146"
  I0410 17:30:02.059384 23 delete.go:95] Deleting pod "simpletest.rc-gjcxc" in namespace "gc-3146"
  I0410 17:30:02.072514 23 delete.go:95] Deleting pod "simpletest.rc-gjglk" in namespace "gc-3146"
  I0410 17:30:02.093521 23 delete.go:95] Deleting pod "simpletest.rc-gm65l" in namespace "gc-3146"
  I0410 17:30:02.108023 23 delete.go:95] Deleting pod "simpletest.rc-gmnl7" in namespace "gc-3146"
  I0410 17:30:02.125608 23 delete.go:95] Deleting pod "simpletest.rc-gsqpp" in namespace "gc-3146"
  I0410 17:30:02.155301 23 delete.go:95] Deleting pod "simpletest.rc-hdlxt" in namespace "gc-3146"
  I0410 17:30:02.178631 23 delete.go:95] Deleting pod "simpletest.rc-hdw89" in namespace "gc-3146"
  I0410 17:30:02.191316 23 delete.go:95] Deleting pod "simpletest.rc-hk6wl" in namespace "gc-3146"
  I0410 17:30:02.209971 23 delete.go:95] Deleting pod "simpletest.rc-hrgr6" in namespace "gc-3146"
  I0410 17:30:02.226868 23 delete.go:95] Deleting pod "simpletest.rc-hxvfx" in namespace "gc-3146"
  I0410 17:30:02.253635 23 delete.go:95] Deleting pod "simpletest.rc-j5tfn" in namespace "gc-3146"
  I0410 17:30:02.264826 23 delete.go:95] Deleting pod "simpletest.rc-jbgbg" in namespace "gc-3146"
  I0410 17:30:02.280020 23 delete.go:95] Deleting pod "simpletest.rc-jm8zk" in namespace "gc-3146"
  I0410 17:30:02.296355 23 delete.go:95] Deleting pod "simpletest.rc-jp2q8" in namespace "gc-3146"
  I0410 17:30:02.314840 23 delete.go:95] Deleting pod "simpletest.rc-jpjgp" in namespace "gc-3146"
  I0410 17:30:02.336082 23 delete.go:95] Deleting pod "simpletest.rc-jzfld" in namespace "gc-3146"
  I0410 17:30:02.353228 23 delete.go:95] Deleting pod "simpletest.rc-kb57m" in namespace "gc-3146"
  I0410 17:30:02.368549 23 delete.go:95] Deleting pod "simpletest.rc-kt8bt" in namespace "gc-3146"
  I0410 17:30:02.391664 23 delete.go:95] Deleting pod "simpletest.rc-kzl4p" in namespace "gc-3146"
  I0410 17:30:02.409591 23 delete.go:95] Deleting pod "simpletest.rc-kzqr5" in namespace "gc-3146"
  I0410 17:30:02.421796 23 delete.go:95] Deleting pod "simpletest.rc-l8c9d" in namespace "gc-3146"
  I0410 17:30:02.435606 23 delete.go:95] Deleting pod "simpletest.rc-lj68s" in namespace "gc-3146"
  I0410 17:30:02.459432 23 delete.go:95] Deleting pod "simpletest.rc-ljt99" in namespace "gc-3146"
  I0410 17:30:02.474669 23 delete.go:95] Deleting pod "simpletest.rc-lmwmd" in namespace "gc-3146"
  I0410 17:30:02.496979 23 delete.go:95] Deleting pod "simpletest.rc-lpwwn" in namespace "gc-3146"
  I0410 17:30:02.511323 23 delete.go:95] Deleting pod "simpletest.rc-ms9d2" in namespace "gc-3146"
  I0410 17:30:02.531536 23 delete.go:95] Deleting pod "simpletest.rc-n6k49" in namespace "gc-3146"
  I0410 17:30:02.547331 23 delete.go:95] Deleting pod "simpletest.rc-nvrpz" in namespace "gc-3146"
  I0410 17:30:02.568944 23 delete.go:95] Deleting pod "simpletest.rc-pb5zl" in namespace "gc-3146"
  I0410 17:30:02.587313 23 delete.go:95] Deleting pod "simpletest.rc-pqkqq" in namespace "gc-3146"
  I0410 17:30:02.611157 23 delete.go:95] Deleting pod "simpletest.rc-pvsnf" in namespace "gc-3146"
  I0410 17:30:02.630315 23 delete.go:95] Deleting pod "simpletest.rc-q622r" in namespace "gc-3146"
  I0410 17:30:02.649956 23 delete.go:95] Deleting pod "simpletest.rc-qdw76" in namespace "gc-3146"
  I0410 17:30:02.671581 23 delete.go:95] Deleting pod "simpletest.rc-r4jsq" in namespace "gc-3146"
  I0410 17:30:02.688265 23 delete.go:95] Deleting pod "simpletest.rc-rdwww" in namespace "gc-3146"
  I0410 17:30:02.707580 23 delete.go:95] Deleting pod "simpletest.rc-rn67b" in namespace "gc-3146"
  I0410 17:30:02.730733 23 delete.go:95] Deleting pod "simpletest.rc-rqhlk" in namespace "gc-3146"
  I0410 17:30:02.780231 23 delete.go:95] Deleting pod "simpletest.rc-rtgpx" in namespace "gc-3146"
  I0410 17:30:02.830052 23 delete.go:95] Deleting pod "simpletest.rc-rvn2v" in namespace "gc-3146"
  I0410 17:30:02.882604 23 delete.go:95] Deleting pod "simpletest.rc-sbfwm" in namespace "gc-3146"
  I0410 17:30:02.939119 23 delete.go:95] Deleting pod "simpletest.rc-sm97h" in namespace "gc-3146"
  I0410 17:30:02.977285 23 delete.go:95] Deleting pod "simpletest.rc-ssr4x" in namespace "gc-3146"
  I0410 17:30:03.028753 23 delete.go:95] Deleting pod "simpletest.rc-t2ft6" in namespace "gc-3146"
  I0410 17:30:03.080161 23 delete.go:95] Deleting pod "simpletest.rc-t8s96" in namespace "gc-3146"
  I0410 17:30:03.128030 23 delete.go:95] Deleting pod "simpletest.rc-tbjtf" in namespace "gc-3146"
  I0410 17:30:03.182141 23 delete.go:95] Deleting pod "simpletest.rc-tklhz" in namespace "gc-3146"
  I0410 17:30:03.228695 23 delete.go:95] Deleting pod "simpletest.rc-tvp5k" in namespace "gc-3146"
  I0410 17:30:03.273816 23 delete.go:95] Deleting pod "simpletest.rc-v4skk" in namespace "gc-3146"
  I0410 17:30:03.322119 23 delete.go:95] Deleting pod "simpletest.rc-v6xrb" in namespace "gc-3146"
  I0410 17:30:03.375005 23 delete.go:95] Deleting pod "simpletest.rc-vcnpq" in namespace "gc-3146"
  I0410 17:30:03.425378 23 delete.go:95] Deleting pod "simpletest.rc-vjccd" in namespace "gc-3146"
  I0410 17:30:03.474031 23 delete.go:95] Deleting pod "simpletest.rc-vl2bb" in namespace "gc-3146"
  I0410 17:30:03.526198 23 delete.go:95] Deleting pod "simpletest.rc-vljss" in namespace "gc-3146"
  I0410 17:30:03.576626 23 delete.go:95] Deleting pod "simpletest.rc-vvwtv" in namespace "gc-3146"
  I0410 17:30:03.626507 23 delete.go:95] Deleting pod "simpletest.rc-vwmdr" in namespace "gc-3146"
  I0410 17:30:03.676107 23 delete.go:95] Deleting pod "simpletest.rc-w4r8j" in namespace "gc-3146"
  I0410 17:30:03.726347 23 delete.go:95] Deleting pod "simpletest.rc-w8hm2" in namespace "gc-3146"
  I0410 17:30:03.777441 23 delete.go:95] Deleting pod "simpletest.rc-wdpmm" in namespace "gc-3146"
  I0410 17:30:03.831298 23 delete.go:95] Deleting pod "simpletest.rc-wmw6n" in namespace "gc-3146"
  I0410 17:30:03.876356 23 delete.go:95] Deleting pod "simpletest.rc-wqhrj" in namespace "gc-3146"
  I0410 17:30:03.924225 23 delete.go:95] Deleting pod "simpletest.rc-wzq8h" in namespace "gc-3146"
  I0410 17:30:03.973621 23 delete.go:95] Deleting pod "simpletest.rc-zgkpq" in namespace "gc-3146"
  I0410 17:30:04.027474 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3146" for this suite. @ 04/10/25 17:30:04.068
• [43.930 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 04/10/25 17:30:04.121
  I0410 17:30:04.121527 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sched-preemption @ 04/10/25 17:30:04.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:30:04.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:30:04.133
  I0410 17:30:04.142941 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0410 17:31:04.149145 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/10/25 17:31:04.152
  I0410 17:31:04.175235 23 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I0410 17:31:04.184308 23 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I0410 17:31:04.204391 23 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I0410 17:31:04.210455 23 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/10/25 17:31:04.21
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/10/25 17:31:06.231
  I0410 17:31:10.316531 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3096" for this suite. @ 04/10/25 17:31:10.318
• [66.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/10/25 17:31:10.322
  I0410 17:31:10.322972 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/10/25 17:31:10.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:31:10.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:31:10.334
  I0410 17:31:10.336155 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:31:16.508190 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8807" for this suite. @ 04/10/25 17:31:16.513
• [6.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 04/10/25 17:31:16.522
  I0410 17:31:16.522539 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 17:31:16.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:31:16.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:31:16.537
  STEP: creating a replication controller @ 04/10/25 17:31:16.541
  I0410 17:31:16.541135 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 create -f -'
  I0410 17:31:16.613081 23 builder.go:146] stderr: ""
  I0410 17:31:16.613119 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/10/25 17:31:16.613
  I0410 17:31:16.613201 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0410 17:31:16.661292 23 builder.go:146] stderr: ""
  I0410 17:31:16.661348 23 builder.go:147] stdout: "update-demo-nautilus-jq8fl update-demo-nautilus-r2gnc "
  I0410 17:31:16.661379 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-jq8fl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0410 17:31:16.697021 23 builder.go:146] stderr: ""
  I0410 17:31:16.697055 23 builder.go:147] stdout: ""
  I0410 17:31:16.697065 23 kubectl.go:2502] update-demo-nautilus-jq8fl is created but not running
  I0410 17:31:21.698211 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0410 17:31:21.743085 23 builder.go:146] stderr: ""
  I0410 17:31:21.743123 23 builder.go:147] stdout: "update-demo-nautilus-jq8fl update-demo-nautilus-r2gnc "
  I0410 17:31:21.743169 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-jq8fl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0410 17:31:21.787674 23 builder.go:146] stderr: ""
  I0410 17:31:21.787713 23 builder.go:147] stdout: ""
  I0410 17:31:21.787725 23 kubectl.go:2502] update-demo-nautilus-jq8fl is created but not running
  I0410 17:31:26.788042 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0410 17:31:26.843959 23 builder.go:146] stderr: ""
  I0410 17:31:26.843996 23 builder.go:147] stdout: "update-demo-nautilus-jq8fl update-demo-nautilus-r2gnc "
  I0410 17:31:26.844039 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-jq8fl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0410 17:31:26.880595 23 builder.go:146] stderr: ""
  I0410 17:31:26.880622 23 builder.go:147] stdout: ""
  I0410 17:31:26.880630 23 kubectl.go:2502] update-demo-nautilus-jq8fl is created but not running
  I0410 17:31:31.881763 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0410 17:31:31.926418 23 builder.go:146] stderr: ""
  I0410 17:31:31.926457 23 builder.go:147] stdout: "update-demo-nautilus-jq8fl update-demo-nautilus-r2gnc "
  I0410 17:31:31.926507 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-jq8fl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0410 17:31:31.965422 23 builder.go:146] stderr: ""
  I0410 17:31:31.965466 23 builder.go:147] stdout: ""
  I0410 17:31:31.965479 23 kubectl.go:2502] update-demo-nautilus-jq8fl is created but not running
  I0410 17:31:36.965918 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0410 17:31:37.019737 23 builder.go:146] stderr: ""
  I0410 17:31:37.019768 23 builder.go:147] stdout: "update-demo-nautilus-jq8fl update-demo-nautilus-r2gnc "
  I0410 17:31:37.019795 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-jq8fl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0410 17:31:37.055439 23 builder.go:146] stderr: ""
  I0410 17:31:37.055478 23 builder.go:147] stdout: "true"
  I0410 17:31:37.055526 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-jq8fl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0410 17:31:37.093818 23 builder.go:146] stderr: ""
  I0410 17:31:37.093844 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0410 17:31:37.093852 23 kubectl.go:2393] validating pod update-demo-nautilus-jq8fl
  I0410 17:31:37.096099 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0410 17:31:37.096176 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0410 17:31:37.096191 23 kubectl.go:2520] update-demo-nautilus-jq8fl is verified up and running
  I0410 17:31:37.096231 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-r2gnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0410 17:31:37.134302 23 builder.go:146] stderr: ""
  I0410 17:31:37.134350 23 builder.go:147] stdout: "true"
  I0410 17:31:37.134409 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-r2gnc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0410 17:31:37.171388 23 builder.go:146] stderr: ""
  I0410 17:31:37.171438 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0410 17:31:37.171452 23 kubectl.go:2393] validating pod update-demo-nautilus-r2gnc
  I0410 17:31:37.173511 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0410 17:31:37.173562 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0410 17:31:37.173581 23 kubectl.go:2520] update-demo-nautilus-r2gnc is verified up and running
  STEP: scaling down the replication controller @ 04/10/25 17:31:37.173
  I0410 17:31:37.176234 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0410 17:31:37.176270 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0410 17:31:38.228129 23 builder.go:146] stderr: ""
  I0410 17:31:38.228203 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/10/25 17:31:38.228
  I0410 17:31:38.228391 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0410 17:31:38.276174 23 builder.go:146] stderr: ""
  I0410 17:31:38.276230 23 builder.go:147] stdout: "update-demo-nautilus-jq8fl update-demo-nautilus-r2gnc "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 04/10/25 17:31:38.276
  I0410 17:31:43.277480 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0410 17:31:43.321813 23 builder.go:146] stderr: ""
  I0410 17:31:43.321847 23 builder.go:147] stdout: "update-demo-nautilus-r2gnc "
  I0410 17:31:43.321889 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-r2gnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0410 17:31:43.360968 23 builder.go:146] stderr: ""
  I0410 17:31:43.361011 23 builder.go:147] stdout: "true"
  I0410 17:31:43.361063 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-r2gnc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0410 17:31:43.397650 23 builder.go:146] stderr: ""
  I0410 17:31:43.397687 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0410 17:31:43.397700 23 kubectl.go:2393] validating pod update-demo-nautilus-r2gnc
  I0410 17:31:43.399638 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0410 17:31:43.399684 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0410 17:31:43.399698 23 kubectl.go:2520] update-demo-nautilus-r2gnc is verified up and running
  STEP: scaling up the replication controller @ 04/10/25 17:31:43.399
  I0410 17:31:43.400659 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0410 17:31:43.400694 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0410 17:31:44.453413 23 builder.go:146] stderr: ""
  I0410 17:31:44.453489 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/10/25 17:31:44.453
  I0410 17:31:44.453637 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0410 17:31:44.506385 23 builder.go:146] stderr: ""
  I0410 17:31:44.506424 23 builder.go:147] stdout: "update-demo-nautilus-cmjg6 update-demo-nautilus-r2gnc "
  I0410 17:31:44.506474 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-cmjg6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0410 17:31:44.542045 23 builder.go:146] stderr: ""
  I0410 17:31:44.542078 23 builder.go:147] stdout: "true"
  I0410 17:31:44.542123 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-cmjg6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0410 17:31:44.577993 23 builder.go:146] stderr: ""
  I0410 17:31:44.578033 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0410 17:31:44.578044 23 kubectl.go:2393] validating pod update-demo-nautilus-cmjg6
  I0410 17:31:44.580323 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0410 17:31:44.580374 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0410 17:31:44.580387 23 kubectl.go:2520] update-demo-nautilus-cmjg6 is verified up and running
  I0410 17:31:44.580421 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-r2gnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0410 17:31:44.618633 23 builder.go:146] stderr: ""
  I0410 17:31:44.618669 23 builder.go:147] stdout: "true"
  I0410 17:31:44.618714 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods update-demo-nautilus-r2gnc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0410 17:31:44.661361 23 builder.go:146] stderr: ""
  I0410 17:31:44.661399 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0410 17:31:44.661413 23 kubectl.go:2393] validating pod update-demo-nautilus-r2gnc
  I0410 17:31:44.664547 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0410 17:31:44.664582 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0410 17:31:44.664592 23 kubectl.go:2520] update-demo-nautilus-r2gnc is verified up and running
  STEP: using delete to clean up resources @ 04/10/25 17:31:44.664
  I0410 17:31:44.664638 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 delete --grace-period=0 --force -f -'
  I0410 17:31:44.721310 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0410 17:31:44.721346 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0410 17:31:44.721391 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get rc,svc -l name=update-demo --no-headers'
  I0410 17:31:44.762614 23 builder.go:146] stderr: "No resources found in kubectl-8148 namespace.\n"
  I0410 17:31:44.762650 23 builder.go:147] stdout: ""
  I0410 17:31:44.762696 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-8148 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0410 17:31:44.804352 23 builder.go:146] stderr: ""
  I0410 17:31:44.804392 23 builder.go:147] stdout: ""
  I0410 17:31:44.804489 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8148" for this suite. @ 04/10/25 17:31:44.806
• [28.288 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 04/10/25 17:31:44.81
  I0410 17:31:44.810194 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:31:44.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:31:44.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:31:44.82
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 17:31:44.821
  STEP: Saw pod success @ 04/10/25 17:31:48.839
  I0410 17:31:48.842609 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-086494dc-fb79-4149-aaf1-6808a7e1311f container client-container: <nil>
  STEP: delete the pod @ 04/10/25 17:31:48.858
  I0410 17:31:48.875678 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4257" for this suite. @ 04/10/25 17:31:48.879
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 04/10/25 17:31:48.884
  I0410 17:31:48.884047 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sched-preemption @ 04/10/25 17:31:48.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:31:48.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:31:48.899
  I0410 17:31:48.913021 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0410 17:32:48.918866 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/10/25 17:32:48.921
  I0410 17:32:48.922029 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/10/25 17:32:48.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:32:48.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:32:48.941
  STEP: Finding an available node @ 04/10/25 17:32:48.945
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/10/25 17:32:48.945
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/10/25 17:32:50.965
  I0410 17:32:50.979563 23 preemption.go:585] found a healthy node: k8sconformance-m02
  I0410 17:32:57.044791 23 preemption.go:708] pods created so far: [1 1 1]
  I0410 17:32:57.044853 23 preemption.go:709] length of pods created so far: 3
  I0410 17:32:59.055474 23 preemption.go:726] pods created so far: [2 2 1]
  I0410 17:33:06.117241 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1848" for this suite. @ 04/10/25 17:33:06.119
  I0410 17:33:06.126050 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2859" for this suite. @ 04/10/25 17:33:06.129
• [77.252 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 04/10/25 17:33:06.135
  I0410 17:33:06.136024 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename security-context-test @ 04/10/25 17:33:06.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:33:06.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:33:06.153
  I0410 17:33:10.176760 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2964" for this suite. @ 04/10/25 17:33:10.178
• [4.046 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 04/10/25 17:33:10.182
  I0410 17:33:10.182391 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 17:33:10.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:33:10.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:33:10.191
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 17:33:10.193
  STEP: Saw pod success @ 04/10/25 17:33:12.204
  I0410 17:33:12.206967 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-269b9229-8bfa-4274-a625-f11537bdb9d3 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 17:33:12.215
  I0410 17:33:12.230005 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5931" for this suite. @ 04/10/25 17:33:12.232
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 04/10/25 17:33:12.237
  I0410 17:33:12.237073 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/10/25 17:33:12.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:33:12.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:33:12.25
  STEP: set up a multi version CRD @ 04/10/25 17:33:12.251
  I0410 17:33:12.252315 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: rename a version @ 04/10/25 17:33:15.232
  STEP: check the new version name is served @ 04/10/25 17:33:15.242
  STEP: check the old version name is removed @ 04/10/25 17:33:15.883
  STEP: check the other version is not changed @ 04/10/25 17:33:16.491
  I0410 17:33:18.833174 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7272" for this suite. @ 04/10/25 17:33:18.838
• [6.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 04/10/25 17:33:18.844
  I0410 17:33:18.844185 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename resourcequota @ 04/10/25 17:33:18.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:33:18.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:33:18.854
  STEP: Counting existing ResourceQuota @ 04/10/25 17:33:35.861
  STEP: Creating a ResourceQuota @ 04/10/25 17:33:40.868
  STEP: Ensuring resource quota status is calculated @ 04/10/25 17:33:40.874
  STEP: Creating a ConfigMap @ 04/10/25 17:33:42.881
  STEP: Ensuring resource quota status captures configMap creation @ 04/10/25 17:33:42.896
  STEP: Deleting a ConfigMap @ 04/10/25 17:33:44.901
  STEP: Ensuring resource quota status released usage @ 04/10/25 17:33:44.91
  I0410 17:33:46.915876 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1297" for this suite. @ 04/10/25 17:33:46.919
• [28.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 04/10/25 17:33:46.928
  I0410 17:33:46.928234 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-probe @ 04/10/25 17:33:46.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:33:46.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:33:46.951
  STEP: Creating pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477 @ 04/10/25 17:33:46.954
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/10/25 17:33:48.968
  I0410 17:33:48.971005 23 container_probe.go:1749] Initial restart count of pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 is 0
  I0410 17:33:48.973880 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:33:50.980643 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:33:52.987373 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:33:54.994060 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:33:57.000191 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:33:59.007187 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:01.013074 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:03.018583 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:05.026206 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:07.032502 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:09.036305 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:11.040993 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:13.046339 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:15.053296 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:17.059365 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:19.066330 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:21.072357 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:23.075807 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:25.083880 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:27.090073 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:29.092598 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:31.098834 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:33.106127 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:35.109539 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:37.116639 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:39.123497 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:41.126887 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:43.133693 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:45.140124 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:47.142792 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:49.148717 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:51.156174 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:53.159808 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:55.162728 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:57.169691 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:34:59.173235 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:01.175707 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:03.183338 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:05.186493 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:07.190927 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:09.196606 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:11.203755 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:13.209676 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:15.212685 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:17.218196 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:19.221865 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:21.225648 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:23.231993 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:25.234273 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:27.236944 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:29.243305 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:31.248860 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:33.253152 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:35.256565 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:37.260313 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:39.267037 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:41.273910 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:43.276780 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:45.280205 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:47.283464 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:49.286352 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:51.292929 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:53.298732 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:55.301303 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:57.305752 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:35:59.312327 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:01.319719 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:03.326134 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:05.330915 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:07.336541 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:09.342006 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:11.347999 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:13.353983 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:15.360334 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:17.367455 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:19.371665 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:21.377069 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:23.382496 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:25.387641 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:27.395691 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:29.401571 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:31.407545 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:33.414766 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:35.420842 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:37.426061 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:39.431755 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:41.437315 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:43.443321 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:45.448765 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:47.455068 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:49.461633 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:51.467628 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:53.474363 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:55.481747 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:57.490890 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:36:59.495565 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:01.499984 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:03.506355 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:05.512393 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:07.517818 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:09.524345 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:11.531385 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:13.536413 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:15.542728 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:17.548574 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:19.554813 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:21.557493 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:23.563358 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:25.570452 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:27.574204 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:29.580093 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:31.586015 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:33.594298 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:35.599512 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:37.605154 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:39.610308 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:41.616286 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:43.622161 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:45.628300 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  I0410 17:37:47.635058 23 container_probe.go:1759] Get pod test-webserver-b92b8963-a699-4a16-b8b0-358b618819b3 in namespace container-probe-3477
  STEP: deleting the pod @ 04/10/25 17:37:49.635
  I0410 17:37:49.650305 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3477" for this suite. @ 04/10/25 17:37:49.654
• [242.732 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/10/25 17:37:49.66
  I0410 17:37:49.660675 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/10/25 17:37:49.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:37:49.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:37:49.679
  I0410 17:37:49.681389 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:37:52.770266 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8740" for this suite. @ 04/10/25 17:37:52.774
• [3.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 04/10/25 17:37:52.784
  I0410 17:37:52.784443 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename dns @ 04/10/25 17:37:52.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:37:52.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:37:52.802
  STEP: Creating a test headless service @ 04/10/25 17:37:52.806
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7887.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7887.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7887.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7887.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 141.197.98.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.98.197.141_udp@PTR;check="$$(dig +tcp +noall +answer +search 141.197.98.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.98.197.141_tcp@PTR;sleep 1; done
   @ 04/10/25 17:37:52.822
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7887.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7887.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7887.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7887.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7887.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 141.197.98.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.98.197.141_udp@PTR;check="$$(dig +tcp +noall +answer +search 141.197.98.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.98.197.141_tcp@PTR;sleep 1; done
   @ 04/10/25 17:37:52.822
  STEP: creating a pod to probe DNS @ 04/10/25 17:37:52.822
  STEP: submitting the pod to kubernetes @ 04/10/25 17:37:52.822
  STEP: retrieving the pod @ 04/10/25 17:37:54.84
  STEP: looking for the results for each expected name from probers @ 04/10/25 17:37:54.842
  I0410 17:37:54.845534 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:54.848688 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:54.851122 23 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:54.853167 23 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:54.863759 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:54.865478 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:54.866959 23 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:54.868462 23 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:54.873491 23 dns_common.go:490] Lookups using dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af failed for: [wheezy_udp@dns-test-service.dns-7887.svc.cluster.local wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_udp@dns-test-service.dns-7887.svc.cluster.local jessie_tcp@dns-test-service.dns-7887.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local]

  I0410 17:37:54.882333 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 17:37:54.886158 23 dns_common.go:496] Pod client logs for querier: 
  I0410 17:37:54.891063 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 17:37:59.848274 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:59.850976 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:59.853653 23 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:59.855996 23 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:59.864481 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:59.866004 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:59.867653 23 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:59.870005 23 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:37:59.880217 23 dns_common.go:490] Lookups using dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af failed for: [wheezy_udp@dns-test-service.dns-7887.svc.cluster.local wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_udp@dns-test-service.dns-7887.svc.cluster.local jessie_tcp@dns-test-service.dns-7887.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local]

  I0410 17:37:59.886065 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 17:37:59.891099 23 dns_common.go:496] Pod client logs for querier: 
  I0410 17:37:59.896713 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 17:38:04.848088 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:04.850443 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:04.852428 23 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:04.854754 23 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:04.863929 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:04.865299 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:04.866709 23 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:04.868054 23 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:04.874918 23 dns_common.go:490] Lookups using dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af failed for: [wheezy_udp@dns-test-service.dns-7887.svc.cluster.local wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_udp@dns-test-service.dns-7887.svc.cluster.local jessie_tcp@dns-test-service.dns-7887.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local]

  I0410 17:38:04.878952 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 17:38:04.883819 23 dns_common.go:496] Pod client logs for querier: 
  I0410 17:38:04.888007 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 17:38:09.848175 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:09.850847 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:09.852689 23 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:09.854365 23 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:09.863107 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:09.864674 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:09.866117 23 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:09.867426 23 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:09.873122 23 dns_common.go:490] Lookups using dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af failed for: [wheezy_udp@dns-test-service.dns-7887.svc.cluster.local wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_udp@dns-test-service.dns-7887.svc.cluster.local jessie_tcp@dns-test-service.dns-7887.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local]

  I0410 17:38:09.877050 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 17:38:09.880908 23 dns_common.go:496] Pod client logs for querier: 
  I0410 17:38:09.884515 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 17:38:14.849454 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:14.852495 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:14.855165 23 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:14.857786 23 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:14.870097 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:14.872489 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:14.874812 23 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:14.877031 23 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:14.886431 23 dns_common.go:490] Lookups using dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af failed for: [wheezy_udp@dns-test-service.dns-7887.svc.cluster.local wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_udp@dns-test-service.dns-7887.svc.cluster.local jessie_tcp@dns-test-service.dns-7887.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local]

  I0410 17:38:14.892639 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 17:38:14.899450 23 dns_common.go:496] Pod client logs for querier: 
  I0410 17:38:14.905647 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 17:38:19.850971 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:19.855129 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:19.858724 23 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:19.861589 23 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:19.875327 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:19.877820 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:19.880177 23 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:19.882783 23 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local from pod dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af: the server could not find the requested resource (get pods dns-test-88414b4e-e971-47b2-b100-ad34fa7759af)
  I0410 17:38:19.892363 23 dns_common.go:490] Lookups using dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af failed for: [wheezy_udp@dns-test-service.dns-7887.svc.cluster.local wheezy_tcp@dns-test-service.dns-7887.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_udp@dns-test-service.dns-7887.svc.cluster.local jessie_tcp@dns-test-service.dns-7887.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7887.svc.cluster.local]

  I0410 17:38:19.899597 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 17:38:19.906668 23 dns_common.go:496] Pod client logs for querier: 
  I0410 17:38:19.913044 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 17:38:24.888832 23 dns_common.go:528] DNS probes using dns-7887/dns-test-88414b4e-e971-47b2-b100-ad34fa7759af succeeded

  STEP: deleting the pod @ 04/10/25 17:38:24.888
  STEP: deleting the test service @ 04/10/25 17:38:24.907
  STEP: deleting the test headless service @ 04/10/25 17:38:24.938
  I0410 17:38:24.944136 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7887" for this suite. @ 04/10/25 17:38:24.948
• [32.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 04/10/25 17:38:24.954
  I0410 17:38:24.954171 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename resourcequota @ 04/10/25 17:38:24.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:38:24.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:38:24.966
  STEP: Counting existing ResourceQuota @ 04/10/25 17:38:24.968
  STEP: Creating a ResourceQuota @ 04/10/25 17:38:29.973
  STEP: Ensuring resource quota status is calculated @ 04/10/25 17:38:29.98
  STEP: Creating a Service @ 04/10/25 17:38:31.983
  STEP: Creating a NodePort Service @ 04/10/25 17:38:32.004
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/10/25 17:38:32.028
  STEP: Ensuring resource quota status captures service creation @ 04/10/25 17:38:32.049
  STEP: Deleting Services @ 04/10/25 17:38:34.054
  STEP: Ensuring resource quota status released usage @ 04/10/25 17:38:34.09
  I0410 17:38:36.096396 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5589" for this suite. @ 04/10/25 17:38:36.1
• [11.153 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 04/10/25 17:38:36.107
  I0410 17:38:36.107664 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename field-validation @ 04/10/25 17:38:36.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:38:36.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:38:36.125
  I0410 17:38:36.127741 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  W0410 17:38:38.676857      23 warnings.go:70] unknown field "alpha"
  W0410 17:38:38.676894      23 warnings.go:70] unknown field "beta"
  W0410 17:38:38.676902      23 warnings.go:70] unknown field "delta"
  W0410 17:38:38.676908      23 warnings.go:70] unknown field "epsilon"
  W0410 17:38:38.676914      23 warnings.go:70] unknown field "gamma"
  I0410 17:38:39.219962 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4293" for this suite. @ 04/10/25 17:38:39.223
• [3.122 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/10/25 17:38:39.229
  I0410 17:38:39.229999 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/10/25 17:38:39.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:38:39.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:38:39.245
  STEP: Creating 50 configmaps @ 04/10/25 17:38:39.248
  STEP: Creating RC which spawns configmap-volume pods @ 04/10/25 17:38:39.49
  I0410 17:38:39.602954 23 resource.go:87] Pod name wrapped-volume-race-7858acf6-d32f-42a8-8734-1392958c24bc: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/10/25 17:38:39.603
  STEP: Creating RC which spawns configmap-volume pods @ 04/10/25 17:38:41.658
  I0410 17:38:41.671694 23 resource.go:87] Pod name wrapped-volume-race-fa3245b1-7961-49ea-94e5-9ecfc3961138: Found 0 pods out of 5
  I0410 17:38:46.679414 23 resource.go:87] Pod name wrapped-volume-race-fa3245b1-7961-49ea-94e5-9ecfc3961138: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/10/25 17:38:46.679
  STEP: Creating RC which spawns configmap-volume pods @ 04/10/25 17:38:46.7
  I0410 17:38:46.714967 23 resource.go:87] Pod name wrapped-volume-race-dcc55038-09ed-4b46-be5a-6a6ebe8ae5df: Found 0 pods out of 5
  I0410 17:38:51.723828 23 resource.go:87] Pod name wrapped-volume-race-dcc55038-09ed-4b46-be5a-6a6ebe8ae5df: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/10/25 17:38:51.723
  STEP: deleting ReplicationController wrapped-volume-race-dcc55038-09ed-4b46-be5a-6a6ebe8ae5df in namespace emptydir-wrapper-222, will wait for the garbage collector to delete the pods @ 04/10/25 17:38:51.742
  I0410 17:38:51.804302 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-dcc55038-09ed-4b46-be5a-6a6ebe8ae5df took: 8.399946ms
  I0410 17:38:51.905093 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-dcc55038-09ed-4b46-be5a-6a6ebe8ae5df pods took: 100.785814ms
  STEP: deleting ReplicationController wrapped-volume-race-fa3245b1-7961-49ea-94e5-9ecfc3961138 in namespace emptydir-wrapper-222, will wait for the garbage collector to delete the pods @ 04/10/25 17:38:52.905
  I0410 17:38:52.970929 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-fa3245b1-7961-49ea-94e5-9ecfc3961138 took: 9.237122ms
  I0410 17:38:53.071693 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-fa3245b1-7961-49ea-94e5-9ecfc3961138 pods took: 100.763127ms
  STEP: deleting ReplicationController wrapped-volume-race-7858acf6-d32f-42a8-8734-1392958c24bc in namespace emptydir-wrapper-222, will wait for the garbage collector to delete the pods @ 04/10/25 17:38:54.372
  I0410 17:38:54.436449 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-7858acf6-d32f-42a8-8734-1392958c24bc took: 7.829431ms
  I0410 17:38:54.536643 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-7858acf6-d32f-42a8-8734-1392958c24bc pods took: 100.196562ms
  STEP: Cleaning up the configMaps @ 04/10/25 17:38:55.437
  I0410 17:38:55.646077 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-222" for this suite. @ 04/10/25 17:38:55.648
• [16.423 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 04/10/25 17:38:55.652
  I0410 17:38:55.652806 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 17:38:55.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:38:55.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:38:55.668
  STEP: Creating a pod to test downward api env vars @ 04/10/25 17:38:55.67
  STEP: Saw pod success @ 04/10/25 17:38:59.688
  I0410 17:38:59.692178 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downward-api-03c353e2-b6c1-4ef4-a7ba-eace0abf3135 container dapi-container: <nil>
  STEP: delete the pod @ 04/10/25 17:38:59.701
  I0410 17:38:59.717468 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3006" for this suite. @ 04/10/25 17:38:59.721
• [4.073 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 04/10/25 17:38:59.726
  I0410 17:38:59.726375 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename statefulset @ 04/10/25 17:38:59.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:38:59.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:38:59.743
  STEP: Creating service test in namespace statefulset-8649 @ 04/10/25 17:38:59.745
  STEP: Creating stateful set ss in namespace statefulset-8649 @ 04/10/25 17:38:59.749
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8649 @ 04/10/25 17:38:59.754
  I0410 17:38:59.756544 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0410 17:39:09.762152 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/10/25 17:39:09.762
  I0410 17:39:09.765389 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8649 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0410 17:39:09.878451 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0410 17:39:09.878508 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0410 17:39:09.878527 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0410 17:39:09.881652 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0410 17:39:19.885644 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0410 17:39:19.885695 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0410 17:39:19.906863 23 resource.go:168] POD   NODE                PHASE    GRACE  CONDITIONS
  I0410 17:39:19.906979 23 resource.go:175] ss-0  k8sconformance-m02  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:38:59 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:38:59 +0000 UTC  }]
  I0410 17:39:19.907006 23 resource.go:175] ss-2                      Pending         []
  I0410 17:39:19.907019 23 resource.go:178] 
  I0410 17:39:19.907034 23 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 2
  I0410 17:39:20.913828 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.991163667s
  I0410 17:39:21.921523 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.984571513s
  I0410 17:39:22.927954 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.976824074s
  I0410 17:39:23.934214 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.970102s
  I0410 17:39:24.940539 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.963930827s
  I0410 17:39:25.947358 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.957689036s
  I0410 17:39:26.953289 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.951024557s
  I0410 17:39:27.960864 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.945017676s
  I0410 17:39:28.968364 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 937.327489ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8649 @ 04/10/25 17:39:29.968
  I0410 17:39:29.974748 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8649 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0410 17:39:30.067791 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0410 17:39:30.067837 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0410 17:39:30.067859 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0410 17:39:30.067914 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8649 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0410 17:39:30.176102 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0410 17:39:30.176166 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0410 17:39:30.176188 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0410 17:39:30.176283 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8649 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0410 17:39:30.293849 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0410 17:39:30.293934 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0410 17:39:30.293962 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0410 17:39:30.300659 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0410 17:39:30.300730 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0410 17:39:30.300753 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/10/25 17:39:30.3
  I0410 17:39:30.304511 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8649 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0410 17:39:30.412451 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0410 17:39:30.412495 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0410 17:39:30.412508 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0410 17:39:30.412560 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8649 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0410 17:39:30.516795 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0410 17:39:30.516862 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0410 17:39:30.516886 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0410 17:39:30.516959 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8649 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0410 17:39:30.613355 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0410 17:39:30.613418 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0410 17:39:30.613443 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0410 17:39:30.613459 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0410 17:39:30.615880 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0410 17:39:40.623182 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0410 17:39:40.623265 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0410 17:39:40.623289 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0410 17:39:40.642965 23 resource.go:168] POD   NODE                PHASE    GRACE  CONDITIONS
  I0410 17:39:40.643085 23 resource.go:175] ss-0  k8sconformance-m02  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:38:59 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:38:59 +0000 UTC  }]
  I0410 17:39:40.643128 23 resource.go:175] ss-1  k8sconformance-m02  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:21 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:19 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:19 +0000 UTC  }]
  I0410 17:39:40.643166 23 resource.go:175] ss-2  k8sconformance      Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:20 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:19 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:19 +0000 UTC  }]
  I0410 17:39:40.643182 23 resource.go:178] 
  I0410 17:39:40.643198 23 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I0410 17:39:41.649224 23 resource.go:168] POD   NODE            PHASE      GRACE  CONDITIONS
  I0410 17:39:41.649354 23 resource.go:175] ss-2  k8sconformance  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:19 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:31 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:31 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 17:39:19 +0000 UTC  }]
  I0410 17:39:41.649375 23 resource.go:178] 
  I0410 17:39:41.649390 23 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 1
  I0410 17:39:42.656408 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.983162435s
  I0410 17:39:43.662155 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.976980923s
  I0410 17:39:44.667020 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.97128024s
  I0410 17:39:45.672277 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.966406141s
  I0410 17:39:46.677102 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.961211963s
  I0410 17:39:47.682788 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.956071827s
  I0410 17:39:48.687812 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.950502026s
  I0410 17:39:49.693215 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 945.558722ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8649 @ 04/10/25 17:39:50.693
  I0410 17:39:50.700210 23 rest.go:150] Scaling statefulset ss to 0
  I0410 17:39:50.706005 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0410 17:39:50.708514 23 statefulset.go:138] Deleting all statefulset in ns statefulset-8649
  I0410 17:39:50.711583 23 rest.go:150] Scaling statefulset ss to 0
  I0410 17:39:50.716277 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0410 17:39:50.718688 23 rest.go:88] Deleting statefulset ss
  I0410 17:39:50.730645 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8649" for this suite. @ 04/10/25 17:39:50.734
• [51.015 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 04/10/25 17:39:50.741
  I0410 17:39:50.741628 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 17:39:50.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:39:50.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:39:50.754
  STEP: Setting up server cert @ 04/10/25 17:39:50.854
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 17:39:50.967
  STEP: Deploying the webhook pod @ 04/10/25 17:39:50.972
  STEP: Wait for the deployment to be ready @ 04/10/25 17:39:50.978
  I0410 17:39:50.983137 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:39:52.993
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:39:53.007
  I0410 17:39:54.007455 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/10/25 17:39:54.015
  STEP: create a pod that should be updated by the webhook @ 04/10/25 17:39:54.034
  I0410 17:39:54.086133 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1240" for this suite. @ 04/10/25 17:39:54.093
  STEP: Destroying namespace "webhook-markers-6986" for this suite. @ 04/10/25 17:39:54.097
• [3.359 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 04/10/25 17:39:54.1
  I0410 17:39:54.100675 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename dns @ 04/10/25 17:39:54.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:39:54.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:39:54.108
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/10/25 17:39:54.11
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/10/25 17:39:54.11
  STEP: creating a pod to probe DNS @ 04/10/25 17:39:54.11
  STEP: submitting the pod to kubernetes @ 04/10/25 17:39:54.11
  STEP: retrieving the pod @ 04/10/25 17:39:56.12
  STEP: looking for the results for each expected name from probers @ 04/10/25 17:39:56.121
  I0410 17:39:56.130264 23 dns_common.go:528] DNS probes using dns-8123/dns-test-588b8ec9-5024-470d-b5fb-929d1b24d382 succeeded

  STEP: deleting the pod @ 04/10/25 17:39:56.13
  I0410 17:39:56.138221 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8123" for this suite. @ 04/10/25 17:39:56.14
• [2.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 04/10/25 17:39:56.143
  I0410 17:39:56.143043 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 17:39:56.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:39:56.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:39:56.15
  STEP: validating api versions @ 04/10/25 17:39:56.152
  I0410 17:39:56.152382 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-4510 api-versions'
  I0410 17:39:56.191686 23 builder.go:146] stderr: ""
  I0410 17:39:56.191734 23 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0410 17:39:56.191836 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4510" for this suite. @ 04/10/25 17:39:56.241
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 04/10/25 17:39:56.244
  I0410 17:39:56.244413 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename ingress @ 04/10/25 17:39:56.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:39:56.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:39:56.254
  STEP: getting /apis @ 04/10/25 17:39:56.256
  STEP: getting /apis/networking.k8s.io @ 04/10/25 17:39:56.258
  STEP: getting /apis/networking.k8s.iov1 @ 04/10/25 17:39:56.259
  STEP: creating @ 04/10/25 17:39:56.259
  STEP: getting @ 04/10/25 17:39:56.267
  STEP: listing @ 04/10/25 17:39:56.268
  STEP: watching @ 04/10/25 17:39:56.27
  I0410 17:39:56.270306 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 04/10/25 17:39:56.271
  STEP: cluster-wide watching @ 04/10/25 17:39:56.272
  I0410 17:39:56.272258 23 ingress.go:198] starting watch
  STEP: patching @ 04/10/25 17:39:56.272
  STEP: updating @ 04/10/25 17:39:56.276
  I0410 17:39:56.280899 23 ingress.go:221] waiting for watch events with expected annotations
  I0410 17:39:56.280939 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 04/10/25 17:39:56.281
  STEP: updating /status @ 04/10/25 17:39:56.284
  STEP: get /status @ 04/10/25 17:39:56.288
  STEP: deleting @ 04/10/25 17:39:56.289
  STEP: deleting a collection @ 04/10/25 17:39:56.294
  I0410 17:39:56.301127 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1171" for this suite. @ 04/10/25 17:39:56.342
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 04/10/25 17:39:56.346
  I0410 17:39:56.346388 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename gc @ 04/10/25 17:39:56.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:39:56.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:39:56.355
  STEP: create the deployment @ 04/10/25 17:39:56.357
  W0410 17:39:56.361196      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/10/25 17:39:56.361
  STEP: delete the deployment @ 04/10/25 17:39:56.864
  STEP: wait for all rs to be garbage collected @ 04/10/25 17:39:56.867
  STEP: expected 0 pods, got 2 pods @ 04/10/25 17:39:56.878
  STEP: Gathering metrics @ 04/10/25 17:39:57.378
  I0410 17:39:57.446998 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0410 17:39:57.447151 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2154" for this suite. @ 04/10/25 17:39:57.449
• [1.108 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 04/10/25 17:39:57.454
  I0410 17:39:57.454544 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/10/25 17:39:57.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:39:57.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:39:57.466
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/10/25 17:39:57.467
  I0410 17:39:57.467864 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/10/25 17:40:02.227
  I0410 17:40:02.228209 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:40:03.381280 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:40:08.027905 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2899" for this suite. @ 04/10/25 17:40:08.032
• [10.581 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 04/10/25 17:40:08.036
  I0410 17:40:08.036041 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:40:08.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:40:08.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:40:08.047
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 17:40:08.049
  STEP: Saw pod success @ 04/10/25 17:40:12.072
  I0410 17:40:12.076279 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-354618dc-9f4f-431d-ab87-ceaa03fdf02b container client-container: <nil>
  STEP: delete the pod @ 04/10/25 17:40:12.084
  I0410 17:40:12.102543 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6299" for this suite. @ 04/10/25 17:40:12.106
• [4.075 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 04/10/25 17:40:12.111
  I0410 17:40:12.111729 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename job @ 04/10/25 17:40:12.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:40:12.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:40:12.126
  STEP: Looking for a node to schedule job pod @ 04/10/25 17:40:12.13
  STEP: Creating a job @ 04/10/25 17:40:12.206
  STEP: Ensuring job fails @ 04/10/25 17:40:12.211
  I0410 17:40:20.218048 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8306" for this suite. @ 04/10/25 17:40:20.224
• [8.118 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/10/25 17:40:20.23
  I0410 17:40:20.230266 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:40:20.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:40:20.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:40:20.248
  STEP: Creating projection with secret that has name projected-secret-test-map-f75722a3-97a4-4924-b8d1-c85e13a990b3 @ 04/10/25 17:40:20.25
  STEP: Creating a pod to test consume secrets @ 04/10/25 17:40:20.254
  STEP: Saw pod success @ 04/10/25 17:40:24.271
  I0410 17:40:24.274410 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-8dcaa741-48e3-4a54-afa5-12bf8c1da919 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 17:40:24.282
  I0410 17:40:24.297602 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8849" for this suite. @ 04/10/25 17:40:24.3
• [4.075 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 04/10/25 17:40:24.305
  I0410 17:40:24.305411 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 17:40:24.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:40:24.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:40:24.319
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/10/25 17:40:24.322
  STEP: Saw pod success @ 04/10/25 17:40:28.338
  I0410 17:40:28.341059 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-1eadd5ae-2e25-4cee-a148-80a3bf3277fe container test-container: <nil>
  STEP: delete the pod @ 04/10/25 17:40:28.349
  I0410 17:40:28.365374 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3173" for this suite. @ 04/10/25 17:40:28.368
• [4.068 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 04/10/25 17:40:28.373
  I0410 17:40:28.374016 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename field-validation @ 04/10/25 17:40:28.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:40:28.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:40:28.389
  STEP: apply creating a deployment @ 04/10/25 17:40:28.392
  I0410 17:40:28.402592 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2777" for this suite. @ 04/10/25 17:40:28.47
• [0.104 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/10/25 17:40:28.477
  I0410 17:40:28.477734 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/10/25 17:40:28.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:40:28.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:40:28.493
  STEP: getting /apis @ 04/10/25 17:40:28.496
  STEP: getting /apis/storage.k8s.io @ 04/10/25 17:40:28.499
  STEP: getting /apis/storage.k8s.io/v1 @ 04/10/25 17:40:28.501
  STEP: creating @ 04/10/25 17:40:28.502
  STEP: watching @ 04/10/25 17:40:28.515
  I0410 17:40:28.515240 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 04/10/25 17:40:28.522
  STEP: listing in namespace @ 04/10/25 17:40:28.524
  STEP: listing across namespaces @ 04/10/25 17:40:28.526
  STEP: patching @ 04/10/25 17:40:28.528
  STEP: updating @ 04/10/25 17:40:28.533
  I0410 17:40:28.537762 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0410 17:40:28.537898 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/10/25 17:40:28.538
  STEP: deleting a collection @ 04/10/25 17:40:28.546
  I0410 17:40:28.557544 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5655" for this suite. @ 04/10/25 17:40:28.569
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 04/10/25 17:40:28.575
  I0410 17:40:28.575629 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubelet-test @ 04/10/25 17:40:28.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:40:28.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:40:28.593
  I0410 17:40:32.613845 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7536" for this suite. @ 04/10/25 17:40:32.619
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/10/25 17:40:32.63
  I0410 17:40:32.630300 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename runtimeclass @ 04/10/25 17:40:32.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:40:32.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:40:32.647
  I0410 17:40:32.657144 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9703" for this suite. @ 04/10/25 17:40:32.719
• [0.099 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 04/10/25 17:40:32.729
  I0410 17:40:32.729306 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:40:32.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:40:32.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:40:32.75
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-2dda8855-346a-4f95-b6dc-a39696af94ac @ 04/10/25 17:40:32.816
  STEP: Creating the pod @ 04/10/25 17:40:32.822
  STEP: Updating configmap projected-configmap-test-upd-2dda8855-346a-4f95-b6dc-a39696af94ac @ 04/10/25 17:40:34.853
  STEP: waiting to observe update in volume @ 04/10/25 17:40:34.859
  I0410 17:41:45.298374 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9402" for this suite. @ 04/10/25 17:41:45.302
• [72.580 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 04/10/25 17:41:45.309
  I0410 17:41:45.309126 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 17:41:45.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:41:45.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:41:45.327
  STEP: Creating configMap with name configmap-test-volume-map-b8a7fab8-5fa2-4bd2-9b81-f78bc97c42c2 @ 04/10/25 17:41:45.33
  STEP: Creating a pod to test consume configMaps @ 04/10/25 17:41:45.334
  STEP: Saw pod success @ 04/10/25 17:41:49.354
  I0410 17:41:49.357929 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-65eaa8e5-864a-4c88-a320-a227a5ddb34b container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 17:41:49.365
  I0410 17:41:49.383716 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6703" for this suite. @ 04/10/25 17:41:49.387
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/10/25 17:41:49.393
  I0410 17:41:49.393117 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename replicaset @ 04/10/25 17:41:49.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:41:49.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:41:49.41
  STEP: Create a Replicaset @ 04/10/25 17:41:49.416
  STEP: Verify that the required pods have come up. @ 04/10/25 17:41:49.42
  I0410 17:41:49.423848 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0410 17:41:54.429574 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/10/25 17:41:54.429
  STEP: Getting /status @ 04/10/25 17:41:54.429
  I0410 17:41:54.432759 23 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/10/25 17:41:54.432
  I0410 17:41:54.440043 23 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/10/25 17:41:54.44
  I0410 17:41:54.441804 23 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0410 17:41:54.441931 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0410 17:41:54.442038 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0410 17:41:54.442156 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0410 17:41:54.442192 23 replica_set.go:682] Found replicaset test-rs in namespace replicaset-1406 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0410 17:41:54.442209 23 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/10/25 17:41:54.442
  I0410 17:41:54.442259 23 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0410 17:41:54.447099 23 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/10/25 17:41:54.447
  I0410 17:41:54.448224 23 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0410 17:41:54.448316 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0410 17:41:54.448388 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0410 17:41:54.448557 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0410 17:41:54.448587 23 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-1406 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0410 17:41:54.448669 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0410 17:41:54.448690 23 replica_set.go:718] Found replicaset test-rs in namespace replicaset-1406 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0410 17:41:54.448703 23 replica_set.go:729] Replicaset test-rs has a patched status
  I0410 17:41:54.448791 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1406" for this suite. @ 04/10/25 17:41:54.451
• [5.063 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 04/10/25 17:41:54.456
  I0410 17:41:54.456271 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename job @ 04/10/25 17:41:54.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:41:54.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:41:54.468
  STEP: Creating a job @ 04/10/25 17:41:54.469
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/10/25 17:41:54.475
  STEP: patching /status @ 04/10/25 17:41:56.48
  STEP: updating /status @ 04/10/25 17:41:56.49
  STEP: get /status @ 04/10/25 17:41:56.497
  I0410 17:41:56.500305 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6404" for this suite. @ 04/10/25 17:41:56.503
• [2.054 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 04/10/25 17:41:56.51
  I0410 17:41:56.510903 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 17:41:56.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:41:56.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:41:56.526
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 17:41:56.529
  STEP: Saw pod success @ 04/10/25 17:42:00.554
  I0410 17:42:00.557730 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-0a6e010b-3965-434c-8678-b9d1f4828a53 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 17:42:00.566
  I0410 17:42:00.580999 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3342" for this suite. @ 04/10/25 17:42:00.584
• [4.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 04/10/25 17:42:00.59
  I0410 17:42:00.590124 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sched-pred @ 04/10/25 17:42:00.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:42:00.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:42:00.608
  I0410 17:42:00.611728 23 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0410 17:42:00.691317 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I0410 17:42:00.694419 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance before test
  I0410 17:42:00.698291 23 predicates.go:957] coredns-7c65d6cfc9-bfx56 from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.698321 23 predicates.go:959] 	Container coredns ready: true, restart count 2
  I0410 17:42:00.698332 23 predicates.go:957] etcd-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.698340 23 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0410 17:42:00.698350 23 predicates.go:957] kindnet-jtksc from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.698359 23 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0410 17:42:00.698367 23 predicates.go:957] kube-apiserver-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.698375 23 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0410 17:42:00.698384 23 predicates.go:957] kube-controller-manager-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.698391 23 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0410 17:42:00.698400 23 predicates.go:957] kube-proxy-f9rvm from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.698408 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0410 17:42:00.698417 23 predicates.go:957] kube-scheduler-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.698425 23 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0410 17:42:00.698433 23 predicates.go:957] storage-provisioner from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.698441 23 predicates.go:959] 	Container storage-provisioner ready: true, restart count 0
  I0410 17:42:00.698452 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-263a75f94ecb4a68-w8pln from sonobuoy started at 2025-04-10 17:05:50 +0000 UTC (2 container statuses recorded)
  I0410 17:42:00.698469 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0410 17:42:00.698476 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0410 17:42:00.698484 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  I0410 17:42:00.701564 23 predicates.go:957] suspend-false-to-true-cncfx from job-6404 started at 2025-04-10 17:41:54 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.701599 23 predicates.go:959] 	Container c ready: true, restart count 0
  I0410 17:42:00.701617 23 predicates.go:957] suspend-false-to-true-r4gs5 from job-6404 started at 2025-04-10 17:41:54 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.701631 23 predicates.go:959] 	Container c ready: true, restart count 0
  I0410 17:42:00.701643 23 predicates.go:957] kindnet-x8rsh from kube-system started at 2025-04-10 17:05:26 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.701653 23 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0410 17:42:00.701664 23 predicates.go:957] kube-proxy-jjf4l from kube-system started at 2025-04-10 17:05:26 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.701674 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0410 17:42:00.701685 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-10 17:05:45 +0000 UTC (1 container statuses recorded)
  I0410 17:42:00.701695 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0410 17:42:00.701707 23 predicates.go:957] sonobuoy-e2e-job-58df2f5851bb4777 from sonobuoy started at 2025-04-10 17:05:50 +0000 UTC (2 container statuses recorded)
  I0410 17:42:00.701716 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0410 17:42:00.701725 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0410 17:42:00.701735 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-263a75f94ecb4a68-9xh5d from sonobuoy started at 2025-04-10 17:05:50 +0000 UTC (2 container statuses recorded)
  I0410 17:42:00.701744 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0410 17:42:00.701758 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node k8sconformance @ 04/10/25 17:42:00.714
  STEP: verifying the node has the label node k8sconformance-m02 @ 04/10/25 17:42:00.727
  I0410 17:42:00.797901 23 predicates.go:372] Pod suspend-false-to-true-cncfx requesting resource cpu=0m on Node k8sconformance-m02
  I0410 17:42:00.797929 23 predicates.go:372] Pod suspend-false-to-true-r4gs5 requesting resource cpu=0m on Node k8sconformance-m02
  I0410 17:42:00.797938 23 predicates.go:372] Pod coredns-7c65d6cfc9-bfx56 requesting resource cpu=100m on Node k8sconformance
  I0410 17:42:00.797945 23 predicates.go:372] Pod etcd-k8sconformance requesting resource cpu=100m on Node k8sconformance
  I0410 17:42:00.797953 23 predicates.go:372] Pod kindnet-jtksc requesting resource cpu=100m on Node k8sconformance
  I0410 17:42:00.797960 23 predicates.go:372] Pod kindnet-x8rsh requesting resource cpu=100m on Node k8sconformance-m02
  I0410 17:42:00.797967 23 predicates.go:372] Pod kube-apiserver-k8sconformance requesting resource cpu=250m on Node k8sconformance
  I0410 17:42:00.797973 23 predicates.go:372] Pod kube-controller-manager-k8sconformance requesting resource cpu=200m on Node k8sconformance
  I0410 17:42:00.797980 23 predicates.go:372] Pod kube-proxy-f9rvm requesting resource cpu=0m on Node k8sconformance
  I0410 17:42:00.797989 23 predicates.go:372] Pod kube-proxy-jjf4l requesting resource cpu=0m on Node k8sconformance-m02
  I0410 17:42:00.797996 23 predicates.go:372] Pod kube-scheduler-k8sconformance requesting resource cpu=100m on Node k8sconformance
  I0410 17:42:00.798003 23 predicates.go:372] Pod storage-provisioner requesting resource cpu=0m on Node k8sconformance
  I0410 17:42:00.798010 23 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node k8sconformance-m02
  I0410 17:42:00.798017 23 predicates.go:372] Pod sonobuoy-e2e-job-58df2f5851bb4777 requesting resource cpu=0m on Node k8sconformance-m02
  I0410 17:42:00.798023 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-263a75f94ecb4a68-9xh5d requesting resource cpu=0m on Node k8sconformance-m02
  I0410 17:42:00.798030 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-263a75f94ecb4a68-w8pln requesting resource cpu=0m on Node k8sconformance
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/10/25 17:42:00.798
  I0410 17:42:00.798065 23 predicates.go:382] Creating a pod which consumes cpu=7805m on Node k8sconformance
  I0410 17:42:00.804851 23 predicates.go:382] Creating a pod which consumes cpu=8330m on Node k8sconformance-m02
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/10/25 17:42:02.824
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7cbdd57f-a2e0-4419-a769-22c902afefb3.183505e71a04a2dd], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2678/filler-pod-7cbdd57f-a2e0-4419-a769-22c902afefb3 to k8sconformance] @ 04/10/25 17:42:02.827
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7cbdd57f-a2e0-4419-a769-22c902afefb3.183505e737206e2e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 04/10/25 17:42:02.827
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7cbdd57f-a2e0-4419-a769-22c902afefb3.183505e739404514], Reason = [Created], Message = [Created container: filler-pod-7cbdd57f-a2e0-4419-a769-22c902afefb3] @ 04/10/25 17:42:02.827
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7cbdd57f-a2e0-4419-a769-22c902afefb3.183505e73e86ffd0], Reason = [Started], Message = [Started container filler-pod-7cbdd57f-a2e0-4419-a769-22c902afefb3] @ 04/10/25 17:42:02.827
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ad239fce-979e-4a61-ba51-80340f79ebe3.183505e71a8f2e86], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2678/filler-pod-ad239fce-979e-4a61-ba51-80340f79ebe3 to k8sconformance-m02] @ 04/10/25 17:42:02.827
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ad239fce-979e-4a61-ba51-80340f79ebe3.183505e737599e4a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 04/10/25 17:42:02.827
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ad239fce-979e-4a61-ba51-80340f79ebe3.183505e739822161], Reason = [Created], Message = [Created container: filler-pod-ad239fce-979e-4a61-ba51-80340f79ebe3] @ 04/10/25 17:42:02.827
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ad239fce-979e-4a61-ba51-80340f79ebe3.183505e73e5878f3], Reason = [Started], Message = [Started container filler-pod-ad239fce-979e-4a61-ba51-80340f79ebe3] @ 04/10/25 17:42:02.827
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.183505e792d6c186], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 04/10/25 17:42:02.839
  STEP: removing the label node off the node k8sconformance @ 04/10/25 17:42:03.842
  STEP: verifying the node doesn't have the label node @ 04/10/25 17:42:03.855
  STEP: removing the label node off the node k8sconformance-m02 @ 04/10/25 17:42:03.859
  STEP: verifying the node doesn't have the label node @ 04/10/25 17:42:03.871
  I0410 17:42:03.875713 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2678" for this suite. @ 04/10/25 17:42:03.88
• [3.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 04/10/25 17:42:03.888
  I0410 17:42:03.888426 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename dns @ 04/10/25 17:42:03.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:42:03.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:42:03.91
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/10/25 17:42:03.914
  I0410 17:42:03.924694 23 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-1037  6e16717c-35a6-42ca-8944-2bad17a1fc85 9609 0 2025-04-10 17:42:03 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-04-10 17:42:03 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xtklj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xtklj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/10/25 17:42:05.931
  I0410 17:42:05.931167 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-1037 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:42:05.931183 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:42:05.931595 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:42:05.931637 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-1037/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/10/25 17:42:05.994
  I0410 17:42:05.994341 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-1037 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:42:05.994358 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:42:05.994760 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:42:05.994802 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-1037/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0410 17:42:06.056679 23 dns.go:423] Deleting pod test-dns-nameservers...
  I0410 17:42:06.063982 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1037" for this suite. @ 04/10/25 17:42:06.065
• [2.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/10/25 17:42:06.07
  I0410 17:42:06.070391 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename init-container @ 04/10/25 17:42:06.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:42:06.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:42:06.081
  STEP: creating the pod @ 04/10/25 17:42:06.082
  I0410 17:42:06.082926 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0410 17:42:10.370384 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2285" for this suite. @ 04/10/25 17:42:10.372
• [4.305 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 04/10/25 17:42:10.376
  I0410 17:42:10.376059 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 17:42:10.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:42:10.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:42:10.388
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/10/25 17:42:10.389
  STEP: Saw pod success @ 04/10/25 17:42:14.404
  I0410 17:42:14.406311 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-6681bc2b-8727-4147-9fb5-8dc473e8b06c container test-container: <nil>
  STEP: delete the pod @ 04/10/25 17:42:14.41
  I0410 17:42:14.420421 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4345" for this suite. @ 04/10/25 17:42:14.421
• [4.049 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 04/10/25 17:42:14.425
  I0410 17:42:14.425266 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename resourcequota @ 04/10/25 17:42:14.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:42:14.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:42:14.435
  STEP: Discovering how many secrets are in namespace by default @ 04/10/25 17:42:14.436
  STEP: Counting existing ResourceQuota @ 04/10/25 17:42:19.44
  STEP: Creating a ResourceQuota @ 04/10/25 17:42:24.447
  STEP: Ensuring resource quota status is calculated @ 04/10/25 17:42:24.458
  STEP: Creating a Secret @ 04/10/25 17:42:26.462
  STEP: Ensuring resource quota status captures secret creation @ 04/10/25 17:42:26.472
  STEP: Deleting a secret @ 04/10/25 17:42:28.477
  STEP: Ensuring resource quota status released usage @ 04/10/25 17:42:28.484
  I0410 17:42:30.489266 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4280" for this suite. @ 04/10/25 17:42:30.491
• [16.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 04/10/25 17:42:30.496
  I0410 17:42:30.496803 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 17:42:30.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:42:30.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:42:30.507
  STEP: creating a collection of services @ 04/10/25 17:42:30.509
  I0410 17:42:30.509389 23 service.go:3655] Creating e2e-svc-a-kz8wx
  I0410 17:42:30.518310 23 service.go:3655] Creating e2e-svc-b-jxqw6
  I0410 17:42:30.526917 23 service.go:3655] Creating e2e-svc-c-p6d9j
  STEP: deleting service collection @ 04/10/25 17:42:30.537
  I0410 17:42:30.556870 23 service.go:3690] Collection of services has been deleted
  I0410 17:42:30.557007 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8247" for this suite. @ 04/10/25 17:42:30.593
• [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/10/25 17:42:30.6
  I0410 17:42:30.600114 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename replicaset @ 04/10/25 17:42:30.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:42:30.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:42:30.617
  STEP: Create a ReplicaSet @ 04/10/25 17:42:30.62
  STEP: Verify that the required pods have come up @ 04/10/25 17:42:30.624
  I0410 17:42:30.626815 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0410 17:42:35.635101 23 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/10/25 17:42:35.635
  I0410 17:42:35.637565 23 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/10/25 17:42:35.637
  STEP: DeleteCollection of the ReplicaSets @ 04/10/25 17:42:35.64
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/10/25 17:42:35.645
  I0410 17:42:35.648086 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3756" for this suite. @ 04/10/25 17:42:35.652
• [5.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 04/10/25 17:42:35.657
  I0410 17:42:35.657169 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pv @ 04/10/25 17:42:35.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:42:35.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:42:35.678
  STEP: Creating initial PV and PVC @ 04/10/25 17:42:35.681
  I0410 17:42:35.681950 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3906" @ 04/10/25 17:42:35.691
  STEP: Listing PVCs in namespace "pv-3906" @ 04/10/25 17:42:35.693
  STEP: Reading "pvc-xgj6h" Status @ 04/10/25 17:42:35.751
  STEP: Reading "pv-3906-gpj8r" Status @ 04/10/25 17:42:35.753
  STEP: Patching "pvc-xgj6h" Status @ 04/10/25 17:42:35.756
  STEP: Patching "pv-3906-gpj8r" Status @ 04/10/25 17:42:35.763
  STEP: Updating "pvc-xgj6h" Status @ 04/10/25 17:42:35.767
  STEP: Updating "pv-3906-gpj8r" Status @ 04/10/25 17:42:35.775
  I0410 17:42:35.800543 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0410 17:42:35.800571 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-xgj6h"
  I0410 17:42:35.806493 23 pv.go:193] Deleting PersistentVolume "pv-3906-gpj8r"
  I0410 17:42:35.811367 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3906" for this suite. @ 04/10/25 17:42:35.813
• [0.159 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/10/25 17:42:35.816
  I0410 17:42:35.816554 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-runtime @ 04/10/25 17:42:35.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:42:35.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:42:35.828
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/10/25 17:42:35.837
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/10/25 17:42:50.919
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/10/25 17:42:50.923
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/10/25 17:42:50.928
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/10/25 17:42:50.928
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/10/25 17:42:50.942
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/10/25 17:42:53.961
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/10/25 17:42:54.967
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/10/25 17:42:54.974
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/10/25 17:42:54.974
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/10/25 17:42:54.994
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/10/25 17:42:56.003
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/10/25 17:42:58.017
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/10/25 17:42:58.024
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/10/25 17:42:58.025
  I0410 17:42:58.051180 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1838" for this suite. @ 04/10/25 17:42:58.054
• [22.243 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 04/10/25 17:42:58.059
  I0410 17:42:58.059562 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename var-expansion @ 04/10/25 17:42:58.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:42:58.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:42:58.075
  STEP: Creating a pod to test substitution in container's args @ 04/10/25 17:42:58.078
  STEP: Saw pod success @ 04/10/25 17:43:02.096
  I0410 17:43:02.100493 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod var-expansion-7abbf287-7325-44e4-884a-73222b0175f8 container dapi-container: <nil>
  STEP: delete the pod @ 04/10/25 17:43:02.111
  I0410 17:43:02.128102 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3325" for this suite. @ 04/10/25 17:43:02.131
• [4.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/10/25 17:43:02.137
  I0410 17:43:02.137397 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pods @ 04/10/25 17:43:02.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:02.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:02.153
  I0410 17:43:02.156509 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: creating the pod @ 04/10/25 17:43:02.157
  STEP: submitting the pod to kubernetes @ 04/10/25 17:43:02.157
  I0410 17:43:04.190084 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-291" for this suite. @ 04/10/25 17:43:04.193
• [2.062 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 04/10/25 17:43:04.199
  I0410 17:43:04.200025 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 17:43:04.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:04.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:04.213
  STEP: Creating the pod @ 04/10/25 17:43:04.216
  I0410 17:43:06.753610 23 pod_client.go:173] Successfully updated pod "labelsupdate67f63d3e-8ead-449d-9757-bc3946c185d3"
  I0410 17:43:10.783836 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7498" for this suite. @ 04/10/25 17:43:10.786
• [6.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 04/10/25 17:43:10.794
  I0410 17:43:10.794236 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubelet-test @ 04/10/25 17:43:10.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:10.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:10.813
  I0410 17:43:12.842312 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7670" for this suite. @ 04/10/25 17:43:12.847
• [2.061 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 04/10/25 17:43:12.855
  I0410 17:43:12.855792 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 17:43:12.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:12.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:12.873
  STEP: fetching services @ 04/10/25 17:43:12.876
  I0410 17:43:12.880741 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1487" for this suite. @ 04/10/25 17:43:12.948
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 04/10/25 17:43:12.956
  I0410 17:43:12.956895 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 17:43:12.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:12.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:12.975
  STEP: Creating secret with name secret-test-9e843a20-31e6-4919-830e-f0ec8b2dc889 @ 04/10/25 17:43:12.978
  STEP: Creating a pod to test consume secrets @ 04/10/25 17:43:12.984
  STEP: Saw pod success @ 04/10/25 17:43:17.002
  I0410 17:43:17.005149 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-secrets-70ba67ec-146f-4d7f-9966-c1a31d4720fd container secret-env-test: <nil>
  STEP: delete the pod @ 04/10/25 17:43:17.013
  I0410 17:43:17.025223 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7426" for this suite. @ 04/10/25 17:43:17.03
• [4.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 04/10/25 17:43:17.042
  I0410 17:43:17.042551 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 17:43:17.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:17.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:17.056
  STEP: creating service in namespace services-2987 @ 04/10/25 17:43:17.057
  STEP: creating service affinity-nodeport-transition in namespace services-2987 @ 04/10/25 17:43:17.057
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2987 @ 04/10/25 17:43:17.067
  I0410 17:43:17.076291      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-2987, replica count: 3
  I0410 17:43:20.127370      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0410 17:43:20.139823 23 resource.go:361] Creating new exec pod
  I0410 17:43:23.159320 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-2987 exec execpod-affinitykvdtl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0410 17:43:23.260238 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0410 17:43:23.260329 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 17:43:23.260454 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-2987 exec execpod-affinitykvdtl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.129.116 80'
  I0410 17:43:23.345030 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.129.116 80\nConnection to 10.98.129.116 80 port [tcp/http] succeeded!\n"
  I0410 17:43:23.345072 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 17:43:23.345154 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-2987 exec execpod-affinitykvdtl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 31999'
  I0410 17:43:23.441792 23 builder.go:146] stderr: "+ + echonc -v hostName -t\n -w 2 192.168.49.2 31999\nConnection to 192.168.49.2 31999 port [tcp/*] succeeded!\n"
  I0410 17:43:23.441822 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 17:43:23.441870 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-2987 exec execpod-affinitykvdtl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.3 31999'
  I0410 17:43:23.531590 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.3 31999\nConnection to 192.168.49.3 31999 port [tcp/*] succeeded!\n"
  I0410 17:43:23.531627 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 17:43:23.538364 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-2987 exec execpod-affinitykvdtl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.49.2:31999/ ; done'
  I0410 17:43:23.711165 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n"
  I0410 17:43:23.711241 23 builder.go:147] stdout: "\naffinity-nodeport-transition-9fgw6\naffinity-nodeport-transition-jr8qv\naffinity-nodeport-transition-9fgw6\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-jr8qv\naffinity-nodeport-transition-jr8qv\naffinity-nodeport-transition-jr8qv\naffinity-nodeport-transition-jr8qv\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-9fgw6\naffinity-nodeport-transition-9fgw6\naffinity-nodeport-transition-jr8qv\naffinity-nodeport-transition-9fgw6\naffinity-nodeport-transition-9fgw6\naffinity-nodeport-transition-jr8qv\naffinity-nodeport-transition-jr8qv"
  I0410 17:43:23.711278 23 service.go:242] Received response from host: affinity-nodeport-transition-9fgw6
  I0410 17:43:23.711292 23 service.go:242] Received response from host: affinity-nodeport-transition-jr8qv
  I0410 17:43:23.711303 23 service.go:242] Received response from host: affinity-nodeport-transition-9fgw6
  I0410 17:43:23.711314 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.711329 23 service.go:242] Received response from host: affinity-nodeport-transition-jr8qv
  I0410 17:43:23.711349 23 service.go:242] Received response from host: affinity-nodeport-transition-jr8qv
  I0410 17:43:23.711359 23 service.go:242] Received response from host: affinity-nodeport-transition-jr8qv
  I0410 17:43:23.711369 23 service.go:242] Received response from host: affinity-nodeport-transition-jr8qv
  I0410 17:43:23.711379 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.711390 23 service.go:242] Received response from host: affinity-nodeport-transition-9fgw6
  I0410 17:43:23.711408 23 service.go:242] Received response from host: affinity-nodeport-transition-9fgw6
  I0410 17:43:23.711418 23 service.go:242] Received response from host: affinity-nodeport-transition-jr8qv
  I0410 17:43:23.711428 23 service.go:242] Received response from host: affinity-nodeport-transition-9fgw6
  I0410 17:43:23.711438 23 service.go:242] Received response from host: affinity-nodeport-transition-9fgw6
  I0410 17:43:23.711448 23 service.go:242] Received response from host: affinity-nodeport-transition-jr8qv
  I0410 17:43:23.711458 23 service.go:242] Received response from host: affinity-nodeport-transition-jr8qv
  I0410 17:43:23.724699 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-2987 exec execpod-affinitykvdtl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.49.2:31999/ ; done'
  I0410 17:43:23.876369 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31999/\n"
  I0410 17:43:23.876417 23 builder.go:147] stdout: "\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk\naffinity-nodeport-transition-5djvk"
  I0410 17:43:23.876434 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876443 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876451 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876458 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876465 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876475 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876482 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876488 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876496 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876502 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876509 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876518 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876525 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876534 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876543 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876549 23 service.go:242] Received response from host: affinity-nodeport-transition-5djvk
  I0410 17:43:23.876603 23 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2987, will wait for the garbage collector to delete the pods @ 04/10/25 17:43:23.884
  I0410 17:43:23.943041 23 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 5.107989ms
  I0410 17:43:24.043743 23 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.700474ms
  I0410 17:43:27.268020 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2987" for this suite. @ 04/10/25 17:43:27.272
• [10.235 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 04/10/25 17:43:27.277
  I0410 17:43:27.277812 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 17:43:27.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:27.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:27.295
  STEP: Setting up server cert @ 04/10/25 17:43:27.394
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 17:43:27.627
  STEP: Deploying the webhook pod @ 04/10/25 17:43:27.632
  STEP: Wait for the deployment to be ready @ 04/10/25 17:43:27.64
  I0410 17:43:27.644083 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:43:29.655
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:43:29.668
  I0410 17:43:30.669391 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/10/25 17:43:30.677
  I0410 17:43:30.710699 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9293" for this suite. @ 04/10/25 17:43:30.713
  STEP: Destroying namespace "webhook-markers-8911" for this suite. @ 04/10/25 17:43:30.718
• [3.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/10/25 17:43:30.725
  I0410 17:43:30.725301 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:43:30.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:30.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:30.737
  STEP: Creating configMap with name configmap-projected-all-test-volume-23b34788-b064-4275-856a-334699a3cb09 @ 04/10/25 17:43:30.739
  STEP: Creating secret with name secret-projected-all-test-volume-ce31962f-ce4e-458e-ba68-86434c60f866 @ 04/10/25 17:43:30.744
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/10/25 17:43:30.747
  STEP: Saw pod success @ 04/10/25 17:43:34.766
  I0410 17:43:34.769931 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod projected-volume-d5df9e85-841d-4639-aa69-ce5c82c8be68 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 17:43:34.776
  I0410 17:43:34.793874 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7295" for this suite. @ 04/10/25 17:43:34.797
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 04/10/25 17:43:34.803
  I0410 17:43:34.803245 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:43:34.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:34.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:34.821
  STEP: Creating configMap with name projected-configmap-test-volume-map-f636cac9-331e-46e3-be2a-1b78347297aa @ 04/10/25 17:43:34.823
  STEP: Creating a pod to test consume configMaps @ 04/10/25 17:43:34.827
  STEP: Saw pod success @ 04/10/25 17:43:38.851
  I0410 17:43:38.855239 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-697bcf57-84fd-4650-b062-76bfafdc27c8 container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 17:43:38.863
  I0410 17:43:38.878482 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7754" for this suite. @ 04/10/25 17:43:38.882
• [4.084 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/10/25 17:43:38.887
  I0410 17:43:38.887774 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename events @ 04/10/25 17:43:38.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:38.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:38.903
  STEP: Create set of events @ 04/10/25 17:43:38.906
  STEP: get a list of Events with a label in the current namespace @ 04/10/25 17:43:38.923
  STEP: delete a list of events @ 04/10/25 17:43:38.925
  I0410 17:43:38.925729 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/10/25 17:43:38.938
  I0410 17:43:38.940852 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5832" for this suite. @ 04/10/25 17:43:38.982
• [0.099 seconds]
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/10/25 17:43:38.986
  I0410 17:43:38.986715 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename controllerrevisions @ 04/10/25 17:43:38.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:38.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:39.001
  STEP: Creating DaemonSet "e2e-gstnd-daemon-set" @ 04/10/25 17:43:39.064
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/10/25 17:43:39.07
  I0410 17:43:39.085754 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-gstnd-daemon-set: 0
  I0410 17:43:39.085818 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:43:40.078942 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-gstnd-daemon-set: 0
  I0410 17:43:40.078987 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:43:41.083586 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-gstnd-daemon-set: 2
  I0410 17:43:41.083638 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-gstnd-daemon-set
  STEP: Confirm DaemonSet "e2e-gstnd-daemon-set" successfully created with "daemonset-name=e2e-gstnd-daemon-set" label @ 04/10/25 17:43:41.086
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-gstnd-daemon-set" @ 04/10/25 17:43:41.093
  I0410 17:43:41.097388 23 controller_revision.go:162] Located ControllerRevision: "e2e-gstnd-daemon-set-557f7bcddd"
  STEP: Patching ControllerRevision "e2e-gstnd-daemon-set-557f7bcddd" @ 04/10/25 17:43:41.1
  I0410 17:43:41.108051 23 controller_revision.go:173] e2e-gstnd-daemon-set-557f7bcddd has been patched
  STEP: Create a new ControllerRevision @ 04/10/25 17:43:41.108
  I0410 17:43:41.115851 23 controller_revision.go:191] Created ControllerRevision: e2e-gstnd-daemon-set-6c76ddf56b
  STEP: Confirm that there are two ControllerRevisions @ 04/10/25 17:43:41.115
  I0410 17:43:41.115940 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0410 17:43:41.118989 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-gstnd-daemon-set-557f7bcddd" @ 04/10/25 17:43:41.119
  STEP: Confirm that there is only one ControllerRevision @ 04/10/25 17:43:41.123
  I0410 17:43:41.124023 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0410 17:43:41.127244 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-gstnd-daemon-set-6c76ddf56b" @ 04/10/25 17:43:41.129
  I0410 17:43:41.138078 23 controller_revision.go:220] e2e-gstnd-daemon-set-6c76ddf56b has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/10/25 17:43:41.138
  W0410 17:43:41.143637      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/10/25 17:43:41.143
  I0410 17:43:41.143796 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0410 17:43:41.158947 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-gstnd-daemon-set-6c76ddf56b=updated" @ 04/10/25 17:43:41.159
  STEP: Confirm that there is only one ControllerRevision @ 04/10/25 17:43:41.17
  I0410 17:43:41.170390 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0410 17:43:41.199930 23 controller_revision.go:265] Found 1 ControllerRevisions
  I0410 17:43:41.203003 23 controller_revision.go:246] ControllerRevision "e2e-gstnd-daemon-set-9849cd755" has revision 3
  STEP: Deleting DaemonSet "e2e-gstnd-daemon-set" @ 04/10/25 17:43:41.205
  STEP: deleting DaemonSet.extensions e2e-gstnd-daemon-set in namespace controllerrevisions-2849, will wait for the garbage collector to delete the pods @ 04/10/25 17:43:41.205
  I0410 17:43:41.265210 23 resources.go:139] Deleting DaemonSet.extensions e2e-gstnd-daemon-set took: 7.090112ms
  I0410 17:43:41.366345 23 resources.go:163] Terminating DaemonSet.extensions e2e-gstnd-daemon-set pods took: 101.140076ms
  I0410 17:43:43.671564 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-gstnd-daemon-set: 0
  I0410 17:43:43.671629 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-gstnd-daemon-set
  I0410 17:43:43.674820 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10410"},"items":null}

  I0410 17:43:43.677211 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10410"},"items":null}

  I0410 17:43:43.684846 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2849" for this suite. @ 04/10/25 17:43:43.686
• [4.707 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/10/25 17:43:43.693
  I0410 17:43:43.693685 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename events @ 04/10/25 17:43:43.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:43.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:43.708
  STEP: Create set of events @ 04/10/25 17:43:43.712
  I0410 17:43:43.716200 23 core_events.go:198] created test-event-1
  I0410 17:43:43.721576 23 core_events.go:198] created test-event-2
  I0410 17:43:43.726180 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/10/25 17:43:43.726
  STEP: delete collection of events @ 04/10/25 17:43:43.728
  I0410 17:43:43.728908 23 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/10/25 17:43:43.743
  I0410 17:43:43.744010 23 core_events.go:230] requesting list of events to confirm quantity
  I0410 17:43:43.746825 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2495" for this suite. @ 04/10/25 17:43:43.782
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 04/10/25 17:43:43.788
  I0410 17:43:43.788813 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 17:43:43.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:43.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:43.812
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/10/25 17:43:43.815
  STEP: Saw pod success @ 04/10/25 17:43:45.835
  I0410 17:43:45.838686 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-2c840b09-12a1-4f61-9d92-4f70e310aed1 container test-container: <nil>
  STEP: delete the pod @ 04/10/25 17:43:45.847
  I0410 17:43:45.858748 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3876" for this suite. @ 04/10/25 17:43:45.862
• [2.082 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/10/25 17:43:45.871
  I0410 17:43:45.871556 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename deployment @ 04/10/25 17:43:45.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:45.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:45.887
  I0410 17:43:45.890958 23 deployment.go:1196] Creating deployment "webserver-deployment"
  I0410 17:43:45.896208 23 deployment.go:1200] Waiting for observed generation 1
  I0410 17:43:47.904928 23 deployment.go:1205] Waiting for all required pods to come up
  I0410 17:43:47.909861 23 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/10/25 17:43:47.909
  I0410 17:43:47.909991 23 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0410 17:43:47.914935 23 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0410 17:43:47.924193 23 deployment.go:314] Updating deployment webserver-deployment
  I0410 17:43:47.924241 23 deployment.go:1224] Waiting for observed generation 2
  I0410 17:43:49.930870 23 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0410 17:43:49.933948 23 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0410 17:43:49.936549 23 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0410 17:43:49.943868 23 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0410 17:43:49.943928 23 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0410 17:43:49.946471 23 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0410 17:43:49.955103 23 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0410 17:43:49.955162 23 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0410 17:43:49.963490 23 deployment.go:314] Updating deployment webserver-deployment
  I0410 17:43:49.963559 23 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0410 17:43:49.970768 23 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0410 17:43:49.974470 23 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0410 17:43:49.985406 23 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93ab8b17-854e-44c9-a86e-91320485cc16",
      ResourceVersion: (string) (len=5) "10678",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0410 17:43:50.028872 23 deployment.go:40] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
      ResourceVersion: (string) (len=5) "10682",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "93ab8b17-854e-44c9-a86e-91320485cc16",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 33 61 62 38 62  31 37 2d 38 35 34 65 2d  |\"93ab8b17-854e-|
              00000120  34 34 63 39 2d 61 38 36  65 2d 39 31 33 32 30 34  |44c9-a86e-913204|
              00000130  38 35 63 63 31 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |85cc16\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 17:43:50.029475 23 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0410 17:43:50.029703 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
      ResourceVersion: (string) (len=5) "10727",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "93ab8b17-854e-44c9-a86e-91320485cc16",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 33 61 62 38 62  31 37 2d 38 35 34 65 2d  |\"93ab8b17-854e-|
              00000120  34 34 63 39 2d 61 38 36  65 2d 39 31 33 32 30 34  |44c9-a86e-913204|
              00000130  38 35 63 63 31 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |85cc16\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 17:43:50.036958 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-2msrg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-2msrg",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce576287-8eac-4065-aae0-5612e5783dd6",
      ResourceVersion: (string) (len=5) "10714",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lss6b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lss6b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.037943 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-4zd2z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-4zd2z",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b78c6ee7-2b92-48b8-b113-9275ce7584ee",
      ResourceVersion: (string) (len=5) "10730",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q7lt7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q7lt7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.038892 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-542kw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-542kw",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "566ac596-f546-435a-9846-2817010aa2c8",
      ResourceVersion: (string) (len=5) "10729",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6mnwx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6mnwx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.039887 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-c88gs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-c88gs",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "792f8673-4a4d-46db-8e37-0d615704ebd8",
      ResourceVersion: (string) (len=5) "10728",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7rpt4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7rpt4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7rpt4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.041464 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-ckx45" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ckx45",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6eceb8f1-a834-43db-940a-79083c38a172",
      ResourceVersion: (string) (len=5) "10552",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  37 38 5c 22 7d 22 3a 7b  |.244.1.178\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mnqjr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mnqjr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.178",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.178"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879903826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://899cb429f3e009efd1505ddcacaf83b873e69829b13d18e40cfe5414b49adde5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mnqjr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.043210 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-dxzps" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-dxzps",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c61ad36-608d-4038-8751-f257e4d81a55",
      ResourceVersion: (string) (len=5) "10725",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zmtbq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zmtbq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.043965 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-j4pnv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-j4pnv",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73d462f9-c63f-434c-b3ba-c49bb5aa35dd",
      ResourceVersion: (string) (len=5) "10733",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x82pm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x82pm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.044576 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-jdbsq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jdbsq",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de1f937a-7014-4834-886b-b0501d19ed32",
      ResourceVersion: (string) (len=5) "10705",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jbzsk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jbzsk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.045444 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-kh4rz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-kh4rz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e060b15-14b3-4064-8ff6-0a417f7fe254",
      ResourceVersion: (string) (len=5) "10555",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  37 39 5c 22 7d 22 3a 7b  |.244.1.179\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4s8dp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4s8dp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.179",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.179"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879903826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://1d3f9aab914385db6f09aaef0b4d3bbcb901af781c8f2f5ed38a730cd2327b86",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4s8dp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.046441 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-lrfhd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-lrfhd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3549101d-f5df-45fa-b011-7201a094b43d",
      ResourceVersion: (string) (len=5) "10562",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 39  30 5c 22 7d 22 3a 7b 22  |.244.0.90\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ksllr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ksllr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=11) "10.244.0.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879903826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://77760849530a56b1e34c572df783ebc2f2432a67e1cbb2aa1284bd80a67cfddd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ksllr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.047406 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-nd44q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-nd44q",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a054e094-6bef-4536-8d44-608d8e440db4",
      ResourceVersion: (string) (len=5) "10732",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2gckd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2gckd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.048406 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-pgdw7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-pgdw7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3633762d-b72d-40d8-a0b5-fa33647e6b4f",
      ResourceVersion: (string) (len=5) "10709",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pm8h8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pm8h8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.049183 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-rppcb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rppcb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ca7a48e-9ac1-4ef0-b297-c7e878cdadf7",
      ResourceVersion: (string) (len=5) "10568",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 38  37 5c 22 7d 22 3a 7b 22  |.244.0.87\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b6tzc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b6tzc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=11) "10.244.0.87",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.87"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879903826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://e8d861527ca9b205b4ab73aef2608408ed7c3485a1b4c46842dfe66263ad757c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b6tzc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.050062 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-sfx6b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-sfx6b",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f47e423-b255-4042-81bc-f473eaed5156",
      ResourceVersion: (string) (len=5) "10703",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-27cks",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-27cks",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-27cks",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.050891 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-snjb5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-snjb5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0f34f92-74cc-4447-a43b-0768a1d08eb5",
      ResourceVersion: (string) (len=5) "10690",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zmg2x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zmg2x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.051466 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-srq64" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-srq64",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49e9a70e-bdb4-4a9b-91a2-1f56b91fa10b",
      ResourceVersion: (string) (len=5) "10717",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-smwbp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-smwbp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.052173 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-vtxwg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-vtxwg",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "291216e8-6d5e-419b-971a-ea7b8007bc19",
      ResourceVersion: (string) (len=5) "10570",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 38  39 5c 22 7d 22 3a 7b 22  |.244.0.89\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pqxrk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pqxrk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=11) "10.244.0.89",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.89"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879903826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://02951427084c782a08b76e75cca6f7e72c81e0f4fd97007f48f04120d55cfc1b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pqxrk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.052972 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-w6htw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-w6htw",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "108cf5c3-6140-489a-814d-2694c988ceac",
      ResourceVersion: (string) (len=5) "10564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 38  36 5c 22 7d 22 3a 7b 22  |.244.0.86\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w7kc8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w7kc8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=11) "10.244.0.86",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.86"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879903826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://a02ff6ddda395c3ff7e50da0065cfe0029aca08d099f96601581301d381aa507",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w7kc8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.053765 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-wtljr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-wtljr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b43d776-f2f2-4ba0-9bf1-ac75eec3b0c5",
      ResourceVersion: (string) (len=5) "10573",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 38  38 5c 22 7d 22 3a 7b 22  |.244.0.88\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rsp7h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rsp7h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=11) "10.244.0.88",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.88"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879903826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://7fd0484d349626201b1550998ed3ffd374862bd51c92b4d23ff9649630cc0324",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rsp7h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.054517 23 deployment.go:68] Pod "webserver-deployment-64bcfc6446-x72kb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-x72kb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08c2651b-04d3-4dbd-b24f-d89fe9e988a3",
      ResourceVersion: (string) (len=5) "10549",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "2cf1e21f-f8aa-4ec9-97a3-bb7a6b1d7aba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  66 31 65 32 31 66 2d 66  |d\":\"2cf1e21f-f|
              00000090  38 61 61 2d 34 65 63 39  2d 39 37 61 33 2d 62 62  |8aa-4ec9-97a3-bb|
              000000a0  37 61 36 62 31 64 37 61  62 61 5c 22 7d 22 3a 7b  |7a6b1d7aba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  37 37 5c 22 7d 22 3a 7b  |.244.1.177\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9fcrw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9fcrw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.177",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.177"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879903826,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://66956c2b93b3bb05d03b5ac7f42f0d3e08b0fac5fd04ba481b1c881870bfe9ec",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9fcrw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.055427 23 deployment.go:68] Pod "webserver-deployment-786f49d774-24qxt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-24qxt",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04ca3a9f-872b-4d91-a2f6-4e34f5e79fba",
      ResourceVersion: (string) (len=5) "10664",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 39 31 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.0.91\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qgmvk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qgmvk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) (len=11) "10.244.0.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qgmvk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.056435 23 deployment.go:68] Pod "webserver-deployment-786f49d774-49pwd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-49pwd",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6639fba2-c253-42cf-a66b-84ea0783c6bf",
      ResourceVersion: (string) (len=5) "10721",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kpl4s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kpl4s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kpl4s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.057335 23 deployment.go:68] Pod "webserver-deployment-786f49d774-7ljh4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-7ljh4",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c8b790f-f11b-469a-84a8-0babbd876228",
      ResourceVersion: (string) (len=5) "10704",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nnll9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nnll9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.057886 23 deployment.go:68] Pod "webserver-deployment-786f49d774-984sw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-984sw",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b011d756-c3a9-4bc3-9274-be9ddbc53cec",
      ResourceVersion: (string) (len=5) "10735",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cq577",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cq577",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.058592 23 deployment.go:68] Pod "webserver-deployment-786f49d774-clglm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-clglm",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "54b022ce-9278-408c-b9e6-1462e565ad4c",
      ResourceVersion: (string) (len=5) "10671",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 31 38 30 5c  22 7d 22 3a 7b 22 2e 22  |4.1.180\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zsvgs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zsvgs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.180",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.180"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zsvgs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.059701 23 deployment.go:68] Pod "webserver-deployment-786f49d774-jml6t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-jml6t",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6717df3e-0731-4143-adc3-e3d2a9bad5b5",
      ResourceVersion: (string) (len=5) "10722",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wjtjk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wjtjk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.060326 23 deployment.go:68] Pod "webserver-deployment-786f49d774-pwlcp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-pwlcp",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7bc40cfc-e496-4821-8e4d-50ca14428b86",
      ResourceVersion: (string) (len=5) "10674",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 31 38 31 5c  22 7d 22 3a 7b 22 2e 22  |4.1.181\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p24pt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p24pt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.181",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.181"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p24pt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.061120 23 deployment.go:68] Pod "webserver-deployment-786f49d774-r7mgt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-r7mgt",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3cdae23-a4d7-4170-96d5-0d8a8d73577e",
      ResourceVersion: (string) (len=5) "10624",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gbvxh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gbvxh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gbvxh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.061860 23 deployment.go:68] Pod "webserver-deployment-786f49d774-snqzk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-snqzk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07145d8d-75b6-4541-b9fe-a0a6e68a683c",
      ResourceVersion: (string) (len=5) "10715",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-76h6x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-76h6x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.062432 23 deployment.go:68] Pod "webserver-deployment-786f49d774-wzvdk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-wzvdk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9c9ed99-31e1-48fe-a871-8d6932a39038",
      ResourceVersion: (string) (len=5) "10626",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8w8v5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8w8v5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8w8v5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.063393 23 deployment.go:68] Pod "webserver-deployment-786f49d774-z56s2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-z56s2",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df605cd3-6dc6-4b39-bff9-f879b9adff98",
      ResourceVersion: (string) (len=5) "10734",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v4qsb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v4qsb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.063995 23 deployment.go:68] Pod "webserver-deployment-786f49d774-zsl86" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-zsl86",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0173fbfc-d688-4399-b7af-e1efc74ecab2",
      ResourceVersion: (string) (len=5) "10726",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gxrwh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gxrwh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.064662 23 deployment.go:68] Pod "webserver-deployment-786f49d774-ztbss" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-ztbss",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9d737e9-2732-4891-9d84-83bcbd72d767",
      ResourceVersion: (string) (len=5) "10724",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879903830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "372ca11c-d2c5-4ed3-83b6-2970b90a300d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 63 61 31 31 63 2d 64  |d\":\"372ca11c-d|
              00000090  32 63 35 2d 34 65 64 33  2d 38 33 62 36 2d 32 39  |2c5-4ed3-83b6-29|
              000000a0  37 30 62 39 30 61 33 30  30 64 5c 22 7d 22 3a 7b  |70b90a300d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qcvvs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qcvvs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879903830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:43:50.065293 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6072" for this suite. @ 04/10/25 17:43:50.067
• [4.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 04/10/25 17:43:50.072
  I0410 17:43:50.072513 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 17:43:50.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:50.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:50.083
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/10/25 17:43:50.085
  STEP: Saw pod success @ 04/10/25 17:43:52.099
  I0410 17:43:52.102752 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-52948688-90dc-46dc-8c72-176ab53fe521 container test-container: <nil>
  STEP: delete the pod @ 04/10/25 17:43:52.11
  I0410 17:43:52.126775 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8460" for this suite. @ 04/10/25 17:43:52.129
• [2.063 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 04/10/25 17:43:52.135
  I0410 17:43:52.135536 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/10/25 17:43:52.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:52.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:52.153
  STEP: create the container to handle the HTTPGet hook request. @ 04/10/25 17:43:52.231
  STEP: create the pod with lifecycle hook @ 04/10/25 17:43:54.255
  STEP: delete the pod with lifecycle hook @ 04/10/25 17:43:56.269
  STEP: check prestop hook @ 04/10/25 17:43:58.281
  I0410 17:43:58.290200 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9932" for this suite. @ 04/10/25 17:43:58.293
• [6.164 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 04/10/25 17:43:58.3
  I0410 17:43:58.300103 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 17:43:58.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:43:58.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:43:58.318
  STEP: Creating a pod to test downward api env vars @ 04/10/25 17:43:58.322
  STEP: Saw pod success @ 04/10/25 17:44:00.338
  I0410 17:44:00.341171 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downward-api-88d38660-66cd-4469-8c9d-e9aa9dc7b75d container dapi-container: <nil>
  STEP: delete the pod @ 04/10/25 17:44:00.349
  I0410 17:44:00.364827 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5926" for this suite. @ 04/10/25 17:44:00.368
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/10/25 17:44:00.376
  I0410 17:44:00.376431 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename init-container @ 04/10/25 17:44:00.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:44:00.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:44:00.393
  STEP: creating the pod @ 04/10/25 17:44:00.396
  I0410 17:44:00.396821 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0410 17:44:03.157989 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7990" for this suite. @ 04/10/25 17:44:03.162
• [2.792 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 04/10/25 17:44:03.168
  I0410 17:44:03.169006 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename namespaces @ 04/10/25 17:44:03.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:44:03.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:44:03.184
  STEP: Creating namespace "e2e-ns-lbv2s" @ 04/10/25 17:44:03.186
  I0410 17:44:03.285652 23 namespace.go:411] Namespace "e2e-ns-lbv2s-4537" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-lbv2s-4537" @ 04/10/25 17:44:03.285
  I0410 17:44:03.293192 23 namespace.go:434] Namespace "e2e-ns-lbv2s-4537" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-lbv2s-4537" @ 04/10/25 17:44:03.293
  I0410 17:44:03.301566 23 namespace.go:463] Namespace "e2e-ns-lbv2s-4537" has []v1.FinalizerName{"kubernetes"}
  I0410 17:44:03.301775 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5793" for this suite. @ 04/10/25 17:44:03.305
  STEP: Destroying namespace "e2e-ns-lbv2s-4537" for this suite. @ 04/10/25 17:44:03.31
• [0.150 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/10/25 17:44:03.318
  I0410 17:44:03.318964 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:44:03.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:44:03.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:44:03.384
  STEP: Creating projection with secret that has name projected-secret-test-f4d612ac-c083-474d-b91a-c1944f1993e6 @ 04/10/25 17:44:03.387
  STEP: Creating a pod to test consume secrets @ 04/10/25 17:44:03.39
  STEP: Saw pod success @ 04/10/25 17:44:05.399
  I0410 17:44:05.401125 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-05db9f1a-d46b-4feb-bf57-9165967a9bfc container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 17:44:05.405
  I0410 17:44:05.415229 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4705" for this suite. @ 04/10/25 17:44:05.417
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 04/10/25 17:44:05.419
  I0410 17:44:05.419995 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename statefulset @ 04/10/25 17:44:05.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:44:05.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:44:05.43
  STEP: Creating service test in namespace statefulset-8963 @ 04/10/25 17:44:05.431
  STEP: Creating a new StatefulSet @ 04/10/25 17:44:05.434
  I0410 17:44:05.448059 23 wait.go:40] Found 1 stateful pods, waiting for 3
  I0410 17:44:15.448151 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0410 17:44:15.448199 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0410 17:44:15.448212 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0410 17:44:15.456584 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8963 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0410 17:44:15.560819 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0410 17:44:15.560862 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0410 17:44:15.560874 23 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/10/25 17:44:15.569
  I0410 17:44:15.577652 23 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 04/10/25 17:44:15.577
  STEP: Updating Pods in reverse ordinal order @ 04/10/25 17:44:25.582
  I0410 17:44:25.583891 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8963 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0410 17:44:25.679937 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0410 17:44:25.679996 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0410 17:44:25.680018 23 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0410 17:44:35.696042 23 wait.go:158] Waiting for StatefulSet statefulset-8963/ss2 to complete update
  I0410 17:44:35.696101 23 wait.go:165] Waiting for Pod statefulset-8963/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0410 17:44:35.696119 23 wait.go:165] Waiting for Pod statefulset-8963/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0410 17:44:45.698936 23 wait.go:158] Waiting for StatefulSet statefulset-8963/ss2 to complete update
  STEP: Rolling back to a previous revision @ 04/10/25 17:44:55.699
  I0410 17:44:55.699077 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8963 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0410 17:44:55.839198 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0410 17:44:55.839294 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0410 17:44:55.839321 23 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0410 17:45:05.857332 23 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 04/10/25 17:45:15.869
  I0410 17:45:15.872652 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=statefulset-8963 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0410 17:45:15.999187 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0410 17:45:15.999280 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0410 17:45:15.999304 23 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0410 17:45:26.015752 23 statefulset.go:138] Deleting all statefulset in ns statefulset-8963
  I0410 17:45:26.018851 23 rest.go:150] Scaling statefulset ss2 to 0
  I0410 17:45:36.032989 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0410 17:45:36.035926 23 rest.go:88] Deleting statefulset ss2
  I0410 17:45:36.047832 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8963" for this suite. @ 04/10/25 17:45:36.051
• [90.637 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/10/25 17:45:36.057
  I0410 17:45:36.057796 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:45:36.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:45:36.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:45:36.072
  STEP: Creating projection with secret that has name projected-secret-test-map-781972d5-2829-4a72-b671-3139232f3a7a @ 04/10/25 17:45:36.073
  STEP: Creating a pod to test consume secrets @ 04/10/25 17:45:36.077
  STEP: Saw pod success @ 04/10/25 17:45:40.098
  I0410 17:45:40.101522 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-2c520b46-185c-4765-9a8c-3b497ab46b8d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 17:45:40.117
  I0410 17:45:40.135237 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6114" for this suite. @ 04/10/25 17:45:40.138
• [4.086 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/10/25 17:45:40.143
  I0410 17:45:40.143893 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename daemonsets @ 04/10/25 17:45:40.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:45:40.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:45:40.159
  I0410 17:45:40.253683 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0410 17:45:40.258482 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0410 17:45:40.341822 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:45:40.341849 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:45:41.274980 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0410 17:45:41.275035 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:45:42.267911 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0410 17:45:42.267963 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0410 17:45:42.267981 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0410 17:45:42.278295 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0410 17:45:43.291468 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0410 17:45:43.302834 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0410 17:45:43.302917 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0410 17:45:46.305658 23 daemon_set.go:1198] Pod daemon-set-9rwnj is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/10/25 17:45:46.309
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8774, will wait for the garbage collector to delete the pods @ 04/10/25 17:45:46.309
  I0410 17:45:46.370900 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.581747ms
  I0410 17:45:46.471509 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.597022ms
  I0410 17:45:47.574444 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:45:47.574480 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0410 17:45:47.576305 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11802"},"items":null}

  I0410 17:45:47.577636 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11802"},"items":null}

  I0410 17:45:47.581780 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8774" for this suite. @ 04/10/25 17:45:47.582
• [7.443 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/10/25 17:45:47.586
  I0410 17:45:47.586791 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/10/25 17:45:47.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:45:47.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:45:47.596
  STEP: fetching the /apis discovery document @ 04/10/25 17:45:47.597
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/10/25 17:45:47.597
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/10/25 17:45:47.597
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/10/25 17:45:47.597
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/10/25 17:45:47.598
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/10/25 17:45:47.598
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/10/25 17:45:47.598
  I0410 17:45:47.598798 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4793" for this suite. @ 04/10/25 17:45:47.682
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/10/25 17:45:47.689
  I0410 17:45:47.689952 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename subpath @ 04/10/25 17:45:47.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:45:47.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:45:47.704
  STEP: Setting up data @ 04/10/25 17:45:47.707
  STEP: Creating pod pod-subpath-test-configmap-8rcz @ 04/10/25 17:45:47.717
  STEP: Creating a pod to test atomic-volume-subpath @ 04/10/25 17:45:47.717
  STEP: Saw pod success @ 04/10/25 17:46:09.79
  I0410 17:46:09.792985 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-configmap-8rcz container test-container-subpath-configmap-8rcz: <nil>
  STEP: delete the pod @ 04/10/25 17:46:09.802
  STEP: Deleting pod pod-subpath-test-configmap-8rcz @ 04/10/25 17:46:09.819
  I0410 17:46:09.819222 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-8rcz" in namespace "subpath-9807"
  I0410 17:46:09.821925 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9807" for this suite. @ 04/10/25 17:46:09.825
• [22.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/10/25 17:46:09.83
  I0410 17:46:09.830680 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 17:46:09.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:46:09.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:46:09.848
  STEP: Creating secret with name secret-test-map-598ae714-6350-4dde-a754-0e93dbf6cf34 @ 04/10/25 17:46:09.85
  STEP: Creating a pod to test consume secrets @ 04/10/25 17:46:09.854
  STEP: Saw pod success @ 04/10/25 17:46:13.873
  I0410 17:46:13.876564 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-secrets-32dd78f9-0951-4787-a51b-85e4789f4e62 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 17:46:13.884
  I0410 17:46:13.901802 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3346" for this suite. @ 04/10/25 17:46:13.905
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/10/25 17:46:13.912
  I0410 17:46:13.912649 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 17:46:13.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:46:13.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:46:13.928
  STEP: Creating a pod to test downward api env vars @ 04/10/25 17:46:13.93
  STEP: Saw pod success @ 04/10/25 17:46:17.958
  I0410 17:46:17.960922 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downward-api-b46d8908-2cdd-4a74-aed3-4ccaca7965bf container dapi-container: <nil>
  STEP: delete the pod @ 04/10/25 17:46:17.969
  I0410 17:46:17.986670 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3377" for this suite. @ 04/10/25 17:46:17.99
• [4.082 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/10/25 17:46:17.995
  I0410 17:46:17.995174 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename replicaset @ 04/10/25 17:46:17.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:46:18.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:46:18.008
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/10/25 17:46:18.01
  STEP: When a replicaset with a matching selector is created @ 04/10/25 17:46:20.027
  STEP: Then the orphan pod is adopted @ 04/10/25 17:46:20.034
  STEP: When the matched label of one of its pods change @ 04/10/25 17:46:21.042
  I0410 17:46:21.046424 23 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/10/25 17:46:21.059
  I0410 17:46:22.068043 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5017" for this suite. @ 04/10/25 17:46:22.076
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 04/10/25 17:46:22.082
  I0410 17:46:22.082581 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 17:46:22.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:46:22.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:46:22.101
  STEP: creating service multiprotocol-test in namespace services-377 @ 04/10/25 17:46:22.105
  STEP: creating pod pod1 in namespace services-377 @ 04/10/25 17:46:22.116
  STEP: Creating pod pod1 in namespace services-377 @ 04/10/25 17:46:22.116
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-377 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/10/25 17:46:24.135
  I0410 17:46:24.140120 23 service.go:4392] successfully validated that service multiprotocol-test in namespace services-377 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/10/25 17:46:24.14
  I0410 17:46:24.140169 23 resource.go:361] Creating new exec pod
  I0410 17:46:26.150432 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-377 exec execpodptkg4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.231.18 80'
  I0410 17:46:26.255420 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.231.18 80\nConnection to 10.107.231.18 80 port [tcp/http] succeeded!\n"
  I0410 17:46:26.255448 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 17:46:26.255496 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-377 exec execpodptkg4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.107.231.18 80'
  I0410 17:46:30.368221 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.107.231.18 80\nConnection to 10.107.231.18 80 port [udp/*] succeeded!\n"
  I0410 17:46:30.368309 23 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/10/25 17:46:30.368
  I0410 17:46:30.378702 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-377 exec execpodptkg4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.231.18 80'
  I0410 17:46:30.477548 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.231.18 80\nConnection to 10.107.231.18 80 port [tcp/http] succeeded!\n"
  I0410 17:46:30.477603 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 17:46:30.477715 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-377 exec execpodptkg4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.107.231.18 80'
  I0410 17:46:34.583446 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.107.231.18 80\nConnection to 10.107.231.18 80 port [udp/*] succeeded!\n"
  I0410 17:46:34.583533 23 builder.go:147] stdout: ""
  I0410 17:46:34.583644 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-377 exec execpodptkg4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.107.231.18 80'
  I0410 17:46:38.691097 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.107.231.18 80\nConnection to 10.107.231.18 80 port [udp/*] succeeded!\n"
  I0410 17:46:38.691192 23 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 04/10/25 17:46:38.691
  I0410 17:46:38.701035 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-377 exec execpodptkg4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.107.231.18 80'
  I0410 17:46:42.811509 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.107.231.18 80\nConnection to 10.107.231.18 80 port [udp/*] succeeded!\n"
  I0410 17:46:42.811564 23 builder.go:147] stdout: "pod1"
  I0410 17:46:42.811671 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-377 exec execpodptkg4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.231.18 80'
  I0410 17:46:44.913124 23 builder.go:135] rc: 1
  I0410 17:46:44.913208 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-377 exec execpodptkg4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.231.18 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.107.231.18 80
  nc: connect to 10.107.231.18 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0410 17:46:44.913306 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-377 exec execpodptkg4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.231.18 80'
  I0410 17:46:47.012578 23 builder.go:135] rc: 1
  I0410 17:46:47.012670 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-377 exec execpodptkg4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.231.18 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.107.231.18 80
  nc: connect to 10.107.231.18 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0410 17:46:47.012778 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-377 exec execpodptkg4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.231.18 80'
  I0410 17:46:49.117301 23 builder.go:135] rc: 1
  I0410 17:46:49.117383 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-377 exec execpodptkg4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.231.18 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.107.231.18 80
  nc: connect to 10.107.231.18 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0410 17:46:49.117595 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-377" for this suite. @ 04/10/25 17:46:49.121
• [27.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 04/10/25 17:46:49.127
  I0410 17:46:49.127223 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 17:46:49.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:46:49.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:46:49.143
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6101 @ 04/10/25 17:46:49.146
  STEP: changing the ExternalName service to type=NodePort @ 04/10/25 17:46:49.15
  STEP: creating replication controller externalname-service in namespace services-6101 @ 04/10/25 17:46:49.171
  I0410 17:46:49.180265      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-6101, replica count: 2
  I0410 17:46:52.231721      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0410 17:46:52.231794 23 resource.go:361] Creating new exec pod
  I0410 17:46:55.257507 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6101 exec execpodp7z7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0410 17:46:55.353346 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0410 17:46:55.353397 23 builder.go:147] stdout: ""
  I0410 17:46:56.257560 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6101 exec execpodp7z7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0410 17:46:56.376069 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0410 17:46:56.376134 23 builder.go:147] stdout: "externalname-service-9g6rk"
  I0410 17:46:56.376245 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6101 exec execpodp7z7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.128.118 80'
  I0410 17:46:56.479116 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.128.118 80\nConnection to 10.105.128.118 80 port [tcp/http] succeeded!\n"
  I0410 17:46:56.479160 23 builder.go:147] stdout: ""
  I0410 17:46:57.377068 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6101 exec execpodp7z7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.128.118 80'
  I0410 17:46:57.486988 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.128.118 80\nConnection to 10.105.128.118 80 port [tcp/http] succeeded!\n"
  I0410 17:46:57.487046 23 builder.go:147] stdout: "externalname-service-9g6rk"
  I0410 17:46:57.487152 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6101 exec execpodp7z7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 31617'
  I0410 17:46:57.586943 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 31617\nConnection to 192.168.49.2 31617 port [tcp/*] succeeded!\n"
  I0410 17:46:57.587008 23 builder.go:147] stdout: ""
  I0410 17:46:58.488086 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6101 exec execpodp7z7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 31617'
  I0410 17:46:58.595023 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 31617\nConnection to 192.168.49.2 31617 port [tcp/*] succeeded!\n"
  I0410 17:46:58.595078 23 builder.go:147] stdout: ""
  I0410 17:46:59.487575 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6101 exec execpodp7z7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 31617'
  I0410 17:46:59.590655 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 31617\nConnection to 192.168.49.2 31617 port [tcp/*] succeeded!\n"
  I0410 17:46:59.590707 23 builder.go:147] stdout: "externalname-service-9g6rk"
  I0410 17:46:59.590787 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6101 exec execpodp7z7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.3 31617'
  I0410 17:46:59.674872 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.3 31617\nConnection to 192.168.49.3 31617 port [tcp/*] succeeded!\n"
  I0410 17:46:59.674925 23 builder.go:147] stdout: "externalname-service-9g6rk"
  I0410 17:46:59.675026 23 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0410 17:46:59.695352 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6101" for this suite. @ 04/10/25 17:46:59.697
• [10.576 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/10/25 17:46:59.703
  I0410 17:46:59.703672 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename daemonsets @ 04/10/25 17:46:59.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:46:59.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:46:59.716
  STEP: Creating simple DaemonSet "daemon-set" @ 04/10/25 17:46:59.806
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/10/25 17:46:59.811
  I0410 17:46:59.905460 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:46:59.905519 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:47:00.823332 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:47:00.823394 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:47:01.821700 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0410 17:47:01.821751 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/10/25 17:47:01.824
  I0410 17:47:01.923462 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0410 17:47:01.923524 23 fixtures.go:130] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0410 17:47:02.842578 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0410 17:47:02.842600 23 fixtures.go:130] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0410 17:47:03.842862 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0410 17:47:03.842917 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/10/25 17:47:03.845
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1792, will wait for the garbage collector to delete the pods @ 04/10/25 17:47:03.845
  I0410 17:47:03.909629 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.596262ms
  I0410 17:47:04.010374 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.761115ms
  I0410 17:47:05.314003 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:47:05.314054 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0410 17:47:05.316096 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12216"},"items":null}

  I0410 17:47:05.317884 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12216"},"items":null}

  I0410 17:47:05.324552 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1792" for this suite. @ 04/10/25 17:47:05.326
• [5.626 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/10/25 17:47:05.329
  I0410 17:47:05.329537 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename apf @ 04/10/25 17:47:05.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:47:05.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:47:05.343
  STEP: getting /apis @ 04/10/25 17:47:05.345
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/10/25 17:47:05.348
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/10/25 17:47:05.349
  STEP: creating @ 04/10/25 17:47:05.349
  STEP: getting @ 04/10/25 17:47:05.358
  STEP: listing @ 04/10/25 17:47:05.36
  STEP: watching @ 04/10/25 17:47:05.362
  I0410 17:47:05.362368 23 flowcontrol.go:394] starting watch
  STEP: patching @ 04/10/25 17:47:05.363
  STEP: updating @ 04/10/25 17:47:05.368
  I0410 17:47:05.374980 23 flowcontrol.go:422] waiting for watch events with expected annotations
  I0410 17:47:05.375025 23 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/10/25 17:47:05.375
  STEP: patching /status @ 04/10/25 17:47:05.376
  STEP: updating /status @ 04/10/25 17:47:05.381
  STEP: deleting @ 04/10/25 17:47:05.409
  STEP: deleting a collection @ 04/10/25 17:47:05.418
  I0410 17:47:05.431016 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1302" for this suite. @ 04/10/25 17:47:05.434
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 04/10/25 17:47:05.439
  I0410 17:47:05.439326 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename security-context @ 04/10/25 17:47:05.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:47:05.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:47:05.45
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/10/25 17:47:05.452
  STEP: Saw pod success @ 04/10/25 17:47:07.466
  I0410 17:47:07.469730 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod security-context-65b9875f-0a56-4873-ad60-23bfd1165e2f container test-container: <nil>
  STEP: delete the pod @ 04/10/25 17:47:07.476
  I0410 17:47:07.490798 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9944" for this suite. @ 04/10/25 17:47:07.494
• [2.060 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 04/10/25 17:47:07.499
  I0410 17:47:07.499116 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename gc @ 04/10/25 17:47:07.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:47:07.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:47:07.51
  STEP: create the rc @ 04/10/25 17:47:07.512
  W0410 17:47:07.517857      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/10/25 17:47:12.522
  STEP: wait for all pods to be garbage collected @ 04/10/25 17:47:12.527
  STEP: Gathering metrics @ 04/10/25 17:47:17.538
  I0410 17:47:17.614723 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0410 17:47:17.614817 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5441" for this suite. @ 04/10/25 17:47:17.616
• [10.121 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/10/25 17:47:17.62
  I0410 17:47:17.620037 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pods @ 04/10/25 17:47:17.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:47:17.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:47:17.629
  STEP: creating the pod @ 04/10/25 17:47:17.631
  STEP: submitting the pod to kubernetes @ 04/10/25 17:47:17.631
  STEP: verifying QOS class is set on the pod @ 04/10/25 17:47:17.636
  I0410 17:47:17.638252 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6363" for this suite. @ 04/10/25 17:47:17.72
• [0.107 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 04/10/25 17:47:17.726
  I0410 17:47:17.726928 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 17:47:17.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:47:17.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:47:17.742
  STEP: Setting up server cert @ 04/10/25 17:47:17.843
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 17:47:17.96
  STEP: Deploying the webhook pod @ 04/10/25 17:47:17.965
  STEP: Wait for the deployment to be ready @ 04/10/25 17:47:17.971
  I0410 17:47:17.975267 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:47:19.986
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:47:20
  I0410 17:47:21.000752 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0410 17:47:21.004325 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/10/25 17:47:21.513
  STEP: Creating a custom resource that should be denied by the webhook @ 04/10/25 17:47:21.535
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/10/25 17:47:23.581
  STEP: Updating the custom resource with disallowed data should be denied @ 04/10/25 17:47:23.585
  STEP: Deleting the custom resource should be denied @ 04/10/25 17:47:23.59
  STEP: Remove the offending key and value from the custom resource data @ 04/10/25 17:47:23.595
  STEP: Deleting the updated custom resource should be successful @ 04/10/25 17:47:23.6
  I0410 17:47:24.138095 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9280" for this suite. @ 04/10/25 17:47:24.142
  STEP: Destroying namespace "webhook-markers-2111" for this suite. @ 04/10/25 17:47:24.15
• [6.430 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 04/10/25 17:47:24.157
  I0410 17:47:24.157835 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 17:47:24.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:47:24.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:47:24.174
  STEP: Creating configMap with name configmap-test-volume-map-553dcac8-064e-4d03-8b49-64489e581593 @ 04/10/25 17:47:24.177
  STEP: Creating a pod to test consume configMaps @ 04/10/25 17:47:24.181
  STEP: Saw pod success @ 04/10/25 17:47:28.197
  I0410 17:47:28.199633 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-3643f98a-0809-440f-b1b1-b8c75f42d6db container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 17:47:28.205
  I0410 17:47:28.216684 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-196" for this suite. @ 04/10/25 17:47:28.218
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/10/25 17:47:28.221
  I0410 17:47:28.221566 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename replicaset @ 04/10/25 17:47:28.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:47:28.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:47:28.234
  I0410 17:47:28.308484 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0410 17:47:33.382756 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/10/25 17:47:33.382
  STEP: Scaling up "test-rs" replicaset @ 04/10/25 17:47:33.382
  I0410 17:47:33.391932 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/10/25 17:47:33.391
  I0410 17:47:33.403787 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5019 with ReadyReplicas 1, AvailableReplicas 1
  I0410 17:47:33.414139 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5019 with ReadyReplicas 1, AvailableReplicas 1
  I0410 17:47:33.425582 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5019 with ReadyReplicas 1, AvailableReplicas 1
  I0410 17:47:33.432023 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5019 with ReadyReplicas 1, AvailableReplicas 1
  I0410 17:47:34.472843 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5019 with ReadyReplicas 2, AvailableReplicas 2
  I0410 17:47:34.670721 23 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-5019 with ReadyReplicas 3 found true
  I0410 17:47:34.670910 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5019" for this suite. @ 04/10/25 17:47:34.674
• [6.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/10/25 17:47:34.681
  I0410 17:47:34.681437 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename daemonsets @ 04/10/25 17:47:34.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:47:34.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:47:34.695
  I0410 17:47:34.785634 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/10/25 17:47:34.791
  I0410 17:47:34.879741 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:47:34.879796 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:47:35.799934 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0410 17:47:35.799994 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/10/25 17:47:35.81
  STEP: Check that daemon pods images are updated. @ 04/10/25 17:47:35.88
  I0410 17:47:35.902391 23 daemon_set.go:1193] Wrong image for pod: daemon-set-9h25d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0410 17:47:36.886694 23 daemon_set.go:1193] Wrong image for pod: daemon-set-9h25d. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0410 17:47:36.886747 23 daemon_set.go:1198] Pod daemon-set-xsbr9 is not available
  I0410 17:47:37.885916 23 daemon_set.go:1198] Pod daemon-set-8m676 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/10/25 17:47:37.889
  I0410 17:47:37.895542 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0410 17:47:37.895593 23 fixtures.go:130] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0410 17:47:38.899857 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0410 17:47:38.899905 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/10/25 17:47:38.911
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5058, will wait for the garbage collector to delete the pods @ 04/10/25 17:47:38.911
  I0410 17:47:38.973524 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.572429ms
  I0410 17:47:39.074140 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.616007ms
  I0410 17:47:40.777014 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:47:40.777043 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0410 17:47:40.778578 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12647"},"items":null}

  I0410 17:47:40.779930 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12647"},"items":null}

  I0410 17:47:40.786674 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5058" for this suite. @ 04/10/25 17:47:40.788
• [6.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 04/10/25 17:47:40.792
  I0410 17:47:40.792111 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename var-expansion @ 04/10/25 17:47:40.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:47:40.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:47:40.806
  STEP: creating the pod with failed condition @ 04/10/25 17:47:40.808
  STEP: updating the pod @ 04/10/25 17:49:40.817
  I0410 17:49:41.331436 23 pod_client.go:173] Successfully updated pod "var-expansion-2cad5804-0f29-45bd-a4b3-9704a028f216"
  STEP: waiting for pod running @ 04/10/25 17:49:41.331
  STEP: deleting the pod gracefully @ 04/10/25 17:49:43.341
  I0410 17:49:43.341261 23 delete.go:62] Deleting pod "var-expansion-2cad5804-0f29-45bd-a4b3-9704a028f216" in namespace "var-expansion-8703"
  I0410 17:49:43.349829 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-2cad5804-0f29-45bd-a4b3-9704a028f216" to be fully deleted
  I0410 17:50:15.446285 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8703" for this suite. @ 04/10/25 17:50:15.45
• [154.664 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 04/10/25 17:50:15.456
  I0410 17:50:15.456635 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 17:50:15.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:50:15.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:50:15.476
  STEP: Creating configMap with name configmap-test-upd-af9d29d8-d2e3-474d-b788-79227be7ea93 @ 04/10/25 17:50:15.552
  STEP: Creating the pod @ 04/10/25 17:50:15.557
  STEP: Updating configmap configmap-test-upd-af9d29d8-d2e3-474d-b788-79227be7ea93 @ 04/10/25 17:50:17.593
  STEP: waiting to observe update in volume @ 04/10/25 17:50:17.599
  I0410 17:50:19.620094 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-331" for this suite. @ 04/10/25 17:50:19.623
• [4.173 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 04/10/25 17:50:19.63
  I0410 17:50:19.630318 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:50:19.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:50:19.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:50:19.646
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 17:50:19.648
  STEP: Saw pod success @ 04/10/25 17:50:23.668
  I0410 17:50:23.669588 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-f856e67f-a5f3-43b6-ae38-51930e3dc266 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 17:50:23.673
  I0410 17:50:23.686644 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9740" for this suite. @ 04/10/25 17:50:23.689
• [4.063 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/10/25 17:50:23.693
  I0410 17:50:23.693210 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename chunking @ 04/10/25 17:50:23.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:50:23.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:50:23.704
  STEP: creating a large number of resources @ 04/10/25 17:50:23.706
  STEP: retrieving those results in paged fashion several times @ 04/10/25 17:50:41.401
  I0410 17:50:41.451763 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0410 17:50:41.500841 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0410 17:50:41.550710 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0410 17:50:41.600548 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0410 17:50:41.650304 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0410 17:50:41.700193 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0410 17:50:41.747781 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0410 17:50:41.797303 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0410 17:50:41.851349 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0410 17:50:41.900616 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0410 17:50:41.951289 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0410 17:50:41.999989 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0410 17:50:42.050931 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0410 17:50:42.100381 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0410 17:50:42.150711 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0410 17:50:42.201508 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0410 17:50:42.251072 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0410 17:50:42.297857 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0410 17:50:42.349361 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0410 17:50:42.401175 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0410 17:50:42.452000 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0410 17:50:42.498893 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0410 17:50:42.551036 23 chunking.go:98] Retrieved 17/17 results with rv 13341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0410 17:50:42.601186 23 chunking.go:98] Retrieved 9/17 results with rv 13341 and continue 
  I0410 17:50:42.651561 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0410 17:50:42.700981 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0410 17:50:42.751909 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0410 17:50:42.800296 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0410 17:50:42.850950 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0410 17:50:42.900565 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0410 17:50:42.950449 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0410 17:50:42.998892 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0410 17:50:43.051043 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0410 17:50:43.100964 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0410 17:50:43.151629 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0410 17:50:43.200201 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0410 17:50:43.250283 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0410 17:50:43.299735 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0410 17:50:43.349851 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0410 17:50:43.400310 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0410 17:50:43.451025 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0410 17:50:43.500076 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0410 17:50:43.549971 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0410 17:50:43.600689 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0410 17:50:43.650724 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0410 17:50:43.700342 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0410 17:50:43.750894 23 chunking.go:98] Retrieved 17/17 results with rv 13342 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0410 17:50:43.800002 23 chunking.go:98] Retrieved 9/17 results with rv 13342 and continue 
  I0410 17:50:43.847557 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0410 17:50:43.901088 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0410 17:50:43.950454 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0410 17:50:44.000511 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0410 17:50:44.049652 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0410 17:50:44.100913 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0410 17:50:44.148866 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0410 17:50:44.201053 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0410 17:50:44.251275 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0410 17:50:44.301867 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0410 17:50:44.351864 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0410 17:50:44.401021 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0410 17:50:44.450016 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0410 17:50:44.499346 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0410 17:50:44.551394 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0410 17:50:44.601272 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0410 17:50:44.652926 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0410 17:50:44.697352 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0410 17:50:44.748336 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0410 17:50:44.800827 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0410 17:50:44.851624 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0410 17:50:44.901543 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0410 17:50:44.951470 23 chunking.go:98] Retrieved 17/17 results with rv 13344 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTMzNDQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0410 17:50:45.000969 23 chunking.go:98] Retrieved 9/17 results with rv 13344 and continue 
  STEP: retrieving those results all at once @ 04/10/25 17:50:45.001
  I0410 17:50:45.059503 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7341" for this suite. @ 04/10/25 17:50:45.101
• [21.462 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/10/25 17:50:45.155
  I0410 17:50:45.155734 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pods @ 04/10/25 17:50:45.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:50:45.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:50:45.172
  STEP: Saw pod success @ 04/10/25 17:50:51.229
  I0410 17:50:51.231075 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod client-envvars-59e79f9d-e02c-466a-b61f-578aa496452a container env3cont: <nil>
  STEP: delete the pod @ 04/10/25 17:50:51.235
  I0410 17:50:51.245156 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4166" for this suite. @ 04/10/25 17:50:51.247
• [6.095 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/10/25 17:50:51.25
  I0410 17:50:51.250657 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/10/25 17:50:51.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:50:51.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:50:51.261
  STEP: mirroring a new custom Endpoint @ 04/10/25 17:50:51.27
  I0410 17:50:51.277978 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 04/10/25 17:50:53.282
  STEP: mirroring deletion of a custom Endpoint @ 04/10/25 17:50:53.293
  I0410 17:50:53.306272 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8321" for this suite. @ 04/10/25 17:50:53.309
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 04/10/25 17:50:53.314
  I0410 17:50:53.314479 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 17:50:53.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:50:53.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:50:53.326
  STEP: Creating configMap with name configmap-test-volume-68d4d2bb-4888-4491-ae84-ee886d5b13eb @ 04/10/25 17:50:53.329
  STEP: Creating a pod to test consume configMaps @ 04/10/25 17:50:53.332
  STEP: Saw pod success @ 04/10/25 17:50:57.351
  I0410 17:50:57.355113 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-273720f2-261c-4aba-9e0a-2d0023457f53 container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 17:50:57.364
  I0410 17:50:57.378485 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2021" for this suite. @ 04/10/25 17:50:57.381
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/10/25 17:50:57.389
  I0410 17:50:57.389556 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pod-network-test @ 04/10/25 17:50:57.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:50:57.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:50:57.406
  STEP: Performing setup for networking test in namespace pod-network-test-5444 @ 04/10/25 17:50:57.409
  STEP: creating a selector @ 04/10/25 17:50:57.409
  STEP: Creating the service pods in kubernetes @ 04/10/25 17:50:57.409
  I0410 17:50:57.409568 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/10/25 17:51:19.582
  I0410 17:51:21.602775 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0410 17:51:21.602826 23 networking.go:42] Breadth first check of 10.244.0.105 on host 192.168.49.2...
  I0410 17:51:21.605395 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.223:9080/dial?request=hostname&protocol=udp&host=10.244.0.105&port=8081&tries=1'] Namespace:pod-network-test-5444 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:51:21.605428 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:51:21.605952 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:51:21.606013 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5444/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.223%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.105%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0410 17:51:21.680503 23 utils.go:356] Waiting for responses: map[]
  I0410 17:51:21.680558 23 utils.go:360] reached 10.244.0.105 after 0/1 tries
  I0410 17:51:21.680577 23 networking.go:42] Breadth first check of 10.244.1.222 on host 192.168.49.3...
  I0410 17:51:21.684220 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.223:9080/dial?request=hostname&protocol=udp&host=10.244.1.222&port=8081&tries=1'] Namespace:pod-network-test-5444 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:51:21.684269 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:51:21.684945 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:51:21.685020 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5444/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.223%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.222%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0410 17:51:21.753123 23 utils.go:356] Waiting for responses: map[]
  I0410 17:51:21.753198 23 utils.go:360] reached 10.244.1.222 after 0/1 tries
  I0410 17:51:21.753220 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0410 17:51:21.753419 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5444" for this suite. @ 04/10/25 17:51:21.757
• [24.375 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/10/25 17:51:21.764
  I0410 17:51:21.765006 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename deployment @ 04/10/25 17:51:21.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:21.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:21.78
  I0410 17:51:21.792918 23 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/10/25 17:51:21.792
  I0410 17:51:23.801224 23 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/10/25 17:51:23.807
  I0410 17:51:23.812925 23 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5544",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2741cdcf-12a0-4088-8448-53d2189758ed",
      ResourceVersion: (string) (len=5) "13922",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904283,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0410 17:51:23.818006 23 deployment.go:40] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5544",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57879e56-e60c-48e7-89a8-ab2337fbd467",
      ResourceVersion: (string) (len=5) "13924",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904283,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "2741cdcf-12a0-4088-8448-53d2189758ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 37 34 31 63 64  63 66 2d 31 32 61 30 2d  |\"2741cdcf-12a0-|
              00000120  34 30 38 38 2d 38 34 34  38 2d 35 33 64 32 31 38  |4088-8448-53d218|
              00000130  39 37 35 38 65 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9758ed\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 17:51:23.818675 23 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0410 17:51:23.819111 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5544",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d7f9be9-fa2f-4593-a771-d39049babb15",
      ResourceVersion: (string) (len=5) "13923",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "2741cdcf-12a0-4088-8448-53d2189758ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 32 37 34 31 63 64 63  |"uid\":\"2741cdc|
              00000040  66 2d 31 32 61 30 2d 34  30 38 38 2d 38 34 34 38  |f-12a0-4088-8448|
              00000050  2d 35 33 64 32 31 38 39  37 35 38 65 64 5c 22 7d  |-53d2189758ed\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 17:51:23.828165 23 deployment.go:68] Pod "test-cleanup-controller-fp7mb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-fp7mb",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5544",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e610ef5c-2aa5-4a5e-a28f-064b4ca454dc",
      ResourceVersion: (string) (len=5) "13919",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "1d7f9be9-fa2f-4593-a771-d39049babb15",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  31 64 37 66 39 62 65 39  |uid\":\"1d7f9be9|
              00000080  2d 66 61 32 66 2d 34 35  39 33 2d 61 37 37 31 2d  |-fa2f-4593-a771-|
              00000090  64 33 39 30 34 39 62 61  62 62 31 35 5c 22 7d 22  |d39049babb15\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  32 34 5c 22 7d 22 3a 7b  |.244.1.224\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gzdwd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gzdwd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.224",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.224"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879904282,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://9deb700bfebacf1280e23a5eb317df6fd1df3602d004693dbfabcb1c63ff8eb2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gzdwd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:51:23.831153 23 deployment.go:68] Pod "test-cleanup-deployment-898f8f847-mn4j8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-mn4j8",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-5544",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcf247f2-3988-4314-99ce-f55beb7fa19c",
      ResourceVersion: (string) (len=5) "13929",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904283,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "57879e56-e60c-48e7-89a8-ab2337fbd467",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  38 37 39 65 35 36 2d 65  |d\":\"57879e56-e|
              00000090  36 30 63 2d 34 38 65 37  2d 38 39 61 38 2d 61 62  |60c-48e7-89a8-ab|
              000000a0  32 33 33 37 66 62 64 34  36 37 5c 22 7d 22 3a 7b  |2337fbd467\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-46ngr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-46ngr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:51:23.832840 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5544" for this suite. @ 04/10/25 17:51:23.836
• [2.076 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/10/25 17:51:23.841
  I0410 17:51:23.841424 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:51:23.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:23.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:23.849
  STEP: Creating projection with secret that has name projected-secret-test-a902b66d-ff76-46d3-a66d-6a1c1d8d65a4 @ 04/10/25 17:51:23.85
  STEP: Creating a pod to test consume secrets @ 04/10/25 17:51:23.853
  STEP: Saw pod success @ 04/10/25 17:51:27.866
  I0410 17:51:27.868280 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-d379f201-9f35-4316-8125-b913a8292fdc container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 17:51:27.873
  I0410 17:51:27.882401 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3182" for this suite. @ 04/10/25 17:51:27.884
• [4.046 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/10/25 17:51:27.888
  I0410 17:51:27.888150 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 17:51:27.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:27.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:27.902
  STEP: Creating secret with name secret-test-map-38325bd8-207b-4dea-a91c-7ed96aedc411 @ 04/10/25 17:51:27.904
  STEP: Creating a pod to test consume secrets @ 04/10/25 17:51:27.907
  STEP: Saw pod success @ 04/10/25 17:51:31.924
  I0410 17:51:31.927059 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-secrets-0cfb0da8-654a-48ba-958c-faebc17ece72 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 17:51:31.934
  I0410 17:51:31.945743 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1556" for this suite. @ 04/10/25 17:51:31.948
• [4.064 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/10/25 17:51:31.952
  I0410 17:51:31.952778 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename endpointslice @ 04/10/25 17:51:31.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:31.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:31.968
  I0410 17:51:34.016150 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6490" for this suite. @ 04/10/25 17:51:34.018
• [2.070 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 04/10/25 17:51:34.022
  I0410 17:51:34.022993 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename security-context @ 04/10/25 17:51:34.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:34.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:34.034
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/10/25 17:51:34.036
  STEP: Saw pod success @ 04/10/25 17:51:36.05
  I0410 17:51:36.052368 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod security-context-7cfc1a91-4241-49dd-8d5f-1223db96b281 container test-container: <nil>
  STEP: delete the pod @ 04/10/25 17:51:36.058
  I0410 17:51:36.072617 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5530" for this suite. @ 04/10/25 17:51:36.075
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 04/10/25 17:51:36.082
  I0410 17:51:36.082562 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename deployment @ 04/10/25 17:51:36.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:36.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:36.096
  STEP: creating a Deployment @ 04/10/25 17:51:36.106
  I0410 17:51:36.106735 23 deployment.go:507] Creating simple deployment test-deployment-6nvvv
  I0410 17:51:36.115183 23 deployment.go:223] deployment "test-deployment-6nvvv" doesn't have the required revision set
  STEP: Getting /status @ 04/10/25 17:51:38.133
  I0410 17:51:38.137303 23 deployment.go:532] Deployment test-deployment-6nvvv has Conditions: [{Available True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6nvvv-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/10/25 17:51:38.137
  I0410 17:51:38.146456 23 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 51, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 51, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 51, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 51, 36, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-6nvvv-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/10/25 17:51:38.146
  I0410 17:51:38.148991 23 deployment.go:579] Observed &Deployment event: ADDED
  I0410 17:51:38.149049 23 deployment.go:575] Observed Deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6nvvv-f4dbbbf74"}
  I0410 17:51:38.149231 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0410 17:51:38.149285 23 deployment.go:575] Observed Deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6nvvv-f4dbbbf74"}
  I0410 17:51:38.149316 23 deployment.go:575] Observed Deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0410 17:51:38.149474 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0410 17:51:38.149506 23 deployment.go:575] Observed Deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0410 17:51:38.149528 23 deployment.go:575] Observed Deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6nvvv-f4dbbbf74" is progressing.}
  I0410 17:51:38.149656 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0410 17:51:38.149687 23 deployment.go:575] Observed Deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0410 17:51:38.149712 23 deployment.go:575] Observed Deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6nvvv-f4dbbbf74" has successfully progressed.}
  I0410 17:51:38.149844 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0410 17:51:38.149874 23 deployment.go:575] Observed Deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0410 17:51:38.149897 23 deployment.go:575] Observed Deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6nvvv-f4dbbbf74" has successfully progressed.}
  I0410 17:51:38.149922 23 deployment.go:572] Found Deployment test-deployment-6nvvv in namespace deployment-6903 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0410 17:51:38.149940 23 deployment.go:583] Deployment test-deployment-6nvvv has an updated status
  STEP: patching the Statefulset Status @ 04/10/25 17:51:38.149
  I0410 17:51:38.149992 23 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0410 17:51:38.158566 23 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/10/25 17:51:38.158
  I0410 17:51:38.160972 23 deployment.go:616] Observed &Deployment event: ADDED
  I0410 17:51:38.161017 23 deployment.go:612] Observed deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6nvvv-f4dbbbf74"}
  I0410 17:51:38.161124 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0410 17:51:38.161150 23 deployment.go:612] Observed deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6nvvv-f4dbbbf74"}
  I0410 17:51:38.161165 23 deployment.go:612] Observed deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0410 17:51:38.161368 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0410 17:51:38.161429 23 deployment.go:612] Observed deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0410 17:51:38.161448 23 deployment.go:612] Observed deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6nvvv-f4dbbbf74" is progressing.}
  I0410 17:51:38.161604 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0410 17:51:38.161626 23 deployment.go:612] Observed deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0410 17:51:38.161642 23 deployment.go:612] Observed deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6nvvv-f4dbbbf74" has successfully progressed.}
  I0410 17:51:38.161743 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0410 17:51:38.161766 23 deployment.go:612] Observed deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0410 17:51:38.161781 23 deployment.go:612] Observed deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-10 17:51:36 +0000 UTC 2025-04-10 17:51:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6nvvv-f4dbbbf74" has successfully progressed.}
  I0410 17:51:38.161795 23 deployment.go:612] Observed deployment test-deployment-6nvvv in namespace deployment-6903 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0410 17:51:38.161941 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0410 17:51:38.161971 23 deployment.go:609] Found deployment test-deployment-6nvvv in namespace deployment-6903 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0410 17:51:38.161987 23 deployment.go:620] Deployment test-deployment-6nvvv has a patched status
  I0410 17:51:38.166503 23 deployment.go:633] Deployment "test-deployment-6nvvv":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-6nvvv",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6903",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be1644f1-bd4e-4207-b8cd-9515bee140fb",
      ResourceVersion: (string) (len=5) "14102",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904296,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-6nvvv-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0410 17:51:38.227837 23 deployment.go:40] New ReplicaSet "test-deployment-6nvvv-f4dbbbf74" of Deployment "test-deployment-6nvvv":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-6nvvv-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6903",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74d5d2dc-71c0-4caa-8865-1bb5eda61292",
      ResourceVersion: (string) (len=5) "14088",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904296,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-6nvvv",
          UID: (types.UID) (len=36) "be1644f1-bd4e-4207-b8cd-9515bee140fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 62 65 31  |k:{\"uid\":\"be1|
              00000120  36 34 34 66 31 2d 62 64  34 65 2d 34 32 30 37 2d  |644f1-bd4e-4207-|
              00000130  62 38 63 64 2d 39 35 31  35 62 65 65 31 34 30 66  |b8cd-9515bee140f|
              00000140  62 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |b\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 17:51:38.232989 23 deployment.go:68] Pod "test-deployment-6nvvv-f4dbbbf74-m79gv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-6nvvv-f4dbbbf74-m79gv",
      GenerateName: (string) (len=32) "test-deployment-6nvvv-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-6903",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67afc632-1d50-4226-9dd8-f3bf617030c7",
      ResourceVersion: (string) (len=5) "14087",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904296,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-6nvvv-f4dbbbf74",
          UID: (types.UID) (len=36) "74d5d2dc-71c0-4caa-8865-1bb5eda61292",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 34 64 35 64 32 64  63 2d 37 31 63 30 2d 34  |"74d5d2dc-71c0-4|
              000000a0  63 61 61 2d 38 38 36 35  2d 31 62 62 35 65 64 61  |caa-8865-1bb5eda|
              000000b0  36 31 32 39 32 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |61292\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  32 38 5c 22 7d 22 3a 7b  |.244.1.228\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9bj5g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9bj5g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904296,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879904296,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://9cc385571feec7da3e7010a0ff5b9452b530ef07e3744dbc3c4319d5a56cf432",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9bj5g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:51:38.235101 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6903" for this suite. @ 04/10/25 17:51:38.238
• [2.161 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 04/10/25 17:51:38.243
  I0410 17:51:38.243878 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 17:51:38.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:38.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:38.26
  STEP: creating a Service @ 04/10/25 17:51:38.268
  STEP: watching for the Service to be added @ 04/10/25 17:51:38.283
  I0410 17:51:38.285840 23 service.go:3445] Found Service test-service-h5zmq in namespace services-5688 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32176}]
  I0410 17:51:38.285900 23 service.go:3452] Service test-service-h5zmq created
  STEP: Getting /status @ 04/10/25 17:51:38.285
  I0410 17:51:38.289731 23 service.go:3463] Service test-service-h5zmq has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/10/25 17:51:38.289
  STEP: watching for the Service to be patched @ 04/10/25 17:51:38.296
  I0410 17:51:38.297430 23 service.go:3486] observed Service test-service-h5zmq in namespace services-5688 with annotations: map[] & LoadBalancer: {[]}
  I0410 17:51:38.297543 23 service.go:3489] Found Service test-service-h5zmq in namespace services-5688 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0056fc3c0 []}]}
  I0410 17:51:38.297567 23 service.go:3496] Service test-service-h5zmq has service status patched
  STEP: updating the ServiceStatus @ 04/10/25 17:51:38.297
  I0410 17:51:38.302061 23 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/10/25 17:51:38.302
  I0410 17:51:38.303266 23 service.go:3527] Observed Service test-service-h5zmq in namespace services-5688 with annotations: map[] & Conditions: []
  I0410 17:51:38.303299 23 service.go:3538] Observed Service test-service-h5zmq in namespace services-5688 with annotations: map[patchedstatus:true] & Conditions: []
  I0410 17:51:38.303447 23 service.go:3534] Found Service test-service-h5zmq in namespace services-5688 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0410 17:51:38.303467 23 service.go:3545] Service test-service-h5zmq has service status updated
  STEP: patching the service @ 04/10/25 17:51:38.303
  STEP: watching for the Service to be patched @ 04/10/25 17:51:38.31
  I0410 17:51:38.312021 23 service.go:3568] observed Service test-service-h5zmq in namespace services-5688 with labels: map[test-service-static:true]
  I0410 17:51:38.312045 23 service.go:3568] observed Service test-service-h5zmq in namespace services-5688 with labels: map[test-service-static:true]
  I0410 17:51:38.312231 23 service.go:3568] observed Service test-service-h5zmq in namespace services-5688 with labels: map[test-service-static:true]
  I0410 17:51:38.312290 23 service.go:3571] Found Service test-service-h5zmq in namespace services-5688 with labels: map[test-service:patched test-service-static:true]
  I0410 17:51:38.312306 23 service.go:3578] Service test-service-h5zmq patched
  STEP: deleting the service @ 04/10/25 17:51:38.312
  STEP: watching for the Service to be deleted @ 04/10/25 17:51:38.326
  I0410 17:51:38.327522 23 service.go:3602] Observed event: ADDED
  I0410 17:51:38.327565 23 service.go:3602] Observed event: MODIFIED
  I0410 17:51:38.327811 23 service.go:3602] Observed event: MODIFIED
  I0410 17:51:38.327853 23 service.go:3602] Observed event: MODIFIED
  I0410 17:51:38.327887 23 service.go:3598] Found Service test-service-h5zmq in namespace services-5688 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0410 17:51:38.327904 23 service.go:3607] Service test-service-h5zmq deleted
  I0410 17:51:38.328032 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5688" for this suite. @ 04/10/25 17:51:38.339
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 04/10/25 17:51:38.345
  I0410 17:51:38.345569 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 17:51:38.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:38.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:38.359
  STEP: Creating configMap with name configmap-test-volume-733b0986-06ca-4ff8-bcce-491ea902b2ad @ 04/10/25 17:51:38.361
  STEP: Creating a pod to test consume configMaps @ 04/10/25 17:51:38.364
  STEP: Saw pod success @ 04/10/25 17:51:42.386
  I0410 17:51:42.388872 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-9f63074d-83c1-4682-9f30-c5329d18a29c container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 17:51:42.396
  I0410 17:51:42.413322 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8303" for this suite. @ 04/10/25 17:51:42.416
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 04/10/25 17:51:42.421
  I0410 17:51:42.421512 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 17:51:42.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:42.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:42.438
  STEP: creating Agnhost RC @ 04/10/25 17:51:42.441
  I0410 17:51:42.441669 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-9125 create -f -'
  I0410 17:51:42.520119 23 builder.go:146] stderr: ""
  I0410 17:51:42.520162 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/10/25 17:51:42.52
  I0410 17:51:43.522331 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0410 17:51:43.522361 23 framework.go:733] Found 0 / 1
  I0410 17:51:44.527453 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0410 17:51:44.527515 23 framework.go:733] Found 1 / 1
  I0410 17:51:44.527546 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/10/25 17:51:44.527
  I0410 17:51:44.530866 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0410 17:51:44.530916 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0410 17:51:44.530987 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-9125 patch pod agnhost-primary-778xk -p {"metadata":{"annotations":{"x":"y"}}}'
  I0410 17:51:44.582857 23 builder.go:146] stderr: ""
  I0410 17:51:44.582902 23 builder.go:147] stdout: "pod/agnhost-primary-778xk patched\n"
  STEP: checking annotations @ 04/10/25 17:51:44.582
  I0410 17:51:44.585071 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0410 17:51:44.585101 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0410 17:51:44.585214 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9125" for this suite. @ 04/10/25 17:51:44.587
• [2.169 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 04/10/25 17:51:44.59
  I0410 17:51:44.590911 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename namespaces @ 04/10/25 17:51:44.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:44.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:44.604
  STEP: Updating Namespace "namespaces-2325" @ 04/10/25 17:51:44.606
  I0410 17:51:44.611564 23 namespace.go:389] Namespace "namespaces-2325" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"a0251436-d43b-47c8-bbc5-b091a67705d5", "kubernetes.io/metadata.name":"namespaces-2325", "namespaces-2325":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0410 17:51:44.611756 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2325" for this suite. @ 04/10/25 17:51:44.687
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 04/10/25 17:51:44.692
  I0410 17:51:44.692499 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 17:51:44.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:44.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:44.702
  STEP: Setting up server cert @ 04/10/25 17:51:44.802
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 17:51:44.874
  STEP: Deploying the webhook pod @ 04/10/25 17:51:44.899
  STEP: Wait for the deployment to be ready @ 04/10/25 17:51:44.908
  I0410 17:51:44.913495 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:51:46.924
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:51:46.938
  I0410 17:51:47.938932 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0410 17:51:47.948309 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9467-crds.webhook.example.com via the AdmissionRegistration API @ 04/10/25 17:51:48.465
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/10/25 17:51:48.485
  I0410 17:51:51.103104 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2423" for this suite. @ 04/10/25 17:51:51.107
  STEP: Destroying namespace "webhook-markers-9274" for this suite. @ 04/10/25 17:51:51.115
• [6.430 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/10/25 17:51:51.122
  I0410 17:51:51.122853 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/10/25 17:51:51.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:51.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:51.14
  STEP: creating @ 04/10/25 17:51:51.143
  STEP: getting @ 04/10/25 17:51:51.158
  STEP: listing in namespace @ 04/10/25 17:51:51.162
  STEP: patching @ 04/10/25 17:51:51.166
  STEP: deleting @ 04/10/25 17:51:51.177
  I0410 17:51:51.184548 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7165" for this suite. @ 04/10/25 17:51:51.209
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 04/10/25 17:51:51.216
  I0410 17:51:51.216284 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 17:51:51.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:51:51.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:51:51.243
  STEP: creating service in namespace services-373 @ 04/10/25 17:51:51.246
  STEP: creating service affinity-clusterip-transition in namespace services-373 @ 04/10/25 17:51:51.246
  STEP: creating replication controller affinity-clusterip-transition in namespace services-373 @ 04/10/25 17:51:51.255
  I0410 17:51:51.263200      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-373, replica count: 3
  I0410 17:51:54.315176      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0410 17:51:54.324186 23 resource.go:361] Creating new exec pod
  I0410 17:51:57.340000 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-373 exec execpod-affinity2mxfl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0410 17:51:57.428379 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0410 17:51:57.428421 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 17:51:57.428487 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-373 exec execpod-affinity2mxfl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.45.36 80'
  I0410 17:51:57.525767 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.45.36 80\nConnection to 10.108.45.36 80 port [tcp/http] succeeded!\n"
  I0410 17:51:57.525834 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 17:51:57.535514 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-373 exec execpod-affinity2mxfl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.108.45.36:80/ ; done'
  I0410 17:51:57.713956 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n"
  I0410 17:51:57.714007 23 builder.go:147] stdout: "\naffinity-clusterip-transition-66fb4\naffinity-clusterip-transition-66fb4\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-66fb4\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-rgw56\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-66fb4\naffinity-clusterip-transition-rgw56\naffinity-clusterip-transition-rgw56\naffinity-clusterip-transition-rgw56\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-rgw56\naffinity-clusterip-transition-4c5ws"
  I0410 17:51:57.714018 23 service.go:242] Received response from host: affinity-clusterip-transition-66fb4
  I0410 17:51:57.714026 23 service.go:242] Received response from host: affinity-clusterip-transition-66fb4
  I0410 17:51:57.714031 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.714036 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.714041 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.714046 23 service.go:242] Received response from host: affinity-clusterip-transition-66fb4
  I0410 17:51:57.714051 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.714056 23 service.go:242] Received response from host: affinity-clusterip-transition-rgw56
  I0410 17:51:57.714061 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.714066 23 service.go:242] Received response from host: affinity-clusterip-transition-66fb4
  I0410 17:51:57.714072 23 service.go:242] Received response from host: affinity-clusterip-transition-rgw56
  I0410 17:51:57.714081 23 service.go:242] Received response from host: affinity-clusterip-transition-rgw56
  I0410 17:51:57.714086 23 service.go:242] Received response from host: affinity-clusterip-transition-rgw56
  I0410 17:51:57.714091 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.714096 23 service.go:242] Received response from host: affinity-clusterip-transition-rgw56
  I0410 17:51:57.714100 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.718659 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-373 exec execpod-affinity2mxfl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.108.45.36:80/ ; done'
  I0410 17:51:57.873357 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.108.45.36:80/\n"
  I0410 17:51:57.873411 23 builder.go:147] stdout: "\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws\naffinity-clusterip-transition-4c5ws"
  I0410 17:51:57.873428 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873437 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873452 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873461 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873469 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873479 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873487 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873494 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873504 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873511 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873521 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873528 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873538 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873545 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873551 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873558 23 service.go:242] Received response from host: affinity-clusterip-transition-4c5ws
  I0410 17:51:57.873622 23 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-373, will wait for the garbage collector to delete the pods @ 04/10/25 17:51:57.886
  I0410 17:51:57.944456 23 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 4.394956ms
  I0410 17:51:58.045591 23 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.131298ms
  I0410 17:52:00.965094 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-373" for this suite. @ 04/10/25 17:52:00.969
• [9.760 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 04/10/25 17:52:00.976
  I0410 17:52:00.976792 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename svcaccounts @ 04/10/25 17:52:00.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:52:00.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:52:00.99
  STEP: Creating ServiceAccount "e2e-sa-tf2gn"  @ 04/10/25 17:52:00.993
  I0410 17:52:00.997732 23 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-tf2gn"  @ 04/10/25 17:52:00.997
  I0410 17:52:01.002831 23 service_accounts.go:839] AutomountServiceAccountToken: true
  I0410 17:52:01.002989 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2127" for this suite. @ 04/10/25 17:52:01.074
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 04/10/25 17:52:01.081
  I0410 17:52:01.081710 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 17:52:01.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:52:01.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:52:01.097
  STEP: Setting up server cert @ 04/10/25 17:52:01.199
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 17:52:01.327
  STEP: Deploying the webhook pod @ 04/10/25 17:52:01.33
  STEP: Wait for the deployment to be ready @ 04/10/25 17:52:01.337
  I0410 17:52:01.341193 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:52:03.349
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:52:03.357
  I0410 17:52:04.358001 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0410 17:52:04.368015 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6182-crds.webhook.example.com via the AdmissionRegistration API @ 04/10/25 17:52:04.881
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/10/25 17:52:04.899
  I0410 17:52:07.459276 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9485" for this suite. @ 04/10/25 17:52:07.463
  STEP: Destroying namespace "webhook-markers-9265" for this suite. @ 04/10/25 17:52:07.469
• [6.395 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 04/10/25 17:52:07.477
  I0410 17:52:07.477534 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 17:52:07.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:52:07.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:52:07.495
  STEP: Setting up server cert @ 04/10/25 17:52:07.592
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 17:52:07.687
  STEP: Deploying the webhook pod @ 04/10/25 17:52:07.691
  STEP: Wait for the deployment to be ready @ 04/10/25 17:52:07.697
  I0410 17:52:07.701861 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:52:09.707
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:52:09.716
  I0410 17:52:10.716712 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/10/25 17:52:10.725
  STEP: create a configmap that should be updated by the webhook @ 04/10/25 17:52:10.742
  I0410 17:52:10.807434 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1572" for this suite. @ 04/10/25 17:52:10.811
  STEP: Destroying namespace "webhook-markers-3550" for this suite. @ 04/10/25 17:52:10.815
• [3.342 seconds]
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/10/25 17:52:10.819
  I0410 17:52:10.819067 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename subjectreview @ 04/10/25 17:52:10.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:52:10.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:52:10.83
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7940" @ 04/10/25 17:52:10.832
  I0410 17:52:10.834731 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-7940:e2e"
  I0410 17:52:10.834757 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7940"}
  I0410 17:52:10.834765 23 subjectreviews.go:71] saUID: "5055d719-b242-4c22-b88f-7e370664c9e1"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7940:e2e" @ 04/10/25 17:52:10.834
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7940:e2e" @ 04/10/25 17:52:10.834
  I0410 17:52:10.835913 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7940:e2e" api 'list' configmaps in "subjectreview-7940" namespace @ 04/10/25 17:52:10.835
  I0410 17:52:10.836650 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7940:e2e" @ 04/10/25 17:52:10.836
  I0410 17:52:10.837734 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0410 17:52:10.837752 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0410 17:52:10.837833 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7940" for this suite. @ 04/10/25 17:52:10.911
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 04/10/25 17:52:10.915
  I0410 17:52:10.915546 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-probe @ 04/10/25 17:52:10.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:52:10.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:52:10.932
  STEP: Creating pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537 @ 04/10/25 17:52:10.935
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/10/25 17:52:12.95
  I0410 17:52:12.954103 23 container_probe.go:1749] Initial restart count of pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 is 0
  I0410 17:52:12.957125 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:14.963379 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:16.968792 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:18.975032 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:20.980960 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:22.987187 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:24.992835 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:26.998103 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:29.004734 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:31.011385 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:33.018383 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:35.024439 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:37.030833 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:39.038285 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:41.044657 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:43.049182 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:45.055332 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:47.059632 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:49.065618 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:51.072186 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:53.078931 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:55.085564 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:57.091334 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:52:59.097182 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:01.102982 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:03.110430 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:05.114993 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:07.120584 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:09.126781 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:11.133438 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:13.139607 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:15.145577 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:17.151931 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:19.154532 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:21.159587 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:23.167142 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:25.174482 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:27.180851 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:29.187451 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:31.193161 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:33.200427 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:35.206689 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:37.212269 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:39.217122 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:41.221425 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:43.227099 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:45.232735 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:47.238704 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:49.245669 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:51.251859 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:53.258115 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:55.265064 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:57.270324 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:53:59.276350 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:01.282975 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:03.289662 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:05.294893 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:07.302000 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:09.308311 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:11.312831 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:13.318808 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:15.326236 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:17.332076 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:19.338544 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:21.344704 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:23.351919 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:25.358610 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:27.363113 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:29.369902 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:31.376855 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:33.384207 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:35.390761 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:37.397160 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:39.404026 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:41.410789 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:43.416280 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:45.422890 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:47.428569 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:49.434880 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:51.441225 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:53.446282 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:55.451864 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:57.454409 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:54:59.461863 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:01.469482 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:03.473621 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:05.480753 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:07.492089 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:09.495144 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:11.497838 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:13.502038 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:15.505270 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:17.511434 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:19.516563 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:21.521937 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:23.529486 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:25.532169 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:27.537006 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:29.543026 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:31.548514 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:33.555559 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:35.562695 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:37.568397 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:39.573889 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:41.581412 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:43.587773 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:45.593796 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:47.599555 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:49.605523 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:51.608789 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:53.613790 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:55.620815 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:57.626833 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:55:59.633195 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:56:01.638615 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:56:03.644717 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:56:05.652076 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:56:07.658163 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:56:09.664319 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  I0410 17:56:11.670963 23 container_probe.go:1759] Get pod liveness-f93c8b4e-5347-4b12-839c-af3b4f5bc448 in namespace container-probe-6537
  STEP: deleting the pod @ 04/10/25 17:56:13.671
  I0410 17:56:13.688585 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6537" for this suite. @ 04/10/25 17:56:13.693
• [242.785 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 04/10/25 17:56:13.7
  I0410 17:56:13.700898 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/10/25 17:56:13.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:56:13.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:56:13.724
  I0410 17:56:13.726195 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/10/25 17:56:14.862
  I0410 17:56:14.862312 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-3609 --namespace=crd-publish-openapi-3609 create -f -'
  I0410 17:56:16.930222 23 builder.go:146] stderr: ""
  I0410 17:56:16.930296 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2381-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0410 17:56:16.930369 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-3609 --namespace=crd-publish-openapi-3609 delete e2e-test-crd-publish-openapi-2381-crds test-cr'
  I0410 17:56:16.973474 23 builder.go:146] stderr: ""
  I0410 17:56:16.973515 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2381-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0410 17:56:16.973561 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-3609 --namespace=crd-publish-openapi-3609 apply -f -'
  I0410 17:56:17.014798 23 builder.go:146] stderr: ""
  I0410 17:56:17.014835 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2381-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0410 17:56:17.014884 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-3609 --namespace=crd-publish-openapi-3609 delete e2e-test-crd-publish-openapi-2381-crds test-cr'
  I0410 17:56:17.054710 23 builder.go:146] stderr: ""
  I0410 17:56:17.054750 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2381-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/10/25 17:56:17.054
  I0410 17:56:17.054872 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-3609 explain e2e-test-crd-publish-openapi-2381-crds'
  I0410 17:56:17.092931 23 builder.go:146] stderr: ""
  I0410 17:56:17.092997 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-2381-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0410 17:56:18.224576 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3609" for this suite. @ 04/10/25 17:56:18.228
• [4.532 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 04/10/25 17:56:18.233
  I0410 17:56:18.233021 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:56:18.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:56:18.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:56:18.242
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 17:56:18.243
  STEP: Saw pod success @ 04/10/25 17:56:22.265
  I0410 17:56:22.268607 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-05f40078-ef1f-4fb8-8474-ed816272e0ca container client-container: <nil>
  STEP: delete the pod @ 04/10/25 17:56:22.285
  I0410 17:56:22.303476 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5043" for this suite. @ 04/10/25 17:56:22.306
• [4.079 seconds]
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 04/10/25 17:56:22.311
  I0410 17:56:22.311739 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename replication-controller @ 04/10/25 17:56:22.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:56:22.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:56:22.326
  I0410 17:56:22.329142 23 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/10/25 17:56:23.337
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/10/25 17:56:23.341
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/10/25 17:56:24.35
  I0410 17:56:24.362713 23 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/10/25 17:56:24.362
  I0410 17:56:25.372802 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9244" for this suite. @ 04/10/25 17:56:25.376
• [3.073 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 04/10/25 17:56:25.385
  I0410 17:56:25.385567 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename resourcequota @ 04/10/25 17:56:25.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:56:25.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:56:25.404
  STEP: Creating a ResourceQuota with terminating scope @ 04/10/25 17:56:25.406
  STEP: Ensuring ResourceQuota status is calculated @ 04/10/25 17:56:25.411
  STEP: Creating a ResourceQuota with not terminating scope @ 04/10/25 17:56:27.414
  STEP: Ensuring ResourceQuota status is calculated @ 04/10/25 17:56:27.417
  STEP: Creating a long running pod @ 04/10/25 17:56:29.423
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/10/25 17:56:29.439
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/10/25 17:56:31.445
  STEP: Deleting the pod @ 04/10/25 17:56:33.451
  STEP: Ensuring resource quota status released the pod usage @ 04/10/25 17:56:33.466
  STEP: Creating a terminating pod @ 04/10/25 17:56:35.472
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/10/25 17:56:35.486
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/10/25 17:56:37.494
  STEP: Deleting the pod @ 04/10/25 17:56:39.498
  STEP: Ensuring resource quota status released the pod usage @ 04/10/25 17:56:39.51
  I0410 17:56:41.516804 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5222" for this suite. @ 04/10/25 17:56:41.52
• [16.141 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 04/10/25 17:56:41.526
  I0410 17:56:41.526608 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename security-context-test @ 04/10/25 17:56:41.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:56:41.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:56:41.544
  I0410 17:56:45.567140 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1298" for this suite. @ 04/10/25 17:56:45.568
• [4.048 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/10/25 17:56:45.574
  I0410 17:56:45.574605 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename deployment @ 04/10/25 17:56:45.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:56:45.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:56:45.586
  I0410 17:56:45.589015 23 deployment.go:1645] Creating simple deployment test-new-deployment
  I0410 17:56:45.597326 23 deployment.go:223] new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 04/10/25 17:56:47.611
  STEP: updating a scale subresource @ 04/10/25 17:56:47.613
  STEP: verifying the deployment Spec.Replicas was modified @ 04/10/25 17:56:47.62
  STEP: Patch a scale subresource @ 04/10/25 17:56:47.623
  I0410 17:56:47.635943 23 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35714157-a78f-4e09-97df-7d78b4bde9a7",
      ResourceVersion: (string) (len=5) "15069",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904605,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0410 17:56:47.645281 23 deployment.go:40] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "412c1ce9-c93a-47d8-8f15-21701fdf9e8d",
      ResourceVersion: (string) (len=5) "15074",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904605,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "35714157-a78f-4e09-97df-7d78b4bde9a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904607,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 35 37 31 34 31  35 37 2d 61 37 38 66 2d  |\"35714157-a78f-|
              00000120  34 65 30 39 2d 39 37 64  66 2d 37 64 37 38 62 34  |4e09-97df-7d78b4|
              00000130  62 64 65 39 61 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bde9a7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904607,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 17:56:47.653134 23 deployment.go:68] Pod "test-new-deployment-64bcfc6446-8pnnf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-8pnnf",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "53c52469-b65d-4e99-9d82-16de5ec31273",
      ResourceVersion: (string) (len=5) "15064",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904605,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "412c1ce9-c93a-47d8-8f15-21701fdf9e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  32 63 31 63 65 39 2d 63  |d\":\"412c1ce9-c|
              00000090  39 33 61 2d 34 37 64 38  2d 38 66 31 35 2d 32 31  |93a-47d8-8f15-21|
              000000a0  37 30 31 66 64 66 39 65  38 64 5c 22 7d 22 3a 7b  |701fdf9e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  34 31 5c 22 7d 22 3a 7b  |.244.1.241\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2hzwt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2hzwt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.241",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.241"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904605,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879904606,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://6ad8452a19dff872cb4e8715508eaf65445912bf70f82253f55ee19e576673ea",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2hzwt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:56:47.657000 23 deployment.go:68] Pod "test-new-deployment-64bcfc6446-jfjmj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-jfjmj",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49b362ab-0a47-45d0-823f-656e6bb7718b",
      ResourceVersion: (string) (len=5) "15073",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879904607,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "412c1ce9-c93a-47d8-8f15-21701fdf9e8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904607,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  32 63 31 63 65 39 2d 63  |d\":\"412c1ce9-c|
              00000090  39 33 61 2d 34 37 64 38  2d 38 66 31 35 2d 32 31  |93a-47d8-8f15-21|
              000000a0  37 30 31 66 64 66 39 65  38 64 5c 22 7d 22 3a 7b  |701fdf9e8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h5mvf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h5mvf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879904607,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 17:56:47.657953 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5164" for this suite. @ 04/10/25 17:56:47.661
• [2.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/10/25 17:56:47.664
  I0410 17:56:47.664224 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pod-network-test @ 04/10/25 17:56:47.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:56:47.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:56:47.678
  STEP: Performing setup for networking test in namespace pod-network-test-8787 @ 04/10/25 17:56:47.679
  STEP: creating a selector @ 04/10/25 17:56:47.679
  STEP: Creating the service pods in kubernetes @ 04/10/25 17:56:47.679
  I0410 17:56:47.679885 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/10/25 17:56:59.827
  I0410 17:57:01.845340 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0410 17:57:01.845388 23 networking.go:42] Breadth first check of 10.244.0.108 on host 192.168.49.2...
  I0410 17:57:01.848018 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.243:9080/dial?request=hostname&protocol=http&host=10.244.0.108&port=8083&tries=1'] Namespace:pod-network-test-8787 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:57:01.848066 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:57:01.848783 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:57:01.848870 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8787/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.243%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.108%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0410 17:57:01.923143 23 utils.go:356] Waiting for responses: map[]
  I0410 17:57:01.923190 23 utils.go:360] reached 10.244.0.108 after 0/1 tries
  I0410 17:57:01.923205 23 networking.go:42] Breadth first check of 10.244.1.242 on host 192.168.49.3...
  I0410 17:57:01.926515 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.243:9080/dial?request=hostname&protocol=http&host=10.244.1.242&port=8083&tries=1'] Namespace:pod-network-test-8787 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 17:57:01.926541 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 17:57:01.926977 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 17:57:01.927026 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8787/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.243%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.242%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0410 17:57:01.993199 23 utils.go:356] Waiting for responses: map[]
  I0410 17:57:01.993272 23 utils.go:360] reached 10.244.1.242 after 0/1 tries
  I0410 17:57:01.993295 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0410 17:57:01.993562 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8787" for this suite. @ 04/10/25 17:57:01.996
• [14.336 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/10/25 17:57:02
  I0410 17:57:02.000829 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pods @ 04/10/25 17:57:02.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:02.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:02.013
  STEP: Create set of pods @ 04/10/25 17:57:02.015
  I0410 17:57:02.020635 23 pods.go:871] created test-pod-1
  I0410 17:57:02.029042 23 pods.go:871] created test-pod-2
  I0410 17:57:02.036704 23 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/10/25 17:57:02.036
  STEP: waiting for all pods to be deleted @ 04/10/25 17:57:04.068
  I0410 17:57:04.149047 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0410 17:57:05.071865 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0410 17:57:06.071521 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-252" for this suite. @ 04/10/25 17:57:06.073
• [4.078 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 04/10/25 17:57:06.078
  I0410 17:57:06.078696 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pv @ 04/10/25 17:57:06.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:06.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:06.091
  STEP: Creating initial PV and PVC @ 04/10/25 17:57:06.093
  I0410 17:57:06.093288 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4015" @ 04/10/25 17:57:06.1
  STEP: Listing PVCs in namespace "pv-4015" @ 04/10/25 17:57:06.101
  STEP: Patching the PV "pv-4015-n2t56" @ 04/10/25 17:57:06.104
  STEP: Patching the PVC "pvc-wzn8f" @ 04/10/25 17:57:06.116
  STEP: Getting PV "pv-4015-n2t56" @ 04/10/25 17:57:06.121
  STEP: Getting PVC "pvc-wzn8f" @ 04/10/25 17:57:06.123
  STEP: Deleting PVC "pvc-wzn8f" @ 04/10/25 17:57:06.124
  STEP: Confirm deletion of PVC "pvc-wzn8f" @ 04/10/25 17:57:06.127
  STEP: Deleting PV "pv-4015-n2t56" @ 04/10/25 17:57:08.132
  STEP: Confirm deletion of PV "pv-4015-n2t56" @ 04/10/25 17:57:08.136
  STEP: Recreating another PV & PVC @ 04/10/25 17:57:10.143
  I0410 17:57:10.143589 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-4015-br9sh" @ 04/10/25 17:57:10.157
  STEP: Updating the PVC "pvc-g4bcw" @ 04/10/25 17:57:10.166
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-g4bcw=updated" @ 04/10/25 17:57:10.175
  STEP: Deleting PVC "pvc-g4bcw" via DeleteCollection @ 04/10/25 17:57:10.178
  STEP: Confirm deletion of PVC "pvc-g4bcw" @ 04/10/25 17:57:10.184
  STEP: Deleting PV "pv-4015-br9sh" via DeleteCollection @ 04/10/25 17:57:10.192
  STEP: Confirm deletion of PV "pv-4015-br9sh" @ 04/10/25 17:57:10.25
  I0410 17:57:12.256217 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0410 17:57:12.256268 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-g4bcw"
  I0410 17:57:12.257872 23 pv.go:193] Deleting PersistentVolume "pv-4015-br9sh"
  I0410 17:57:12.259560 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4015" for this suite. @ 04/10/25 17:57:12.261
• [6.189 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 04/10/25 17:57:12.268
  I0410 17:57:12.268187 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:57:12.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:12.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:12.279
  STEP: Creating configMap with name projected-configmap-test-volume-e43e450d-6437-405b-916e-9858d62232c2 @ 04/10/25 17:57:12.282
  STEP: Creating a pod to test consume configMaps @ 04/10/25 17:57:12.285
  STEP: Saw pod success @ 04/10/25 17:57:16.305
  I0410 17:57:16.308856 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-e0275c5a-e23c-4b7f-a137-25849d2e651e container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 17:57:16.316
  I0410 17:57:16.333192 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7054" for this suite. @ 04/10/25 17:57:16.336
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 04/10/25 17:57:16.343
  I0410 17:57:16.343158 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 17:57:16.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:16.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:16.357
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 17:57:16.359
  STEP: Saw pod success @ 04/10/25 17:57:18.375
  I0410 17:57:18.378766 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-62bf7fb5-afcd-486e-8081-11ca58f7ee72 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 17:57:18.386
  I0410 17:57:18.401885 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7529" for this suite. @ 04/10/25 17:57:18.406
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 04/10/25 17:57:18.411
  I0410 17:57:18.411476 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename daemonsets @ 04/10/25 17:57:18.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:18.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:18.427
  STEP: Creating simple DaemonSet "daemon-set" @ 04/10/25 17:57:18.52
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/10/25 17:57:18.526
  I0410 17:57:18.608239 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:57:18.608274 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:57:19.537014 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0410 17:57:19.537059 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 17:57:20.537015 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0410 17:57:20.537058 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 04/10/25 17:57:20.539
  I0410 17:57:20.542514 23 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/10/25 17:57:20.542
  I0410 17:57:20.551933 23 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/10/25 17:57:20.552
  I0410 17:57:20.553850 23 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0410 17:57:20.554018 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0410 17:57:20.554151 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0410 17:57:20.554281 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0410 17:57:20.554394 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0410 17:57:20.554428 23 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-7048 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0410 17:57:20.554450 23 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/10/25 17:57:20.554
  STEP: watching for the daemon set status to be patched @ 04/10/25 17:57:20.562
  I0410 17:57:20.564279 23 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0410 17:57:20.564483 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0410 17:57:20.564647 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0410 17:57:20.564905 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0410 17:57:20.565138 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0410 17:57:20.565178 23 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-7048 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0410 17:57:20.565346 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0410 17:57:20.565382 23 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-7048 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0410 17:57:20.565403 23 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/10/25 17:57:20.568
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7048, will wait for the garbage collector to delete the pods @ 04/10/25 17:57:20.568
  I0410 17:57:20.628558 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.739711ms
  I0410 17:57:20.729140 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.583502ms
  I0410 17:57:21.735150 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 17:57:21.735209 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0410 17:57:21.738223 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15384"},"items":null}

  I0410 17:57:21.740999 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15384"},"items":null}

  I0410 17:57:21.749719 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7048" for this suite. @ 04/10/25 17:57:21.752
• [3.347 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 04/10/25 17:57:21.758
  I0410 17:57:21.758292 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 17:57:21.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:21.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:21.772
  STEP: Creating configMap with name cm-test-opt-del-dbab8bd6-fd9f-4158-a75b-26bdf48b926a @ 04/10/25 17:57:21.846
  STEP: Creating configMap with name cm-test-opt-upd-cf1f6097-5615-4169-9506-b2f16b4a654a @ 04/10/25 17:57:21.853
  STEP: Creating the pod @ 04/10/25 17:57:21.857
  STEP: Deleting configmap cm-test-opt-del-dbab8bd6-fd9f-4158-a75b-26bdf48b926a @ 04/10/25 17:57:23.9
  STEP: Updating configmap cm-test-opt-upd-cf1f6097-5615-4169-9506-b2f16b4a654a @ 04/10/25 17:57:23.906
  STEP: Creating configMap with name cm-test-opt-create-f2591221-04bf-45ae-b785-5bbf5b364dec @ 04/10/25 17:57:23.91
  STEP: waiting to observe update in volume @ 04/10/25 17:57:23.916
  I0410 17:57:25.949977 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3123" for this suite. @ 04/10/25 17:57:25.953
• [4.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/10/25 17:57:25.959
  I0410 17:57:25.960034 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename replicaset @ 04/10/25 17:57:25.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:25.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:25.976
  I0410 17:57:25.978750 23 replica_set.go:191] Creating ReplicaSet my-hostname-basic-38e730cb-aadc-4f58-95a6-d95b98981575
  I0410 17:57:25.990460 23 resource.go:87] Pod name my-hostname-basic-38e730cb-aadc-4f58-95a6-d95b98981575: Found 0 pods out of 1
  I0410 17:57:30.996467 23 resource.go:87] Pod name my-hostname-basic-38e730cb-aadc-4f58-95a6-d95b98981575: Found 1 pods out of 1
  I0410 17:57:30.996509 23 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-38e730cb-aadc-4f58-95a6-d95b98981575" is running
  I0410 17:57:30.998851 23 replica_set.go:220] Pod "my-hostname-basic-38e730cb-aadc-4f58-95a6-d95b98981575-j9dqs" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-10 17:57:27 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-10 17:57:25 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-10 17:57:27 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-10 17:57:27 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-10 17:57:25 +0000 UTC Reason: Message:}])
  I0410 17:57:30.998897 23 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/10/25 17:57:30.998
  I0410 17:57:31.100015 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1503" for this suite. @ 04/10/25 17:57:31.102
• [5.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 04/10/25 17:57:31.107
  I0410 17:57:31.107530 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename disruption @ 04/10/25 17:57:31.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:31.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:31.121
  STEP: Waiting for the pdb to be processed @ 04/10/25 17:57:31.127
  STEP: Updating PodDisruptionBudget status @ 04/10/25 17:57:33.134
  STEP: Waiting for all pods to be running @ 04/10/25 17:57:33.145
  I0410 17:57:33.148925 23 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 04/10/25 17:57:35.151
  STEP: Waiting for the pdb to be processed @ 04/10/25 17:57:35.163
  STEP: Patching PodDisruptionBudget status @ 04/10/25 17:57:35.168
  STEP: Waiting for the pdb to be processed @ 04/10/25 17:57:35.176
  I0410 17:57:35.178762 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2274" for this suite. @ 04/10/25 17:57:35.183
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/10/25 17:57:35.188
  I0410 17:57:35.188526 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename events @ 04/10/25 17:57:35.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:35.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:35.206
  STEP: creating a test event @ 04/10/25 17:57:35.209
  STEP: listing all events in all namespaces @ 04/10/25 17:57:35.213
  STEP: patching the test event @ 04/10/25 17:57:35.217
  STEP: fetching the test event @ 04/10/25 17:57:35.221
  STEP: updating the test event @ 04/10/25 17:57:35.223
  STEP: getting the test event @ 04/10/25 17:57:35.227
  STEP: deleting the test event @ 04/10/25 17:57:35.228
  STEP: listing all events in all namespaces @ 04/10/25 17:57:35.231
  I0410 17:57:35.233931 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-66" for this suite. @ 04/10/25 17:57:35.285
• [0.103 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 04/10/25 17:57:35.291
  I0410 17:57:35.291462 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename field-validation @ 04/10/25 17:57:35.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:35.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:35.309
  I0410 17:57:35.312836 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  W0410 17:57:37.860810      23 warnings.go:70] unknown field "alpha"
  W0410 17:57:37.860863      23 warnings.go:70] unknown field "beta"
  W0410 17:57:37.860874      23 warnings.go:70] unknown field "delta"
  W0410 17:57:37.860884      23 warnings.go:70] unknown field "epsilon"
  W0410 17:57:37.860894      23 warnings.go:70] unknown field "gamma"
  I0410 17:57:38.400066 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3154" for this suite. @ 04/10/25 17:57:38.403
• [3.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 04/10/25 17:57:38.41
  I0410 17:57:38.410154 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 17:57:38.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:38.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:38.425
  STEP: starting the proxy server @ 04/10/25 17:57:38.427
  I0410 17:57:38.427708 23 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-6975 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/10/25 17:57:38.465
  I0410 17:57:38.471096 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0410 17:57:38.472736 23 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:33349

  I0410 17:57:38.472753 23 kubectl.go:2229] kubectl proxy stderr: W0410 17:57:38.464741    1578 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-6975" for this suite. @ 04/10/25 17:57:38.505
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 04/10/25 17:57:38.512
  I0410 17:57:38.512213 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 17:57:38.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:38.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:38.528
  STEP: Creating configMap that has name configmap-test-emptyKey-a40d6851-3642-4884-828a-d60bde058c8f @ 04/10/25 17:57:38.531
  I0410 17:57:38.533108 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3294" for this suite. @ 04/10/25 17:57:38.605
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/10/25 17:57:38.612
  I0410 17:57:38.612687 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sysctl @ 04/10/25 17:57:38.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:38.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:38.627
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/10/25 17:57:38.629
  STEP: Watching for error events or started pod @ 04/10/25 17:57:38.636
  STEP: Waiting for pod completion @ 04/10/25 17:57:40.642
  STEP: Checking that the pod succeeded @ 04/10/25 17:57:42.653
  STEP: Getting logs from the pod @ 04/10/25 17:57:42.653
  STEP: Checking that the sysctl is actually updated @ 04/10/25 17:57:42.661
  I0410 17:57:42.661420 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8291" for this suite. @ 04/10/25 17:57:42.664
• [4.058 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 04/10/25 17:57:42.671
  I0410 17:57:42.671265 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename resourcequota @ 04/10/25 17:57:42.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:42.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:42.688
  STEP: Counting existing ResourceQuota @ 04/10/25 17:57:42.691
  STEP: Creating a ResourceQuota @ 04/10/25 17:57:47.697
  STEP: Ensuring resource quota status is calculated @ 04/10/25 17:57:47.702
  STEP: Creating a ReplicationController @ 04/10/25 17:57:49.708
  STEP: Ensuring resource quota status captures replication controller creation @ 04/10/25 17:57:49.727
  STEP: Deleting a ReplicationController @ 04/10/25 17:57:51.734
  STEP: Ensuring resource quota status released usage @ 04/10/25 17:57:51.742
  I0410 17:57:53.747570 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5551" for this suite. @ 04/10/25 17:57:53.751
• [11.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/10/25 17:57:53.759
  I0410 17:57:53.759442 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 17:57:53.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:53.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:53.773
  STEP: Creating secret with name secret-test-5934cc27-e854-4552-bd2d-68a8143ba28d @ 04/10/25 17:57:53.775
  STEP: Creating a pod to test consume secrets @ 04/10/25 17:57:53.779
  STEP: Saw pod success @ 04/10/25 17:57:57.802
  I0410 17:57:57.805703 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-secrets-511d669b-c4bd-484c-8782-a4448dd0f23f container secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 17:57:57.813
  I0410 17:57:57.828451 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3534" for this suite. @ 04/10/25 17:57:57.832
• [4.078 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/10/25 17:57:57.837
  I0410 17:57:57.837465 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 17:57:57.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:57.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:57.852
  I0410 17:57:57.878495 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3828" for this suite. @ 04/10/25 17:57:57.933
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/10/25 17:57:57.944
  I0410 17:57:57.944857 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 17:57:57.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:57:57.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:57:57.96
  STEP: Creating secret with name secret-test-1f772a2f-85fc-4d68-b1cf-b9633a3e70b4 @ 04/10/25 17:57:57.961
  STEP: Creating a pod to test consume secrets @ 04/10/25 17:57:57.965
  STEP: Saw pod success @ 04/10/25 17:58:01.984
  I0410 17:58:01.987711 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-secrets-85978b2f-d4d9-4614-a736-5266a88b92c9 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 17:58:01.994
  I0410 17:58:02.009413 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4475" for this suite. @ 04/10/25 17:58:02.012
• [4.073 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 04/10/25 17:58:02.017
  I0410 17:58:02.017715 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename aggregator @ 04/10/25 17:58:02.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:58:02.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:58:02.032
  I0410 17:58:02.034593 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Registering the sample API server. @ 04/10/25 17:58:02.035
  I0410 17:58:02.385003 23 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0410 17:58:02.399586 23 deployment.go:223] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  I0410 17:58:04.447457 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:06.452451 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:08.450918 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:10.453937 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:12.452370 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:14.452740 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:16.454876 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:18.454972 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:20.454333 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:22.452568 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:24.453788 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:26.453571 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:28.453591 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 17:58:30.575864 23 aggregator.go:755] Waited 115.4327ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/10/25 17:58:30.608
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/10/25 17:58:30.609
  STEP: List APIServices @ 04/10/25 17:58:30.614
  I0410 17:58:30.616148 23 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/10/25 17:58:30.616
  I0410 17:58:30.624081 23 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/10/25 17:58:30.624
  I0410 17:58:30.629062 23 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.April, 10, 17, 58, 30, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/10/25 17:58:30.629
  I0410 17:58:30.630534 23 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-04-10 17:58:30 +0000 UTC Passed all checks passed}
  I0410 17:58:30.630566 23 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0410 17:58:30.630580 23 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/10/25 17:58:30.63
  I0410 17:58:30.636132 23 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-789748982" @ 04/10/25 17:58:30.636
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/10/25 17:58:30.642
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/10/25 17:58:30.647
  STEP: Patch APIService Status @ 04/10/25 17:58:30.649
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/10/25 17:58:30.653
  I0410 17:58:30.654560 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-04-10 17:58:30 +0000 UTC Passed all checks passed}
  I0410 17:58:30.654618 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0410 17:58:30.654638 23 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0410 17:58:30.654659 23 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/10/25 17:58:30.654
  STEP: Confirm that the generated APIService has been deleted @ 04/10/25 17:58:30.658
  I0410 17:58:30.658675 23 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0410 17:58:30.659560 23 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0410 17:58:30.659577 23 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0410 17:58:30.718024 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2544" for this suite. @ 04/10/25 17:58:30.72
• [28.707 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 04/10/25 17:58:30.724
  I0410 17:58:30.725001 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 17:58:30.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:58:30.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:58:30.737
  STEP: Setting up server cert @ 04/10/25 17:58:30.838
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 17:58:31.079
  STEP: Deploying the webhook pod @ 04/10/25 17:58:31.082
  STEP: Wait for the deployment to be ready @ 04/10/25 17:58:31.088
  I0410 17:58:31.093175 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 17:58:33.099
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 17:58:33.105
  I0410 17:58:34.105865 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/10/25 17:58:34.173
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/10/25 17:58:34.203
  STEP: Deleting the collection of validation webhooks @ 04/10/25 17:58:34.23
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/10/25 17:58:34.262
  I0410 17:58:34.292678 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5237" for this suite. @ 04/10/25 17:58:34.295
  STEP: Destroying namespace "webhook-markers-2607" for this suite. @ 04/10/25 17:58:34.298
• [3.579 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 04/10/25 17:58:34.303
  I0410 17:58:34.303907 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename cronjob @ 04/10/25 17:58:34.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 17:58:34.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 17:58:34.314
  STEP: Creating a ReplaceConcurrent cronjob @ 04/10/25 17:58:34.316
  STEP: Ensuring a job is scheduled @ 04/10/25 17:58:34.319
  STEP: Ensuring exactly one is scheduled @ 04/10/25 17:59:00.325
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/10/25 17:59:00.328
  STEP: Ensuring the job is replaced with a new one @ 04/10/25 17:59:00.332
  STEP: Removing cronjob @ 04/10/25 18:00:00.338
  I0410 18:00:00.344771 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6347" for this suite. @ 04/10/25 18:00:00.348
• [86.052 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 04/10/25 18:00:00.355
  I0410 18:00:00.355811 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/10/25 18:00:00.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:00:00.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:00:00.375
  STEP: creating the policy @ 04/10/25 18:00:00.381
  STEP: waiting until the marker is denied @ 04/10/25 18:00:00.396
  STEP: testing a replicated Deployment to be allowed @ 04/10/25 18:00:01.3
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/10/25 18:00:01.31
  I0410 18:00:01.346245 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4768" for this suite. @ 04/10/25 18:00:01.349
• [0.997 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/10/25 18:00:01.352
  I0410 18:00:01.352511 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename podtemplate @ 04/10/25 18:00:01.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:00:01.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:00:01.363
  STEP: Create set of pod templates @ 04/10/25 18:00:01.364
  I0410 18:00:01.367756 23 podtemplates.go:143] created test-podtemplate-1
  I0410 18:00:01.369965 23 podtemplates.go:143] created test-podtemplate-2
  I0410 18:00:01.372241 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/10/25 18:00:01.372
  STEP: delete collection of pod templates @ 04/10/25 18:00:01.373
  I0410 18:00:01.373623 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/10/25 18:00:01.38
  I0410 18:00:01.380065 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0410 18:00:01.381386 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4598" for this suite. @ 04/10/25 18:00:01.452
• [0.106 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/10/25 18:00:01.458
  I0410 18:00:01.458882 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename init-container @ 04/10/25 18:00:01.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:00:01.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:00:01.477
  STEP: creating the pod @ 04/10/25 18:00:01.48
  I0410 18:00:01.480861 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0410 18:00:46.445601 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-a410f55f-e830-4fed-a266-25764ef7e43a", GenerateName:"", Namespace:"init-container-8874", SelfLink:"", UID:"42678343-be3f-474e-a7c2-77f7314c3d9e", ResourceVersion:"16330", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 0, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"480845793"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 0, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039d6060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 0, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039d6090), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-drtfc", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005ca0020), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-drtfc", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-drtfc", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-drtfc", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0012280d8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8sconformance-m02", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc005cd8080), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001228150)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001228170)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc001228178), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00122817c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0039ce030), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 10, 18, 0, 3, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 10, 18, 0, 1, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 10, 18, 0, 1, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 10, 18, 0, 1, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 10, 18, 0, 1, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.49.3", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.49.3"}}, PodIP:"10.244.1.8", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.8"}}, StartTime:time.Date(2025, time.April, 10, 18, 0, 1, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00030e150)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00030e1c0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"docker-pullable://registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"docker://285b0d007b3eebc726638f7f4d87352876c3756e756326370e8861d843c3306e", Started:(*bool)(0xc00122822a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-drtfc", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0039ce050)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005ca0080), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00122823d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-drtfc", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0039ce060)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005ca0060), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0012281ff), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-drtfc", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0039ce040)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0410 18:00:46.445850 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8874" for this suite. @ 04/10/25 18:00:46.45
• [44.997 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 04/10/25 18:00:46.457
  I0410 18:00:46.457207 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 18:00:46.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:00:46.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:00:46.469
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 18:00:46.471
  STEP: Saw pod success @ 04/10/25 18:00:50.495
  I0410 18:00:50.499568 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-eb7fba0f-5e42-48cd-8289-9fbfb42856a9 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 18:00:50.513
  I0410 18:00:50.527106 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3205" for this suite. @ 04/10/25 18:00:50.529
• [4.076 seconds]
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 04/10/25 18:00:50.533
  I0410 18:00:50.533572 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 18:00:50.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:00:50.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:00:50.549
  STEP: Creating the pod @ 04/10/25 18:00:50.552
  I0410 18:00:53.097090 23 pod_client.go:173] Successfully updated pod "annotationupdate906849da-ca29-42fc-aec4-0054960a28ec"
  I0410 18:00:55.118882 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-308" for this suite. @ 04/10/25 18:00:55.122
• [4.595 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 04/10/25 18:00:55.129
  I0410 18:00:55.129136 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 18:00:55.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:00:55.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:00:55.146
  STEP: Setting up server cert @ 04/10/25 18:00:55.25
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 18:00:55.502
  STEP: Deploying the webhook pod @ 04/10/25 18:00:55.507
  STEP: Wait for the deployment to be ready @ 04/10/25 18:00:55.514
  I0410 18:00:55.519331 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 18:00:57.531
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 18:00:57.545
  I0410 18:00:58.545344 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/10/25 18:00:58.549
  STEP: create a pod that should be denied by the webhook @ 04/10/25 18:00:58.561
  STEP: create a pod that causes the webhook to hang @ 04/10/25 18:00:58.569
  STEP: create a configmap that should be denied by the webhook @ 04/10/25 18:01:08.576
  STEP: create a configmap that should be admitted by the webhook @ 04/10/25 18:01:08.601
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/10/25 18:01:08.613
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/10/25 18:01:08.62
  STEP: create a namespace that bypass the webhook @ 04/10/25 18:01:08.626
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/10/25 18:01:08.638
  I0410 18:01:08.680036 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2864" for this suite. @ 04/10/25 18:01:08.682
  STEP: Destroying namespace "webhook-markers-5969" for this suite. @ 04/10/25 18:01:08.687
  STEP: Destroying namespace "exempted-namespace-8577" for this suite. @ 04/10/25 18:01:08.693
• [13.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 04/10/25 18:01:08.698
  I0410 18:01:08.698273 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename taint-single-pod @ 04/10/25 18:01:08.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:01:08.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:01:08.737
  I0410 18:01:08.739533 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0410 18:02:08.741235 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I0410 18:02:08.743878 23 taints.go:144] Starting informer...
  STEP: Starting pod... @ 04/10/25 18:02:08.743
  I0410 18:02:08.957667 23 taints.go:294] Pod is running on k8sconformance-m02. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/10/25 18:02:08.957
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/10/25 18:02:08.974
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/10/25 18:02:08.978
  I0410 18:02:08.978985 23 taints.go:313] Pod wasn't evicted. Proceeding
  I0410 18:02:08.979026 23 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/10/25 18:02:08.993
  STEP: Waiting some time to make sure that toleration time passed. @ 04/10/25 18:02:09
  I0410 18:03:24.002053 23 taints.go:329] Pod wasn't evicted. Test successful
  I0410 18:03:24.002469 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4280" for this suite. @ 04/10/25 18:03:24.008
• [135.320 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 04/10/25 18:03:24.018
  I0410 18:03:24.018302 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 18:03:24.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:03:24.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:03:24.038
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/10/25 18:03:24.042
  STEP: Saw pod success @ 04/10/25 18:03:26.062
  I0410 18:03:26.066349 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-7b38464b-5ef7-4c26-9f35-66a301d546c2 container test-container: <nil>
  STEP: delete the pod @ 04/10/25 18:03:26.087
  I0410 18:03:26.100843 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9784" for this suite. @ 04/10/25 18:03:26.104
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 04/10/25 18:03:26.11
  I0410 18:03:26.110188 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 18:03:26.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:03:26.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:03:26.125
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 18:03:26.126
  STEP: Saw pod success @ 04/10/25 18:03:28.141
  I0410 18:03:28.144410 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-0c240e97-cc7c-4c28-89c2-19f151277684 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 18:03:28.152
  I0410 18:03:28.163759 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4912" for this suite. @ 04/10/25 18:03:28.165
• [2.059 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 04/10/25 18:03:28.169
  I0410 18:03:28.170023 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename replication-controller @ 04/10/25 18:03:28.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:03:28.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:03:28.19
  STEP: Creating replication controller my-hostname-basic-443a6040-73ec-4ec0-bdec-f9429b6d37e4 @ 04/10/25 18:03:28.193
  I0410 18:03:28.201058 23 resource.go:87] Pod name my-hostname-basic-443a6040-73ec-4ec0-bdec-f9429b6d37e4: Found 0 pods out of 1
  I0410 18:03:33.205675 23 resource.go:87] Pod name my-hostname-basic-443a6040-73ec-4ec0-bdec-f9429b6d37e4: Found 1 pods out of 1
  I0410 18:03:33.205754 23 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-443a6040-73ec-4ec0-bdec-f9429b6d37e4" are running
  I0410 18:03:33.210768 23 rc.go:523] Pod "my-hostname-basic-443a6040-73ec-4ec0-bdec-f9429b6d37e4-twzpw" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-10 18:03:28 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-10 18:03:28 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-10 18:03:28 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-10 18:03:28 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-10 18:03:28 +0000 UTC Reason: Message:}])
  I0410 18:03:33.210851 23 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/10/25 18:03:33.21
  I0410 18:03:33.226781 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5320" for this suite. @ 04/10/25 18:03:33.232
• [5.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/10/25 18:03:33.237
  I0410 18:03:33.237546 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename server-version @ 04/10/25 18:03:33.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:03:33.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:03:33.251
  STEP: Request ServerVersion @ 04/10/25 18:03:33.252
  STEP: Confirm major version @ 04/10/25 18:03:33.252
  I0410 18:03:33.252928 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 04/10/25 18:03:33.252
  I0410 18:03:33.252948 23 server_version.go:58] cleanMinorVersion: 31
  I0410 18:03:33.252953 23 server_version.go:62] Minor version: 31
  I0410 18:03:33.252995 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-858" for this suite. @ 04/10/25 18:03:33.331
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 04/10/25 18:03:33.335
  I0410 18:03:33.335681 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename svcaccounts @ 04/10/25 18:03:33.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:03:33.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:03:33.35
  STEP: reading a file in the container @ 04/10/25 18:03:35.451
  I0410 18:03:35.451784 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-880 pod-service-account-5e49594d-1f5c-436d-9ff9-1be3c8de00ae -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/10/25 18:03:35.553
  I0410 18:03:35.553462 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-880 pod-service-account-5e49594d-1f5c-436d-9ff9-1be3c8de00ae -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/10/25 18:03:35.665
  I0410 18:03:35.665989 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-880 pod-service-account-5e49594d-1f5c-436d-9ff9-1be3c8de00ae -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0410 18:03:35.772793 23 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-880"
  I0410 18:03:35.775703 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-880" for this suite. @ 04/10/25 18:03:35.778
• [2.449 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 04/10/25 18:03:35.784
  I0410 18:03:35.784654 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubelet-test @ 04/10/25 18:03:35.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:03:35.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:03:35.797
  STEP: Waiting for pod completion @ 04/10/25 18:03:35.803
  I0410 18:03:39.819972 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4382" for this suite. @ 04/10/25 18:03:39.822
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 04/10/25 18:03:39.828
  I0410 18:03:39.828977 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename replication-controller @ 04/10/25 18:03:39.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:03:39.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:03:39.84
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/10/25 18:03:39.841
  STEP: When a replication controller with a matching selector is created @ 04/10/25 18:03:41.856
  STEP: Then the orphan pod is adopted @ 04/10/25 18:03:41.861
  I0410 18:03:42.870648 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1385" for this suite. @ 04/10/25 18:03:42.873
• [3.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/10/25 18:03:42.88
  I0410 18:03:42.880589 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/10/25 18:03:42.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:03:42.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:03:42.896
  I0410 18:03:42.899977 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:03:43.440864 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8673" for this suite. @ 04/10/25 18:03:43.447
• [0.573 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/10/25 18:03:43.453
  I0410 18:03:43.453926 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename watch @ 04/10/25 18:03:43.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:03:43.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:03:43.469
  STEP: creating a watch on configmaps with a certain label @ 04/10/25 18:03:43.472
  STEP: creating a new configmap @ 04/10/25 18:03:43.473
  STEP: modifying the configmap once @ 04/10/25 18:03:43.477
  STEP: changing the label value of the configmap @ 04/10/25 18:03:43.484
  STEP: Expecting to observe a delete notification for the watched object @ 04/10/25 18:03:43.492
  I0410 18:03:43.492803 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9131  a3e78cbf-31f3-4afe-b491-05803e3f9564 16836 0 2025-04-10 18:03:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-10 18:03:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:03:43.492980 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9131  a3e78cbf-31f3-4afe-b491-05803e3f9564 16837 0 2025-04-10 18:03:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-10 18:03:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:03:43.493130 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9131  a3e78cbf-31f3-4afe-b491-05803e3f9564 16838 0 2025-04-10 18:03:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-10 18:03:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/10/25 18:03:43.493
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/10/25 18:03:43.5
  STEP: changing the label value of the configmap back @ 04/10/25 18:03:53.501
  STEP: modifying the configmap a third time @ 04/10/25 18:03:53.512
  STEP: deleting the configmap @ 04/10/25 18:03:53.522
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/10/25 18:03:53.527
  I0410 18:03:53.527331 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9131  a3e78cbf-31f3-4afe-b491-05803e3f9564 16878 0 2025-04-10 18:03:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-10 18:03:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:03:53.527522 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9131  a3e78cbf-31f3-4afe-b491-05803e3f9564 16879 0 2025-04-10 18:03:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-10 18:03:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:03:53.527663 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9131  a3e78cbf-31f3-4afe-b491-05803e3f9564 16880 0 2025-04-10 18:03:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-10 18:03:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:03:53.527843 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9131" for this suite. @ 04/10/25 18:03:53.531
• [10.083 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 04/10/25 18:03:53.536
  I0410 18:03:53.536780 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 18:03:53.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:03:53.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:03:53.551
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 18:03:53.553
  STEP: Saw pod success @ 04/10/25 18:03:55.565
  I0410 18:03:55.568539 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-139f1ba6-50be-4148-91f8-6408cef7791d container client-container: <nil>
  STEP: delete the pod @ 04/10/25 18:03:55.575
  I0410 18:03:55.591156 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6628" for this suite. @ 04/10/25 18:03:55.594
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 04/10/25 18:03:55.6
  I0410 18:03:55.600614 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename containers @ 04/10/25 18:03:55.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:03:55.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:03:55.615
  STEP: Creating a pod to test override command @ 04/10/25 18:03:55.618
  STEP: Saw pod success @ 04/10/25 18:03:59.64
  I0410 18:03:59.643582 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod client-containers-1c92665b-cc94-41d1-9888-2f9ea077e412 container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 18:03:59.65
  I0410 18:03:59.666017 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7268" for this suite. @ 04/10/25 18:03:59.669
• [4.074 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 04/10/25 18:03:59.674
  I0410 18:03:59.674736 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename field-validation @ 04/10/25 18:03:59.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:03:59.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:03:59.69
  I0410 18:03:59.692881 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:04:02.780727 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7257" for this suite. @ 04/10/25 18:04:02.784
• [3.117 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/10/25 18:04:02.791
  I0410 18:04:02.791665 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename svc-latency @ 04/10/25 18:04:02.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:04:02.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:04:02.806
  I0410 18:04:02.810084 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-9645 @ 04/10/25 18:04:02.81
  I0410 18:04:02.816744      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-9645, replica count: 1
  I0410 18:04:03.868495      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0410 18:04:04.869418      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0410 18:04:04.983916 23 service_latency.go:356] Created: latency-svc-mvdh6
  I0410 18:04:04.990076 23 service_latency.go:363] Got endpoints: latency-svc-mvdh6 [20.262517ms]
  I0410 18:04:05.002879 23 service_latency.go:356] Created: latency-svc-g96f9
  I0410 18:04:05.007720 23 service_latency.go:363] Got endpoints: latency-svc-g96f9 [17.439686ms]
  I0410 18:04:05.009830 23 service_latency.go:356] Created: latency-svc-shgb4
  I0410 18:04:05.017590 23 service_latency.go:363] Got endpoints: latency-svc-shgb4 [27.231965ms]
  I0410 18:04:05.020759 23 service_latency.go:356] Created: latency-svc-l6tl5
  I0410 18:04:05.027510 23 service_latency.go:363] Got endpoints: latency-svc-l6tl5 [37.1397ms]
  I0410 18:04:05.029894 23 service_latency.go:356] Created: latency-svc-qslcm
  I0410 18:04:05.036389 23 service_latency.go:363] Got endpoints: latency-svc-qslcm [45.981474ms]
  I0410 18:04:05.040728 23 service_latency.go:356] Created: latency-svc-ztrf5
  I0410 18:04:05.057962 23 service_latency.go:363] Got endpoints: latency-svc-ztrf5 [67.394746ms]
  I0410 18:04:05.060758 23 service_latency.go:356] Created: latency-svc-zp6w9
  I0410 18:04:05.070925 23 service_latency.go:363] Got endpoints: latency-svc-zp6w9 [80.59926ms]
  I0410 18:04:05.074073 23 service_latency.go:356] Created: latency-svc-tlng6
  I0410 18:04:05.081872 23 service_latency.go:363] Got endpoints: latency-svc-tlng6 [91.347798ms]
  I0410 18:04:05.086692 23 service_latency.go:356] Created: latency-svc-dnv2c
  I0410 18:04:05.094703 23 service_latency.go:363] Got endpoints: latency-svc-dnv2c [104.219625ms]
  I0410 18:04:05.096490 23 service_latency.go:356] Created: latency-svc-497k8
  I0410 18:04:05.101032 23 service_latency.go:363] Got endpoints: latency-svc-497k8 [110.476709ms]
  I0410 18:04:05.108040 23 service_latency.go:356] Created: latency-svc-wvg7l
  I0410 18:04:05.114438 23 service_latency.go:363] Got endpoints: latency-svc-wvg7l [124.034536ms]
  I0410 18:04:05.117814 23 service_latency.go:356] Created: latency-svc-ggfj6
  I0410 18:04:05.121326 23 service_latency.go:363] Got endpoints: latency-svc-ggfj6 [130.75615ms]
  I0410 18:04:05.129013 23 service_latency.go:356] Created: latency-svc-4srjr
  I0410 18:04:05.135639 23 service_latency.go:363] Got endpoints: latency-svc-4srjr [145.16567ms]
  I0410 18:04:05.137900 23 service_latency.go:356] Created: latency-svc-mtddv
  I0410 18:04:05.140927 23 service_latency.go:363] Got endpoints: latency-svc-mtddv [150.355016ms]
  I0410 18:04:05.147961 23 service_latency.go:356] Created: latency-svc-hh7jk
  I0410 18:04:05.184989 23 service_latency.go:363] Got endpoints: latency-svc-hh7jk [194.75692ms]
  I0410 18:04:05.187887 23 service_latency.go:356] Created: latency-svc-b9ghh
  I0410 18:04:05.197178 23 service_latency.go:363] Got endpoints: latency-svc-b9ghh [206.543306ms]
  I0410 18:04:05.203296 23 service_latency.go:356] Created: latency-svc-5whfm
  I0410 18:04:05.211865 23 service_latency.go:363] Got endpoints: latency-svc-5whfm [204.020761ms]
  I0410 18:04:05.214989 23 service_latency.go:356] Created: latency-svc-kxs7k
  I0410 18:04:05.223748 23 service_latency.go:363] Got endpoints: latency-svc-kxs7k [206.054486ms]
  I0410 18:04:05.230373 23 service_latency.go:356] Created: latency-svc-xf2sc
  I0410 18:04:05.239306 23 service_latency.go:363] Got endpoints: latency-svc-xf2sc [211.741173ms]
  I0410 18:04:05.242893 23 service_latency.go:356] Created: latency-svc-q7ddx
  I0410 18:04:05.250376 23 service_latency.go:363] Got endpoints: latency-svc-q7ddx [213.850794ms]
  I0410 18:04:05.252220 23 service_latency.go:356] Created: latency-svc-mmvbd
  I0410 18:04:05.261455 23 service_latency.go:363] Got endpoints: latency-svc-mmvbd [203.252773ms]
  I0410 18:04:05.264584 23 service_latency.go:356] Created: latency-svc-cljvj
  I0410 18:04:05.272450 23 service_latency.go:363] Got endpoints: latency-svc-cljvj [201.413402ms]
  I0410 18:04:05.276536 23 service_latency.go:356] Created: latency-svc-mzsrf
  I0410 18:04:05.311515 23 service_latency.go:363] Got endpoints: latency-svc-mzsrf [229.513627ms]
  I0410 18:04:05.316893 23 service_latency.go:356] Created: latency-svc-79vhm
  I0410 18:04:05.325047 23 service_latency.go:363] Got endpoints: latency-svc-79vhm [230.208792ms]
  I0410 18:04:05.328290 23 service_latency.go:356] Created: latency-svc-jrtwj
  I0410 18:04:05.337811 23 service_latency.go:363] Got endpoints: latency-svc-jrtwj [236.722813ms]
  I0410 18:04:05.342792 23 service_latency.go:356] Created: latency-svc-xxmjd
  I0410 18:04:05.350932 23 service_latency.go:363] Got endpoints: latency-svc-xxmjd [236.382892ms]
  I0410 18:04:05.354851 23 service_latency.go:356] Created: latency-svc-6ssgb
  I0410 18:04:05.362407 23 service_latency.go:363] Got endpoints: latency-svc-6ssgb [240.995966ms]
  I0410 18:04:05.364816 23 service_latency.go:356] Created: latency-svc-pffzb
  I0410 18:04:05.373834 23 service_latency.go:363] Got endpoints: latency-svc-pffzb [238.067451ms]
  I0410 18:04:05.377553 23 service_latency.go:356] Created: latency-svc-kjn79
  I0410 18:04:05.385205 23 service_latency.go:363] Got endpoints: latency-svc-kjn79 [244.23144ms]
  I0410 18:04:05.388929 23 service_latency.go:356] Created: latency-svc-fw6dd
  I0410 18:04:05.397340 23 service_latency.go:363] Got endpoints: latency-svc-fw6dd [212.257719ms]
  I0410 18:04:05.401163 23 service_latency.go:356] Created: latency-svc-ttw8p
  I0410 18:04:05.438558 23 service_latency.go:356] Created: latency-svc-frrmt
  I0410 18:04:05.438624 23 service_latency.go:363] Got endpoints: latency-svc-ttw8p [241.289821ms]
  I0410 18:04:05.448601 23 service_latency.go:363] Got endpoints: latency-svc-frrmt [236.610725ms]
  I0410 18:04:05.452839 23 service_latency.go:356] Created: latency-svc-22hrj
  I0410 18:04:05.461730 23 service_latency.go:363] Got endpoints: latency-svc-22hrj [237.861092ms]
  I0410 18:04:05.465857 23 service_latency.go:356] Created: latency-svc-xnhck
  I0410 18:04:05.473834 23 service_latency.go:363] Got endpoints: latency-svc-xnhck [234.376199ms]
  I0410 18:04:05.477482 23 service_latency.go:356] Created: latency-svc-74kth
  I0410 18:04:05.485056 23 service_latency.go:363] Got endpoints: latency-svc-74kth [234.506997ms]
  I0410 18:04:05.487164 23 service_latency.go:356] Created: latency-svc-zt7hr
  I0410 18:04:05.494281 23 service_latency.go:363] Got endpoints: latency-svc-zt7hr [232.666075ms]
  I0410 18:04:05.496971 23 service_latency.go:356] Created: latency-svc-68jjr
  I0410 18:04:05.501356 23 service_latency.go:363] Got endpoints: latency-svc-68jjr [228.843086ms]
  I0410 18:04:05.508576 23 service_latency.go:356] Created: latency-svc-fdc64
  I0410 18:04:05.515859 23 service_latency.go:363] Got endpoints: latency-svc-fdc64 [204.150912ms]
  I0410 18:04:05.517806 23 service_latency.go:356] Created: latency-svc-bwnx5
  I0410 18:04:05.525626 23 service_latency.go:363] Got endpoints: latency-svc-bwnx5 [200.464433ms]
  I0410 18:04:05.528945 23 service_latency.go:356] Created: latency-svc-vcnf7
  I0410 18:04:05.563097 23 service_latency.go:363] Got endpoints: latency-svc-vcnf7 [225.17898ms]
  I0410 18:04:05.566676 23 service_latency.go:356] Created: latency-svc-dkzgm
  I0410 18:04:05.576559 23 service_latency.go:363] Got endpoints: latency-svc-dkzgm [225.48302ms]
  I0410 18:04:05.579602 23 service_latency.go:356] Created: latency-svc-qg46h
  I0410 18:04:05.591017 23 service_latency.go:356] Created: latency-svc-q4ztw
  I0410 18:04:05.591687 23 service_latency.go:363] Got endpoints: latency-svc-qg46h [229.16855ms]
  I0410 18:04:05.601567 23 service_latency.go:356] Created: latency-svc-ljzrt
  I0410 18:04:05.609079 23 service_latency.go:356] Created: latency-svc-28trj
  I0410 18:04:05.616042 23 service_latency.go:356] Created: latency-svc-45ng7
  I0410 18:04:05.623978 23 service_latency.go:356] Created: latency-svc-wfqm4
  I0410 18:04:05.633176 23 service_latency.go:356] Created: latency-svc-prd5b
  I0410 18:04:05.640653 23 service_latency.go:363] Got endpoints: latency-svc-q4ztw [266.721735ms]
  I0410 18:04:05.642022 23 service_latency.go:356] Created: latency-svc-jl9d6
  I0410 18:04:05.650498 23 service_latency.go:356] Created: latency-svc-hh4nz
  I0410 18:04:05.658097 23 service_latency.go:356] Created: latency-svc-knb5j
  I0410 18:04:05.693955 23 service_latency.go:363] Got endpoints: latency-svc-ljzrt [308.580183ms]
  I0410 18:04:05.698752 23 service_latency.go:356] Created: latency-svc-bspsf
  I0410 18:04:05.709013 23 service_latency.go:356] Created: latency-svc-zj6c5
  I0410 18:04:05.719090 23 service_latency.go:356] Created: latency-svc-gk2w6
  I0410 18:04:05.728245 23 service_latency.go:356] Created: latency-svc-9pzdr
  I0410 18:04:05.738032 23 service_latency.go:356] Created: latency-svc-xjm6s
  I0410 18:04:05.739850 23 service_latency.go:363] Got endpoints: latency-svc-28trj [342.3799ms]
  I0410 18:04:05.747277 23 service_latency.go:356] Created: latency-svc-l4j98
  I0410 18:04:05.755847 23 service_latency.go:356] Created: latency-svc-48cz8
  I0410 18:04:05.765239 23 service_latency.go:356] Created: latency-svc-4gp5q
  I0410 18:04:05.775858 23 service_latency.go:356] Created: latency-svc-rjkmk
  I0410 18:04:05.790314 23 service_latency.go:363] Got endpoints: latency-svc-45ng7 [351.619241ms]
  I0410 18:04:05.834558 23 service_latency.go:356] Created: latency-svc-4vq9k
  I0410 18:04:05.839751 23 service_latency.go:363] Got endpoints: latency-svc-wfqm4 [391.046421ms]
  I0410 18:04:05.876974 23 service_latency.go:356] Created: latency-svc-2sn7w
  I0410 18:04:05.887566 23 service_latency.go:363] Got endpoints: latency-svc-prd5b [425.736537ms]
  I0410 18:04:05.899967 23 service_latency.go:356] Created: latency-svc-g4lgt
  I0410 18:04:05.941754 23 service_latency.go:363] Got endpoints: latency-svc-jl9d6 [467.794436ms]
  I0410 18:04:05.958175 23 service_latency.go:356] Created: latency-svc-99vpg
  I0410 18:04:05.992242 23 service_latency.go:363] Got endpoints: latency-svc-hh4nz [507.072347ms]
  I0410 18:04:06.005471 23 service_latency.go:356] Created: latency-svc-mc2nn
  I0410 18:04:06.042342 23 service_latency.go:363] Got endpoints: latency-svc-knb5j [547.998369ms]
  I0410 18:04:06.057742 23 service_latency.go:356] Created: latency-svc-kn9mc
  I0410 18:04:06.093481 23 service_latency.go:363] Got endpoints: latency-svc-bspsf [592.075879ms]
  I0410 18:04:06.108860 23 service_latency.go:356] Created: latency-svc-64gbm
  I0410 18:04:06.147107 23 service_latency.go:363] Got endpoints: latency-svc-zj6c5 [631.138589ms]
  I0410 18:04:06.161606 23 service_latency.go:356] Created: latency-svc-dg5bt
  I0410 18:04:06.191124 23 service_latency.go:363] Got endpoints: latency-svc-gk2w6 [665.357174ms]
  I0410 18:04:06.205506 23 service_latency.go:356] Created: latency-svc-s2x72
  I0410 18:04:06.237114 23 service_latency.go:363] Got endpoints: latency-svc-9pzdr [673.894927ms]
  I0410 18:04:06.252798 23 service_latency.go:356] Created: latency-svc-75rmn
  I0410 18:04:06.287367 23 service_latency.go:363] Got endpoints: latency-svc-xjm6s [710.648364ms]
  I0410 18:04:06.296245 23 service_latency.go:356] Created: latency-svc-tb5qr
  I0410 18:04:06.339728 23 service_latency.go:363] Got endpoints: latency-svc-l4j98 [747.959677ms]
  I0410 18:04:06.359414 23 service_latency.go:356] Created: latency-svc-l8x2c
  I0410 18:04:06.388544 23 service_latency.go:363] Got endpoints: latency-svc-48cz8 [747.778225ms]
  I0410 18:04:06.396920 23 service_latency.go:356] Created: latency-svc-2qbbj
  I0410 18:04:06.441857 23 service_latency.go:363] Got endpoints: latency-svc-4gp5q [747.806237ms]
  I0410 18:04:06.455981 23 service_latency.go:356] Created: latency-svc-fxxj9
  I0410 18:04:06.491957 23 service_latency.go:363] Got endpoints: latency-svc-rjkmk [752.023661ms]
  I0410 18:04:06.505528 23 service_latency.go:356] Created: latency-svc-fg5wj
  I0410 18:04:06.542179 23 service_latency.go:363] Got endpoints: latency-svc-4vq9k [751.786062ms]
  I0410 18:04:06.558703 23 service_latency.go:356] Created: latency-svc-6ck7j
  I0410 18:04:06.589817 23 service_latency.go:363] Got endpoints: latency-svc-2sn7w [749.971067ms]
  I0410 18:04:06.604578 23 service_latency.go:356] Created: latency-svc-cmcj4
  I0410 18:04:06.640871 23 service_latency.go:363] Got endpoints: latency-svc-g4lgt [753.258859ms]
  I0410 18:04:06.654378 23 service_latency.go:356] Created: latency-svc-rrr9k
  I0410 18:04:06.690447 23 service_latency.go:363] Got endpoints: latency-svc-99vpg [748.59355ms]
  I0410 18:04:06.704494 23 service_latency.go:356] Created: latency-svc-4rc5x
  I0410 18:04:06.739282 23 service_latency.go:363] Got endpoints: latency-svc-mc2nn [746.939148ms]
  I0410 18:04:06.752736 23 service_latency.go:356] Created: latency-svc-r26tv
  I0410 18:04:06.791546 23 service_latency.go:363] Got endpoints: latency-svc-kn9mc [749.119551ms]
  I0410 18:04:06.806099 23 service_latency.go:356] Created: latency-svc-hqmtd
  I0410 18:04:06.841156 23 service_latency.go:363] Got endpoints: latency-svc-64gbm [747.586504ms]
  I0410 18:04:06.856287 23 service_latency.go:356] Created: latency-svc-phrm4
  I0410 18:04:06.896833 23 service_latency.go:363] Got endpoints: latency-svc-dg5bt [749.631235ms]
  I0410 18:04:06.908863 23 service_latency.go:356] Created: latency-svc-lk4mm
  I0410 18:04:06.937892 23 service_latency.go:363] Got endpoints: latency-svc-s2x72 [746.670615ms]
  I0410 18:04:06.947358 23 service_latency.go:356] Created: latency-svc-7wg7k
  I0410 18:04:06.991318 23 service_latency.go:363] Got endpoints: latency-svc-75rmn [754.152929ms]
  I0410 18:04:07.005115 23 service_latency.go:356] Created: latency-svc-hqlch
  I0410 18:04:07.040239 23 service_latency.go:363] Got endpoints: latency-svc-tb5qr [752.826317ms]
  I0410 18:04:07.054309 23 service_latency.go:356] Created: latency-svc-2rjh4
  I0410 18:04:07.090353 23 service_latency.go:363] Got endpoints: latency-svc-l8x2c [750.564924ms]
  I0410 18:04:07.103272 23 service_latency.go:356] Created: latency-svc-7fqzg
  I0410 18:04:07.137998 23 service_latency.go:363] Got endpoints: latency-svc-2qbbj [749.403872ms]
  I0410 18:04:07.148172 23 service_latency.go:356] Created: latency-svc-n8krs
  I0410 18:04:07.187355 23 service_latency.go:363] Got endpoints: latency-svc-fxxj9 [745.411715ms]
  I0410 18:04:07.195305 23 service_latency.go:356] Created: latency-svc-dglmh
  I0410 18:04:07.242478 23 service_latency.go:363] Got endpoints: latency-svc-fg5wj [750.420498ms]
  I0410 18:04:07.255544 23 service_latency.go:356] Created: latency-svc-95jb5
  I0410 18:04:07.290159 23 service_latency.go:363] Got endpoints: latency-svc-6ck7j [747.913436ms]
  I0410 18:04:07.303741 23 service_latency.go:356] Created: latency-svc-29n98
  I0410 18:04:07.342512 23 service_latency.go:363] Got endpoints: latency-svc-cmcj4 [752.613356ms]
  I0410 18:04:07.354938 23 service_latency.go:356] Created: latency-svc-4kqp2
  I0410 18:04:07.393115 23 service_latency.go:363] Got endpoints: latency-svc-rrr9k [752.15726ms]
  I0410 18:04:07.405739 23 service_latency.go:356] Created: latency-svc-7mx2x
  I0410 18:04:07.439663 23 service_latency.go:363] Got endpoints: latency-svc-4rc5x [749.122503ms]
  I0410 18:04:07.450881 23 service_latency.go:356] Created: latency-svc-pn5t8
  I0410 18:04:07.490135 23 service_latency.go:363] Got endpoints: latency-svc-r26tv [750.782205ms]
  I0410 18:04:07.502522 23 service_latency.go:356] Created: latency-svc-pq942
  I0410 18:04:07.541415 23 service_latency.go:363] Got endpoints: latency-svc-hqmtd [749.799633ms]
  I0410 18:04:07.554001 23 service_latency.go:356] Created: latency-svc-7hc6f
  I0410 18:04:07.590152 23 service_latency.go:363] Got endpoints: latency-svc-phrm4 [748.933549ms]
  I0410 18:04:07.601809 23 service_latency.go:356] Created: latency-svc-w79jb
  I0410 18:04:07.649177 23 service_latency.go:363] Got endpoints: latency-svc-lk4mm [752.265407ms]
  I0410 18:04:07.662903 23 service_latency.go:356] Created: latency-svc-4rfw2
  I0410 18:04:07.692596 23 service_latency.go:363] Got endpoints: latency-svc-7wg7k [754.657032ms]
  I0410 18:04:07.705623 23 service_latency.go:356] Created: latency-svc-ch8hs
  I0410 18:04:07.741991 23 service_latency.go:363] Got endpoints: latency-svc-hqlch [750.56657ms]
  I0410 18:04:07.755989 23 service_latency.go:356] Created: latency-svc-w6ldb
  I0410 18:04:07.790466 23 service_latency.go:363] Got endpoints: latency-svc-2rjh4 [750.123888ms]
  I0410 18:04:07.801542 23 service_latency.go:356] Created: latency-svc-szgfb
  I0410 18:04:07.838285 23 service_latency.go:363] Got endpoints: latency-svc-7fqzg [747.811155ms]
  I0410 18:04:07.845997 23 service_latency.go:356] Created: latency-svc-vzt8m
  I0410 18:04:07.890409 23 service_latency.go:363] Got endpoints: latency-svc-n8krs [752.362965ms]
  I0410 18:04:07.903463 23 service_latency.go:356] Created: latency-svc-5sp8j
  I0410 18:04:07.941772 23 service_latency.go:363] Got endpoints: latency-svc-dglmh [754.369955ms]
  I0410 18:04:07.954762 23 service_latency.go:356] Created: latency-svc-vpg8j
  I0410 18:04:07.990825 23 service_latency.go:363] Got endpoints: latency-svc-95jb5 [748.263512ms]
  I0410 18:04:08.003564 23 service_latency.go:356] Created: latency-svc-fj2hs
  I0410 18:04:08.040464 23 service_latency.go:363] Got endpoints: latency-svc-29n98 [749.994134ms]
  I0410 18:04:08.054320 23 service_latency.go:356] Created: latency-svc-d2dgf
  I0410 18:04:08.091682 23 service_latency.go:363] Got endpoints: latency-svc-4kqp2 [749.092714ms]
  I0410 18:04:08.105281 23 service_latency.go:356] Created: latency-svc-s7dzp
  I0410 18:04:08.141189 23 service_latency.go:363] Got endpoints: latency-svc-7mx2x [747.992366ms]
  I0410 18:04:08.154315 23 service_latency.go:356] Created: latency-svc-bk8qp
  I0410 18:04:08.187703 23 service_latency.go:363] Got endpoints: latency-svc-pn5t8 [747.978937ms]
  I0410 18:04:08.199064 23 service_latency.go:356] Created: latency-svc-cdt5z
  I0410 18:04:08.240429 23 service_latency.go:363] Got endpoints: latency-svc-pq942 [750.214949ms]
  I0410 18:04:08.252680 23 service_latency.go:356] Created: latency-svc-585h8
  I0410 18:04:08.290928 23 service_latency.go:363] Got endpoints: latency-svc-7hc6f [749.432936ms]
  I0410 18:04:08.303423 23 service_latency.go:356] Created: latency-svc-gfvhr
  I0410 18:04:08.341534 23 service_latency.go:363] Got endpoints: latency-svc-w79jb [751.309096ms]
  I0410 18:04:08.355964 23 service_latency.go:356] Created: latency-svc-x5n9j
  I0410 18:04:08.390517 23 service_latency.go:363] Got endpoints: latency-svc-4rfw2 [741.170015ms]
  I0410 18:04:08.402915 23 service_latency.go:356] Created: latency-svc-hzmtl
  I0410 18:04:08.440325 23 service_latency.go:363] Got endpoints: latency-svc-ch8hs [747.64254ms]
  I0410 18:04:08.451144 23 service_latency.go:356] Created: latency-svc-6tfkn
  I0410 18:04:08.492404 23 service_latency.go:363] Got endpoints: latency-svc-w6ldb [750.327427ms]
  I0410 18:04:08.503407 23 service_latency.go:356] Created: latency-svc-ttdt7
  I0410 18:04:08.543169 23 service_latency.go:363] Got endpoints: latency-svc-szgfb [752.618326ms]
  I0410 18:04:08.556294 23 service_latency.go:356] Created: latency-svc-6gxsr
  I0410 18:04:08.593414 23 service_latency.go:363] Got endpoints: latency-svc-vzt8m [755.048492ms]
  I0410 18:04:08.606160 23 service_latency.go:356] Created: latency-svc-fklch
  I0410 18:04:08.643097 23 service_latency.go:363] Got endpoints: latency-svc-5sp8j [752.583864ms]
  I0410 18:04:08.681092 23 service_latency.go:356] Created: latency-svc-4rn8f
  I0410 18:04:08.687987 23 service_latency.go:363] Got endpoints: latency-svc-vpg8j [746.125609ms]
  I0410 18:04:08.698599 23 service_latency.go:356] Created: latency-svc-nnxpf
  I0410 18:04:08.739816 23 service_latency.go:363] Got endpoints: latency-svc-fj2hs [748.902517ms]
  I0410 18:04:08.752611 23 service_latency.go:356] Created: latency-svc-q6kqz
  I0410 18:04:08.791777 23 service_latency.go:363] Got endpoints: latency-svc-d2dgf [751.183238ms]
  I0410 18:04:08.806935 23 service_latency.go:356] Created: latency-svc-ssm2m
  I0410 18:04:08.842227 23 service_latency.go:363] Got endpoints: latency-svc-s7dzp [750.39736ms]
  I0410 18:04:08.855071 23 service_latency.go:356] Created: latency-svc-vfvww
  I0410 18:04:08.890423 23 service_latency.go:363] Got endpoints: latency-svc-bk8qp [749.140035ms]
  I0410 18:04:08.910294 23 service_latency.go:356] Created: latency-svc-f96th
  I0410 18:04:08.940847 23 service_latency.go:363] Got endpoints: latency-svc-cdt5z [753.082861ms]
  I0410 18:04:08.957562 23 service_latency.go:356] Created: latency-svc-csltv
  I0410 18:04:08.992848 23 service_latency.go:363] Got endpoints: latency-svc-585h8 [752.323844ms]
  I0410 18:04:09.009920 23 service_latency.go:356] Created: latency-svc-5x2g2
  I0410 18:04:09.039409 23 service_latency.go:363] Got endpoints: latency-svc-gfvhr [748.377893ms]
  I0410 18:04:09.049162 23 service_latency.go:356] Created: latency-svc-n44ps
  I0410 18:04:09.088274 23 service_latency.go:363] Got endpoints: latency-svc-x5n9j [746.668488ms]
  I0410 18:04:09.103326 23 service_latency.go:356] Created: latency-svc-zmmzl
  I0410 18:04:09.140522 23 service_latency.go:363] Got endpoints: latency-svc-hzmtl [749.92058ms]
  I0410 18:04:09.153060 23 service_latency.go:356] Created: latency-svc-8r592
  I0410 18:04:09.192912 23 service_latency.go:363] Got endpoints: latency-svc-6tfkn [752.477607ms]
  I0410 18:04:09.206860 23 service_latency.go:356] Created: latency-svc-57cgb
  I0410 18:04:09.239378 23 service_latency.go:363] Got endpoints: latency-svc-ttdt7 [746.90998ms]
  I0410 18:04:09.247047 23 service_latency.go:356] Created: latency-svc-dxjts
  I0410 18:04:09.286863 23 service_latency.go:363] Got endpoints: latency-svc-6gxsr [743.569006ms]
  I0410 18:04:09.295446 23 service_latency.go:356] Created: latency-svc-r6wxx
  I0410 18:04:09.341010 23 service_latency.go:363] Got endpoints: latency-svc-fklch [747.485026ms]
  I0410 18:04:09.356030 23 service_latency.go:356] Created: latency-svc-kqnfh
  I0410 18:04:09.391794 23 service_latency.go:363] Got endpoints: latency-svc-4rn8f [748.614832ms]
  I0410 18:04:09.406349 23 service_latency.go:356] Created: latency-svc-x9mp2
  I0410 18:04:09.441274 23 service_latency.go:363] Got endpoints: latency-svc-nnxpf [753.212564ms]
  I0410 18:04:09.454439 23 service_latency.go:356] Created: latency-svc-54dlb
  I0410 18:04:09.491519 23 service_latency.go:363] Got endpoints: latency-svc-q6kqz [751.617968ms]
  I0410 18:04:09.504650 23 service_latency.go:356] Created: latency-svc-pbjtj
  I0410 18:04:09.541967 23 service_latency.go:363] Got endpoints: latency-svc-ssm2m [750.066902ms]
  I0410 18:04:09.557024 23 service_latency.go:356] Created: latency-svc-grbx7
  I0410 18:04:09.591778 23 service_latency.go:363] Got endpoints: latency-svc-vfvww [749.436928ms]
  I0410 18:04:09.605458 23 service_latency.go:356] Created: latency-svc-6c95p
  I0410 18:04:09.641192 23 service_latency.go:363] Got endpoints: latency-svc-f96th [750.668153ms]
  I0410 18:04:09.656523 23 service_latency.go:356] Created: latency-svc-fk7s4
  I0410 18:04:09.693601 23 service_latency.go:363] Got endpoints: latency-svc-csltv [752.656416ms]
  I0410 18:04:09.706878 23 service_latency.go:356] Created: latency-svc-njnfk
  I0410 18:04:09.740370 23 service_latency.go:363] Got endpoints: latency-svc-5x2g2 [747.444103ms]
  I0410 18:04:09.757602 23 service_latency.go:356] Created: latency-svc-4smqj
  I0410 18:04:09.789591 23 service_latency.go:363] Got endpoints: latency-svc-n44ps [750.12697ms]
  I0410 18:04:09.801897 23 service_latency.go:356] Created: latency-svc-cx9gz
  I0410 18:04:09.837388 23 service_latency.go:363] Got endpoints: latency-svc-zmmzl [749.030003ms]
  I0410 18:04:09.845401 23 service_latency.go:356] Created: latency-svc-749dz
  I0410 18:04:09.890507 23 service_latency.go:363] Got endpoints: latency-svc-8r592 [749.891968ms]
  I0410 18:04:09.903606 23 service_latency.go:356] Created: latency-svc-7gfbq
  I0410 18:04:09.942801 23 service_latency.go:363] Got endpoints: latency-svc-57cgb [749.755096ms]
  I0410 18:04:09.957316 23 service_latency.go:356] Created: latency-svc-gfpfz
  I0410 18:04:09.990286 23 service_latency.go:363] Got endpoints: latency-svc-dxjts [750.82858ms]
  I0410 18:04:10.001629 23 service_latency.go:356] Created: latency-svc-whbq4
  I0410 18:04:10.040646 23 service_latency.go:363] Got endpoints: latency-svc-r6wxx [753.733494ms]
  I0410 18:04:10.054712 23 service_latency.go:356] Created: latency-svc-48mnn
  I0410 18:04:10.091147 23 service_latency.go:363] Got endpoints: latency-svc-kqnfh [750.050024ms]
  I0410 18:04:10.104861 23 service_latency.go:356] Created: latency-svc-rgzhs
  I0410 18:04:10.142813 23 service_latency.go:363] Got endpoints: latency-svc-x9mp2 [750.935251ms]
  I0410 18:04:10.156456 23 service_latency.go:356] Created: latency-svc-vrn6p
  I0410 18:04:10.190892 23 service_latency.go:363] Got endpoints: latency-svc-54dlb [749.538403ms]
  I0410 18:04:10.203793 23 service_latency.go:356] Created: latency-svc-pjdmk
  I0410 18:04:10.241576 23 service_latency.go:363] Got endpoints: latency-svc-pbjtj [749.965055ms]
  I0410 18:04:10.254983 23 service_latency.go:356] Created: latency-svc-tmcgq
  I0410 18:04:10.291678 23 service_latency.go:363] Got endpoints: latency-svc-grbx7 [749.615623ms]
  I0410 18:04:10.306874 23 service_latency.go:356] Created: latency-svc-755tw
  I0410 18:04:10.341374 23 service_latency.go:363] Got endpoints: latency-svc-6c95p [749.500352ms]
  I0410 18:04:10.355722 23 service_latency.go:356] Created: latency-svc-vjwj8
  I0410 18:04:10.392680 23 service_latency.go:363] Got endpoints: latency-svc-fk7s4 [751.384249ms]
  I0410 18:04:10.407113 23 service_latency.go:356] Created: latency-svc-hznn5
  I0410 18:04:10.442772 23 service_latency.go:363] Got endpoints: latency-svc-njnfk [749.036432ms]
  I0410 18:04:10.457281 23 service_latency.go:356] Created: latency-svc-9scxf
  I0410 18:04:10.489912 23 service_latency.go:363] Got endpoints: latency-svc-4smqj [749.465405ms]
  I0410 18:04:10.504358 23 service_latency.go:356] Created: latency-svc-h8mbd
  I0410 18:04:10.542394 23 service_latency.go:363] Got endpoints: latency-svc-cx9gz [752.697675ms]
  I0410 18:04:10.556948 23 service_latency.go:356] Created: latency-svc-vhgr2
  I0410 18:04:10.593562 23 service_latency.go:363] Got endpoints: latency-svc-749dz [756.115295ms]
  I0410 18:04:10.609878 23 service_latency.go:356] Created: latency-svc-ntxdm
  I0410 18:04:10.641046 23 service_latency.go:363] Got endpoints: latency-svc-7gfbq [750.445501ms]
  I0410 18:04:10.655413 23 service_latency.go:356] Created: latency-svc-pn4cb
  I0410 18:04:10.692353 23 service_latency.go:363] Got endpoints: latency-svc-gfpfz [749.437224ms]
  I0410 18:04:10.710067 23 service_latency.go:356] Created: latency-svc-p7wwk
  I0410 18:04:10.741013 23 service_latency.go:363] Got endpoints: latency-svc-whbq4 [750.633744ms]
  I0410 18:04:10.756969 23 service_latency.go:356] Created: latency-svc-xw25p
  I0410 18:04:10.791644 23 service_latency.go:363] Got endpoints: latency-svc-48mnn [750.887658ms]
  I0410 18:04:10.806559 23 service_latency.go:356] Created: latency-svc-4wp7g
  I0410 18:04:10.840966 23 service_latency.go:363] Got endpoints: latency-svc-rgzhs [749.726783ms]
  I0410 18:04:10.853121 23 service_latency.go:356] Created: latency-svc-2bg66
  I0410 18:04:10.891039 23 service_latency.go:363] Got endpoints: latency-svc-vrn6p [748.13249ms]
  I0410 18:04:10.903097 23 service_latency.go:356] Created: latency-svc-cg557
  I0410 18:04:10.940172 23 service_latency.go:363] Got endpoints: latency-svc-pjdmk [749.20682ms]
  I0410 18:04:10.951650 23 service_latency.go:356] Created: latency-svc-lq8jt
  I0410 18:04:10.991014 23 service_latency.go:363] Got endpoints: latency-svc-tmcgq [749.307178ms]
  I0410 18:04:11.001786 23 service_latency.go:356] Created: latency-svc-ztr9r
  I0410 18:04:11.040617 23 service_latency.go:363] Got endpoints: latency-svc-755tw [748.863827ms]
  I0410 18:04:11.053167 23 service_latency.go:356] Created: latency-svc-clth9
  I0410 18:04:11.090501 23 service_latency.go:363] Got endpoints: latency-svc-vjwj8 [749.007676ms]
  I0410 18:04:11.104155 23 service_latency.go:356] Created: latency-svc-ddscw
  I0410 18:04:11.141549 23 service_latency.go:363] Got endpoints: latency-svc-hznn5 [748.762158ms]
  I0410 18:04:11.154433 23 service_latency.go:356] Created: latency-svc-kw2g4
  I0410 18:04:11.190115 23 service_latency.go:363] Got endpoints: latency-svc-9scxf [747.261096ms]
  I0410 18:04:11.203392 23 service_latency.go:356] Created: latency-svc-4nn8x
  I0410 18:04:11.239742 23 service_latency.go:363] Got endpoints: latency-svc-h8mbd [749.753666ms]
  I0410 18:04:11.253103 23 service_latency.go:356] Created: latency-svc-n24j5
  I0410 18:04:11.289309 23 service_latency.go:363] Got endpoints: latency-svc-vhgr2 [746.827175ms]
  I0410 18:04:11.302428 23 service_latency.go:356] Created: latency-svc-qshn5
  I0410 18:04:11.337592 23 service_latency.go:363] Got endpoints: latency-svc-ntxdm [743.921415ms]
  I0410 18:04:11.349351 23 service_latency.go:356] Created: latency-svc-vnmfx
  I0410 18:04:11.387648 23 service_latency.go:363] Got endpoints: latency-svc-pn4cb [746.513903ms]
  I0410 18:04:11.405153 23 service_latency.go:356] Created: latency-svc-tnrtg
  I0410 18:04:11.439414 23 service_latency.go:363] Got endpoints: latency-svc-p7wwk [746.974476ms]
  I0410 18:04:11.450878 23 service_latency.go:356] Created: latency-svc-v24sp
  I0410 18:04:11.489429 23 service_latency.go:363] Got endpoints: latency-svc-xw25p [748.333181ms]
  I0410 18:04:11.499685 23 service_latency.go:356] Created: latency-svc-4cqhz
  I0410 18:04:11.541606 23 service_latency.go:363] Got endpoints: latency-svc-4wp7g [749.876114ms]
  I0410 18:04:11.555874 23 service_latency.go:356] Created: latency-svc-72xdk
  I0410 18:04:11.593574 23 service_latency.go:363] Got endpoints: latency-svc-2bg66 [752.505237ms]
  I0410 18:04:11.606135 23 service_latency.go:356] Created: latency-svc-6w965
  I0410 18:04:11.638926 23 service_latency.go:363] Got endpoints: latency-svc-cg557 [747.807345ms]
  I0410 18:04:11.650265 23 service_latency.go:356] Created: latency-svc-9cgs9
  I0410 18:04:11.690716 23 service_latency.go:363] Got endpoints: latency-svc-lq8jt [750.476613ms]
  I0410 18:04:11.703802 23 service_latency.go:356] Created: latency-svc-twvjm
  I0410 18:04:11.743416 23 service_latency.go:363] Got endpoints: latency-svc-ztr9r [752.328343ms]
  I0410 18:04:11.757485 23 service_latency.go:356] Created: latency-svc-dvjzb
  I0410 18:04:11.789654 23 service_latency.go:363] Got endpoints: latency-svc-clth9 [748.950387ms]
  I0410 18:04:11.800606 23 service_latency.go:356] Created: latency-svc-796r4
  I0410 18:04:11.837451 23 service_latency.go:363] Got endpoints: latency-svc-ddscw [746.860191ms]
  I0410 18:04:11.847758 23 service_latency.go:356] Created: latency-svc-67sb4
  I0410 18:04:11.889555 23 service_latency.go:363] Got endpoints: latency-svc-kw2g4 [747.923104ms]
  I0410 18:04:11.901869 23 service_latency.go:356] Created: latency-svc-b5tjm
  I0410 18:04:11.941225 23 service_latency.go:363] Got endpoints: latency-svc-4nn8x [751.034063ms]
  I0410 18:04:11.959362 23 service_latency.go:356] Created: latency-svc-wb8xk
  I0410 18:04:11.990782 23 service_latency.go:363] Got endpoints: latency-svc-n24j5 [750.970344ms]
  I0410 18:04:12.003904 23 service_latency.go:356] Created: latency-svc-qvzg5
  I0410 18:04:12.038629 23 service_latency.go:363] Got endpoints: latency-svc-qshn5 [749.250964ms]
  I0410 18:04:12.048882 23 service_latency.go:356] Created: latency-svc-4l7jh
  I0410 18:04:12.088947 23 service_latency.go:363] Got endpoints: latency-svc-vnmfx [751.318897ms]
  I0410 18:04:12.100843 23 service_latency.go:356] Created: latency-svc-fvbhm
  I0410 18:04:12.142022 23 service_latency.go:363] Got endpoints: latency-svc-tnrtg [754.330219ms]
  I0410 18:04:12.156544 23 service_latency.go:356] Created: latency-svc-j67h7
  I0410 18:04:12.189720 23 service_latency.go:363] Got endpoints: latency-svc-v24sp [750.247452ms]
  I0410 18:04:12.200232 23 service_latency.go:356] Created: latency-svc-ltx78
  I0410 18:04:12.237579 23 service_latency.go:363] Got endpoints: latency-svc-4cqhz [748.103919ms]
  I0410 18:04:12.244890 23 service_latency.go:356] Created: latency-svc-s4ssl
  I0410 18:04:12.288315 23 service_latency.go:363] Got endpoints: latency-svc-72xdk [746.626537ms]
  I0410 18:04:12.296213 23 service_latency.go:356] Created: latency-svc-7bpvm
  I0410 18:04:12.340202 23 service_latency.go:363] Got endpoints: latency-svc-6w965 [746.530593ms]
  I0410 18:04:12.353062 23 service_latency.go:356] Created: latency-svc-8gzx7
  I0410 18:04:12.391036 23 service_latency.go:363] Got endpoints: latency-svc-9cgs9 [752.049663ms]
  I0410 18:04:12.406387 23 service_latency.go:356] Created: latency-svc-f72ft
  I0410 18:04:12.440163 23 service_latency.go:363] Got endpoints: latency-svc-twvjm [749.374317ms]
  I0410 18:04:12.452923 23 service_latency.go:356] Created: latency-svc-vkd46
  I0410 18:04:12.490618 23 service_latency.go:363] Got endpoints: latency-svc-dvjzb [747.126034ms]
  I0410 18:04:12.502593 23 service_latency.go:356] Created: latency-svc-lkjxw
  I0410 18:04:12.540931 23 service_latency.go:363] Got endpoints: latency-svc-796r4 [751.185126ms]
  I0410 18:04:12.554533 23 service_latency.go:356] Created: latency-svc-phlt7
  I0410 18:04:12.593565 23 service_latency.go:363] Got endpoints: latency-svc-67sb4 [756.065392ms]
  I0410 18:04:12.606981 23 service_latency.go:356] Created: latency-svc-p76nn
  I0410 18:04:12.640849 23 service_latency.go:363] Got endpoints: latency-svc-b5tjm [751.163217ms]
  I0410 18:04:12.653777 23 service_latency.go:356] Created: latency-svc-nbl96
  I0410 18:04:12.692061 23 service_latency.go:363] Got endpoints: latency-svc-wb8xk [750.736709ms]
  I0410 18:04:12.706682 23 service_latency.go:356] Created: latency-svc-vd9lf
  I0410 18:04:12.739117 23 service_latency.go:363] Got endpoints: latency-svc-qvzg5 [748.259493ms]
  I0410 18:04:12.750498 23 service_latency.go:356] Created: latency-svc-gmhp9
  I0410 18:04:12.793325 23 service_latency.go:363] Got endpoints: latency-svc-4l7jh [754.651763ms]
  I0410 18:04:12.805492 23 service_latency.go:356] Created: latency-svc-c8xkd
  I0410 18:04:12.837130 23 service_latency.go:363] Got endpoints: latency-svc-fvbhm [748.100322ms]
  I0410 18:04:12.890475 23 service_latency.go:363] Got endpoints: latency-svc-j67h7 [748.367395ms]
  I0410 18:04:12.944355 23 service_latency.go:363] Got endpoints: latency-svc-ltx78 [754.54432ms]
  I0410 18:04:12.990804 23 service_latency.go:363] Got endpoints: latency-svc-s4ssl [753.191239ms]
  I0410 18:04:13.040156 23 service_latency.go:363] Got endpoints: latency-svc-7bpvm [751.793885ms]
  I0410 18:04:13.091701 23 service_latency.go:363] Got endpoints: latency-svc-8gzx7 [751.402873ms]
  I0410 18:04:13.141331 23 service_latency.go:363] Got endpoints: latency-svc-f72ft [750.183404ms]
  I0410 18:04:13.192052 23 service_latency.go:363] Got endpoints: latency-svc-vkd46 [751.755048ms]
  I0410 18:04:13.241556 23 service_latency.go:363] Got endpoints: latency-svc-lkjxw [750.853412ms]
  I0410 18:04:13.291571 23 service_latency.go:363] Got endpoints: latency-svc-phlt7 [750.560378ms]
  I0410 18:04:13.341920 23 service_latency.go:363] Got endpoints: latency-svc-p76nn [748.236872ms]
  I0410 18:04:13.390898 23 service_latency.go:363] Got endpoints: latency-svc-nbl96 [749.962351ms]
  I0410 18:04:13.442501 23 service_latency.go:363] Got endpoints: latency-svc-vd9lf [750.351783ms]
  I0410 18:04:13.491497 23 service_latency.go:363] Got endpoints: latency-svc-gmhp9 [752.303603ms]
  I0410 18:04:13.541863 23 service_latency.go:363] Got endpoints: latency-svc-c8xkd [748.454241ms]
  I0410 18:04:13.542030 23 service_latency.go:114] Latencies: [17.439686ms 27.231965ms 37.1397ms 45.981474ms 67.394746ms 80.59926ms 91.347798ms 104.219625ms 110.476709ms 124.034536ms 130.75615ms 145.16567ms 150.355016ms 194.75692ms 200.464433ms 201.413402ms 203.252773ms 204.020761ms 204.150912ms 206.054486ms 206.543306ms 211.741173ms 212.257719ms 213.850794ms 225.17898ms 225.48302ms 228.843086ms 229.16855ms 229.513627ms 230.208792ms 232.666075ms 234.376199ms 234.506997ms 236.382892ms 236.610725ms 236.722813ms 237.861092ms 238.067451ms 240.995966ms 241.289821ms 244.23144ms 266.721735ms 308.580183ms 342.3799ms 351.619241ms 391.046421ms 425.736537ms 467.794436ms 507.072347ms 547.998369ms 592.075879ms 631.138589ms 665.357174ms 673.894927ms 710.648364ms 741.170015ms 743.569006ms 743.921415ms 745.411715ms 746.125609ms 746.513903ms 746.530593ms 746.626537ms 746.668488ms 746.670615ms 746.827175ms 746.860191ms 746.90998ms 746.939148ms 746.974476ms 747.126034ms 747.261096ms 747.444103ms 747.485026ms 747.586504ms 747.64254ms 747.778225ms 747.806237ms 747.807345ms 747.811155ms 747.913436ms 747.923104ms 747.959677ms 747.978937ms 747.992366ms 748.100322ms 748.103919ms 748.13249ms 748.236872ms 748.259493ms 748.263512ms 748.333181ms 748.367395ms 748.377893ms 748.454241ms 748.59355ms 748.614832ms 748.762158ms 748.863827ms 748.902517ms 748.933549ms 748.950387ms 749.007676ms 749.030003ms 749.036432ms 749.092714ms 749.119551ms 749.122503ms 749.140035ms 749.20682ms 749.250964ms 749.307178ms 749.374317ms 749.403872ms 749.432936ms 749.436928ms 749.437224ms 749.465405ms 749.500352ms 749.538403ms 749.615623ms 749.631235ms 749.726783ms 749.753666ms 749.755096ms 749.799633ms 749.876114ms 749.891968ms 749.92058ms 749.962351ms 749.965055ms 749.971067ms 749.994134ms 750.050024ms 750.066902ms 750.123888ms 750.12697ms 750.183404ms 750.214949ms 750.247452ms 750.327427ms 750.351783ms 750.39736ms 750.420498ms 750.445501ms 750.476613ms 750.560378ms 750.564924ms 750.56657ms 750.633744ms 750.668153ms 750.736709ms 750.782205ms 750.82858ms 750.853412ms 750.887658ms 750.935251ms 750.970344ms 751.034063ms 751.163217ms 751.183238ms 751.185126ms 751.309096ms 751.318897ms 751.384249ms 751.402873ms 751.617968ms 751.755048ms 751.786062ms 751.793885ms 752.023661ms 752.049663ms 752.15726ms 752.265407ms 752.303603ms 752.323844ms 752.328343ms 752.362965ms 752.477607ms 752.505237ms 752.583864ms 752.613356ms 752.618326ms 752.656416ms 752.697675ms 752.826317ms 753.082861ms 753.191239ms 753.212564ms 753.258859ms 753.733494ms 754.152929ms 754.330219ms 754.369955ms 754.54432ms 754.651763ms 754.657032ms 755.048492ms 756.065392ms 756.115295ms]
  I0410 18:04:13.542060 23 service_latency.go:118] 50 %ile: 748.933549ms
  I0410 18:04:13.542079 23 service_latency.go:119] 90 %ile: 752.583864ms
  I0410 18:04:13.542097 23 service_latency.go:120] 99 %ile: 756.065392ms
  I0410 18:04:13.542108 23 service_latency.go:121] Total sample count: 200
  I0410 18:04:13.542283 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9645" for this suite. @ 04/10/25 18:04:13.547
• [10.761 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/10/25 18:04:13.552
  I0410 18:04:13.552923 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename deployment @ 04/10/25 18:04:13.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:04:13.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:04:13.569
  I0410 18:04:13.572212 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0410 18:04:13.580625 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0410 18:04:18.587067 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/10/25 18:04:18.587
  I0410 18:04:18.587228 23 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0410 18:04:18.598608 23 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0410 18:04:18.613718 23 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0410 18:04:20.623175 23 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0410 18:04:20.624399 23 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0410 18:04:20.729813 23 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9323",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d28b5085-6cea-4645-8c07-aee86a8c4124",
      ResourceVersion: (string) (len=5) "18340",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879905058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0410 18:04:20.825302 23 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9323",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2592276d-ebb3-446e-9699-729dd7527e5e",
      ResourceVersion: (string) (len=5) "18321",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879905058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "d28b5085-6cea-4645-8c07-aee86a8c4124",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 32 38 62 35 30  38 35 2d 36 63 65 61 2d  |\"d28b5085-6cea-|
              00000120  34 36 34 35 2d 38 63 30  37 2d 61 65 65 38 36 61  |4645-8c07-aee86a|
              00000130  38 63 34 31 32 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8c4124\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 18:04:20.825971 23 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0410 18:04:20.826177 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9323",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9494156f-a7ed-4edc-bde8-ad6a2cd0e5ec",
      ResourceVersion: (string) (len=5) "18339",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879905053,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "d28b5085-6cea-4645-8c07-aee86a8c4124",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905053,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 64 32 38 62 35 30 38  |"uid\":\"d28b508|
              000000b0  35 2d 36 63 65 61 2d 34  36 34 35 2d 38 63 30 37  |5-6cea-4645-8c07|
              000000c0  2d 61 65 65 38 36 61 38  63 34 31 32 34 5c 22 7d  |-aee86a8c4124\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 18:04:20.831447 23 deployment.go:68] Pod "test-rolling-update-deployment-56bb5bb765-rqrrh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-rqrrh",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-9323",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68c892bd-b1e4-4764-b915-d3e4447422df",
      ResourceVersion: (string) (len=5) "18318",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879905058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "2592276d-ebb3-446e-9699-729dd7527e5e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 35  39 32 32 37 36 64 2d 65  |d\":\"2592276d-e|
              00000090  62 62 33 2d 34 34 36 65  2d 39 36 39 39 2d 37 32  |bb3-446e-9699-72|
              000000a0  39 64 64 37 35 32 37 65  35 65 5c 22 7d 22 3a 7b  |9dd7527e5e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  33 5c 22 7d 22 3a 7b 22  |.244.1.23\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vvpk8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vvpk8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879905058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879905059,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=73) "docker://53ac97c51a47e6be4bed50b83c99d7bdd0939f77fe0998435c1d27f51399507e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vvpk8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 18:04:20.833173 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9323" for this suite. @ 04/10/25 18:04:20.836
• [7.288 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/10/25 18:04:20.84
  I0410 18:04:20.840633 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pods @ 04/10/25 18:04:20.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:04:20.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:04:20.853
  STEP: creating a Pod with a static label @ 04/10/25 18:04:20.932
  STEP: watching for Pod to be ready @ 04/10/25 18:04:20.941
  I0410 18:04:20.944544 23 pods.go:945] observed Pod pod-test in namespace pods-9595 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0410 18:04:20.947334 23 pods.go:945] observed Pod pod-test in namespace pods-9595 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 18:04:20 +0000 UTC  }]
  I0410 18:04:20.959713 23 pods.go:945] observed Pod pod-test in namespace pods-9595 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 18:04:20 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 18:04:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 18:04:20 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-10 18:04:20 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 18:04:20 +0000 UTC  }]
  I0410 18:04:21.645367 23 pods.go:948] Found Pod pod-test in namespace pods-9595 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 18:04:21 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 18:04:20 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 18:04:21 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 18:04:21 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-10 18:04:20 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/10/25 18:04:21.649
  STEP: getting the Pod and ensuring that it's patched @ 04/10/25 18:04:21.659
  STEP: replacing the Pod's status Ready condition to False @ 04/10/25 18:04:21.661
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/10/25 18:04:21.67
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/10/25 18:04:21.67
  STEP: watching for the Pod to be deleted @ 04/10/25 18:04:21.68
  I0410 18:04:21.684477 23 pods.go:1058] observed event type MODIFIED
  I0410 18:04:23.674171 23 pods.go:1058] observed event type MODIFIED
  I0410 18:04:23.760894 23 pods.go:1058] observed event type MODIFIED
  I0410 18:04:24.695461 23 pods.go:1058] observed event type MODIFIED
  I0410 18:04:24.701680 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9595" for this suite. @ 04/10/25 18:04:24.704
• [3.868 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 04/10/25 18:04:24.709
  I0410 18:04:24.709588 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 18:04:24.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:04:24.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:04:24.725
  STEP: creating secret secrets-3650/secret-test-191bbca5-6eab-4524-b8dc-be026b45f9fe @ 04/10/25 18:04:24.727
  STEP: Creating a pod to test consume secrets @ 04/10/25 18:04:24.73
  STEP: Saw pod success @ 04/10/25 18:04:28.746
  I0410 18:04:28.750950 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-6437a51a-c544-45c1-9af9-59fc2443cd52 container env-test: <nil>
  STEP: delete the pod @ 04/10/25 18:04:28.759
  I0410 18:04:28.775210 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3650" for this suite. @ 04/10/25 18:04:28.778
• [4.074 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 04/10/25 18:04:28.784
  I0410 18:04:28.784083 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename resourcequota @ 04/10/25 18:04:28.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:04:28.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:04:28.799
  STEP: Counting existing ResourceQuota @ 04/10/25 18:04:28.803
  STEP: Creating a ResourceQuota @ 04/10/25 18:04:33.806
  STEP: Ensuring resource quota status is calculated @ 04/10/25 18:04:33.812
  STEP: Creating a Pod that fits quota @ 04/10/25 18:04:35.818
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/10/25 18:04:35.836
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/10/25 18:04:37.843
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/10/25 18:04:37.847
  STEP: Ensuring a pod cannot update its resource requirements @ 04/10/25 18:04:37.849
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/10/25 18:04:37.853
  STEP: Deleting the pod @ 04/10/25 18:04:39.856
  STEP: Ensuring resource quota status released the pod usage @ 04/10/25 18:04:39.866
  I0410 18:04:41.873718 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2425" for this suite. @ 04/10/25 18:04:41.877
• [13.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/10/25 18:04:41.886
  I0410 18:04:41.886223 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename cronjob @ 04/10/25 18:04:41.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:04:41.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:04:41.902
  STEP: Creating a suspended cronjob @ 04/10/25 18:04:41.905
  STEP: Ensuring no jobs are scheduled @ 04/10/25 18:04:41.915
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/10/25 18:09:41.915
  STEP: Removing cronjob @ 04/10/25 18:09:41.921
  I0410 18:09:41.927862 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4052" for this suite. @ 04/10/25 18:09:41.932
• [300.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 04/10/25 18:09:41.937
  I0410 18:09:41.937657 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename containers @ 04/10/25 18:09:41.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:09:41.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:09:41.956
  I0410 18:09:43.991510 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3995" for this suite. @ 04/10/25 18:09:43.995
• [2.066 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 04/10/25 18:09:44.004
  I0410 18:09:44.004284 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 18:09:44.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:09:44.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:09:44.02
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/10/25 18:09:44.023
  STEP: Saw pod success @ 04/10/25 18:09:48.044
  I0410 18:09:48.047238 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-d39abfd5-3152-4d1c-8004-35fdfe0b4de5 container test-container: <nil>
  STEP: delete the pod @ 04/10/25 18:09:48.054
  I0410 18:09:48.072126 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3931" for this suite. @ 04/10/25 18:09:48.076
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 04/10/25 18:09:48.082
  I0410 18:09:48.082202 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 18:09:48.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:09:48.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:09:48.096
  STEP: Creating configMap configmap-7206/configmap-test-50941f51-4d6a-47eb-a908-59b3bb10c8e7 @ 04/10/25 18:09:48.098
  STEP: Creating a pod to test consume configMaps @ 04/10/25 18:09:48.101
  STEP: Saw pod success @ 04/10/25 18:09:52.118
  I0410 18:09:52.120230 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-1cde0df6-d015-4511-8d7f-dcbafe180d92 container env-test: <nil>
  STEP: delete the pod @ 04/10/25 18:09:52.134
  I0410 18:09:52.146373 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7206" for this suite. @ 04/10/25 18:09:52.148
• [4.069 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 04/10/25 18:09:52.151
  I0410 18:09:52.151661 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 18:09:52.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:09:52.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:09:52.162
  STEP: Setting up server cert @ 04/10/25 18:09:52.268
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 18:09:52.384
  STEP: Deploying the webhook pod @ 04/10/25 18:09:52.389
  STEP: Wait for the deployment to be ready @ 04/10/25 18:09:52.398
  I0410 18:09:52.400814 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/10/25 18:09:54.414
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 18:09:54.432
  I0410 18:09:55.433660 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0410 18:09:55.440986 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8048-crds.webhook.example.com via the AdmissionRegistration API @ 04/10/25 18:09:55.956
  STEP: Creating a custom resource while v1 is storage version @ 04/10/25 18:09:55.976
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/10/25 18:09:58.01
  STEP: Patching the custom resource while v2 is storage version @ 04/10/25 18:09:58.03
  I0410 18:09:58.586847 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2321" for this suite. @ 04/10/25 18:09:58.591
  STEP: Destroying namespace "webhook-markers-4773" for this suite. @ 04/10/25 18:09:58.598
• [6.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 04/10/25 18:09:58.606
  I0410 18:09:58.606815 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-probe @ 04/10/25 18:09:58.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:09:58.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:09:58.624
  STEP: Creating pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc in namespace container-probe-7192 @ 04/10/25 18:09:58.628
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/10/25 18:10:00.645
  I0410 18:10:00.648409 23 container_probe.go:1749] Initial restart count of pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc is 0
  I0410 18:10:00.650829 23 container_probe.go:1759] Get pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc in namespace container-probe-7192
  I0410 18:10:02.656291 23 container_probe.go:1759] Get pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc in namespace container-probe-7192
  I0410 18:10:04.662231 23 container_probe.go:1759] Get pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc in namespace container-probe-7192
  I0410 18:10:06.668324 23 container_probe.go:1759] Get pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc in namespace container-probe-7192
  I0410 18:10:08.675082 23 container_probe.go:1759] Get pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc in namespace container-probe-7192
  I0410 18:10:10.681919 23 container_probe.go:1759] Get pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc in namespace container-probe-7192
  I0410 18:10:12.687798 23 container_probe.go:1759] Get pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc in namespace container-probe-7192
  I0410 18:10:14.690342 23 container_probe.go:1759] Get pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc in namespace container-probe-7192
  I0410 18:10:16.695865 23 container_probe.go:1759] Get pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc in namespace container-probe-7192
  I0410 18:10:18.702926 23 container_probe.go:1759] Get pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc in namespace container-probe-7192
  I0410 18:10:20.710473 23 container_probe.go:1759] Get pod liveness-5dcbdf71-0981-4864-98e5-767cca1adabc in namespace container-probe-7192
  I0410 18:10:20.710534 23 container_probe.go:1763] Restart count of pod container-probe-7192/liveness-5dcbdf71-0981-4864-98e5-767cca1adabc is now 1 (20.062078973s elapsed)
  STEP: deleting the pod @ 04/10/25 18:10:20.71
  I0410 18:10:20.725356 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7192" for this suite. @ 04/10/25 18:10:20.731
• [22.130 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 04/10/25 18:10:20.737
  I0410 18:10:20.737385 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/10/25 18:10:20.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:10:20.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:10:20.751
  I0410 18:10:20.753071 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:10:23.812235 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6859" for this suite. @ 04/10/25 18:10:23.817
• [3.086 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 04/10/25 18:10:23.823
  I0410 18:10:23.823510 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename var-expansion @ 04/10/25 18:10:23.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:10:23.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:10:23.835
  I0410 18:10:25.851698 23 delete.go:62] Deleting pod "var-expansion-b5942524-6bd1-4147-98b5-d9c236c3c875" in namespace "var-expansion-5970"
  I0410 18:10:25.858240 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-b5942524-6bd1-4147-98b5-d9c236c3c875" to be fully deleted
  I0410 18:10:27.867144 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5970" for this suite. @ 04/10/25 18:10:27.871
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/10/25 18:10:27.879
  I0410 18:10:27.879812 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename discovery @ 04/10/25 18:10:27.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:10:27.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:10:27.895
  STEP: Setting up server cert @ 04/10/25 18:10:27.899
  I0410 18:10:28.248396 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0410 18:10:28.249150 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0410 18:10:28.249173 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0410 18:10:28.249180 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0410 18:10:28.249185 23 discovery.go:139] Checking APIGroup: apps
  I0410 18:10:28.249847 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0410 18:10:28.249867 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I0410 18:10:28.249874 23 discovery.go:154] apps/v1 matches apps/v1
  I0410 18:10:28.249878 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I0410 18:10:28.250560 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0410 18:10:28.250580 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0410 18:10:28.250592 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0410 18:10:28.250612 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0410 18:10:28.251209 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0410 18:10:28.251226 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0410 18:10:28.251231 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0410 18:10:28.251239 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0410 18:10:28.251819 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0410 18:10:28.251839 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0410 18:10:28.251847 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0410 18:10:28.251852 23 discovery.go:139] Checking APIGroup: autoscaling
  I0410 18:10:28.252427 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0410 18:10:28.252454 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0410 18:10:28.252461 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0410 18:10:28.252466 23 discovery.go:139] Checking APIGroup: batch
  I0410 18:10:28.253020 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0410 18:10:28.253040 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I0410 18:10:28.253046 23 discovery.go:154] batch/v1 matches batch/v1
  I0410 18:10:28.253052 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0410 18:10:28.253692 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0410 18:10:28.253713 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0410 18:10:28.253720 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0410 18:10:28.253726 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0410 18:10:28.254308 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0410 18:10:28.254332 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0410 18:10:28.254338 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0410 18:10:28.254344 23 discovery.go:139] Checking APIGroup: policy
  I0410 18:10:28.254927 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0410 18:10:28.254946 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I0410 18:10:28.254953 23 discovery.go:154] policy/v1 matches policy/v1
  I0410 18:10:28.254959 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0410 18:10:28.255455 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0410 18:10:28.255473 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0410 18:10:28.255479 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0410 18:10:28.255485 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0410 18:10:28.255822 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0410 18:10:28.255837 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0410 18:10:28.255843 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0410 18:10:28.255848 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0410 18:10:28.256202 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0410 18:10:28.256216 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0410 18:10:28.256222 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0410 18:10:28.256242 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0410 18:10:28.256634 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0410 18:10:28.256660 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0410 18:10:28.256666 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0410 18:10:28.256672 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0410 18:10:28.257002 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0410 18:10:28.257016 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0410 18:10:28.257023 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0410 18:10:28.257029 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0410 18:10:28.257560 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0410 18:10:28.257579 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0410 18:10:28.257586 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0410 18:10:28.257593 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I0410 18:10:28.258070 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0410 18:10:28.258085 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0410 18:10:28.258091 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0410 18:10:28.258096 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0410 18:10:28.258556 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0410 18:10:28.258571 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0410 18:10:28.258577 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0410 18:10:28.258582 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0410 18:10:28.258953 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0410 18:10:28.258971 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0410 18:10:28.258978 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0410 18:10:28.259056 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9669" for this suite. @ 04/10/25 18:10:28.26
• [0.386 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 04/10/25 18:10:28.265
  I0410 18:10:28.265463 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 18:10:28.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:10:28.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:10:28.275
  STEP: Creating configMap with name configmap-test-volume-fcc93694-0a00-4cee-beeb-3bad42d7e70e @ 04/10/25 18:10:28.277
  STEP: Creating a pod to test consume configMaps @ 04/10/25 18:10:28.28
  STEP: Saw pod success @ 04/10/25 18:10:32.298
  I0410 18:10:32.301892 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-09abad70-7fc6-4ac0-a566-e29d717b1dc0 container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 18:10:32.309
  I0410 18:10:32.328028 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1505" for this suite. @ 04/10/25 18:10:32.331
• [4.071 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 04/10/25 18:10:32.337
  I0410 18:10:32.337190 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename job @ 04/10/25 18:10:32.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:10:32.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:10:32.356
  STEP: Creating Indexed job @ 04/10/25 18:10:32.359
  STEP: Ensuring job reaches completions @ 04/10/25 18:10:32.365
  STEP: Ensuring pods with index for job exist @ 04/10/25 18:10:42.376
  I0410 18:10:42.379853 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1903" for this suite. @ 04/10/25 18:10:42.383
• [10.055 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/10/25 18:10:42.392
  I0410 18:10:42.392895 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 18:10:42.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:10:42.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:10:42.409
  STEP: Creating secret with name secret-test-3e21af60-8a59-4f59-8c12-5a2122ae941b @ 04/10/25 18:10:42.412
  STEP: Creating a pod to test consume secrets @ 04/10/25 18:10:42.418
  STEP: Saw pod success @ 04/10/25 18:10:46.441
  I0410 18:10:46.445881 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-secrets-a67782ab-f8d4-436e-849e-c9b5d96db0b0 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 18:10:46.455
  I0410 18:10:46.472868 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7549" for this suite. @ 04/10/25 18:10:46.476
• [4.089 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 04/10/25 18:10:46.482
  I0410 18:10:46.482532 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 18:10:46.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:10:46.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:10:46.496
  I0410 18:10:46.497926 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-2513 version'
  I0410 18:10:46.532155 23 builder.go:146] stderr: ""
  I0410 18:10:46.532191 23 builder.go:147] stdout: "Client Version: v1.31.6\nKustomize Version: v5.4.2\nServer Version: v1.31.6\n"
  I0410 18:10:46.532409 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2513" for this suite. @ 04/10/25 18:10:46.577
• [0.098 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 04/10/25 18:10:46.58
  I0410 18:10:46.580436 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename statefulset @ 04/10/25 18:10:46.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:10:46.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:10:46.594
  STEP: Creating service test in namespace statefulset-5795 @ 04/10/25 18:10:46.595
  STEP: Creating statefulset ss in namespace statefulset-5795 @ 04/10/25 18:10:46.598
  I0410 18:10:46.605740 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0410 18:10:56.607051 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/10/25 18:10:56.61
  STEP: updating a scale subresource @ 04/10/25 18:10:56.611
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/10/25 18:10:56.615
  STEP: Patch a scale subresource @ 04/10/25 18:10:56.617
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/10/25 18:10:56.621
  I0410 18:10:56.623730 23 statefulset.go:138] Deleting all statefulset in ns statefulset-5795
  I0410 18:10:56.625786 23 rest.go:150] Scaling statefulset ss to 0
  I0410 18:11:06.634896 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0410 18:11:06.636226 23 rest.go:88] Deleting statefulset ss
  I0410 18:11:06.646864 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5795" for this suite. @ 04/10/25 18:11:06.648
• [20.071 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 04/10/25 18:11:06.651
  I0410 18:11:06.651620 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 18:11:06.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:11:06.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:11:06.662
  STEP: Creating configMap with name projected-configmap-test-volume-667aa231-8114-47bb-8240-450580b94395 @ 04/10/25 18:11:06.664
  STEP: Creating a pod to test consume configMaps @ 04/10/25 18:11:06.666
  STEP: Saw pod success @ 04/10/25 18:11:10.688
  I0410 18:11:10.690984 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-87ffd765-0c62-47b4-9220-e54dc565ac04 container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 18:11:10.698
  I0410 18:11:10.712383 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2439" for this suite. @ 04/10/25 18:11:10.715
• [4.070 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/10/25 18:11:10.721
  I0410 18:11:10.721591 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename subpath @ 04/10/25 18:11:10.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:11:10.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:11:10.735
  STEP: Setting up data @ 04/10/25 18:11:10.737
  STEP: Creating pod pod-subpath-test-projected-vn4k @ 04/10/25 18:11:10.746
  STEP: Creating a pod to test atomic-volume-subpath @ 04/10/25 18:11:10.746
  STEP: Saw pod success @ 04/10/25 18:11:32.822
  I0410 18:11:32.825431 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-projected-vn4k container test-container-subpath-projected-vn4k: <nil>
  STEP: delete the pod @ 04/10/25 18:11:32.834
  STEP: Deleting pod pod-subpath-test-projected-vn4k @ 04/10/25 18:11:32.848
  I0410 18:11:32.848565 23 delete.go:62] Deleting pod "pod-subpath-test-projected-vn4k" in namespace "subpath-5971"
  I0410 18:11:32.851468 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5971" for this suite. @ 04/10/25 18:11:32.855
• [22.138 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 04/10/25 18:11:32.86
  I0410 18:11:32.860505 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 18:11:32.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:11:32.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:11:32.877
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 18:11:32.881
  STEP: Saw pod success @ 04/10/25 18:11:36.902
  I0410 18:11:36.904464 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-b3ab7463-8078-4114-80e3-e729875b0878 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 18:11:36.908
  I0410 18:11:36.921023 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1989" for this suite. @ 04/10/25 18:11:36.922
• [4.066 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 04/10/25 18:11:36.926
  I0410 18:11:36.926274 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 18:11:36.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:11:36.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:11:36.936
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/10/25 18:11:36.938
  STEP: Saw pod success @ 04/10/25 18:11:38.95
  I0410 18:11:38.955291 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-2e3caba5-1592-4e6d-8952-0706159b75c0 container test-container: <nil>
  STEP: delete the pod @ 04/10/25 18:11:38.964
  I0410 18:11:38.978859 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9454" for this suite. @ 04/10/25 18:11:38.982
• [2.060 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 04/10/25 18:11:38.986
  I0410 18:11:38.986411 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename var-expansion @ 04/10/25 18:11:38.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:11:38.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:11:39.002
  I0410 18:11:41.022648 23 delete.go:62] Deleting pod "var-expansion-9086c969-a22b-4425-9103-a72981aff589" in namespace "var-expansion-1585"
  I0410 18:11:41.030925 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-9086c969-a22b-4425-9103-a72981aff589" to be fully deleted
  I0410 18:11:43.040059 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1585" for this suite. @ 04/10/25 18:11:43.043
• [4.065 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 04/10/25 18:11:43.051
  I0410 18:11:43.051560 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename var-expansion @ 04/10/25 18:11:43.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:11:43.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:11:43.071
  STEP: Creating a pod to test env composition @ 04/10/25 18:11:43.074
  STEP: Saw pod success @ 04/10/25 18:11:47.098
  I0410 18:11:47.101027 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod var-expansion-93c25ba4-2b2d-4497-be81-f0ff9065d9c5 container dapi-container: <nil>
  STEP: delete the pod @ 04/10/25 18:11:47.108
  I0410 18:11:47.123654 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7790" for this suite. @ 04/10/25 18:11:47.126
• [4.080 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 04/10/25 18:11:47.132
  I0410 18:11:47.132298 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 18:11:47.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:11:47.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:11:47.145
  STEP: creating service endpoint-test2 in namespace services-865 @ 04/10/25 18:11:47.147
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-865 to expose endpoints map[] @ 04/10/25 18:11:47.156
  I0410 18:11:47.161226 23 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0410 18:11:48.255488 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-865 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-865 @ 04/10/25 18:11:48.255
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-865 to expose endpoints map[pod1:[80]] @ 04/10/25 18:11:50.276
  I0410 18:11:50.284527 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-865 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/10/25 18:11:50.284
  I0410 18:11:50.284617 23 resource.go:361] Creating new exec pod
  I0410 18:11:53.300038 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-865 exec execpodms2ll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0410 18:11:53.403216 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0410 18:11:53.403266 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 18:11:53.403341 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-865 exec execpodms2ll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.0.95 80'
  I0410 18:11:53.504823 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.0.95 80\nConnection to 10.101.0.95 80 port [tcp/http] succeeded!\n"
  I0410 18:11:53.504921 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-865 @ 04/10/25 18:11:53.504
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-865 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/10/25 18:11:55.524
  I0410 18:11:55.536185 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-865 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/10/25 18:11:55.536
  I0410 18:11:56.537600 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-865 exec execpodms2ll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0410 18:11:56.631755 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0410 18:11:56.631798 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 18:11:56.631873 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-865 exec execpodms2ll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.0.95 80'
  I0410 18:11:56.713883 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.0.95 80\nConnection to 10.101.0.95 80 port [tcp/http] succeeded!\n"
  I0410 18:11:56.713933 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-865 @ 04/10/25 18:11:56.713
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-865 to expose endpoints map[pod2:[80]] @ 04/10/25 18:11:56.726
  I0410 18:11:56.738950 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-865 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/10/25 18:11:56.739
  I0410 18:11:57.739617 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-865 exec execpodms2ll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0410 18:11:57.849583 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0410 18:11:57.849663 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 18:11:57.849768 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-865 exec execpodms2ll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.0.95 80'
  I0410 18:11:57.942808 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.0.95 80\nConnection to 10.101.0.95 80 port [tcp/http] succeeded!\n"
  I0410 18:11:57.942884 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-865 @ 04/10/25 18:11:57.942
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-865 to expose endpoints map[] @ 04/10/25 18:11:57.957
  I0410 18:11:57.986510 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-865 exposes endpoints map[]
  I0410 18:11:58.009149 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-865" for this suite. @ 04/10/25 18:11:58.011
• [10.882 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 04/10/25 18:11:58.014
  I0410 18:11:58.014397 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename disruption @ 04/10/25 18:11:58.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:11:58.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:11:58.023
  STEP: Creating a kubernetes client @ 04/10/25 18:11:58.025
  I0410 18:11:58.025306 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename disruption-2 @ 04/10/25 18:11:58.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:11:58.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:11:58.128
  STEP: Waiting for the pdb to be processed @ 04/10/25 18:11:58.132
  STEP: Waiting for the pdb to be processed @ 04/10/25 18:12:00.147
  STEP: Waiting for the pdb to be processed @ 04/10/25 18:12:02.156
  STEP: listing a collection of PDBs across all namespaces @ 04/10/25 18:12:04.159
  STEP: listing a collection of PDBs in namespace disruption-6081 @ 04/10/25 18:12:04.16
  STEP: deleting a collection of PDBs @ 04/10/25 18:12:04.162
  STEP: Waiting for the PDB collection to be deleted @ 04/10/25 18:12:04.167
  I0410 18:12:04.170392 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-3425" for this suite. @ 04/10/25 18:12:04.172
  I0410 18:12:04.175704 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6081" for this suite. @ 04/10/25 18:12:04.276
• [6.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 04/10/25 18:12:04.282
  I0410 18:12:04.282842 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-probe @ 04/10/25 18:12:04.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:12:04.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:12:04.3
  I0410 18:13:04.317656 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2471" for this suite. @ 04/10/25 18:13:04.321
• [60.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/10/25 18:13:04.327
  I0410 18:13:04.327586 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pods @ 04/10/25 18:13:04.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:13:04.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:13:04.344
  STEP: Create a pod @ 04/10/25 18:13:04.347
  STEP: patching /status @ 04/10/25 18:13:06.362
  I0410 18:13:06.372758 23 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0410 18:13:06.372992 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8574" for this suite. @ 04/10/25 18:13:06.377
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/10/25 18:13:06.382
  I0410 18:13:06.383014 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename limitrange @ 04/10/25 18:13:06.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:13:06.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:13:06.398
  STEP: Creating LimitRange "e2e-limitrange-pxq5p" in namespace "limitrange-8398" @ 04/10/25 18:13:06.402
  STEP: Creating another limitRange in another namespace @ 04/10/25 18:13:06.406
  I0410 18:13:06.497717 23 limit_range.go:299] Namespace "e2e-limitrange-pxq5p-5417" created
  I0410 18:13:06.497770 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-pxq5p" in namespace "e2e-limitrange-pxq5p-5417"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-pxq5p" @ 04/10/25 18:13:06.502
  I0410 18:13:06.505277 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-pxq5p" in "limitrange-8398" namespace @ 04/10/25 18:13:06.505
  I0410 18:13:06.513608 23 limit_range.go:335] LimitRange "e2e-limitrange-pxq5p" has been patched
  STEP: Delete LimitRange "e2e-limitrange-pxq5p" by Collection with labelSelector: "e2e-limitrange-pxq5p=patched" @ 04/10/25 18:13:06.513
  STEP: Confirm that the limitRange "e2e-limitrange-pxq5p" has been deleted @ 04/10/25 18:13:06.518
  I0410 18:13:06.518137 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0410 18:13:06.519925 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-pxq5p=patched"
  I0410 18:13:06.519964 23 limit_range.go:344] LimitRange "e2e-limitrange-pxq5p" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-pxq5p" @ 04/10/25 18:13:06.519
  I0410 18:13:06.522076 23 limit_range.go:350] Found 1 limitRange
  I0410 18:13:06.522221 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8398" for this suite. @ 04/10/25 18:13:06.524
  STEP: Destroying namespace "e2e-limitrange-pxq5p-5417" for this suite. @ 04/10/25 18:13:06.528
• [0.149 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 04/10/25 18:13:06.532
  I0410 18:13:06.532512 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 18:13:06.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:13:06.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:13:06.6
  STEP: creating a replication controller @ 04/10/25 18:13:06.602
  I0410 18:13:06.602569 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-2101 create -f -'
  I0410 18:13:06.682937 23 builder.go:146] stderr: ""
  I0410 18:13:06.682978 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/10/25 18:13:06.683
  I0410 18:13:06.683077 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-2101 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0410 18:13:06.731962 23 builder.go:146] stderr: ""
  I0410 18:13:06.731998 23 builder.go:147] stdout: "update-demo-nautilus-cnh5k update-demo-nautilus-fn5zk "
  I0410 18:13:06.732044 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-2101 get pods update-demo-nautilus-cnh5k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0410 18:13:06.771750 23 builder.go:146] stderr: ""
  I0410 18:13:06.771792 23 builder.go:147] stdout: ""
  I0410 18:13:06.771805 23 kubectl.go:2502] update-demo-nautilus-cnh5k is created but not running
  I0410 18:13:11.772612 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-2101 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0410 18:13:11.814275 23 builder.go:146] stderr: ""
  I0410 18:13:11.814307 23 builder.go:147] stdout: "update-demo-nautilus-cnh5k update-demo-nautilus-fn5zk "
  I0410 18:13:11.814351 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-2101 get pods update-demo-nautilus-cnh5k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0410 18:13:11.854432 23 builder.go:146] stderr: ""
  I0410 18:13:11.854476 23 builder.go:147] stdout: "true"
  I0410 18:13:11.854525 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-2101 get pods update-demo-nautilus-cnh5k -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0410 18:13:11.893630 23 builder.go:146] stderr: ""
  I0410 18:13:11.893663 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0410 18:13:11.893675 23 kubectl.go:2393] validating pod update-demo-nautilus-cnh5k
  I0410 18:13:11.896152 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0410 18:13:11.896197 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0410 18:13:11.896210 23 kubectl.go:2520] update-demo-nautilus-cnh5k is verified up and running
  I0410 18:13:11.896267 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-2101 get pods update-demo-nautilus-fn5zk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0410 18:13:11.938669 23 builder.go:146] stderr: ""
  I0410 18:13:11.938711 23 builder.go:147] stdout: "true"
  I0410 18:13:11.938765 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-2101 get pods update-demo-nautilus-fn5zk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0410 18:13:11.993718 23 builder.go:146] stderr: ""
  I0410 18:13:11.993754 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0410 18:13:11.993770 23 kubectl.go:2393] validating pod update-demo-nautilus-fn5zk
  I0410 18:13:11.995919 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0410 18:13:11.995957 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0410 18:13:11.995969 23 kubectl.go:2520] update-demo-nautilus-fn5zk is verified up and running
  STEP: using delete to clean up resources @ 04/10/25 18:13:11.995
  I0410 18:13:11.996031 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-2101 delete --grace-period=0 --force -f -'
  I0410 18:13:12.033366 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0410 18:13:12.033402 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0410 18:13:12.033450 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-2101 get rc,svc -l name=update-demo --no-headers'
  I0410 18:13:12.179533 23 builder.go:146] stderr: "No resources found in kubectl-2101 namespace.\n"
  I0410 18:13:12.179574 23 builder.go:147] stdout: ""
  I0410 18:13:12.179628 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-2101 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0410 18:13:12.217789 23 builder.go:146] stderr: ""
  I0410 18:13:12.217826 23 builder.go:147] stdout: ""
  I0410 18:13:12.217948 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2101" for this suite. @ 04/10/25 18:13:12.219
• [5.691 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 04/10/25 18:13:12.223
  I0410 18:13:12.223411 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 18:13:12.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:13:12.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:13:12.233
  STEP: Setting up server cert @ 04/10/25 18:13:12.335
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 18:13:12.711
  STEP: Deploying the webhook pod @ 04/10/25 18:13:12.716
  STEP: Wait for the deployment to be ready @ 04/10/25 18:13:12.723
  I0410 18:13:12.725974 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 18:13:14.731
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 18:13:14.739
  I0410 18:13:15.740482 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/10/25 18:13:15.75
  STEP: verifying the validating webhook match conditions @ 04/10/25 18:13:15.756
  STEP: updating the validating webhook match conditions @ 04/10/25 18:13:15.759
  STEP: verifying the validating webhook match conditions @ 04/10/25 18:13:15.77
  I0410 18:13:15.806827 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-929" for this suite. @ 04/10/25 18:13:15.81
  STEP: Destroying namespace "webhook-markers-4825" for this suite. @ 04/10/25 18:13:15.815
• [3.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 04/10/25 18:13:15.822
  I0410 18:13:15.822171 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sched-pred @ 04/10/25 18:13:15.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:13:15.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:13:15.831
  I0410 18:13:15.832909 23 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0410 18:13:15.915684 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I0410 18:13:15.918745 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance before test
  I0410 18:13:15.922995 23 predicates.go:957] coredns-7c65d6cfc9-bfx56 from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 18:13:15.923028 23 predicates.go:959] 	Container coredns ready: true, restart count 2
  I0410 18:13:15.923040 23 predicates.go:957] etcd-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 18:13:15.923049 23 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0410 18:13:15.923058 23 predicates.go:957] kindnet-jtksc from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 18:13:15.923065 23 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0410 18:13:15.923074 23 predicates.go:957] kube-apiserver-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 18:13:15.923081 23 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0410 18:13:15.923089 23 predicates.go:957] kube-controller-manager-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 18:13:15.923096 23 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0410 18:13:15.923103 23 predicates.go:957] kube-proxy-f9rvm from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 18:13:15.923111 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0410 18:13:15.923119 23 predicates.go:957] kube-scheduler-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 18:13:15.923125 23 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0410 18:13:15.923133 23 predicates.go:957] storage-provisioner from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 18:13:15.923140 23 predicates.go:959] 	Container storage-provisioner ready: true, restart count 0
  I0410 18:13:15.923148 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-263a75f94ecb4a68-w8pln from sonobuoy started at 2025-04-10 17:05:50 +0000 UTC (2 container statuses recorded)
  I0410 18:13:15.923156 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0410 18:13:15.923165 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0410 18:13:15.923173 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  I0410 18:13:15.925981 23 predicates.go:957] kindnet-l9rnz from kube-system started at 2025-04-10 18:02:09 +0000 UTC (1 container statuses recorded)
  I0410 18:13:15.926017 23 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0410 18:13:15.926033 23 predicates.go:957] kube-proxy-jjf4l from kube-system started at 2025-04-10 17:05:26 +0000 UTC (1 container statuses recorded)
  I0410 18:13:15.926045 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0410 18:13:15.926057 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-10 17:05:45 +0000 UTC (1 container statuses recorded)
  I0410 18:13:15.926066 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0410 18:13:15.926078 23 predicates.go:957] sonobuoy-e2e-job-58df2f5851bb4777 from sonobuoy started at 2025-04-10 17:05:50 +0000 UTC (2 container statuses recorded)
  I0410 18:13:15.926087 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0410 18:13:15.926097 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0410 18:13:15.926109 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-263a75f94ecb4a68-9xh5d from sonobuoy started at 2025-04-10 17:05:50 +0000 UTC (2 container statuses recorded)
  I0410 18:13:15.926119 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0410 18:13:15.926132 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/10/25 18:13:15.926
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1835079bb0a72a07], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 04/10/25 18:13:15.945
  I0410 18:13:16.946899 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7713" for this suite. @ 04/10/25 18:13:16.95
• [1.135 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 04/10/25 18:13:16.957
  I0410 18:13:16.957516 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename resourcequota @ 04/10/25 18:13:16.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:13:16.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:13:16.977
  STEP: Counting existing ResourceQuota @ 04/10/25 18:13:16.98
  STEP: Creating a ResourceQuota @ 04/10/25 18:13:21.984
  STEP: Ensuring resource quota status is calculated @ 04/10/25 18:13:21.992
  I0410 18:13:23.998612 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3426" for this suite. @ 04/10/25 18:13:24.002
• [7.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 04/10/25 18:13:24.009
  I0410 18:13:24.009939 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/10/25 18:13:24.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:13:24.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:13:24.028
  STEP: set up a multi version CRD @ 04/10/25 18:13:24.03
  I0410 18:13:24.031363 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: mark a version not serverd @ 04/10/25 18:13:27.007
  STEP: check the unserved version gets removed @ 04/10/25 18:13:27.02
  STEP: check the other version is not changed @ 04/10/25 18:13:27.677
  I0410 18:13:30.034783 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8492" for this suite. @ 04/10/25 18:13:30.041
• [6.038 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 04/10/25 18:13:30.047
  I0410 18:13:30.047735 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename svcaccounts @ 04/10/25 18:13:30.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:13:30.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:13:30.062
  I0410 18:13:30.081567 23 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0410 18:13:30.081624 23 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0410 18:13:30.086424 23 service_accounts.go:253] created pod pod-service-account-mountsa
  I0410 18:13:30.086450 23 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0410 18:13:30.096706 23 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0410 18:13:30.096800 23 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0410 18:13:30.106964 23 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0410 18:13:30.107044 23 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0410 18:13:30.113245 23 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0410 18:13:30.113321 23 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0410 18:13:30.124524 23 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0410 18:13:30.124556 23 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0410 18:13:30.131715 23 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0410 18:13:30.131754 23 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0410 18:13:30.138836 23 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0410 18:13:30.138899 23 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0410 18:13:30.145338 23 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0410 18:13:30.145400 23 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0410 18:13:30.145603 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1552" for this suite. @ 04/10/25 18:13:30.149
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 04/10/25 18:13:30.158
  I0410 18:13:30.158570 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/10/25 18:13:30.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:13:30.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:13:30.172
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/10/25 18:13:30.174
  I0410 18:13:30.174860 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:13:31.335329 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:13:35.965167 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9804" for this suite. @ 04/10/25 18:13:35.969
• [5.816 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 04/10/25 18:13:35.974
  I0410 18:13:35.974986 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 18:13:35.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:13:35.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:13:35.984
  STEP: creating service in namespace services-5197 @ 04/10/25 18:13:35.985
  STEP: creating service affinity-clusterip in namespace services-5197 @ 04/10/25 18:13:35.985
  STEP: creating replication controller affinity-clusterip in namespace services-5197 @ 04/10/25 18:13:35.993
  I0410 18:13:36.002096      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-5197, replica count: 3
  I0410 18:13:39.053416      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0410 18:13:39.060321 23 resource.go:361] Creating new exec pod
  I0410 18:13:42.074718 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-5197 exec execpod-affinity8mx6d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0410 18:13:42.192782 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0410 18:13:42.192853 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 18:13:42.192970 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-5197 exec execpod-affinity8mx6d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.59.57 80'
  I0410 18:13:42.290874 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.59.57 80\nConnection to 10.107.59.57 80 port [tcp/http] succeeded!\n"
  I0410 18:13:42.290931 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 18:13:42.291029 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-5197 exec execpod-affinity8mx6d -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.107.59.57:80/ ; done'
  I0410 18:13:42.439994 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.57:80/\n"
  I0410 18:13:42.440040 23 builder.go:147] stdout: "\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj\naffinity-clusterip-967nj"
  I0410 18:13:42.440056 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440069 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440077 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440084 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440092 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440100 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440107 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440116 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440123 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440132 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440139 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440146 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440153 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440160 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440167 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440173 23 service.go:242] Received response from host: affinity-clusterip-967nj
  I0410 18:13:42.440229 23 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5197, will wait for the garbage collector to delete the pods @ 04/10/25 18:13:42.45
  I0410 18:13:42.508869 23 resources.go:139] Deleting ReplicationController affinity-clusterip took: 5.053267ms
  I0410 18:13:42.610203 23 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 101.322656ms
  I0410 18:13:45.230447 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5197" for this suite. @ 04/10/25 18:13:45.235
• [9.266 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 04/10/25 18:13:45.241
  I0410 18:13:45.241103 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sched-preemption @ 04/10/25 18:13:45.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:13:45.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:13:45.257
  I0410 18:13:45.268684 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0410 18:14:45.276640 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/10/25 18:14:45.28
  I0410 18:14:45.280165 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/10/25 18:14:45.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:14:45.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:14:45.299
  I0410 18:14:45.314381 23 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0410 18:14:45.317574 23 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0410 18:14:45.367132 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9253" for this suite. @ 04/10/25 18:14:45.376
  I0410 18:14:45.381429 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5213" for this suite. @ 04/10/25 18:14:45.455
• [60.221 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 04/10/25 18:14:45.461
  I0410 18:14:45.461710 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 18:14:45.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:14:45.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:14:45.477
  STEP: Setting up server cert @ 04/10/25 18:14:45.579
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 18:14:45.863
  STEP: Deploying the webhook pod @ 04/10/25 18:14:45.867
  STEP: Wait for the deployment to be ready @ 04/10/25 18:14:45.875
  I0410 18:14:45.878997 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 18:14:47.891
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 18:14:47.905
  I0410 18:14:48.905498 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/10/25 18:14:48.909
  STEP: create a pod @ 04/10/25 18:14:48.923
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/10/25 18:14:50.934
  I0410 18:14:50.934979 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=webhook-7941 attach --namespace=webhook-7941 to-be-attached-pod -i -c=container1'
  I0410 18:14:50.994280 23 builder.go:135] rc: 1
  I0410 18:14:51.027143 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7941" for this suite. @ 04/10/25 18:14:51.032
  STEP: Destroying namespace "webhook-markers-398" for this suite. @ 04/10/25 18:14:51.035
• [5.578 seconds]
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 04/10/25 18:14:51.039
  I0410 18:14:51.039831 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename dns @ 04/10/25 18:14:51.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:14:51.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:14:51.051
  STEP: Creating a test headless service @ 04/10/25 18:14:51.053
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6347 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6347;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6347 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6347;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6347.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6347.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6347.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6347.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6347.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6347.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6347.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6347.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6347.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6347.svc;check="$$(dig +notcp +noall +answer +search 114.58.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.58.114_udp@PTR;check="$$(dig +tcp +noall +answer +search 114.58.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.58.114_tcp@PTR;sleep 1; done
   @ 04/10/25 18:14:51.067
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6347 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6347;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6347 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6347;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6347.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6347.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6347.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6347.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6347.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6347.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6347.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6347.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6347.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6347.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6347.svc;check="$$(dig +notcp +noall +answer +search 114.58.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.58.114_udp@PTR;check="$$(dig +tcp +noall +answer +search 114.58.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.58.114_tcp@PTR;sleep 1; done
   @ 04/10/25 18:14:51.067
  STEP: creating a pod to probe DNS @ 04/10/25 18:14:51.067
  STEP: submitting the pod to kubernetes @ 04/10/25 18:14:51.067
  STEP: retrieving the pod @ 04/10/25 18:14:53.081
  STEP: looking for the results for each expected name from probers @ 04/10/25 18:14:53.083
  I0410 18:14:53.084874 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.086387 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.087859 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.089102 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.090596 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.092072 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.093484 23 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.094690 23 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.101459 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.102703 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.103940 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.105058 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.106279 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.107457 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.108588 23 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.109839 23 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:53.115396 23 dns_common.go:490] Lookups using dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6347 wheezy_tcp@dns-test-service.dns-6347 wheezy_udp@dns-test-service.dns-6347.svc wheezy_tcp@dns-test-service.dns-6347.svc wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6347 jessie_tcp@dns-test-service.dns-6347 jessie_udp@dns-test-service.dns-6347.svc jessie_tcp@dns-test-service.dns-6347.svc jessie_udp@_http._tcp.dns-test-service.dns-6347.svc jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc]

  I0410 18:14:53.127022 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 18:14:53.130885 23 dns_common.go:496] Pod client logs for querier: 
  I0410 18:14:53.134839 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 18:14:58.090433 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.093941 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.096984 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.099856 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.102523 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.105176 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.107846 23 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.110226 23 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.121750 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.124020 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.126352 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.128663 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.131008 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.132849 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.134831 23 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.136495 23 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:14:58.143601 23 dns_common.go:490] Lookups using dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6347 wheezy_tcp@dns-test-service.dns-6347 wheezy_udp@dns-test-service.dns-6347.svc wheezy_tcp@dns-test-service.dns-6347.svc wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6347 jessie_tcp@dns-test-service.dns-6347 jessie_udp@dns-test-service.dns-6347.svc jessie_tcp@dns-test-service.dns-6347.svc jessie_udp@_http._tcp.dns-test-service.dns-6347.svc jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc]

  I0410 18:14:58.150165 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 18:14:58.155044 23 dns_common.go:496] Pod client logs for querier: 
  I0410 18:14:58.159048 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 18:15:03.090910 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.094169 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.097310 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.100451 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.103501 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.106509 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.109288 23 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.112004 23 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.128005 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.130601 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.132725 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.134852 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.137176 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.139327 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.141309 23 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.143486 23 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:03.151454 23 dns_common.go:490] Lookups using dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6347 wheezy_tcp@dns-test-service.dns-6347 wheezy_udp@dns-test-service.dns-6347.svc wheezy_tcp@dns-test-service.dns-6347.svc wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6347 jessie_tcp@dns-test-service.dns-6347 jessie_udp@dns-test-service.dns-6347.svc jessie_tcp@dns-test-service.dns-6347.svc jessie_udp@_http._tcp.dns-test-service.dns-6347.svc jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc]

  I0410 18:15:03.157591 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 18:15:03.163732 23 dns_common.go:496] Pod client logs for querier: 
  I0410 18:15:03.169378 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 18:15:08.090602 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.094482 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.097580 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.100586 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.105029 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.108257 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.110982 23 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.113526 23 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.125980 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.128372 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.130662 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.132973 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.135106 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.137093 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.138759 23 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.141467 23 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:08.150699 23 dns_common.go:490] Lookups using dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6347 wheezy_tcp@dns-test-service.dns-6347 wheezy_udp@dns-test-service.dns-6347.svc wheezy_tcp@dns-test-service.dns-6347.svc wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6347 jessie_tcp@dns-test-service.dns-6347 jessie_udp@dns-test-service.dns-6347.svc jessie_tcp@dns-test-service.dns-6347.svc jessie_udp@_http._tcp.dns-test-service.dns-6347.svc jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc]

  I0410 18:15:08.157671 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 18:15:08.163971 23 dns_common.go:496] Pod client logs for querier: 
  I0410 18:15:08.170390 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 18:15:13.090362 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.093895 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.096517 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.099367 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.101844 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.104486 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.106737 23 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.109105 23 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.121425 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.123660 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.125988 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.128078 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.130361 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.132496 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.134734 23 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.136997 23 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:13.145689 23 dns_common.go:490] Lookups using dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6347 wheezy_tcp@dns-test-service.dns-6347 wheezy_udp@dns-test-service.dns-6347.svc wheezy_tcp@dns-test-service.dns-6347.svc wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6347 jessie_tcp@dns-test-service.dns-6347 jessie_udp@dns-test-service.dns-6347.svc jessie_tcp@dns-test-service.dns-6347.svc jessie_udp@_http._tcp.dns-test-service.dns-6347.svc jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc]

  I0410 18:15:13.152100 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 18:15:13.158143 23 dns_common.go:496] Pod client logs for querier: 
  I0410 18:15:13.163882 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 18:15:18.089977 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.092945 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.095567 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.097875 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.100451 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.102789 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.105417 23 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.107779 23 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.119365 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.121475 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.123749 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.126006 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-6347 from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.128163 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.130422 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.132355 23 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.134399 23 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc from pod dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab: the server could not find the requested resource (get pods dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab)
  I0410 18:15:18.142915 23 dns_common.go:490] Lookups using dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6347 wheezy_tcp@dns-test-service.dns-6347 wheezy_udp@dns-test-service.dns-6347.svc wheezy_tcp@dns-test-service.dns-6347.svc wheezy_udp@_http._tcp.dns-test-service.dns-6347.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6347.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6347 jessie_tcp@dns-test-service.dns-6347 jessie_udp@dns-test-service.dns-6347.svc jessie_tcp@dns-test-service.dns-6347.svc jessie_udp@_http._tcp.dns-test-service.dns-6347.svc jessie_tcp@_http._tcp.dns-test-service.dns-6347.svc]

  I0410 18:15:18.148997 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 18:15:18.155919 23 dns_common.go:496] Pod client logs for querier: 
  I0410 18:15:18.161053 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 18:15:23.139487 23 dns_common.go:528] DNS probes using dns-6347/dns-test-26de0f6e-a77b-42f8-b879-92911b1129ab succeeded

  STEP: deleting the pod @ 04/10/25 18:15:23.139
  STEP: deleting the test service @ 04/10/25 18:15:23.151
  STEP: deleting the test headless service @ 04/10/25 18:15:23.174
  I0410 18:15:23.185759 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6347" for this suite. @ 04/10/25 18:15:23.19
• [32.154 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 04/10/25 18:15:23.193
  I0410 18:15:23.193474 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 18:15:23.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:15:23.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:15:23.207
  STEP: creating an Endpoint @ 04/10/25 18:15:23.21
  STEP: waiting for available Endpoint @ 04/10/25 18:15:23.214
  STEP: listing all Endpoints @ 04/10/25 18:15:23.216
  STEP: updating the Endpoint @ 04/10/25 18:15:23.218
  STEP: fetching the Endpoint @ 04/10/25 18:15:23.222
  STEP: patching the Endpoint @ 04/10/25 18:15:23.223
  STEP: fetching the Endpoint @ 04/10/25 18:15:23.248
  STEP: deleting the Endpoint by Collection @ 04/10/25 18:15:23.25
  STEP: waiting for Endpoint deletion @ 04/10/25 18:15:23.253
  STEP: fetching the Endpoint @ 04/10/25 18:15:23.254
  I0410 18:15:23.255192 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2071" for this suite. @ 04/10/25 18:15:23.291
• [0.103 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 04/10/25 18:15:23.297
  I0410 18:15:23.297202 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 18:15:23.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:15:23.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:15:23.309
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/10/25 18:15:23.311
  STEP: Saw pod success @ 04/10/25 18:15:27.328
  I0410 18:15:27.331376 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-9ae6861f-70c7-4606-91fa-d9f53a4ffb14 container test-container: <nil>
  STEP: delete the pod @ 04/10/25 18:15:27.339
  I0410 18:15:27.353412 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6692" for this suite. @ 04/10/25 18:15:27.357
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 04/10/25 18:15:27.362
  I0410 18:15:27.362846 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/10/25 18:15:27.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:15:27.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:15:27.38
  I0410 18:15:27.383285 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/10/25 18:15:28.537
  I0410 18:15:28.537352 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-2908 --namespace=crd-publish-openapi-2908 create -f -'
  I0410 18:15:30.595354 23 builder.go:146] stderr: ""
  I0410 18:15:30.595425 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9218-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0410 18:15:30.595512 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-2908 --namespace=crd-publish-openapi-2908 delete e2e-test-crd-publish-openapi-9218-crds test-cr'
  I0410 18:15:30.646785 23 builder.go:146] stderr: ""
  I0410 18:15:30.646819 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9218-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0410 18:15:30.646862 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-2908 --namespace=crd-publish-openapi-2908 apply -f -'
  I0410 18:15:30.689261 23 builder.go:146] stderr: ""
  I0410 18:15:30.689300 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9218-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0410 18:15:30.689345 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-2908 --namespace=crd-publish-openapi-2908 delete e2e-test-crd-publish-openapi-9218-crds test-cr'
  I0410 18:15:30.738854 23 builder.go:146] stderr: ""
  I0410 18:15:30.738915 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9218-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/10/25 18:15:30.738
  I0410 18:15:30.739015 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-2908 explain e2e-test-crd-publish-openapi-9218-crds'
  I0410 18:15:30.779456 23 builder.go:146] stderr: ""
  I0410 18:15:30.779516 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9218-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0410 18:15:31.922079 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2908" for this suite. @ 04/10/25 18:15:31.926
• [4.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/10/25 18:15:31.932
  I0410 18:15:31.932574 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename discovery @ 04/10/25 18:15:31.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:15:31.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:15:31.946
  STEP: Setting up server cert @ 04/10/25 18:15:31.95
  STEP: Requesting APIResourceList from "/api/v1" @ 04/10/25 18:15:32.175
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/10/25 18:15:32.176
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/10/25 18:15:32.177
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/10/25 18:15:32.177
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/10/25 18:15:32.178
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/10/25 18:15:32.178
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/10/25 18:15:32.179
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/10/25 18:15:32.179
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/10/25 18:15:32.179
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/10/25 18:15:32.18
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/10/25 18:15:32.181
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/10/25 18:15:32.181
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/10/25 18:15:32.182
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/10/25 18:15:32.182
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/10/25 18:15:32.183
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/10/25 18:15:32.184
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/10/25 18:15:32.184
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/10/25 18:15:32.185
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/10/25 18:15:32.185
  I0410 18:15:32.186280 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-489" for this suite. @ 04/10/25 18:15:32.188
• [0.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/10/25 18:15:32.194
  I0410 18:15:32.194475 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename watch @ 04/10/25 18:15:32.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:15:32.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:15:32.202
  STEP: creating a new configmap @ 04/10/25 18:15:32.203
  STEP: modifying the configmap once @ 04/10/25 18:15:32.206
  STEP: modifying the configmap a second time @ 04/10/25 18:15:32.21
  STEP: deleting the configmap @ 04/10/25 18:15:32.238
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/10/25 18:15:32.241
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/10/25 18:15:32.242
  I0410 18:15:32.242363 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9221  09bd84d8-64bc-48cd-a7df-1b73f2029177 20878 0 2025-04-10 18:15:32 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-04-10 18:15:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:15:32.242474 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9221  09bd84d8-64bc-48cd-a7df-1b73f2029177 20879 0 2025-04-10 18:15:32 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-04-10 18:15:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:15:32.242572 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9221" for this suite. @ 04/10/25 18:15:32.292
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 04/10/25 18:15:32.298
  I0410 18:15:32.298937 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename statefulset @ 04/10/25 18:15:32.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:15:32.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:15:32.316
  STEP: Creating service test in namespace statefulset-61 @ 04/10/25 18:15:32.319
  STEP: Creating a new StatefulSet @ 04/10/25 18:15:32.323
  I0410 18:15:32.333097 23 wait.go:40] Found 0 stateful pods, waiting for 3
  I0410 18:15:42.338148 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0410 18:15:42.338214 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0410 18:15:42.338240 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/10/25 18:15:42.347
  I0410 18:15:42.357391 23 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 04/10/25 18:15:42.357
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/10/25 18:15:52.365
  STEP: Performing a canary update @ 04/10/25 18:15:52.365
  I0410 18:15:52.371065 23 statefulset.go:2507] Updating stateful set ss2
  I0410 18:15:52.376074 23 wait.go:74] Waiting for Pod statefulset-61/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/10/25 18:16:02.38
  I0410 18:16:02.421864 23 wait.go:40] Found 2 stateful pods, waiting for 3
  I0410 18:16:12.421812 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0410 18:16:12.421877 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0410 18:16:12.421899 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/10/25 18:16:12.427
  I0410 18:16:12.436763 23 statefulset.go:2507] Updating stateful set ss2
  I0410 18:16:12.446811 23 wait.go:74] Waiting for Pod statefulset-61/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0410 18:16:22.450127 23 statefulset.go:2507] Updating stateful set ss2
  I0410 18:16:22.453736 23 wait.go:56] Waiting for StatefulSet statefulset-61/ss2 to complete update
  I0410 18:16:22.453780 23 wait.go:63] Waiting for Pod statefulset-61/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0410 18:16:32.460583 23 statefulset.go:138] Deleting all statefulset in ns statefulset-61
  I0410 18:16:32.462996 23 rest.go:150] Scaling statefulset ss2 to 0
  I0410 18:16:42.479989 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0410 18:16:42.483606 23 rest.go:88] Deleting statefulset ss2
  I0410 18:16:42.499060 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-61" for this suite. @ 04/10/25 18:16:42.502
• [70.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 04/10/25 18:16:42.507
  I0410 18:16:42.507864 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 18:16:42.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:16:42.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:16:42.52
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 18:16:42.522
  STEP: Saw pod success @ 04/10/25 18:16:46.542
  I0410 18:16:46.545478 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-c57c167c-bdcb-4c2b-940b-eedd01bd8ca4 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 18:16:46.553
  I0410 18:16:46.568126 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8782" for this suite. @ 04/10/25 18:16:46.571
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/10/25 18:16:46.578
  I0410 18:16:46.578591 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 18:16:46.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:16:46.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:16:46.595
  STEP: Creating secret with name projected-secret-test-79c7309e-5215-4f40-b338-887c565c8170 @ 04/10/25 18:16:46.598
  STEP: Creating a pod to test consume secrets @ 04/10/25 18:16:46.602
  STEP: Saw pod success @ 04/10/25 18:16:50.625
  I0410 18:16:50.628354 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-3f4a926b-bb20-4b95-a54f-b4bab04801d8 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 18:16:50.636
  I0410 18:16:50.652764 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6777" for this suite. @ 04/10/25 18:16:50.656
• [4.083 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 04/10/25 18:16:50.661
  I0410 18:16:50.661811 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename svcaccounts @ 04/10/25 18:16:50.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:16:50.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:16:50.677
  I0410 18:16:50.683412 23 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-445"
  I0410 18:16:50.687588 23 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-445"
  STEP: waiting for a new root ca configmap created @ 04/10/25 18:16:51.188
  I0410 18:16:51.193744 23 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-445"
  I0410 18:16:51.200093 23 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-445"
  STEP: waiting for the root ca configmap reconciled @ 04/10/25 18:16:51.7
  I0410 18:16:51.702615 23 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-445"
  I0410 18:16:51.702783 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-445" for this suite. @ 04/10/25 18:16:51.705
• [1.047 seconds]
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 04/10/25 18:16:51.708
  I0410 18:16:51.708531 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename job @ 04/10/25 18:16:51.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:16:51.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:16:51.721
  STEP: Creating a job @ 04/10/25 18:16:51.723
  STEP: Ensuring active pods == parallelism @ 04/10/25 18:16:51.726
  STEP: delete a job @ 04/10/25 18:16:53.735
  STEP: deleting Job.batch foo in namespace job-7758, will wait for the garbage collector to delete the pods @ 04/10/25 18:16:53.735
  I0410 18:16:53.795479 23 resources.go:139] Deleting Job.batch foo took: 5.623002ms
  I0410 18:16:53.895822 23 resources.go:163] Terminating Job.batch foo pods took: 100.346315ms
  STEP: Ensuring job was deleted @ 04/10/25 18:16:54.996
  I0410 18:16:55.001475 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7758" for this suite. @ 04/10/25 18:16:55.005
• [3.303 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 04/10/25 18:16:55.011
  I0410 18:16:55.011438 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename gc @ 04/10/25 18:16:55.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:16:55.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:16:55.03
  STEP: create the deployment @ 04/10/25 18:16:55.032
  W0410 18:16:55.036832      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/10/25 18:16:55.036
  STEP: delete the deployment @ 04/10/25 18:16:55.544
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/10/25 18:16:55.549
  STEP: Gathering metrics @ 04/10/25 18:16:56.068
  I0410 18:16:56.164879 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0410 18:16:56.165690 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5041" for this suite. @ 04/10/25 18:16:56.172
• [1.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 04/10/25 18:16:56.18
  I0410 18:16:56.180993 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 18:16:56.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:16:56.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:16:56.195
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9437 @ 04/10/25 18:16:56.197
  STEP: changing the ExternalName service to type=ClusterIP @ 04/10/25 18:16:56.2
  STEP: creating replication controller externalname-service in namespace services-9437 @ 04/10/25 18:16:56.212
  I0410 18:16:56.218206      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-9437, replica count: 2
  I0410 18:16:59.269439      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0410 18:16:59.269541 23 resource.go:361] Creating new exec pod
  I0410 18:17:02.285418 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-9437 exec execpoddrjbt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0410 18:17:02.390456 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0410 18:17:02.390505 23 builder.go:147] stdout: "externalname-service-68jfj"
  I0410 18:17:02.390595 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-9437 exec execpoddrjbt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.16.182 80'
  I0410 18:17:02.479573 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.16.182 80\nConnection to 10.96.16.182 80 port [tcp/http] succeeded!\n"
  I0410 18:17:02.479624 23 builder.go:147] stdout: "externalname-service-db5pl"
  I0410 18:17:02.479715 23 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0410 18:17:02.498228 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9437" for this suite. @ 04/10/25 18:17:02.501
• [6.327 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 04/10/25 18:17:02.508
  I0410 18:17:02.508499 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-probe @ 04/10/25 18:17:02.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:17:02.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:17:02.521
  I0410 18:17:24.596813 23 container_probe.go:92] Container started at 2025-04-10 18:17:03 +0000 UTC, pod became ready at 2025-04-10 18:17:22 +0000 UTC
  I0410 18:17:24.596986 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1315" for this suite. @ 04/10/25 18:17:24.6
• [22.103 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 04/10/25 18:17:24.611
  I0410 18:17:24.611623 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubelet-test @ 04/10/25 18:17:24.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:17:24.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:17:24.631
  I0410 18:17:26.657576 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5780" for this suite. @ 04/10/25 18:17:26.661
• [2.056 seconds]
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/10/25 18:17:26.667
  I0410 18:17:26.667595 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/10/25 18:17:26.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:17:26.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:17:26.686
  STEP: creating a target pod @ 04/10/25 18:17:26.688
  STEP: adding an ephemeral container @ 04/10/25 18:17:28.708
  STEP: checking pod container endpoints @ 04/10/25 18:17:32.734
  I0410 18:17:32.734556 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5956 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:17:32.734584 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:17:32.735274 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:17:32.735340 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-5956/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0410 18:17:32.798687 23 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/10/25 18:17:32.806
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/10/25 18:17:32.811
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/10/25 18:17:32.824
  I0410 18:17:32.829275 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5956" for this suite. @ 04/10/25 18:17:32.834
• [6.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 04/10/25 18:17:32.842
  I0410 18:17:32.842489 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename volumeattachment @ 04/10/25 18:17:32.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:17:32.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:17:32.861
  STEP: Create VolumeAttachment "va-e2e-gxvgk" on node "k8sconformance-m02" @ 04/10/25 18:17:32.934
  STEP: Get VolumeAttachment "va-e2e-gxvgk" on node "k8sconformance-m02" @ 04/10/25 18:17:32.937
  STEP: Patch VolumeAttachment "va-e2e-gxvgk" on node "k8sconformance-m02" @ 04/10/25 18:17:32.938
  STEP: List VolumeAttachments with "va-e2e-gxvgk=patched" label @ 04/10/25 18:17:32.941
  STEP: Delete VolumeAttachment "va-e2e-gxvgk" on node "k8sconformance-m02" @ 04/10/25 18:17:32.943
  STEP: Confirm deletion of VolumeAttachment "va-e2e-gxvgk" on node "k8sconformance-m02" @ 04/10/25 18:17:32.946
  STEP: Create VolumeAttachment "va-e2e-8wjw6" on node "k8sconformance-m02" @ 04/10/25 18:17:33.036
  STEP: Update the VolumeAttachment "va-e2e-8wjw6" on node "k8sconformance-m02" with label "va-e2e=updated" @ 04/10/25 18:17:33.041
  STEP: Create VolumeAttachment "va-e2e-8rvf8" on node "k8sconformance-m02" @ 04/10/25 18:17:33.136
  STEP: Update the VolumeAttachment "va-e2e-8rvf8" on node "k8sconformance-m02" with label "va-e2e=updated" @ 04/10/25 18:17:33.141
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/10/25 18:17:33.147
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/10/25 18:17:33.157
  I0410 18:17:33.160731 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-7600" for this suite. @ 04/10/25 18:17:33.238
• [0.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/10/25 18:17:33.245
  I0410 18:17:33.245714 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename prestop @ 04/10/25 18:17:33.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:17:33.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:17:33.261
  STEP: Creating server pod server in namespace prestop-7196 @ 04/10/25 18:17:33.264
  STEP: Waiting for pods to come up. @ 04/10/25 18:17:33.272
  STEP: Creating tester pod tester in namespace prestop-7196 @ 04/10/25 18:17:35.285
  STEP: Deleting pre-stop pod @ 04/10/25 18:17:37.301
  I0410 18:17:42.315531 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/10/25 18:17:42.315
  I0410 18:17:42.328634 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7196" for this suite. @ 04/10/25 18:17:42.334
• [9.097 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 04/10/25 18:17:42.343
  I0410 18:17:42.343181 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 18:17:42.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:17:42.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:17:42.361
  STEP: Creating projection with secret that has name secret-emptykey-test-837b22ec-ae12-49f7-b84b-914645c0301b @ 04/10/25 18:17:42.363
  I0410 18:17:42.364776 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8330" for this suite. @ 04/10/25 18:17:42.434
• [0.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 04/10/25 18:17:42.442
  I0410 18:17:42.442081 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename namespaces @ 04/10/25 18:17:42.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:17:42.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:17:42.459
  STEP: creating a Namespace @ 04/10/25 18:17:42.461
  STEP: patching the Namespace @ 04/10/25 18:17:42.56
  STEP: get the Namespace and ensuring it has the label @ 04/10/25 18:17:42.565
  I0410 18:17:42.569059 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7695" for this suite. @ 04/10/25 18:17:42.573
  STEP: Destroying namespace "nspatchtest-3cfdd176-f892-4740-9128-6e86e3aa70ac-4312" for this suite. @ 04/10/25 18:17:42.58
• [0.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 04/10/25 18:17:42.585
  I0410 18:17:42.585863 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename namespaces @ 04/10/25 18:17:42.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:17:42.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:17:42.665
  STEP: Creating a test namespace @ 04/10/25 18:17:42.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:17:42.762
  STEP: Creating a pod in the namespace @ 04/10/25 18:17:42.765
  STEP: Waiting for the pod to have running status @ 04/10/25 18:17:42.773
  STEP: Deleting the namespace @ 04/10/25 18:17:44.778
  STEP: Waiting for the namespace to be removed. @ 04/10/25 18:17:44.783
  STEP: Recreating the namespace @ 04/10/25 18:17:55.787
  STEP: Verifying there are no pods in the namespace @ 04/10/25 18:17:55.798
  I0410 18:17:55.799502 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3819" for this suite. @ 04/10/25 18:17:55.801
  STEP: Destroying namespace "nsdeletetest-7335" for this suite. @ 04/10/25 18:17:55.805
  I0410 18:17:55.807037 23 framework.go:370] Namespace nsdeletetest-7335 was already deleted
  STEP: Destroying namespace "nsdeletetest-9492" for this suite. @ 04/10/25 18:17:55.807
• [13.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/10/25 18:17:55.81
  I0410 18:17:55.810040 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 18:17:55.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:17:55.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:17:55.907
  STEP: Creating projection with secret that has name projected-secret-test-d12f281f-3fe3-4278-82b4-fb2d6fb818c3 @ 04/10/25 18:17:55.91
  STEP: Creating a pod to test consume secrets @ 04/10/25 18:17:55.913
  STEP: Saw pod success @ 04/10/25 18:17:57.927
  I0410 18:17:57.930757 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-c3971c2b-c3fd-42b3-8291-ecf701c9a7d6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 18:17:57.938
  I0410 18:17:57.952715 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4167" for this suite. @ 04/10/25 18:17:57.955
• [2.153 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 04/10/25 18:17:57.962
  I0410 18:17:57.962994 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 18:17:57.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:17:57.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:17:57.979
  STEP: Creating configMap with name projected-configmap-test-volume-map-71253cf9-5242-444d-ad79-de2a8785beae @ 04/10/25 18:17:57.982
  STEP: Creating a pod to test consume configMaps @ 04/10/25 18:17:57.986
  STEP: Saw pod success @ 04/10/25 18:18:00.003
  I0410 18:18:00.007339 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-cce752f6-f029-4c19-884c-f4c6512483a3 container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 18:18:00.016
  I0410 18:18:00.030741 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8607" for this suite. @ 04/10/25 18:18:00.034
• [2.078 seconds]
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/10/25 18:18:00.04
  I0410 18:18:00.040935 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename cronjob @ 04/10/25 18:18:00.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:18:00.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:18:00.054
  STEP: Creating a ForbidConcurrent cronjob @ 04/10/25 18:18:00.055
  STEP: Ensuring a job is scheduled @ 04/10/25 18:18:00.058
  STEP: Ensuring exactly one is scheduled @ 04/10/25 18:19:02.064
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/10/25 18:19:02.067
  STEP: Ensuring no more jobs are scheduled @ 04/10/25 18:19:02.071
  STEP: Removing cronjob @ 04/10/25 18:19:02.073
  I0410 18:19:02.079299 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6448" for this suite. @ 04/10/25 18:19:02.083
• [62.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/10/25 18:19:02.091
  I0410 18:19:02.091209 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename daemonsets @ 04/10/25 18:19:02.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:19:02.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:19:02.109
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/10/25 18:19:02.191
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/10/25 18:19:02.198
  I0410 18:19:02.286997 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 18:19:02.287053 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 18:19:03.208105 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 18:19:03.208167 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 18:19:04.209240 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0410 18:19:04.209291 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/10/25 18:19:04.211
  I0410 18:19:04.309699 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0410 18:19:04.309731 23 fixtures.go:130] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0410 18:19:05.231655 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0410 18:19:05.231695 23 fixtures.go:130] Node k8sconformance-m02 is running 0 daemon pod, expected 1
  I0410 18:19:06.234653 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0410 18:19:06.234706 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/10/25 18:19:06.234
  STEP: Deleting DaemonSet "daemon-set" @ 04/10/25 18:19:06.24
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1449, will wait for the garbage collector to delete the pods @ 04/10/25 18:19:06.24
  I0410 18:19:06.302897 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.394562ms
  I0410 18:19:06.403766 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.876234ms
  I0410 18:19:07.406970 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 18:19:07.407001 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0410 18:19:07.409240 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21993"},"items":null}

  I0410 18:19:07.410622 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21993"},"items":null}

  I0410 18:19:07.416656 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1449" for this suite. @ 04/10/25 18:19:07.418
• [5.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 04/10/25 18:19:07.423
  I0410 18:19:07.423024 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 18:19:07.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:19:07.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:19:07.433
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/10/25 18:19:07.435
  STEP: Saw pod success @ 04/10/25 18:19:11.452
  I0410 18:19:11.455719 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-a3ab0d97-8d31-46d6-b0aa-bd23a0e1dec6 container test-container: <nil>
  STEP: delete the pod @ 04/10/25 18:19:11.463
  I0410 18:19:11.483092 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8881" for this suite. @ 04/10/25 18:19:11.49
• [4.075 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/10/25 18:19:11.498
  I0410 18:19:11.498866 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename deployment @ 04/10/25 18:19:11.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:19:11.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:19:11.515
  I0410 18:19:11.524744 23 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0410 18:19:16.531461 23 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/10/25 18:19:16.531
  I0410 18:19:16.531585 23 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0410 18:19:18.537375 23 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0410 18:19:18.546034 23 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0410 18:19:20.554733 23 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0410 18:19:20.561391 23 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0410 18:19:20.566807 23 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0410 18:19:20.575797 23 deployment.go:314] Updating deployment test-rollover-deployment
  I0410 18:19:20.575867 23 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0410 18:19:22.585122 23 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0410 18:19:22.592078 23 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0410 18:19:22.597477 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0410 18:19:22.597558 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 18, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 18:19:24.608443 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0410 18:19:24.608547 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 18, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 18:19:26.607772 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0410 18:19:26.607851 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 18, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 18:19:28.607135 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0410 18:19:28.607212 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 18, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 18:19:30.607423 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0410 18:19:30.607505 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 10, 18, 19, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 10, 18, 19, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0410 18:19:32.607421 23 deployment.go:95] 
  I0410 18:19:32.607484 23 deployment.go:974] Ensure that both old replica sets have no replicas
  I0410 18:19:32.616893 23 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3764",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "298edff8-7ebf-448f-a36e-6b33af47c5f0",
      ResourceVersion: (string) (len=5) "22139",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879905958,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0410 18:19:32.623330 23 deployment.go:40] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3764",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c9a1150-135b-46f4-b8f2-c3c95db4d462",
      ResourceVersion: (string) (len=5) "22129",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879905960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "298edff8-7ebf-448f-a36e-6b33af47c5f0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 39 38 65 64 66  66 38 2d 37 65 62 66 2d  |\"298edff8-7ebf-|
              00000120  34 34 38 66 2d 61 33 36  65 2d 36 62 33 33 61 66  |448f-a36e-6b33af|
              00000130  34 37 63 35 66 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |47c5f0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 18:19:32.624647 23 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0410 18:19:32.625089 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3764",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9da0dc9f-2e0f-4bd8-ab3f-28f48d46d05a",
      ResourceVersion: (string) (len=5) "22138",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879905951,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "298edff8-7ebf-448f-a36e-6b33af47c5f0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  32 39 38 65 64 66 66 38  2d 37 65 62 66 2d 34 34  |298edff8-7ebf-44|
              000000c0  38 66 2d 61 33 36 65 2d  36 62 33 33 61 66 34 37  |8f-a36e-6b33af47|
              000000d0  63 35 66 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |c5f0\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 18:19:32.627081 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3764",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8cde2416-4f2a-4cfa-8d85-629dca16e3fb",
      ResourceVersion: (string) (len=5) "22107",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879905958,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "298edff8-7ebf-448f-a36e-6b33af47c5f0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 39 38 65 64 66  66 38 2d 37 65 62 66 2d  |\"298edff8-7ebf-|
              00000120  34 34 38 66 2d 61 33 36  65 2d 36 62 33 33 61 66  |448f-a36e-6b33af|
              00000130  34 37 63 35 66 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |47c5f0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 18:19:32.631652 23 deployment.go:68] Pod "test-rollover-deployment-5f974d7468-dp2xl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-dp2xl",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-3764",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a68273f7-a59f-46b8-8b26-cb7ca784454b",
      ResourceVersion: (string) (len=5) "22117",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879905960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "5c9a1150-135b-46f4-b8f2-c3c95db4d462",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  39 61 31 31 35 30 2d 31  |d\":\"5c9a1150-1|
              00000090  33 35 62 2d 34 36 66 34  2d 62 38 66 32 2d 63 33  |35b-46f4-b8f2-c3|
              000000a0  63 39 35 64 62 34 64 34  36 32 5c 22 7d 22 3a 7b  |c95db4d462\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 38  39 5c 22 7d 22 3a 7b 22  |.244.1.89\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b8865",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b8865",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879905960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.89",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.89"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879905960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63879905961,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=73) "docker://d96639beefa8a3dc5303444aeb2a482d8b9ec9a3ed359ed31dc19f10f0ef878b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b8865",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 18:19:32.634540 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3764" for this suite. @ 04/10/25 18:19:32.637
• [21.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 04/10/25 18:19:32.642
  I0410 18:19:32.642851 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubelet-test @ 04/10/25 18:19:32.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:19:32.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:19:32.656
  I0410 18:19:32.676736 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2686" for this suite. @ 04/10/25 18:19:32.72
• [0.084 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 04/10/25 18:19:32.726
  I0410 18:19:32.726704 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename disruption @ 04/10/25 18:19:32.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:19:32.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:19:32.76
  STEP: Waiting for the pdb to be processed @ 04/10/25 18:19:32.767
  STEP: Waiting for all pods to be running @ 04/10/25 18:19:34.803
  I0410 18:19:34.811631 23 disruption.go:691] running pods: 0 < 3
  I0410 18:19:36.813588 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1913" for this suite. @ 04/10/25 18:19:36.816
• [4.097 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/10/25 18:19:36.823
  I0410 18:19:36.823688 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename crd-watch @ 04/10/25 18:19:36.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:19:36.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:19:36.842
  I0410 18:19:36.845202 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Creating first CR  @ 04/10/25 18:19:39.391
  I0410 18:19:39.396187 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-10T18:19:39Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-10T18:19:39Z]] name:name1 resourceVersion:22247 uid:8438c64f-a644-4b07-a79f-3ccbef1ca15d] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 04/10/25 18:19:49.397
  I0410 18:19:49.406685 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-10T18:19:49Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-10T18:19:49Z]] name:name2 resourceVersion:22290 uid:e95eed7d-11a4-4f27-908b-2130b3632c24] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 04/10/25 18:19:59.409
  I0410 18:19:59.418711 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-10T18:19:39Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-10T18:19:59Z]] name:name1 resourceVersion:22301 uid:8438c64f-a644-4b07-a79f-3ccbef1ca15d] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 04/10/25 18:20:09.421
  I0410 18:20:09.431663 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-10T18:19:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-10T18:20:09Z]] name:name2 resourceVersion:22311 uid:e95eed7d-11a4-4f27-908b-2130b3632c24] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 04/10/25 18:20:19.433
  I0410 18:20:19.445385 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-10T18:19:39Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-10T18:19:59Z]] name:name1 resourceVersion:22321 uid:8438c64f-a644-4b07-a79f-3ccbef1ca15d] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 04/10/25 18:20:29.448
  I0410 18:20:29.459051 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-10T18:19:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-10T18:20:09Z]] name:name2 resourceVersion:22331 uid:e95eed7d-11a4-4f27-908b-2130b3632c24] num:map[num1:9223372036854775807 num2:1000000]]}
  I0410 18:20:39.975965 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-1126" for this suite. @ 04/10/25 18:20:39.978
• [63.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 04/10/25 18:20:39.982
  I0410 18:20:39.982818 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename disruption @ 04/10/25 18:20:39.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:20:39.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:20:39.995
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/10/25 18:20:39.996
  STEP: Waiting for the pdb to be processed @ 04/10/25 18:20:39.999
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/10/25 18:20:42.007
  STEP: Waiting for all pods to be running @ 04/10/25 18:20:42.007
  I0410 18:20:42.009993 23 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 04/10/25 18:20:44.014
  STEP: Updating the pdb to allow a pod to be evicted @ 04/10/25 18:20:44.022
  STEP: Waiting for the pdb to be processed @ 04/10/25 18:20:44.032
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/10/25 18:20:46.037
  STEP: Waiting for all pods to be running @ 04/10/25 18:20:46.037
  STEP: Waiting for the pdb to observed all healthy pods @ 04/10/25 18:20:46.04
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/10/25 18:20:46.062
  STEP: Waiting for the pdb to be processed @ 04/10/25 18:20:46.09
  STEP: Waiting for all pods to be running @ 04/10/25 18:20:48.095
  STEP: locating a running pod @ 04/10/25 18:20:48.099
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/10/25 18:20:48.107
  STEP: Waiting for the pdb to be deleted @ 04/10/25 18:20:48.114
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/10/25 18:20:48.117
  STEP: Waiting for all pods to be running @ 04/10/25 18:20:48.117
  I0410 18:20:48.215374 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5943" for this suite. @ 04/10/25 18:20:48.22
• [8.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 04/10/25 18:20:48.23
  I0410 18:20:48.231003 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/10/25 18:20:48.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:20:48.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:20:48.257
  STEP: create the container to handle the HTTPGet hook request. @ 04/10/25 18:20:48.321
  STEP: create the pod with lifecycle hook @ 04/10/25 18:20:50.344
  STEP: delete the pod with lifecycle hook @ 04/10/25 18:20:52.36
  STEP: check prestop hook @ 04/10/25 18:20:54.376
  I0410 18:20:54.393504 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-671" for this suite. @ 04/10/25 18:20:54.395
• [6.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 04/10/25 18:20:54.4
  I0410 18:20:54.400074 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename daemonsets @ 04/10/25 18:20:54.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:20:54.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:20:54.413
  STEP: Creating simple DaemonSet "daemon-set" @ 04/10/25 18:20:54.501
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/10/25 18:20:54.506
  I0410 18:20:54.602464 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0410 18:20:54.602511 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 18:20:55.516315 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0410 18:20:55.516382 23 fixtures.go:130] Node k8sconformance is running 0 daemon pod, expected 1
  I0410 18:20:56.515639 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0410 18:20:56.515672 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/10/25 18:20:56.517
  STEP: DeleteCollection of the DaemonSets @ 04/10/25 18:20:56.519
  STEP: Verify that ReplicaSets have been deleted @ 04/10/25 18:20:56.523
  I0410 18:20:56.620719 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22551"},"items":null}

  I0410 18:20:56.624215 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22551"},"items":[{"metadata":{"name":"daemon-set-jk8ks","generateName":"daemon-set-","namespace":"daemonsets-5501","uid":"9b8426ff-4686-42c0-9301-f106aae97450","resourceVersion":"22550","creationTimestamp":"2025-04-10T18:20:54Z","deletionTimestamp":"2025-04-10T18:21:26Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c4fd4bf3-d64b-462c-9057-60962d5d57ba","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-10T18:20:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c4fd4bf3-d64b-462c-9057-60962d5d57ba\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-10T18:20:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.121\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rshbr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rshbr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8sconformance","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8sconformance"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-10T18:20:55Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-10T18:20:54Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-10T18:20:55Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-10T18:20:55Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-10T18:20:54Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.121","podIPs":[{"ip":"10.244.0.121"}],"startTime":"2025-04-10T18:20:54Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-10T18:20:55Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://b7aca30c7d79f5758a340d00c2b0e6282c47696f0f6e2246efb82ef06d468fae","started":true,"volumeMounts":[{"name":"kube-api-access-rshbr","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-r7w5h","generateName":"daemon-set-","namespace":"daemonsets-5501","uid":"a2727ed0-58a7-4fe5-b468-1004c4ad6b57","resourceVersion":"22549","creationTimestamp":"2025-04-10T18:20:54Z","deletionTimestamp":"2025-04-10T18:21:26Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c4fd4bf3-d64b-462c-9057-60962d5d57ba","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-10T18:20:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c4fd4bf3-d64b-462c-9057-60962d5d57ba\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-10T18:20:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.96\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-zp8l6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-zp8l6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8sconformance-m02","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8sconformance-m02"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-10T18:20:55Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-10T18:20:54Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-10T18:20:55Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-10T18:20:55Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-10T18:20:54Z"}],"hostIP":"192.168.49.3","hostIPs":[{"ip":"192.168.49.3"}],"podIP":"10.244.1.96","podIPs":[{"ip":"10.244.1.96"}],"startTime":"2025-04-10T18:20:54Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-10T18:20:55Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://94d99e29bfc3fce0b160e200c621c4974a3db371071f4159e8c4d735cfb39770","started":true,"volumeMounts":[{"name":"kube-api-access-zp8l6","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0410 18:20:56.630675 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5501" for this suite. @ 04/10/25 18:20:56.632
• [2.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 04/10/25 18:20:56.636
  I0410 18:20:56.636827 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 18:20:56.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:20:56.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:20:56.647
  STEP: creating a secret @ 04/10/25 18:20:56.649
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/10/25 18:20:56.652
  STEP: patching the secret @ 04/10/25 18:20:56.655
  STEP: deleting the secret using a LabelSelector @ 04/10/25 18:20:56.668
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/10/25 18:20:56.676
  I0410 18:20:56.682707 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-696" for this suite. @ 04/10/25 18:20:56.728
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 04/10/25 18:20:56.735
  I0410 18:20:56.735415 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-probe @ 04/10/25 18:20:56.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:20:56.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:20:56.749
  STEP: Creating pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104 @ 04/10/25 18:20:56.752
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/10/25 18:20:58.767
  I0410 18:20:58.770363 23 container_probe.go:1749] Initial restart count of pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 is 0
  I0410 18:20:58.773169 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:00.779328 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:02.786097 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:04.792507 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:06.797943 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:08.804912 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:10.813003 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:12.819332 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:14.826291 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:16.830178 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:18.836521 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:20.842505 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:22.846934 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:24.851191 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:26.854996 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:28.861854 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:30.868101 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:32.873456 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:34.879701 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:36.885967 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:38.890471 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:40.896156 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:42.903673 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:44.910658 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:46.917222 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:48.924304 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:50.929624 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:52.936143 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:54.943498 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:56.949646 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:21:58.956131 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:22:00.962470 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:22:02.968557 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:22:04.976091 23 container_probe.go:1759] Get pod test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 in namespace container-probe-9104
  I0410 18:22:04.976156 23 container_probe.go:1763] Restart count of pod container-probe-9104/test-grpc-2571d8b8-88b2-461d-bd1c-dae0413a66b5 is now 1 (1m6.205743338s elapsed)
  STEP: deleting the pod @ 04/10/25 18:22:04.976
  I0410 18:22:04.988879 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9104" for this suite. @ 04/10/25 18:22:04.992
• [68.263 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 04/10/25 18:22:04.998
  I0410 18:22:04.998778 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename resourcequota @ 04/10/25 18:22:04.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:05.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:05.013
  STEP: Creating a ResourceQuota @ 04/10/25 18:22:05.016
  STEP: Getting a ResourceQuota @ 04/10/25 18:22:05.019
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/10/25 18:22:05.021
  STEP: Patching the ResourceQuota @ 04/10/25 18:22:05.023
  STEP: Deleting a Collection of ResourceQuotas @ 04/10/25 18:22:05.029
  STEP: Verifying the deleted ResourceQuota @ 04/10/25 18:22:05.036
  I0410 18:22:05.040921 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9983" for this suite. @ 04/10/25 18:22:05.093
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 04/10/25 18:22:05.099
  I0410 18:22:05.099934 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename runtimeclass @ 04/10/25 18:22:05.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:05.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:05.113
  I0410 18:22:07.134962 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3751" for this suite. @ 04/10/25 18:22:07.138
• [2.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/10/25 18:22:07.145
  I0410 18:22:07.145025 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/10/25 18:22:07.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:07.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:07.16
  STEP: creating a target pod @ 04/10/25 18:22:07.163
  STEP: adding an ephemeral container @ 04/10/25 18:22:09.186
  STEP: checking pod container endpoints @ 04/10/25 18:22:11.209
  I0410 18:22:11.209132 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7660 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:22:11.209156 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:22:11.209970 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:22:11.210064 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-7660/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0410 18:22:11.275085 23 exec_util.go:111] Exec stderr: ""
  I0410 18:22:11.289592 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7660" for this suite. @ 04/10/25 18:22:11.291
• [4.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/10/25 18:22:11.296
  I0410 18:22:11.297001 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename watch @ 04/10/25 18:22:11.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:11.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:11.313
  STEP: creating a watch on configmaps with label A @ 04/10/25 18:22:11.316
  STEP: creating a watch on configmaps with label B @ 04/10/25 18:22:11.317
  STEP: creating a watch on configmaps with label A or B @ 04/10/25 18:22:11.318
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/10/25 18:22:11.319
  I0410 18:22:11.322850 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8539  aa646caf-d906-4a09-9316-bbe7a146cf98 22748 0 2025-04-10 18:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-10 18:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:22:11.322932 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8539  aa646caf-d906-4a09-9316-bbe7a146cf98 22748 0 2025-04-10 18:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-10 18:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/10/25 18:22:11.322
  I0410 18:22:11.329097 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8539  aa646caf-d906-4a09-9316-bbe7a146cf98 22749 0 2025-04-10 18:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-10 18:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:22:11.329244 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8539  aa646caf-d906-4a09-9316-bbe7a146cf98 22749 0 2025-04-10 18:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-10 18:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/10/25 18:22:11.329
  I0410 18:22:11.335351 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8539  aa646caf-d906-4a09-9316-bbe7a146cf98 22750 0 2025-04-10 18:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-10 18:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:22:11.335503 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8539  aa646caf-d906-4a09-9316-bbe7a146cf98 22750 0 2025-04-10 18:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-10 18:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/10/25 18:22:11.335
  I0410 18:22:11.339973 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8539  aa646caf-d906-4a09-9316-bbe7a146cf98 22751 0 2025-04-10 18:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-10 18:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:22:11.340060 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8539  aa646caf-d906-4a09-9316-bbe7a146cf98 22751 0 2025-04-10 18:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-10 18:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/10/25 18:22:11.34
  I0410 18:22:11.344609 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8539  e86c0346-0016-4349-8868-e353518d19ac 22752 0 2025-04-10 18:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-10 18:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:22:11.344736 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8539  e86c0346-0016-4349-8868-e353518d19ac 22752 0 2025-04-10 18:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-10 18:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/10/25 18:22:21.348
  I0410 18:22:21.356320 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8539  e86c0346-0016-4349-8868-e353518d19ac 22784 0 2025-04-10 18:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-10 18:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:22:21.356454 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8539  e86c0346-0016-4349-8868-e353518d19ac 22784 0 2025-04-10 18:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-10 18:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0410 18:22:31.360587 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8539" for this suite. @ 04/10/25 18:22:31.367
• [20.076 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 04/10/25 18:22:31.373
  I0410 18:22:31.373117 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 18:22:31.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:31.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:31.391
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/10/25 18:22:31.394
  STEP: Saw pod success @ 04/10/25 18:22:35.414
  I0410 18:22:35.418235 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-536e191d-81d8-454b-85fe-15cf01266f3b container test-container: <nil>
  STEP: delete the pod @ 04/10/25 18:22:35.434
  I0410 18:22:35.445577 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8087" for this suite. @ 04/10/25 18:22:35.448
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 04/10/25 18:22:35.452
  I0410 18:22:35.452410 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 18:22:35.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:35.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:35.462
  I0410 18:22:35.466078 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4435" for this suite. @ 04/10/25 18:22:35.526
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/10/25 18:22:35.532
  I0410 18:22:35.532960 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/10/25 18:22:35.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:35.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:35.57
  STEP: Creating two CSIDrivers @ 04/10/25 18:22:35.573
  STEP: Getting "inline-driver-ec69ccb7-4612-4a56-9d04-93157faf47db" & "inline-driver-6e15c8e8-1057-464c-bf2f-3ab84311be0c" @ 04/10/25 18:22:35.589
  STEP: Patching the CSIDriver "inline-driver-6e15c8e8-1057-464c-bf2f-3ab84311be0c" @ 04/10/25 18:22:35.594
  STEP: Updating the CSIDriver "inline-driver-6e15c8e8-1057-464c-bf2f-3ab84311be0c" @ 04/10/25 18:22:35.604
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2772" @ 04/10/25 18:22:35.61
  STEP: Deleting CSIDriver "inline-driver-ec69ccb7-4612-4a56-9d04-93157faf47db" @ 04/10/25 18:22:35.613
  STEP: Confirm deletion of CSIDriver "inline-driver-ec69ccb7-4612-4a56-9d04-93157faf47db" @ 04/10/25 18:22:35.617
  STEP: Deleting CSIDriver "inline-driver-6e15c8e8-1057-464c-bf2f-3ab84311be0c" via DeleteCollection @ 04/10/25 18:22:35.619
  STEP: Confirm deletion of CSIDriver "inline-driver-6e15c8e8-1057-464c-bf2f-3ab84311be0c" @ 04/10/25 18:22:35.625
  I0410 18:22:35.627422 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2772" for this suite. @ 04/10/25 18:22:35.63
• [0.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/10/25 18:22:35.634
  I0410 18:22:35.634808 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 18:22:35.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:35.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:35.67
  STEP: Creating secret with name s-test-opt-del-576dbc33-90a2-4beb-80ed-e00d63680118 @ 04/10/25 18:22:35.733
  STEP: Creating secret with name s-test-opt-upd-f5439e85-1959-49ab-b4a1-70544e5e0c44 @ 04/10/25 18:22:35.738
  STEP: Creating the pod @ 04/10/25 18:22:35.743
  STEP: Deleting secret s-test-opt-del-576dbc33-90a2-4beb-80ed-e00d63680118 @ 04/10/25 18:22:37.79
  STEP: Updating secret s-test-opt-upd-f5439e85-1959-49ab-b4a1-70544e5e0c44 @ 04/10/25 18:22:37.797
  STEP: Creating secret with name s-test-opt-create-578c583c-1752-4af0-9eb5-92f889c27194 @ 04/10/25 18:22:37.802
  STEP: waiting to observe update in volume @ 04/10/25 18:22:37.806
  I0410 18:22:41.840901 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7360" for this suite. @ 04/10/25 18:22:41.844
• [6.219 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 04/10/25 18:22:41.854
  I0410 18:22:41.854815 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename field-validation @ 04/10/25 18:22:41.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:41.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:41.872
  STEP: apply creating a deployment @ 04/10/25 18:22:41.875
  I0410 18:22:41.886507 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8724" for this suite. @ 04/10/25 18:22:41.946
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/10/25 18:22:41.955
  I0410 18:22:41.955195 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename endpointslice @ 04/10/25 18:22:41.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:41.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:41.973
  STEP: referencing a single matching pod @ 04/10/25 18:22:44.045
  STEP: referencing matching pods with named port @ 04/10/25 18:22:44.05
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/10/25 18:22:44.054
  STEP: recreating EndpointSlices after they've been deleted @ 04/10/25 18:22:44.058
  I0410 18:22:44.075198 23 endpointslice.go:938] EndpointSlice for Service endpointslice-639/example-named-port not found
  I0410 18:22:46.078947 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-639" for this suite. @ 04/10/25 18:22:46.08
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/10/25 18:22:46.086
  I0410 18:22:46.086535 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sysctl @ 04/10/25 18:22:46.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:46.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:46.098
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/10/25 18:22:46.101
  I0410 18:22:46.105820 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3230" for this suite. @ 04/10/25 18:22:46.108
• [0.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 04/10/25 18:22:46.112
  I0410 18:22:46.112469 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 18:22:46.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:46.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:46.203
  STEP: create deployment with httpd image @ 04/10/25 18:22:46.206
  I0410 18:22:46.206664 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5322 create -f -'
  I0410 18:22:46.264780 23 builder.go:146] stderr: ""
  I0410 18:22:46.264818 23 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/10/25 18:22:46.264
  I0410 18:22:46.264907 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5322 diff -f -'
  I0410 18:22:46.350181 23 builder.go:135] rc: 1
  I0410 18:22:46.350271 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5322 delete -f -'
  I0410 18:22:46.392404 23 builder.go:146] stderr: ""
  I0410 18:22:46.392429 23 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0410 18:22:46.392496 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5322" for this suite. @ 04/10/25 18:22:46.394
• [0.285 seconds]
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 04/10/25 18:22:46.397
  I0410 18:22:46.397357 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename dns @ 04/10/25 18:22:46.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:46.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:46.407
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1593.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-1593.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 04/10/25 18:22:46.409
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1593.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1593.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/10/25 18:22:46.409
  STEP: creating a pod to probe /etc/hosts @ 04/10/25 18:22:46.409
  STEP: submitting the pod to kubernetes @ 04/10/25 18:22:46.409
  STEP: retrieving the pod @ 04/10/25 18:22:48.422
  STEP: looking for the results for each expected name from probers @ 04/10/25 18:22:48.425
  I0410 18:22:48.435560 23 dns_common.go:528] DNS probes using dns-1593/dns-test-226551e7-5218-4fe8-b555-e16bc1bb8426 succeeded

  STEP: deleting the pod @ 04/10/25 18:22:48.435
  I0410 18:22:48.445910 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1593" for this suite. @ 04/10/25 18:22:48.45
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 04/10/25 18:22:48.455
  I0410 18:22:48.456015 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 18:22:48.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:48.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:48.471
  STEP: Setting up server cert @ 04/10/25 18:22:48.574
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 18:22:48.719
  STEP: Deploying the webhook pod @ 04/10/25 18:22:48.724
  STEP: Wait for the deployment to be ready @ 04/10/25 18:22:48.734
  I0410 18:22:48.737372 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 18:22:50.744
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 18:22:50.753
  I0410 18:22:51.753667 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/10/25 18:22:51.83
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/10/25 18:22:51.832
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/10/25 18:22:51.832
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/10/25 18:22:51.832
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/10/25 18:22:51.833
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/10/25 18:22:51.833
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/10/25 18:22:51.834
  I0410 18:22:51.857174 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8166" for this suite. @ 04/10/25 18:22:51.858
  STEP: Destroying namespace "webhook-markers-4525" for this suite. @ 04/10/25 18:22:51.862
• [3.411 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 04/10/25 18:22:51.866
  I0410 18:22:51.866759 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-probe @ 04/10/25 18:22:51.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:22:51.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:22:51.876
  STEP: Creating pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956 @ 04/10/25 18:22:51.878
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/10/25 18:22:53.889
  I0410 18:22:53.892577 23 container_probe.go:1749] Initial restart count of pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 is 0
  I0410 18:22:53.895110 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:22:55.901397 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:22:57.907237 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:22:59.914933 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:01.921726 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:03.928492 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:05.934806 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:07.941515 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:09.947813 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:11.954859 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:13.961297 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:13.961359 23 container_probe.go:1763] Restart count of pod container-probe-5956/liveness-1244a11f-5d19-4867-a5da-f74c778e0420 is now 1 (20.068742081s elapsed)
  I0410 18:23:15.968205 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:17.974451 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:19.977767 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:21.983426 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:23.989520 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:25.995609 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:28.001760 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:30.004192 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:32.009587 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:34.014891 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:34.014944 23 container_probe.go:1763] Restart count of pod container-probe-5956/liveness-1244a11f-5d19-4867-a5da-f74c778e0420 is now 2 (40.122330772s elapsed)
  I0410 18:23:36.020105 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:38.025328 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:40.030087 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:42.036723 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:44.042273 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:46.045749 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:48.053149 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:50.059178 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:52.062237 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:54.069078 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:54.069145 23 container_probe.go:1763] Restart count of pod container-probe-5956/liveness-1244a11f-5d19-4867-a5da-f74c778e0420 is now 3 (1m0.176528467s elapsed)
  I0410 18:23:56.074359 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:23:58.076802 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:00.083751 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:02.088499 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:04.091588 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:06.097719 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:08.104451 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:10.106870 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:12.112777 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:14.118192 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:14.118279 23 container_probe.go:1763] Restart count of pod container-probe-5956/liveness-1244a11f-5d19-4867-a5da-f74c778e0420 is now 4 (1m20.225637526s elapsed)
  I0410 18:24:16.121370 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:18.126849 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:20.132811 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:22.136064 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:24.141512 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:26.148377 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:28.152808 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:30.159662 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:32.162737 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:34.167600 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:36.173031 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:38.179265 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:40.185702 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:42.188461 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:44.195213 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:46.202561 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:48.208100 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:50.214452 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:52.217408 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:54.223327 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:56.229922 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:24:58.236428 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:00.240131 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:02.243742 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:04.249993 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:06.256425 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:08.262563 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:10.269417 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:12.273887 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:14.279679 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:16.285168 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:18.291931 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:20.297535 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:22.303056 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:24.306292 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:26.313115 23 container_probe.go:1759] Get pod liveness-1244a11f-5d19-4867-a5da-f74c778e0420 in namespace container-probe-5956
  I0410 18:25:26.313164 23 container_probe.go:1763] Restart count of pod container-probe-5956/liveness-1244a11f-5d19-4867-a5da-f74c778e0420 is now 5 (2m32.42055009s elapsed)
  STEP: deleting the pod @ 04/10/25 18:25:26.313
  I0410 18:25:26.324830 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5956" for this suite. @ 04/10/25 18:25:26.329
• [154.470 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 04/10/25 18:25:26.337
  I0410 18:25:26.337629 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename runtimeclass @ 04/10/25 18:25:26.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:25:26.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:25:26.353
  STEP: getting /apis @ 04/10/25 18:25:26.354
  STEP: getting /apis/node.k8s.io @ 04/10/25 18:25:26.356
  STEP: getting /apis/node.k8s.io/v1 @ 04/10/25 18:25:26.357
  STEP: creating @ 04/10/25 18:25:26.358
  STEP: watching @ 04/10/25 18:25:26.369
  I0410 18:25:26.369852 23 runtimeclass.go:275] starting watch
  STEP: getting @ 04/10/25 18:25:26.373
  STEP: listing @ 04/10/25 18:25:26.375
  STEP: patching @ 04/10/25 18:25:26.375
  STEP: updating @ 04/10/25 18:25:26.378
  I0410 18:25:26.382272 23 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 04/10/25 18:25:26.382
  STEP: deleting a collection @ 04/10/25 18:25:26.388
  I0410 18:25:26.395924 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8763" for this suite. @ 04/10/25 18:25:26.429
• [0.098 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/10/25 18:25:26.435
  I0410 18:25:26.435314 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-runtime @ 04/10/25 18:25:26.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:25:26.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:25:26.453
  STEP: create the container @ 04/10/25 18:25:26.455
  W0410 18:25:26.460486      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/10/25 18:25:26.46
  STEP: get the container status @ 04/10/25 18:25:29.479
  STEP: the container should be terminated @ 04/10/25 18:25:29.482
  STEP: the termination message should be set @ 04/10/25 18:25:29.482
  I0410 18:25:29.482749 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/10/25 18:25:29.482
  I0410 18:25:29.495312 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8683" for this suite. @ 04/10/25 18:25:29.498
• [3.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 04/10/25 18:25:29.504
  I0410 18:25:29.504985 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename security-context-test @ 04/10/25 18:25:29.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:25:29.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:25:29.52
  I0410 18:25:33.562204 23 security_context.go:538] Got logs for pod "busybox-privileged-false-36a5b179-b1be-44e6-b1c9-2c809958ddcd": "ip: RTNETLINK answers: Operation not permitted\n"
  I0410 18:25:33.562392 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7118" for this suite. @ 04/10/25 18:25:33.565
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 04/10/25 18:25:33.572
  I0410 18:25:33.572051 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename var-expansion @ 04/10/25 18:25:33.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:25:33.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:25:33.587
  STEP: Creating a pod to test substitution in volume subpath @ 04/10/25 18:25:33.589
  STEP: Saw pod success @ 04/10/25 18:25:37.608
  I0410 18:25:37.611001 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod var-expansion-76161d8f-7054-4c5d-bddb-2c676123e127 container dapi-container: <nil>
  STEP: delete the pod @ 04/10/25 18:25:37.617
  I0410 18:25:37.632766 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3959" for this suite. @ 04/10/25 18:25:37.635
• [4.068 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 04/10/25 18:25:37.64
  I0410 18:25:37.640219 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename namespaces @ 04/10/25 18:25:37.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:25:37.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:25:37.656
  STEP: Read namespace status @ 04/10/25 18:25:37.659
  I0410 18:25:37.662329 23 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/10/25 18:25:37.662
  I0410 18:25:37.667234 23 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/10/25 18:25:37.667
  I0410 18:25:37.675204 23 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0410 18:25:37.675413 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2180" for this suite. @ 04/10/25 18:25:37.738
• [0.105 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 04/10/25 18:25:37.745
  I0410 18:25:37.745039 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename security-context-test @ 04/10/25 18:25:37.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:25:37.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:25:37.754
  I0410 18:25:41.775160 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-262" for this suite. @ 04/10/25 18:25:41.778
• [4.041 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 04/10/25 18:25:41.786
  I0410 18:25:41.786284 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 18:25:41.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:25:41.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:25:41.804
  STEP: Creating configMap with name configmap-test-volume-6f4737ff-adbf-48b0-b380-d0393d7ba380 @ 04/10/25 18:25:41.807
  STEP: Creating a pod to test consume configMaps @ 04/10/25 18:25:41.81
  STEP: Saw pod success @ 04/10/25 18:25:45.831
  I0410 18:25:45.834792 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-3c89ec9d-5c21-42bc-89fd-04a84f4beed0 container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 18:25:45.842
  I0410 18:25:45.858074 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-900" for this suite. @ 04/10/25 18:25:45.861
• [4.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 04/10/25 18:25:45.866
  I0410 18:25:45.866838 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/10/25 18:25:45.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:25:45.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:25:45.882
  I0410 18:25:45.885355 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/10/25 18:25:47.044
  I0410 18:25:47.044571 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 --namespace=crd-publish-openapi-6966 create -f -'
  I0410 18:25:47.093994 23 builder.go:146] stderr: ""
  I0410 18:25:47.094032 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3499-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0410 18:25:47.094071 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 --namespace=crd-publish-openapi-6966 delete e2e-test-crd-publish-openapi-3499-crds test-foo'
  I0410 18:25:47.133748 23 builder.go:146] stderr: ""
  I0410 18:25:47.133802 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3499-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0410 18:25:47.133846 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 --namespace=crd-publish-openapi-6966 apply -f -'
  I0410 18:25:47.173758 23 builder.go:146] stderr: ""
  I0410 18:25:47.173797 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3499-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0410 18:25:47.173846 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 --namespace=crd-publish-openapi-6966 delete e2e-test-crd-publish-openapi-3499-crds test-foo'
  I0410 18:25:47.215163 23 builder.go:146] stderr: ""
  I0410 18:25:47.215200 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3499-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/10/25 18:25:47.215
  I0410 18:25:47.215272 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 --namespace=crd-publish-openapi-6966 create -f -'
  I0410 18:25:47.261185 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/10/25 18:25:47.261
  I0410 18:25:47.261264 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 --namespace=crd-publish-openapi-6966 create -f -'
  I0410 18:25:47.295866 23 builder.go:135] rc: 1
  I0410 18:25:47.295925 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 --namespace=crd-publish-openapi-6966 apply -f -'
  I0410 18:25:47.333368 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/10/25 18:25:47.333
  I0410 18:25:47.333485 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 --namespace=crd-publish-openapi-6966 create -f -'
  I0410 18:25:47.371506 23 builder.go:135] rc: 1
  I0410 18:25:47.371589 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 --namespace=crd-publish-openapi-6966 apply -f -'
  I0410 18:25:47.418581 23 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/10/25 18:25:47.418
  I0410 18:25:47.418724 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 explain e2e-test-crd-publish-openapi-3499-crds'
  I0410 18:25:47.460613 23 builder.go:146] stderr: ""
  I0410 18:25:47.460668 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3499-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/10/25 18:25:47.46
  I0410 18:25:47.460907 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 explain e2e-test-crd-publish-openapi-3499-crds.metadata'
  I0410 18:25:47.497113 23 builder.go:146] stderr: ""
  I0410 18:25:47.497236 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3499-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0410 18:25:47.497393 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 explain e2e-test-crd-publish-openapi-3499-crds.spec'
  I0410 18:25:47.532235 23 builder.go:146] stderr: ""
  I0410 18:25:47.532286 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3499-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0410 18:25:47.532390 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 explain e2e-test-crd-publish-openapi-3499-crds.spec.bars'
  I0410 18:25:47.568046 23 builder.go:146] stderr: ""
  I0410 18:25:47.568091 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3499-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/10/25 18:25:47.568
  I0410 18:25:47.568273 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-6966 explain e2e-test-crd-publish-openapi-3499-crds.spec.bars2'
  I0410 18:25:47.607178 23 builder.go:135] rc: 1
  I0410 18:25:48.744743 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6966" for this suite. @ 04/10/25 18:25:48.75
• [2.889 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 04/10/25 18:25:48.755
  I0410 18:25:48.755892 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename job @ 04/10/25 18:25:48.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:25:48.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:25:48.767
  STEP: Creating a job @ 04/10/25 18:25:48.769
  STEP: Ensuring active pods == parallelism @ 04/10/25 18:25:48.772
  STEP: Orphaning one of the Job's Pods @ 04/10/25 18:25:50.778
  I0410 18:25:51.298773 23 pod_client.go:173] Successfully updated pod "adopt-release-c8trk"
  STEP: Checking that the Job readopts the Pod @ 04/10/25 18:25:51.298
  STEP: Removing the labels from the Job's Pod @ 04/10/25 18:25:53.308
  I0410 18:25:53.818061 23 pod_client.go:173] Successfully updated pod "adopt-release-c8trk"
  STEP: Checking that the Job releases the Pod @ 04/10/25 18:25:53.818
  I0410 18:25:55.825648 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-703" for this suite. @ 04/10/25 18:25:55.829
• [7.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/10/25 18:25:55.835
  I0410 18:25:55.835640 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename cronjob @ 04/10/25 18:25:55.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:25:55.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:25:55.851
  STEP: Creating a cronjob @ 04/10/25 18:25:55.854
  STEP: Ensuring more than one job is running at a time @ 04/10/25 18:25:55.859
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/10/25 18:27:01.866
  STEP: Removing cronjob @ 04/10/25 18:27:01.87
  I0410 18:27:01.874820 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3803" for this suite. @ 04/10/25 18:27:01.878
• [66.049 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 04/10/25 18:27:01.884
  I0410 18:27:01.884838 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename statefulset @ 04/10/25 18:27:01.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:27:01.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:27:01.907
  STEP: Creating service test in namespace statefulset-6410 @ 04/10/25 18:27:01.91
  STEP: Looking for a node to schedule stateful set and pod @ 04/10/25 18:27:01.915
  STEP: Creating pod with conflicting port in namespace statefulset-6410 @ 04/10/25 18:27:01.98
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6410 @ 04/10/25 18:27:01.989
  STEP: Creating statefulset with conflicting port in namespace statefulset-6410 @ 04/10/25 18:27:03.998
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6410 @ 04/10/25 18:27:04.005
  I0410 18:27:04.018104 23 statefulset.go:869] Observed stateful pod in namespace: statefulset-6410, name: ss-0, uid: dd6ae74e-62b0-427e-ad9b-8744770ce226, status phase: Pending. Waiting for statefulset controller to delete.
  I0410 18:27:04.032344 23 statefulset.go:869] Observed stateful pod in namespace: statefulset-6410, name: ss-0, uid: dd6ae74e-62b0-427e-ad9b-8744770ce226, status phase: Failed. Waiting for statefulset controller to delete.
  I0410 18:27:04.040114 23 statefulset.go:869] Observed stateful pod in namespace: statefulset-6410, name: ss-0, uid: dd6ae74e-62b0-427e-ad9b-8744770ce226, status phase: Failed. Waiting for statefulset controller to delete.
  I0410 18:27:04.044489 23 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-6410
  STEP: Removing pod with conflicting port in namespace statefulset-6410 @ 04/10/25 18:27:04.044
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6410 and will be in running state @ 04/10/25 18:27:04.058
  I0410 18:27:06.068734 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6410
  I0410 18:27:06.071643 23 rest.go:150] Scaling statefulset ss to 0
  I0410 18:27:16.098389 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0410 18:27:16.101861 23 rest.go:88] Deleting statefulset ss
  I0410 18:27:16.117898 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6410" for this suite. @ 04/10/25 18:27:16.121
• [14.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 04/10/25 18:27:16.127
  I0410 18:27:16.127143 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename dns @ 04/10/25 18:27:16.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:27:16.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:27:16.142
  STEP: Creating a test headless service @ 04/10/25 18:27:16.145
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3053.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3053.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local;sleep 1; done
   @ 04/10/25 18:27:16.15
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3053.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3053.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local;sleep 1; done
   @ 04/10/25 18:27:16.15
  STEP: creating a pod to probe DNS @ 04/10/25 18:27:16.15
  STEP: submitting the pod to kubernetes @ 04/10/25 18:27:16.15
  STEP: retrieving the pod @ 04/10/25 18:27:18.168
  STEP: looking for the results for each expected name from probers @ 04/10/25 18:27:18.171
  I0410 18:27:18.175370 23 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:18.178225 23 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:18.180843 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:18.183318 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:18.185649 23 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:18.187807 23 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:18.190273 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:18.192745 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:18.192791 23 dns_common.go:490] Lookups using dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local]

  I0410 18:27:18.209544 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 18:27:18.216158 23 dns_common.go:496] Pod client logs for querier: 
  I0410 18:27:18.222376 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 18:27:23.178804 23 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:23.182337 23 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:23.184881 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:23.187198 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:23.189416 23 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:23.192076 23 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:23.194443 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:23.196764 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:23.196814 23 dns_common.go:490] Lookups using dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local]

  I0410 18:27:23.204168 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 18:27:23.212127 23 dns_common.go:496] Pod client logs for querier: 
  I0410 18:27:23.218909 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 18:27:28.174136 23 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:28.175753 23 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:28.177067 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:28.178268 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:28.179747 23 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:28.181674 23 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:28.183097 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:28.186746 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:28.186815 23 dns_common.go:490] Lookups using dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local]

  I0410 18:27:28.192802 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 18:27:28.197189 23 dns_common.go:496] Pod client logs for querier: 
  I0410 18:27:28.201321 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 18:27:33.175112 23 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:33.178956 23 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:33.181858 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:33.184695 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:33.187124 23 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:33.189708 23 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:33.192200 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:33.194332 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:33.194368 23 dns_common.go:490] Lookups using dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local]

  I0410 18:27:33.200898 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 18:27:33.207550 23 dns_common.go:496] Pod client logs for querier: 
  I0410 18:27:33.214643 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 18:27:38.178097 23 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:38.181575 23 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:38.184809 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:38.187553 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:38.190312 23 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:38.193011 23 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:38.195473 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:38.197863 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:38.197907 23 dns_common.go:490] Lookups using dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local]

  I0410 18:27:38.205124 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 18:27:38.217955 23 dns_common.go:496] Pod client logs for querier: 
  I0410 18:27:38.238439 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 18:27:43.179196 23 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:43.183065 23 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:43.185859 23 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:43.188496 23 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:43.190528 23 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:43.192084 23 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:43.193543 23 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:43.194945 23 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local from pod dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60: the server could not find the requested resource (get pods dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60)
  I0410 18:27:43.194966 23 dns_common.go:490] Lookups using dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3053.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3053.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3053.svc.cluster.local jessie_udp@dns-test-service-2.dns-3053.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3053.svc.cluster.local]

  I0410 18:27:43.199008 23 dns_common.go:496] Pod client logs for webserver: 
  I0410 18:27:43.202973 23 dns_common.go:496] Pod client logs for querier: 
  I0410 18:27:43.206770 23 dns_common.go:496] Pod client logs for jessie-querier: 
  I0410 18:27:48.190808 23 dns_common.go:528] DNS probes using dns-3053/dns-test-8b6b208a-aaf1-44cb-b0b2-48e4f0030e60 succeeded

  STEP: deleting the pod @ 04/10/25 18:27:48.19
  STEP: deleting the test headless service @ 04/10/25 18:27:48.203
  I0410 18:27:48.222403 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3053" for this suite. @ 04/10/25 18:27:48.227
• [32.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/10/25 18:27:48.235
  I0410 18:27:48.235363 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename deployment @ 04/10/25 18:27:48.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:27:48.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:27:48.246
  I0410 18:27:48.248712 23 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0410 18:27:48.251553 23 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0410 18:27:48.255157 23 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0410 18:27:50.261693 23 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0410 18:27:50.263659 23 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0410 18:27:50.271417 23 deployment.go:314] Updating deployment test-recreate-deployment
  I0410 18:27:50.271447 23 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0410 18:27:50.339400 23 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14b5cb21-0da2-407c-b6e2-99d0d5754fe9",
      ResourceVersion: (string) (len=5) "23906",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879906468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0410 18:27:50.362345 23 deployment.go:40] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7007d6a7-2d48-4482-8cdd-8fb97acdb86c",
      ResourceVersion: (string) (len=5) "23904",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879906470,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "14b5cb21-0da2-407c-b6e2-99d0d5754fe9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 34 62 35 63 62  32 31 2d 30 64 61 32 2d  |\"14b5cb21-0da2-|
              00000120  34 30 37 63 2d 62 36 65  32 2d 39 39 64 30 64 35  |407c-b6e2-99d0d5|
              00000130  37 35 34 66 65 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |754fe9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 18:27:50.362833 23 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0410 18:27:50.362976 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90547baa-0fe6-41db-bd7c-50d765985a51",
      ResourceVersion: (string) (len=5) "23894",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879906468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "14b5cb21-0da2-407c-b6e2-99d0d5754fe9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 34 62 35 63 62  32 31 2d 30 64 61 32 2d  |\"14b5cb21-0da2-|
              00000120  34 30 37 63 2d 62 36 65  32 2d 39 39 64 30 64 35  |407c-b6e2-99d0d5|
              00000130  37 35 34 66 65 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |754fe9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0410 18:27:50.367815 23 deployment.go:68] Pod "test-recreate-deployment-88d47c55d-4gw6j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-4gw6j",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-2061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d7f2e506-87a3-4bb7-9cb7-c3c73dec4514",
      ResourceVersion: (string) (len=5) "23905",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879906470,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "7007d6a7-2d48-4482-8cdd-8fb97acdb86c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 30  30 37 64 36 61 37 2d 32  |d\":\"7007d6a7-2|
              00000090  64 34 38 2d 34 34 38 32  2d 38 63 64 64 2d 38 66  |d48-4482-8cdd-8f|
              000000a0  62 39 37 61 63 64 62 38  36 63 5c 22 7d 22 3a 7b  |b97acdb86c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r4n4l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r4n4l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63879906470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.49.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.49.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63879906470,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r4n4l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0410 18:27:50.368944 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2061" for this suite. @ 04/10/25 18:27:50.372
• [2.140 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 04/10/25 18:27:50.375
  I0410 18:27:50.375563 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 18:27:50.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:27:50.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:27:50.386
  STEP: Setting up server cert @ 04/10/25 18:27:50.489
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 18:27:50.623
  STEP: Deploying the webhook pod @ 04/10/25 18:27:50.627
  STEP: Wait for the deployment to be ready @ 04/10/25 18:27:50.634
  I0410 18:27:50.638054 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 18:27:52.649
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 18:27:52.665
  I0410 18:27:53.666409 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/10/25 18:27:53.674
  STEP: create the configmap with a random name @ 04/10/25 18:27:53.696
  STEP: verify the configmap is mutated @ 04/10/25 18:27:53.711
  STEP: create the configmap with 'skip-me' name @ 04/10/25 18:27:53.711
  I0410 18:27:53.750885 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6471" for this suite. @ 04/10/25 18:27:53.754
  STEP: Destroying namespace "webhook-markers-8172" for this suite. @ 04/10/25 18:27:53.759
• [3.389 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/10/25 18:27:53.764
  I0410 18:27:53.764654 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename subpath @ 04/10/25 18:27:53.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:27:53.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:27:53.775
  STEP: Setting up data @ 04/10/25 18:27:53.776
  STEP: Creating pod pod-subpath-test-downwardapi-jfg5 @ 04/10/25 18:27:53.782
  STEP: Creating a pod to test atomic-volume-subpath @ 04/10/25 18:27:53.782
  STEP: Saw pod success @ 04/10/25 18:28:17.849
  I0410 18:28:17.852276 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-downwardapi-jfg5 container test-container-subpath-downwardapi-jfg5: <nil>
  STEP: delete the pod @ 04/10/25 18:28:17.861
  STEP: Deleting pod pod-subpath-test-downwardapi-jfg5 @ 04/10/25 18:28:17.877
  I0410 18:28:17.877571 23 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-jfg5" in namespace "subpath-1385"
  I0410 18:28:17.879677 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1385" for this suite. @ 04/10/25 18:28:17.882
• [24.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 04/10/25 18:28:17.886
  I0410 18:28:17.887002 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 18:28:17.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:28:17.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:28:17.901
  STEP: Setting up server cert @ 04/10/25 18:28:18.001
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 18:28:18.226
  STEP: Deploying the webhook pod @ 04/10/25 18:28:18.229
  STEP: Wait for the deployment to be ready @ 04/10/25 18:28:18.236
  I0410 18:28:18.240237 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 18:28:20.251
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 18:28:20.266
  I0410 18:28:21.266415 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/10/25 18:28:21.274
  I0410 18:28:21.314268 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8203" for this suite. @ 04/10/25 18:28:21.316
  STEP: Destroying namespace "webhook-markers-1374" for this suite. @ 04/10/25 18:28:21.321
• [3.441 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 04/10/25 18:28:21.328
  I0410 18:28:21.328579 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 18:28:21.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:28:21.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:28:21.341
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9921 @ 04/10/25 18:28:21.343
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/10/25 18:28:21.354
  STEP: creating service externalsvc in namespace services-9921 @ 04/10/25 18:28:21.355
  STEP: creating replication controller externalsvc in namespace services-9921 @ 04/10/25 18:28:21.369
  I0410 18:28:21.376065      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-9921, replica count: 2
  I0410 18:28:24.426945      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/10/25 18:28:24.432
  I0410 18:28:24.452353 23 resource.go:361] Creating new exec pod
  I0410 18:28:26.465072 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-9921 exec execpodqbj9z -- /bin/sh -x -c nslookup nodeport-service.services-9921.svc.cluster.local'
  I0410 18:28:26.597855 23 builder.go:146] stderr: "+ nslookup nodeport-service.services-9921.svc.cluster.local\n"
  I0410 18:28:26.597910 23 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-9921.svc.cluster.local\tcanonical name = externalsvc.services-9921.svc.cluster.local.\nName:\texternalsvc.services-9921.svc.cluster.local\nAddress: 10.103.10.215\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9921, will wait for the garbage collector to delete the pods @ 04/10/25 18:28:26.598
  I0410 18:28:26.653357 23 resources.go:139] Deleting ReplicationController externalsvc took: 3.250529ms
  I0410 18:28:26.754194 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.817983ms
  I0410 18:28:29.576858 23 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0410 18:28:29.588322 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9921" for this suite. @ 04/10/25 18:28:29.592
• [8.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 04/10/25 18:28:29.599
  I0410 18:28:29.599137 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 18:28:29.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:28:29.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:28:29.613
  STEP: Creating configMap with name configmap-test-upd-e8146273-6da4-44b6-90cd-bc4863264098 @ 04/10/25 18:28:29.693
  STEP: Creating the pod @ 04/10/25 18:28:29.699
  STEP: Waiting for pod with text data @ 04/10/25 18:28:31.72
  STEP: Waiting for pod with binary data @ 04/10/25 18:28:31.729
  I0410 18:28:31.735703 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6263" for this suite. @ 04/10/25 18:28:31.738
• [2.146 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/10/25 18:28:31.745
  I0410 18:28:31.745101 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/10/25 18:28:31.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:28:31.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:28:31.758
  I0410 18:28:31.759570 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:28:32.784618 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5660" for this suite. @ 04/10/25 18:28:32.789
• [1.051 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 04/10/25 18:28:32.796
  I0410 18:28:32.796197 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename crd-webhook @ 04/10/25 18:28:32.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:28:32.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:28:32.807
  STEP: Setting up server cert @ 04/10/25 18:28:32.809
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/10/25 18:28:32.98
  STEP: Deploying the custom resource conversion webhook pod @ 04/10/25 18:28:32.984
  STEP: Wait for the deployment to be ready @ 04/10/25 18:28:32.991
  I0410 18:28:32.994516 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 18:28:35.007
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 18:28:35.022
  I0410 18:28:36.023387 23 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0410 18:28:36.030535 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Creating a v1 custom resource @ 04/10/25 18:28:38.603
  STEP: Create a v2 custom resource @ 04/10/25 18:28:38.619
  STEP: List CRs in v1 @ 04/10/25 18:28:38.644
  STEP: List CRs in v2 @ 04/10/25 18:28:38.646
  I0410 18:28:39.192804 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9386" for this suite. @ 04/10/25 18:28:39.196
• [6.405 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 04/10/25 18:28:39.202
  I0410 18:28:39.202588 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 18:28:39.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:28:39.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:28:39.217
  STEP: creating service nodeport-test with type=NodePort in namespace services-4719 @ 04/10/25 18:28:39.219
  STEP: creating replication controller nodeport-test in namespace services-4719 @ 04/10/25 18:28:39.232
  I0410 18:28:39.239098      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-4719, replica count: 2
  I0410 18:28:42.290403      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0410 18:28:42.290523 23 resource.go:361] Creating new exec pod
  I0410 18:28:45.309832 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-4719 exec execpodfbxck -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0410 18:28:45.414516 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0410 18:28:45.414588 23 builder.go:147] stdout: "nodeport-test-bmr2t"
  I0410 18:28:45.414689 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-4719 exec execpodfbxck -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.47.31 80'
  I0410 18:28:45.503543 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.47.31 80\nConnection to 10.99.47.31 80 port [tcp/http] succeeded!\n"
  I0410 18:28:45.503599 23 builder.go:147] stdout: "nodeport-test-pwjzr"
  I0410 18:28:45.503709 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-4719 exec execpodfbxck -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 31028'
  I0410 18:28:45.588091 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 31028\nConnection to 192.168.49.2 31028 port [tcp/*] succeeded!\n"
  I0410 18:28:45.588151 23 builder.go:147] stdout: "nodeport-test-bmr2t"
  I0410 18:28:45.588271 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-4719 exec execpodfbxck -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.3 31028'
  I0410 18:28:45.686210 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.3 31028\nConnection to 192.168.49.3 31028 port [tcp/*] succeeded!\n"
  I0410 18:28:45.686259 23 builder.go:147] stdout: "nodeport-test-pwjzr"
  I0410 18:28:45.686363 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4719" for this suite. @ 04/10/25 18:28:45.688
• [6.493 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 04/10/25 18:28:45.695
  I0410 18:28:45.695186 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename containers @ 04/10/25 18:28:45.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:28:45.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:28:45.711
  STEP: Creating a pod to test override all @ 04/10/25 18:28:45.715
  STEP: Saw pod success @ 04/10/25 18:28:47.732
  I0410 18:28:47.735468 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod client-containers-21b78334-16cf-4612-b629-af5ab134a852 container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 18:28:47.743
  I0410 18:28:47.754017 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4855" for this suite. @ 04/10/25 18:28:47.756
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 04/10/25 18:28:47.767
  I0410 18:28:47.767577 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename runtimeclass @ 04/10/25 18:28:47.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:28:47.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:28:47.778
  STEP: Deleting RuntimeClass runtimeclass-5657-delete-me @ 04/10/25 18:28:47.784
  STEP: Waiting for the RuntimeClass to disappear @ 04/10/25 18:28:47.789
  I0410 18:28:47.797685 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5657" for this suite. @ 04/10/25 18:28:47.859
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/10/25 18:28:47.866
  I0410 18:28:47.866807 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename deployment @ 04/10/25 18:28:47.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:28:47.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:28:47.881
  STEP: creating a Deployment @ 04/10/25 18:28:47.89
  STEP: waiting for Deployment to be created @ 04/10/25 18:28:47.895
  STEP: waiting for all Replicas to be Ready @ 04/10/25 18:28:47.897
  I0410 18:28:47.898718 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0410 18:28:47.898758 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0410 18:28:47.905647 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0410 18:28:47.905674 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0410 18:28:47.916120 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0410 18:28:47.916190 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0410 18:28:47.940001 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0410 18:28:47.940024 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0410 18:28:48.715438 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0410 18:28:48.715544 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0410 18:28:49.456611 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/10/25 18:28:49.456
  I0410 18:28:49.464939 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/10/25 18:28:49.465
  I0410 18:28:49.466596 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0
  I0410 18:28:49.466619 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0
  I0410 18:28:49.466638 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0
  I0410 18:28:49.466647 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0
  I0410 18:28:49.466660 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0
  I0410 18:28:49.466669 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0
  I0410 18:28:49.466736 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0
  I0410 18:28:49.466764 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 0
  I0410 18:28:49.466872 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  I0410 18:28:49.466894 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  I0410 18:28:49.466931 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:49.466943 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:49.466949 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:49.466954 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:49.475041 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:49.475084 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:49.494707 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:49.494800 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:49.502582 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  I0410 18:28:49.502613 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  I0410 18:28:49.521542 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  I0410 18:28:49.521575 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  I0410 18:28:50.484616 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:50.484688 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:50.503813 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  STEP: listing Deployments @ 04/10/25 18:28:50.503
  I0410 18:28:50.506101 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/10/25 18:28:50.506
  I0410 18:28:50.517803 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/10/25 18:28:50.517
  I0410 18:28:50.522384 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0410 18:28:50.527597 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0410 18:28:50.550694 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0410 18:28:50.565892 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0410 18:28:50.574310 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0410 18:28:51.499321 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0410 18:28:51.512531 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0410 18:28:51.521228 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0410 18:28:51.537776 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0410 18:28:52.791497 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/10/25 18:28:52.807
  STEP: fetching the DeploymentStatus @ 04/10/25 18:28:52.812
  I0410 18:28:52.815544 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  I0410 18:28:52.815679 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  I0410 18:28:52.815696 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  I0410 18:28:52.815866 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  I0410 18:28:52.815884 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 1
  I0410 18:28:52.815894 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:52.815998 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:52.816049 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:52.816087 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 2
  I0410 18:28:52.816140 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-1995 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/10/25 18:28:52.816
  I0410 18:28:52.821524 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.821554 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.821561 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.821631 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.821639 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.821647 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.821694 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.821855 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.821877 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.821900 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.821916 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.822030 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.822072 23 deployment.go:475] observed event type MODIFIED
  I0410 18:28:52.823649 23 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0410 18:28:52.826413 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1995" for this suite. @ 04/10/25 18:28:52.828
• [4.970 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 04/10/25 18:28:52.837
  I0410 18:28:52.837360 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/10/25 18:28:52.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:28:52.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:28:52.847
  I0410 18:28:52.851264 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8598" for this suite. @ 04/10/25 18:28:52.929
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 04/10/25 18:28:52.933
  I0410 18:28:52.933388 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 18:28:52.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:28:52.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:28:52.956
  STEP: Creating Pod @ 04/10/25 18:28:52.959
  STEP: Reading file content from the nginx-container @ 04/10/25 18:28:54.975
  I0410 18:28:54.975753 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1547 PodName:pod-sharedvolume-ad7f7d55-5e03-4789-8576-c93309b24b0c ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:28:54.975784 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:28:54.976562 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:28:54.976655 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-1547/pods/pod-sharedvolume-ad7f7d55-5e03-4789-8576-c93309b24b0c/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0410 18:28:55.051937 23 exec_util.go:111] Exec stderr: ""
  I0410 18:28:55.052150 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1547" for this suite. @ 04/10/25 18:28:55.056
• [2.131 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/10/25 18:28:55.064
  I0410 18:28:55.064691 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pods @ 04/10/25 18:28:55.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:28:55.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:28:55.083
  STEP: creating the pod @ 04/10/25 18:28:55.086
  STEP: submitting the pod to kubernetes @ 04/10/25 18:28:55.086
  W0410 18:28:55.093793      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 04/10/25 18:28:57.105
  STEP: updating the pod @ 04/10/25 18:28:57.108
  I0410 18:28:57.623149 23 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-a570a415-3138-4a06-9add-f69156b1bcf2"
  I0410 18:29:01.637266 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6439" for this suite. @ 04/10/25 18:29:01.641
• [6.583 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/10/25 18:29:01.648
  I0410 18:29:01.648362 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename chunking @ 04/10/25 18:29:01.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:29:01.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:29:01.666
  STEP: creating a large number of resources @ 04/10/25 18:29:01.669
  STEP: retrieving the first page @ 04/10/25 18:29:19.357
  I0410 18:29:19.405586 23 chunking.go:163] Retrieved 40/40 results with rv 25187 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 04/10/25 18:29:19.405
  I0410 18:29:39.415571 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:29:59.414603 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:30:19.413733 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:30:39.414613 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:30:59.415151 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:31:19.411241 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:31:39.410348 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:31:59.414047 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:32:19.410709 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:32:39.413962 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:32:59.412852 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:33:19.411645 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:33:39.413850 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:33:59.412865 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:34:19.413769 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:34:39.412457 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUxODcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0410 18:34:59.413723 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0410 18:34:59.413784 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/10/25 18:34:59.413
  STEP: retrieving all remaining pages @ 04/10/25 18:34:59.418
  I0410 18:34:59.422356 23 chunking.go:221] Retrieved 40/40 results with rv 25493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0410 18:34:59.425983 23 chunking.go:221] Retrieved 40/40 results with rv 25493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0410 18:34:59.429984 23 chunking.go:221] Retrieved 40/40 results with rv 25493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0410 18:34:59.433469 23 chunking.go:221] Retrieved 40/40 results with rv 25493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0410 18:34:59.436810 23 chunking.go:221] Retrieved 40/40 results with rv 25493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0410 18:34:59.440459 23 chunking.go:221] Retrieved 40/40 results with rv 25493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0410 18:34:59.443786 23 chunking.go:221] Retrieved 40/40 results with rv 25493 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0OTMsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0410 18:34:59.447329 23 chunking.go:221] Retrieved 40/40 results with rv 25493 and continue 
  I0410 18:34:59.447515 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-945" for this suite. @ 04/10/25 18:34:59.45
• [357.807 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/10/25 18:34:59.455
  I0410 18:34:59.455221 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 18:34:59.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:34:59.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:34:59.471
  STEP: Creating a pod to test downward api env vars @ 04/10/25 18:34:59.474
  STEP: Saw pod success @ 04/10/25 18:35:01.489
  I0410 18:35:01.491193 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downward-api-e331b77c-342c-469e-9f54-69690ba604c6 container dapi-container: <nil>
  STEP: delete the pod @ 04/10/25 18:35:01.502
  I0410 18:35:01.512485 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5618" for this suite. @ 04/10/25 18:35:01.514
• [2.062 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 04/10/25 18:35:01.517
  I0410 18:35:01.517165 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/10/25 18:35:01.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:35:01.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:35:01.528
  STEP: create the container to handle the HTTPGet hook request. @ 04/10/25 18:35:01.617
  STEP: create the pod with lifecycle hook @ 04/10/25 18:35:03.639
  STEP: check poststart hook @ 04/10/25 18:35:05.658
  STEP: delete the pod with lifecycle hook @ 04/10/25 18:35:05.676
  I0410 18:35:07.693241 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4458" for this suite. @ 04/10/25 18:35:07.696
• [6.186 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 04/10/25 18:35:07.703
  I0410 18:35:07.703317 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename resourcequota @ 04/10/25 18:35:07.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:35:07.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:35:07.722
  STEP: Counting existing ResourceQuota @ 04/10/25 18:35:07.725
  STEP: Creating a ResourceQuota @ 04/10/25 18:35:12.728
  STEP: Ensuring resource quota status is calculated @ 04/10/25 18:35:12.735
  STEP: Creating a ReplicaSet @ 04/10/25 18:35:14.738
  STEP: Ensuring resource quota status captures replicaset creation @ 04/10/25 18:35:14.747
  STEP: Deleting a ReplicaSet @ 04/10/25 18:35:16.752
  STEP: Ensuring resource quota status released usage @ 04/10/25 18:35:16.758
  I0410 18:35:18.763790 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2903" for this suite. @ 04/10/25 18:35:18.767
• [11.072 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 04/10/25 18:35:18.775
  I0410 18:35:18.775142 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/10/25 18:35:18.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:35:18.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:35:18.794
  STEP: getting /apis @ 04/10/25 18:35:18.803
  STEP: getting /apis/admissionregistration.k8s.io @ 04/10/25 18:35:18.808
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/10/25 18:35:18.809
  STEP: creating @ 04/10/25 18:35:18.81
  STEP: getting @ 04/10/25 18:35:18.823
  STEP: listing @ 04/10/25 18:35:18.826
  STEP: watching @ 04/10/25 18:35:18.829
  I0410 18:35:18.829366 23 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 04/10/25 18:35:18.83
  STEP: updating @ 04/10/25 18:35:18.835
  I0410 18:35:18.843042 23 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 04/10/25 18:35:18.843
  STEP: deleting a collection @ 04/10/25 18:35:18.853
  I0410 18:35:18.866376 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8379" for this suite. @ 04/10/25 18:35:18.869
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 04/10/25 18:35:18.874
  I0410 18:35:18.874384 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename runtimeclass @ 04/10/25 18:35:18.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:35:18.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:35:18.893
  I0410 18:35:20.921599 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3027" for this suite. @ 04/10/25 18:35:20.925
• [2.058 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 04/10/25 18:35:20.932
  I0410 18:35:20.932660 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/10/25 18:35:20.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:35:20.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:35:20.95
  I0410 18:35:20.953751 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0410 18:36:20.955797 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I0410 18:36:20.960767 23 taints.go:144] Starting informer...
  STEP: Starting pods... @ 04/10/25 18:36:20.96
  I0410 18:36:21.179990 23 taints.go:463] Pod1 is running on k8sconformance-m02. Tainting Node
  I0410 18:36:23.403188 23 taints.go:471] Pod2 is running on k8sconformance-m02. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/10/25 18:36:23.403
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/10/25 18:36:23.417
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/10/25 18:36:23.42
  I0410 18:36:29.033181 23 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0410 18:36:49.187828 23 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/10/25 18:36:49.197
  I0410 18:36:49.200154 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8217" for this suite. @ 04/10/25 18:36:49.202
• [88.276 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 04/10/25 18:36:49.209
  I0410 18:36:49.209350 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename resourcequota @ 04/10/25 18:36:49.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:36:49.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:36:49.319
  STEP: Creating a ResourceQuota with best effort scope @ 04/10/25 18:36:49.322
  STEP: Ensuring ResourceQuota status is calculated @ 04/10/25 18:36:49.327
  STEP: Creating a ResourceQuota with not best effort scope @ 04/10/25 18:36:51.331
  STEP: Ensuring ResourceQuota status is calculated @ 04/10/25 18:36:51.337
  STEP: Creating a best-effort pod @ 04/10/25 18:36:53.344
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/10/25 18:36:53.361
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/10/25 18:36:55.367
  STEP: Deleting the pod @ 04/10/25 18:36:57.373
  STEP: Ensuring resource quota status released the pod usage @ 04/10/25 18:36:57.385
  STEP: Creating a not best-effort pod @ 04/10/25 18:36:59.391
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/10/25 18:36:59.403
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/10/25 18:37:01.41
  STEP: Deleting the pod @ 04/10/25 18:37:03.417
  STEP: Ensuring resource quota status released the pod usage @ 04/10/25 18:37:03.427
  I0410 18:37:05.433073 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4709" for this suite. @ 04/10/25 18:37:05.436
• [16.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 04/10/25 18:37:05.446
  I0410 18:37:05.446926 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 18:37:05.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:37:05.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:37:05.464
  STEP: creating the pod @ 04/10/25 18:37:05.467
  I0410 18:37:05.467952 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5359 create -f -'
  I0410 18:37:05.547775 23 builder.go:146] stderr: ""
  I0410 18:37:05.547823 23 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/10/25 18:37:07.552
  I0410 18:37:07.552505 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5359 label pods pause testing-label=testing-label-value'
  I0410 18:37:07.595636 23 builder.go:146] stderr: ""
  I0410 18:37:07.595671 23 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/10/25 18:37:07.595
  I0410 18:37:07.595753 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5359 get pod pause -L testing-label'
  I0410 18:37:07.631383 23 builder.go:146] stderr: ""
  I0410 18:37:07.631434 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/10/25 18:37:07.631
  I0410 18:37:07.631528 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5359 label pods pause testing-label-'
  I0410 18:37:07.680948 23 builder.go:146] stderr: ""
  I0410 18:37:07.680995 23 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/10/25 18:37:07.681
  I0410 18:37:07.681080 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5359 get pod pause -L testing-label'
  I0410 18:37:07.725239 23 builder.go:146] stderr: ""
  I0410 18:37:07.725298 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 04/10/25 18:37:07.725
  I0410 18:37:07.725447 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5359 delete --grace-period=0 --force -f -'
  I0410 18:37:07.779749 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0410 18:37:07.779790 23 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0410 18:37:07.779847 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5359 get rc,svc -l name=pause --no-headers'
  I0410 18:37:07.821503 23 builder.go:146] stderr: "No resources found in kubectl-5359 namespace.\n"
  I0410 18:37:07.821543 23 builder.go:147] stdout: ""
  I0410 18:37:07.821615 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-5359 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0410 18:37:07.858959 23 builder.go:146] stderr: ""
  I0410 18:37:07.859003 23 builder.go:147] stdout: ""
  I0410 18:37:07.859157 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5359" for this suite. @ 04/10/25 18:37:07.861
• [2.417 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 04/10/25 18:37:07.864
  I0410 18:37:07.864361 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 18:37:07.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:37:07.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:37:07.874
  STEP: creating service multi-endpoint-test in namespace services-5501 @ 04/10/25 18:37:07.876
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5501 to expose endpoints map[] @ 04/10/25 18:37:07.883
  I0410 18:37:07.886846 23 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0410 18:37:08.898519 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5501 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5501 @ 04/10/25 18:37:08.898
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5501 to expose endpoints map[pod1:[100]] @ 04/10/25 18:37:10.922
  I0410 18:37:10.930945 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5501 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5501 @ 04/10/25 18:37:10.931
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5501 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/10/25 18:37:12.945
  I0410 18:37:12.959409 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5501 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/10/25 18:37:12.959
  I0410 18:37:12.959492 23 resource.go:361] Creating new exec pod
  I0410 18:37:15.974032 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-5501 exec execpodsmtrq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0410 18:37:16.078409 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0410 18:37:16.078477 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 18:37:16.078582 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-5501 exec execpodsmtrq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.151.202 80'
  I0410 18:37:16.178216 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.151.202 80\nConnection to 10.96.151.202 80 port [tcp/http] succeeded!\n"
  I0410 18:37:16.178296 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 18:37:16.178408 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-5501 exec execpodsmtrq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0410 18:37:16.271736 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0410 18:37:16.271800 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 18:37:16.271900 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-5501 exec execpodsmtrq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.151.202 81'
  I0410 18:37:16.362041 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.151.202 81\nConnection to 10.96.151.202 81 port [tcp/*] succeeded!\n"
  I0410 18:37:16.362092 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5501 @ 04/10/25 18:37:16.362
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5501 to expose endpoints map[pod2:[101]] @ 04/10/25 18:37:16.373
  I0410 18:37:16.386566 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5501 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5501 @ 04/10/25 18:37:16.386
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5501 to expose endpoints map[] @ 04/10/25 18:37:16.404
  I0410 18:37:16.412080 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5501 exposes endpoints map[]
  I0410 18:37:16.427787 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5501" for this suite. @ 04/10/25 18:37:16.43
• [8.570 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 04/10/25 18:37:16.435
  I0410 18:37:16.435143 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 18:37:16.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:37:16.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:37:16.449
  STEP: validating cluster-info @ 04/10/25 18:37:16.451
  I0410 18:37:16.451803 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-3374 cluster-info'
  I0410 18:37:16.494981 23 builder.go:146] stderr: ""
  I0410 18:37:16.495025 23 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0410 18:37:16.495128 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3374" for this suite. @ 04/10/25 18:37:16.53
• [0.098 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 04/10/25 18:37:16.533
  I0410 18:37:16.533606 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename svcaccounts @ 04/10/25 18:37:16.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:37:16.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:37:16.546
  STEP: creating a ServiceAccount @ 04/10/25 18:37:16.547
  STEP: watching for the ServiceAccount to be added @ 04/10/25 18:37:16.551
  STEP: patching the ServiceAccount @ 04/10/25 18:37:16.552
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/10/25 18:37:16.556
  STEP: deleting the ServiceAccount @ 04/10/25 18:37:16.557
  I0410 18:37:16.562170 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4637" for this suite. @ 04/10/25 18:37:16.631
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 04/10/25 18:37:16.634
  I0410 18:37:16.634903 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 18:37:16.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:37:16.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:37:16.647
  STEP: Creating configMap with name configmap-test-volume-map-7dd3897b-d743-4a68-880c-2f4a40d8c688 @ 04/10/25 18:37:16.648
  STEP: Creating a pod to test consume configMaps @ 04/10/25 18:37:16.651
  STEP: Saw pod success @ 04/10/25 18:37:20.667
  I0410 18:37:20.672222 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-configmaps-83f80c9e-e48b-4d60-9721-f693160ed0db container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 18:37:20.692
  I0410 18:37:20.711039 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-696" for this suite. @ 04/10/25 18:37:20.715
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/10/25 18:37:20.721
  I0410 18:37:20.721911 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename proxy @ 04/10/25 18:37:20.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:37:20.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:37:20.736
  I0410 18:37:20.739750 23 proxy.go:387] Creating pod...
  I0410 18:37:22.755706 23 proxy.go:411] Creating service...
  I0410 18:37:22.769191 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/pods/agnhost/proxy?method=DELETE
  I0410 18:37:22.774240 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0410 18:37:22.774341 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/pods/agnhost/proxy?method=OPTIONS
  I0410 18:37:22.778125 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0410 18:37:22.778183 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/pods/agnhost/proxy?method=PATCH
  I0410 18:37:22.781257 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0410 18:37:22.781294 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/pods/agnhost/proxy?method=POST
  I0410 18:37:22.783335 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0410 18:37:22.783393 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/pods/agnhost/proxy?method=PUT
  I0410 18:37:22.785787 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0410 18:37:22.785835 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/services/e2e-proxy-test-service/proxy?method=DELETE
  I0410 18:37:22.788946 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0410 18:37:22.788995 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0410 18:37:22.792155 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0410 18:37:22.792187 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/services/e2e-proxy-test-service/proxy?method=PATCH
  I0410 18:37:22.795167 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0410 18:37:22.795226 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/services/e2e-proxy-test-service/proxy?method=POST
  I0410 18:37:22.798832 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0410 18:37:22.798879 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/services/e2e-proxy-test-service/proxy?method=PUT
  I0410 18:37:22.802051 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0410 18:37:22.802107 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/pods/agnhost/proxy?method=GET
  I0410 18:37:22.804794 23 proxy.go:487] http.Client request:GET StatusCode:301
  I0410 18:37:22.804845 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/services/e2e-proxy-test-service/proxy?method=GET
  I0410 18:37:22.807269 23 proxy.go:487] http.Client request:GET StatusCode:301
  I0410 18:37:22.807314 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/pods/agnhost/proxy?method=HEAD
  I0410 18:37:22.809996 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0410 18:37:22.810027 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5559/services/e2e-proxy-test-service/proxy?method=HEAD
  I0410 18:37:22.812176 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0410 18:37:22.812329 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5559" for this suite. @ 04/10/25 18:37:22.815
• [2.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 04/10/25 18:37:22.82
  I0410 18:37:22.820900 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename gc @ 04/10/25 18:37:22.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:37:22.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:37:22.834
  STEP: create the rc @ 04/10/25 18:37:22.917
  W0410 18:37:22.925505      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/10/25 18:37:28.931
  STEP: wait for the rc to be deleted @ 04/10/25 18:37:28.94
  I0410 18:37:29.951539 23 garbage_collector.go:670] 80 pods remaining
  I0410 18:37:29.951569 23 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0410 18:37:29.951573 23 garbage_collector.go:678] 
  I0410 18:37:30.952693 23 garbage_collector.go:670] 71 pods remaining
  I0410 18:37:30.952729 23 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0410 18:37:30.952736 23 garbage_collector.go:678] 
  I0410 18:37:31.946909 23 garbage_collector.go:670] 60 pods remaining
  I0410 18:37:31.946942 23 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0410 18:37:31.946949 23 garbage_collector.go:678] 
  I0410 18:37:32.946343 23 garbage_collector.go:670] 40 pods remaining
  I0410 18:37:32.946375 23 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0410 18:37:32.946384 23 garbage_collector.go:678] 
  I0410 18:37:33.947986 23 garbage_collector.go:670] 31 pods remaining
  I0410 18:37:33.948025 23 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0410 18:37:33.948034 23 garbage_collector.go:678] 
  I0410 18:37:34.950015 23 garbage_collector.go:670] 20 pods remaining
  I0410 18:37:34.950059 23 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0410 18:37:34.950073 23 garbage_collector.go:678] 
  STEP: Gathering metrics @ 04/10/25 18:37:35.947
  I0410 18:37:36.033381 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0410 18:37:36.033480 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6840" for this suite. @ 04/10/25 18:37:36.035
• [13.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/10/25 18:37:36.039
  I0410 18:37:36.039145 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pod-network-test @ 04/10/25 18:37:36.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:37:36.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:37:36.053
  STEP: Performing setup for networking test in namespace pod-network-test-3340 @ 04/10/25 18:37:36.056
  STEP: creating a selector @ 04/10/25 18:37:36.056
  STEP: Creating the service pods in kubernetes @ 04/10/25 18:37:36.056
  I0410 18:37:36.056186 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/10/25 18:37:48.2
  I0410 18:37:50.233851 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0410 18:37:50.233900 23 utils.go:496] Going to poll 10.244.0.180 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0410 18:37:50.235959 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.180 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3340 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:37:50.235992 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:37:50.236632 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:37:50.236696 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3340/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.180+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0410 18:37:51.311739 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0410 18:37:51.311872 23 utils.go:496] Going to poll 10.244.1.193 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0410 18:37:51.315648 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.193 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3340 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:37:51.315684 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:37:51.316274 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:37:51.316342 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3340/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.193+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0410 18:37:52.387660 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0410 18:37:52.387868 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3340" for this suite. @ 04/10/25 18:37:52.392
• [16.361 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 04/10/25 18:37:52.4
  I0410 18:37:52.400506 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sched-pred @ 04/10/25 18:37:52.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:37:52.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:37:52.417
  I0410 18:37:52.419761 23 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0410 18:37:52.495993 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I0410 18:37:52.498876 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance before test
  I0410 18:37:52.502440 23 predicates.go:957] coredns-7c65d6cfc9-bfx56 from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.502486 23 predicates.go:959] 	Container coredns ready: true, restart count 2
  I0410 18:37:52.502505 23 predicates.go:957] etcd-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.502518 23 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0410 18:37:52.502532 23 predicates.go:957] kindnet-jtksc from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.502543 23 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0410 18:37:52.502558 23 predicates.go:957] kube-apiserver-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.502569 23 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0410 18:37:52.502586 23 predicates.go:957] kube-controller-manager-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.502597 23 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0410 18:37:52.502611 23 predicates.go:957] kube-proxy-f9rvm from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.502634 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0410 18:37:52.502647 23 predicates.go:957] kube-scheduler-k8sconformance from kube-system started at 2025-04-10 17:04:59 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.502658 23 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0410 18:37:52.502672 23 predicates.go:957] storage-provisioner from kube-system started at 2025-04-10 17:05:04 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.502684 23 predicates.go:959] 	Container storage-provisioner ready: true, restart count 0
  I0410 18:37:52.502698 23 predicates.go:957] netserver-0 from pod-network-test-3340 started at 2025-04-10 18:37:36 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.502717 23 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0410 18:37:52.502731 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-263a75f94ecb4a68-w8pln from sonobuoy started at 2025-04-10 17:05:50 +0000 UTC (2 container statuses recorded)
  I0410 18:37:52.502749 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0410 18:37:52.502761 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0410 18:37:52.502774 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  I0410 18:37:52.507185 23 predicates.go:957] kindnet-jt7xw from kube-system started at 2025-04-10 18:36:49 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.507238 23 predicates.go:959] 	Container kindnet-cni ready: true, restart count 0
  I0410 18:37:52.507281 23 predicates.go:957] kube-proxy-jjf4l from kube-system started at 2025-04-10 17:05:26 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.507296 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0410 18:37:52.507311 23 predicates.go:957] host-test-container-pod from pod-network-test-3340 started at 2025-04-10 18:37:48 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.507325 23 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I0410 18:37:52.507339 23 predicates.go:957] netserver-1 from pod-network-test-3340 started at 2025-04-10 18:37:36 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.507351 23 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0410 18:37:52.507364 23 predicates.go:957] test-container-pod from pod-network-test-3340 started at 2025-04-10 18:37:48 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.507377 23 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0410 18:37:52.507391 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-10 17:05:45 +0000 UTC (1 container statuses recorded)
  I0410 18:37:52.507399 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0410 18:37:52.507414 23 predicates.go:957] sonobuoy-e2e-job-58df2f5851bb4777 from sonobuoy started at 2025-04-10 17:05:50 +0000 UTC (2 container statuses recorded)
  I0410 18:37:52.507427 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0410 18:37:52.507440 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0410 18:37:52.507459 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-263a75f94ecb4a68-9xh5d from sonobuoy started at 2025-04-10 17:05:50 +0000 UTC (2 container statuses recorded)
  I0410 18:37:52.507470 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0410 18:37:52.507486 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/10/25 18:37:52.507
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/10/25 18:37:54.526
  STEP: Trying to apply a random label on the found node. @ 04/10/25 18:37:54.538
  STEP: verifying the node has the label kubernetes.io/e2e-479fe130-10c3-4529-9389-fb02022de001 42 @ 04/10/25 18:37:54.548
  STEP: Trying to relaunch the pod, now with labels. @ 04/10/25 18:37:54.55
  STEP: removing the label kubernetes.io/e2e-479fe130-10c3-4529-9389-fb02022de001 off the node k8sconformance-m02 @ 04/10/25 18:37:56.57
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-479fe130-10c3-4529-9389-fb02022de001 @ 04/10/25 18:37:56.585
  I0410 18:37:56.589205 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9712" for this suite. @ 04/10/25 18:37:56.593
• [4.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/10/25 18:37:56.601
  I0410 18:37:56.601901 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename podtemplate @ 04/10/25 18:37:56.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:37:56.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:37:56.616
  I0410 18:37:56.633556 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9938" for this suite. @ 04/10/25 18:37:56.636
• [0.038 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 04/10/25 18:37:56.64
  I0410 18:37:56.640403 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename job @ 04/10/25 18:37:56.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:37:56.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:37:56.714
  STEP: Creating a job @ 04/10/25 18:37:56.715
  STEP: Ensuring job reaches completions @ 04/10/25 18:37:56.719
  I0410 18:38:08.732182 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3809" for this suite. @ 04/10/25 18:38:08.736
• [12.102 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 04/10/25 18:38:08.742
  I0410 18:38:08.742879 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename field-validation @ 04/10/25 18:38:08.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:38:08.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:38:08.759
  I0410 18:38:08.762564 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  W0410 18:38:11.310391      23 warnings.go:70] unknown field "alpha"
  W0410 18:38:11.310431      23 warnings.go:70] unknown field "beta"
  W0410 18:38:11.310441      23 warnings.go:70] unknown field "delta"
  W0410 18:38:11.310450      23 warnings.go:70] unknown field "epsilon"
  W0410 18:38:11.310458      23 warnings.go:70] unknown field "gamma"
  I0410 18:38:11.852154 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8457" for this suite. @ 04/10/25 18:38:11.854
• [3.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 04/10/25 18:38:11.862
  I0410 18:38:11.862923 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename cronjob @ 04/10/25 18:38:11.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:38:11.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:38:11.878
  STEP: Creating a cronjob @ 04/10/25 18:38:11.881
  STEP: creating @ 04/10/25 18:38:11.881
  STEP: getting @ 04/10/25 18:38:11.887
  STEP: listing @ 04/10/25 18:38:11.89
  STEP: watching @ 04/10/25 18:38:11.892
  I0410 18:38:11.892529 23 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 04/10/25 18:38:11.893
  STEP: cluster-wide watching @ 04/10/25 18:38:11.895
  I0410 18:38:11.895942 23 cronjob.go:382] starting watch
  STEP: patching @ 04/10/25 18:38:11.897
  STEP: updating @ 04/10/25 18:38:11.902
  I0410 18:38:11.908001 23 cronjob.go:406] waiting for watch events with expected annotations
  I0410 18:38:11.908048 23 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 04/10/25 18:38:11.908
  STEP: updating /status @ 04/10/25 18:38:11.913
  STEP: get /status @ 04/10/25 18:38:11.917
  STEP: deleting @ 04/10/25 18:38:11.919
  STEP: deleting a collection @ 04/10/25 18:38:11.926
  I0410 18:38:11.930503 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4353" for this suite. @ 04/10/25 18:38:11.957
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 04/10/25 18:38:11.965
  I0410 18:38:11.966025 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 18:38:11.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:38:11.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:38:11.98
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 18:38:11.982
  STEP: Saw pod success @ 04/10/25 18:38:16.006
  I0410 18:38:16.009159 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-e20e9a2a-1363-410a-a044-f8003df4d122 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 18:38:16.017
  I0410 18:38:16.031965 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8808" for this suite. @ 04/10/25 18:38:16.036
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/10/25 18:38:16.041
  I0410 18:38:16.041981 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 18:38:16.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:38:16.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:38:16.059
  STEP: Creating secret with name s-test-opt-del-ef0df4b3-f009-42a3-b4f8-fe226f459256 @ 04/10/25 18:38:16.14
  STEP: Creating secret with name s-test-opt-upd-ceaf8a07-ed0d-418d-9483-e4d730bc5aff @ 04/10/25 18:38:16.145
  STEP: Creating the pod @ 04/10/25 18:38:16.149
  STEP: Deleting secret s-test-opt-del-ef0df4b3-f009-42a3-b4f8-fe226f459256 @ 04/10/25 18:38:18.194
  STEP: Updating secret s-test-opt-upd-ceaf8a07-ed0d-418d-9483-e4d730bc5aff @ 04/10/25 18:38:18.199
  STEP: Creating secret with name s-test-opt-create-bc0aa617-e05f-4999-9d96-02daa90ca6c6 @ 04/10/25 18:38:18.203
  STEP: waiting to observe update in volume @ 04/10/25 18:38:18.208
  I0410 18:39:38.723450 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1851" for this suite. @ 04/10/25 18:39:38.725
• [82.690 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 04/10/25 18:39:38.731
  I0410 18:39:38.731670 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename replication-controller @ 04/10/25 18:39:38.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:39:38.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:39:38.741
  STEP: Creating ReplicationController "e2e-rc-hg4h5" @ 04/10/25 18:39:38.742
  I0410 18:39:38.747623 23 rc.go:792] Get Replication Controller "e2e-rc-hg4h5" to confirm replicas
  I0410 18:39:39.748163 23 rc.go:792] Get Replication Controller "e2e-rc-hg4h5" to confirm replicas
  I0410 18:39:39.750034 23 rc.go:801] Found 1 replicas for "e2e-rc-hg4h5" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-hg4h5" @ 04/10/25 18:39:39.75
  STEP: Updating a scale subresource @ 04/10/25 18:39:39.751
  STEP: Verifying replicas where modified for replication controller "e2e-rc-hg4h5" @ 04/10/25 18:39:39.755
  I0410 18:39:39.755321 23 rc.go:792] Get Replication Controller "e2e-rc-hg4h5" to confirm replicas
  I0410 18:39:40.756581 23 rc.go:792] Get Replication Controller "e2e-rc-hg4h5" to confirm replicas
  I0410 18:39:40.763045 23 rc.go:801] Found 2 replicas for "e2e-rc-hg4h5" replication controller
  I0410 18:39:40.763282 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-675" for this suite. @ 04/10/25 18:39:40.767
• [2.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/10/25 18:39:40.774
  I0410 18:39:40.774705 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename lease-test @ 04/10/25 18:39:40.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:39:40.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:39:40.794
  I0410 18:39:40.841935 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1158" for this suite. @ 04/10/25 18:39:40.869
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 04/10/25 18:39:40.876
  I0410 18:39:40.876445 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 18:39:40.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:39:40.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:39:40.891
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/10/25 18:39:40.894
  STEP: Saw pod success @ 04/10/25 18:39:44.914
  I0410 18:39:44.918051 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-eb81feb0-75bc-4be6-95e1-3255a5db1254 container test-container: <nil>
  STEP: delete the pod @ 04/10/25 18:39:44.925
  I0410 18:39:44.942130 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4769" for this suite. @ 04/10/25 18:39:44.946
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 04/10/25 18:39:44.952
  I0410 18:39:44.952548 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 18:39:44.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:39:44.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:39:44.969
  STEP: creating Agnhost RC @ 04/10/25 18:39:44.971
  I0410 18:39:44.972013 23 kubectl.go:1537] namespace kubectl-6429
  I0410 18:39:44.972110 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-6429 create -f -'
  I0410 18:39:45.048524 23 builder.go:146] stderr: ""
  I0410 18:39:45.048563 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/10/25 18:39:45.048
  I0410 18:39:46.051736 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0410 18:39:46.051760 23 framework.go:733] Found 1 / 1
  I0410 18:39:46.051771 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0410 18:39:46.052950 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0410 18:39:46.052968 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0410 18:39:46.052973 23 kubectl.go:1544] wait on agnhost-primary startup in kubectl-6429 
  I0410 18:39:46.052999 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-6429 logs agnhost-primary-jq65k agnhost-primary'
  I0410 18:39:46.095286 23 builder.go:146] stderr: ""
  I0410 18:39:46.095317 23 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 04/10/25 18:39:46.095
  I0410 18:39:46.095380 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-6429 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0410 18:39:46.152061 23 builder.go:146] stderr: ""
  I0410 18:39:46.152096 23 builder.go:147] stdout: "service/rm2 exposed\n"
  I0410 18:39:46.154086 23 utils.go:1203] Service rm2 in namespace kubectl-6429 found.
  STEP: exposing service @ 04/10/25 18:39:48.162
  I0410 18:39:48.162819 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-6429 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0410 18:39:48.216723 23 builder.go:146] stderr: ""
  I0410 18:39:48.216764 23 builder.go:147] stdout: "service/rm3 exposed\n"
  I0410 18:39:48.218683 23 utils.go:1203] Service rm3 in namespace kubectl-6429 found.
  I0410 18:39:50.225807 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6429" for this suite. @ 04/10/25 18:39:50.227
• [5.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/10/25 18:39:50.23
  I0410 18:39:50.230921 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename init-container @ 04/10/25 18:39:50.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:39:50.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:39:50.241
  STEP: creating the pod @ 04/10/25 18:39:50.242
  I0410 18:39:50.242482 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0410 18:39:53.183112 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1509" for this suite. @ 04/10/25 18:39:53.186
• [2.960 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/10/25 18:39:53.19
  I0410 18:39:53.190747 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename endpointslice @ 04/10/25 18:39:53.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:39:53.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:39:53.204
  I0410 18:39:53.210271 23 endpointslice.go:1045] Endpoints addresses: [192.168.49.2] , ports: [8443]
  I0410 18:39:53.210296 23 endpointslice.go:1075] EndpointSlices addresses: [192.168.49.2] , ports: [8443]
  I0410 18:39:53.210372 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7686" for this suite. @ 04/10/25 18:39:53.288
• [0.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 04/10/25 18:39:53.296
  I0410 18:39:53.296117 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename sched-preemption @ 04/10/25 18:39:53.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:39:53.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:39:53.305
  I0410 18:39:53.313721 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0410 18:40:53.319557 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/10/25 18:40:53.322
  I0410 18:40:53.347274 23 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I0410 18:40:53.355116 23 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I0410 18:40:53.379090 23 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I0410 18:40:53.384038 23 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/10/25 18:40:53.384
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/10/25 18:40:55.402
  I0410 18:40:59.468461 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1713" for this suite. @ 04/10/25 18:40:59.471
• [66.180 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 04/10/25 18:40:59.476
  I0410 18:40:59.476244 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl @ 04/10/25 18:40:59.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:40:59.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:40:59.491
  STEP: Starting the proxy @ 04/10/25 18:40:59.492
  I0410 18:40:59.493153 23 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-6950 proxy --unix-socket=/tmp/kubectl-proxy-unix2286090198/test'
  STEP: retrieving proxy /api/ output @ 04/10/25 18:40:59.522
  I0410 18:40:59.523354 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6950" for this suite. @ 04/10/25 18:40:59.574
• [0.104 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 04/10/25 18:40:59.58
  I0410 18:40:59.580556 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename kubectl-logs @ 04/10/25 18:40:59.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:40:59.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:40:59.598
  STEP: creating a pod @ 04/10/25 18:40:59.601
  I0410 18:40:59.601841 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-logs-7290 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0410 18:40:59.654811 23 builder.go:146] stderr: ""
  I0410 18:40:59.654871 23 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/10/25 18:40:59.654
  I0410 18:40:59.654989 23 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0410 18:41:01.662259 23 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/10/25 18:41:01.662
  I0410 18:41:01.662378 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-logs-7290 logs logs-generator logs-generator'
  I0410 18:41:01.704208 23 builder.go:146] stderr: ""
  I0410 18:41:01.704257 23 builder.go:147] stdout: "I0410 18:41:00.250487       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/8wx 317\nI0410 18:41:00.451126       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/tpn 597\nI0410 18:41:00.651398       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/74n 386\nI0410 18:41:00.850673       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/rtzl 458\nI0410 18:41:01.051410       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/hbl 252\nI0410 18:41:01.250848       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/dlf 530\nI0410 18:41:01.451328       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/l9q8 533\nI0410 18:41:01.650700       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/2rh 513\n"
  STEP: limiting log lines @ 04/10/25 18:41:01.704
  I0410 18:41:01.704350 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-logs-7290 logs logs-generator logs-generator --tail=1'
  I0410 18:41:01.749906 23 builder.go:146] stderr: ""
  I0410 18:41:01.749950 23 builder.go:147] stdout: "I0410 18:41:01.650700       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/2rh 513\n"
  I0410 18:41:01.749983 23 logs.go:180] got output "I0410 18:41:01.650700       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/2rh 513\n"
  STEP: limiting log bytes @ 04/10/25 18:41:01.75
  I0410 18:41:01.750064 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-logs-7290 logs logs-generator logs-generator --limit-bytes=1'
  I0410 18:41:01.794138 23 builder.go:146] stderr: ""
  I0410 18:41:01.794177 23 builder.go:147] stdout: "I"
  I0410 18:41:01.794187 23 logs.go:186] got output "I"
  STEP: exposing timestamps @ 04/10/25 18:41:01.794
  I0410 18:41:01.794275 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-logs-7290 logs logs-generator logs-generator --tail=1 --timestamps'
  I0410 18:41:01.837177 23 builder.go:146] stderr: ""
  I0410 18:41:01.837217 23 builder.go:147] stdout: "2025-04-10T18:41:01.650995099Z I0410 18:41:01.650700       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/2rh 513\n"
  I0410 18:41:01.837228 23 logs.go:192] got output "2025-04-10T18:41:01.650995099Z I0410 18:41:01.650700       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/2rh 513\n"
  STEP: restricting to a time range @ 04/10/25 18:41:01.837
  I0410 18:41:04.338622 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-logs-7290 logs logs-generator logs-generator --since=1s'
  I0410 18:41:04.396534 23 builder.go:146] stderr: ""
  I0410 18:41:04.396585 23 builder.go:147] stdout: "I0410 18:41:03.450562       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/k8wr 527\nI0410 18:41:03.651370       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/2pk 504\nI0410 18:41:03.850767       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/v4f 446\nI0410 18:41:04.051242       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/w2l 232\nI0410 18:41:04.250751       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/zc2 525\n"
  I0410 18:41:04.396639 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-logs-7290 logs logs-generator logs-generator --since=24h'
  I0410 18:41:04.441949 23 builder.go:146] stderr: ""
  I0410 18:41:04.442008 23 builder.go:147] stdout: "I0410 18:41:00.250487       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/8wx 317\nI0410 18:41:00.451126       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/tpn 597\nI0410 18:41:00.651398       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/74n 386\nI0410 18:41:00.850673       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/rtzl 458\nI0410 18:41:01.051410       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/hbl 252\nI0410 18:41:01.250848       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/dlf 530\nI0410 18:41:01.451328       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/l9q8 533\nI0410 18:41:01.650700       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/2rh 513\nI0410 18:41:01.851239       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/4p5v 576\nI0410 18:41:02.050586       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/w52 570\nI0410 18:41:02.251397       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/r42h 536\nI0410 18:41:02.450799       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/dkvj 313\nI0410 18:41:02.651476       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/8qkk 567\nI0410 18:41:02.850843       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/7x2 431\nI0410 18:41:03.051476       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/lvrk 477\nI0410 18:41:03.251072       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/2lml 305\nI0410 18:41:03.450562       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/k8wr 527\nI0410 18:41:03.651370       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/2pk 504\nI0410 18:41:03.850767       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/v4f 446\nI0410 18:41:04.051242       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/w2l 232\nI0410 18:41:04.250751       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/zc2 525\n"
  I0410 18:41:04.442111 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=kubectl-logs-7290 delete pod logs-generator'
  I0410 18:41:05.029958 23 builder.go:146] stderr: ""
  I0410 18:41:05.030000 23 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0410 18:41:05.030105 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-7290" for this suite. @ 04/10/25 18:41:05.032
• [5.455 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 04/10/25 18:41:05.035
  I0410 18:41:05.035805 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 18:41:05.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:41:05.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:41:05.087
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 18:41:05.091
  STEP: Saw pod success @ 04/10/25 18:41:07.103
  I0410 18:41:07.107204 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-9d92adb7-3146-406a-8a2c-c7e6907c2493 container client-container: <nil>
  STEP: delete the pod @ 04/10/25 18:41:07.115
  I0410 18:41:07.128972 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3872" for this suite. @ 04/10/25 18:41:07.131
• [2.102 seconds]
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/10/25 18:41:07.137
  I0410 18:41:07.137705 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename csi-storageclass @ 04/10/25 18:41:07.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:41:07.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:41:07.152
  STEP: Creating a StorageClass @ 04/10/25 18:41:07.155
  STEP: Get StorageClass "e2e-4pkgd" @ 04/10/25 18:41:07.161
  STEP: Patching the StorageClass "e2e-4pkgd" @ 04/10/25 18:41:07.164
  STEP: Delete StorageClass "e2e-4pkgd" @ 04/10/25 18:41:07.171
  STEP: Confirm deletion of StorageClass "e2e-4pkgd" @ 04/10/25 18:41:07.175
  STEP: Create a replacement StorageClass @ 04/10/25 18:41:07.178
  STEP: Updating StorageClass "e2e-v2-sjsgv" @ 04/10/25 18:41:07.182
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-sjsgv=updated" @ 04/10/25 18:41:07.188
  STEP: Deleting StorageClass "e2e-v2-sjsgv" via DeleteCollection @ 04/10/25 18:41:07.19
  STEP: Confirm deletion of StorageClass "e2e-v2-sjsgv" @ 04/10/25 18:41:07.196
  I0410 18:41:07.199369 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-4018" for this suite. @ 04/10/25 18:41:07.233
• [0.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/10/25 18:41:07.24
  I0410 18:41:07.240195 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pods @ 04/10/25 18:41:07.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:41:07.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:41:07.253
  STEP: creating the pod @ 04/10/25 18:41:07.255
  STEP: setting up watch @ 04/10/25 18:41:07.255
  STEP: submitting the pod to kubernetes @ 04/10/25 18:41:07.358
  STEP: verifying the pod is in kubernetes @ 04/10/25 18:41:07.372
  STEP: verifying pod creation was observed @ 04/10/25 18:41:07.376
  STEP: deleting the pod gracefully @ 04/10/25 18:41:09.389
  STEP: verifying pod deletion was observed @ 04/10/25 18:41:09.398
  I0410 18:41:11.910569 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6037" for this suite. @ 04/10/25 18:41:11.914
• [4.680 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/10/25 18:41:11.919
  I0410 18:41:11.919860 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 18:41:11.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:41:11.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:41:11.938
  STEP: Creating secret with name secret-test-06259213-9e0c-4226-9279-c4fd35025680 @ 04/10/25 18:41:11.941
  STEP: Creating a pod to test consume secrets @ 04/10/25 18:41:11.945
  STEP: Saw pod success @ 04/10/25 18:41:15.966
  I0410 18:41:15.969043 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-secrets-201cb955-8a6c-4b8d-ab98-5b9c26fb4c9e container secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 18:41:15.974
  I0410 18:41:15.986766 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2475" for this suite. @ 04/10/25 18:41:15.988
• [4.073 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 04/10/25 18:41:15.992
  I0410 18:41:15.992594 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename container-probe @ 04/10/25 18:41:15.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:41:16.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:41:16.003
  STEP: Creating pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597 @ 04/10/25 18:41:16.005
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/10/25 18:41:18.019
  I0410 18:41:18.022549 23 container_probe.go:1749] Initial restart count of pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a is 0
  I0410 18:41:18.025065 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:20.030942 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:22.036279 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:24.043182 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:26.048645 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:28.054659 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:30.061448 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:32.066530 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:34.072346 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:36.079715 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:38.086822 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:40.093062 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:42.100405 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:44.107598 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:46.114535 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:48.121342 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:50.127840 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:52.134414 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:54.140772 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:56.147919 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:41:58.155609 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:42:00.161056 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:42:02.167551 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:42:04.173902 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:42:06.179764 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:42:08.187454 23 container_probe.go:1759] Get pod busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a in namespace container-probe-8597
  I0410 18:42:08.187518 23 container_probe.go:1763] Restart count of pod container-probe-8597/busybox-7408c111-daa2-4bc9-a9e4-c660052cab0a is now 1 (50.164928144s elapsed)
  STEP: deleting the pod @ 04/10/25 18:42:08.187
  I0410 18:42:08.200682 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8597" for this suite. @ 04/10/25 18:42:08.204
• [52.218 seconds]
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 04/10/25 18:42:08.21
  I0410 18:42:08.210597 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename downward-api @ 04/10/25 18:42:08.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:42:08.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:42:08.228
  STEP: Creating the pod @ 04/10/25 18:42:08.23
  I0410 18:42:10.770569 23 pod_client.go:173] Successfully updated pod "annotationupdatedaa57cdf-defe-4859-9e28-ea3a6b7e56a1"
  I0410 18:42:12.789683 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2220" for this suite. @ 04/10/25 18:42:12.794
• [4.592 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 04/10/25 18:42:12.802
  I0410 18:42:12.802787 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 18:42:12.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:42:12.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:42:12.817
  STEP: Setting up server cert @ 04/10/25 18:42:12.913
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 18:42:13.049
  STEP: Deploying the webhook pod @ 04/10/25 18:42:13.054
  STEP: Wait for the deployment to be ready @ 04/10/25 18:42:13.06
  I0410 18:42:13.064135 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 18:42:15.077
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 18:42:15.091
  I0410 18:42:16.091865 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/10/25 18:42:16.1
  STEP: create a namespace for the webhook @ 04/10/25 18:42:16.113
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/10/25 18:42:16.124
  I0410 18:42:16.156802 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1524" for this suite. @ 04/10/25 18:42:16.159
  STEP: Destroying namespace "webhook-markers-6123" for this suite. @ 04/10/25 18:42:16.162
  STEP: Destroying namespace "fail-closed-namespace-5197" for this suite. @ 04/10/25 18:42:16.166
• [3.367 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 04/10/25 18:42:16.169
  I0410 18:42:16.169453 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 18:42:16.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:42:16.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:42:16.232
  STEP: Setting up server cert @ 04/10/25 18:42:16.327
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 18:42:16.487
  STEP: Deploying the webhook pod @ 04/10/25 18:42:16.49
  STEP: Wait for the deployment to be ready @ 04/10/25 18:42:16.497
  I0410 18:42:16.501069 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/10/25 18:42:18.513
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 18:42:18.528
  I0410 18:42:19.529016 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/10/25 18:42:19.536
  STEP: verifying the mutating webhook match conditions @ 04/10/25 18:42:19.545
  STEP: updating the mutating webhook match conditions @ 04/10/25 18:42:19.547
  STEP: verifying the mutating webhook match conditions @ 04/10/25 18:42:19.554
  I0410 18:42:19.595566 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4112" for this suite. @ 04/10/25 18:42:19.598
  STEP: Destroying namespace "webhook-markers-2666" for this suite. @ 04/10/25 18:42:19.604
• [3.440 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 04/10/25 18:42:19.609
  I0410 18:42:19.609647 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename resourcequota @ 04/10/25 18:42:19.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:42:19.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:42:19.622
  STEP: Creating resourceQuota "e2e-rq-status-5m6fn" @ 04/10/25 18:42:19.715
  I0410 18:42:19.726566 23 resource_quota.go:1102] Resource quota "e2e-rq-status-5m6fn" reports spec: hard cpu limit of 500m
  I0410 18:42:19.726713 23 resource_quota.go:1104] Resource quota "e2e-rq-status-5m6fn" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-5m6fn" /status @ 04/10/25 18:42:19.726
  STEP: Confirm /status for "e2e-rq-status-5m6fn" resourceQuota via watch @ 04/10/25 18:42:19.734
  I0410 18:42:19.736198 23 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-5m6fn" in namespace "resourcequota-9946" with hard status: v1.ResourceList(nil)
  I0410 18:42:19.736321 23 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-5m6fn" in namespace "resourcequota-9946" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0410 18:42:19.736358 23 resource_quota.go:1141] ResourceQuota "e2e-rq-status-5m6fn" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/10/25 18:42:19.739
  I0410 18:42:19.744333 23 resource_quota.go:1152] Resource quota "e2e-rq-status-5m6fn" reports spec: hard cpu limit of 1
  I0410 18:42:19.744372 23 resource_quota.go:1153] Resource quota "e2e-rq-status-5m6fn" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-5m6fn" /status @ 04/10/25 18:42:19.744
  STEP: Confirm /status for "e2e-rq-status-5m6fn" resourceQuota via watch @ 04/10/25 18:42:19.749
  I0410 18:42:19.749968 23 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-5m6fn" in namespace "resourcequota-9946" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0410 18:42:19.749997 23 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-5m6fn" in namespace "resourcequota-9946" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0410 18:42:19.750008 23 resource_quota.go:1185] ResourceQuota "e2e-rq-status-5m6fn" /status was patched
  STEP: Get "e2e-rq-status-5m6fn" /status @ 04/10/25 18:42:19.75
  I0410 18:42:19.751470 23 resource_quota.go:1196] Resourcequota "e2e-rq-status-5m6fn" reports status: hard cpu of 1
  I0410 18:42:19.751492 23 resource_quota.go:1198] Resourcequota "e2e-rq-status-5m6fn" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-5m6fn" /status before checking Spec is unchanged @ 04/10/25 18:42:19.752
  I0410 18:42:19.755805 23 resource_quota.go:1218] Resourcequota "e2e-rq-status-5m6fn" reports status: hard cpu of 2
  I0410 18:42:19.755841 23 resource_quota.go:1220] Resourcequota "e2e-rq-status-5m6fn" reports status: hard memory of 2Gi
  I0410 18:42:19.756696 23 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-5m6fn" in namespace "resourcequota-9946" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0410 18:42:19.757990 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d87b90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d87bc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d87c50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:42:24.760657 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d87ed8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d87f20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b54030), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:42:29.762729 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00397b410), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00397b440), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00397b4e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:42:34.761214 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00397b668), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00397b698), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00397b6e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:42:39.759280 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00469fd10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00469fd40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00469fd88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:42:44.763816 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00469fea8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00469ff20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e000), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:42:49.762574 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e138), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e1e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:42:54.762994 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00397bb60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00397bbc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00397bc68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:42:59.764861 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e3c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:43:04.764846 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00397be00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00397be60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00397bea8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:43:09.761662 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e5d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e660), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:43:14.763785 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e7e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e810), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:43:19.762230 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e0c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:43:24.765474 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b840a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:43:29.762571 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e2a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e318), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:43:34.765592 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84288), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b842d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:43:39.759553 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e4c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:43:44.762733 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e6c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e6f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:43:49.765192 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e858), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e888), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698e8b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:43:54.762774 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043561b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043561e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:43:59.765630 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698eac8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698eb10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698eb58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:44:04.762758 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698ecf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698ed38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00698ed68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:44:09.759865 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b845a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b845d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:44:14.763307 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043563a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043563d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:44:19.763402 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043564c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043564f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:44:24.765225 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043566c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:44:29.765086 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043567b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043567e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:44:34.765488 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356990), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043569d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356a08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:44:39.764847 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84978), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b849c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:44:44.763353 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356bb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356c30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:44:49.764134 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84b40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84b88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84be8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:44:54.765594 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84d80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84df8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b84e88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:44:59.765694 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-5m6fn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m6fn", GenerateName:"", Namespace:"resourcequota-9946", SelfLink:"", UID:"bbd0a80d-fb48-40a3-b174-eb66b4638b0e", ResourceVersion:"29365", Generation:0, CreationTimestamp:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m6fn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356d80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356db0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 10, 18, 42, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356de0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0410 18:45:04.764075 23 resource_quota.go:1260] ResourceQuota "e2e-rq-status-5m6fn" Spec was unchanged and /status reset
  I0410 18:45:04.764352 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9946" for this suite. @ 04/10/25 18:45:04.768
• [165.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 04/10/25 18:45:04.776
  I0410 18:45:04.776050 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename configmap @ 04/10/25 18:45:04.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:45:04.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:45:04.798
  STEP: creating a ConfigMap @ 04/10/25 18:45:04.801
  STEP: fetching the ConfigMap @ 04/10/25 18:45:04.804
  STEP: patching the ConfigMap @ 04/10/25 18:45:04.806
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/10/25 18:45:04.81
  STEP: deleting the ConfigMap by collection with a label selector @ 04/10/25 18:45:04.812
  STEP: listing all ConfigMaps in test namespace @ 04/10/25 18:45:04.817
  I0410 18:45:04.820174 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7790" for this suite. @ 04/10/25 18:45:04.868
• [0.098 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 04/10/25 18:45:04.874
  I0410 18:45:04.874118 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 18:45:04.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:45:04.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:45:04.888
  STEP: Creating configMap with name projected-configmap-test-volume-map-1643b113-830a-498e-8693-3e9e921e8cfc @ 04/10/25 18:45:04.89
  STEP: Creating a pod to test consume configMaps @ 04/10/25 18:45:04.893
  STEP: Saw pod success @ 04/10/25 18:45:08.911
  I0410 18:45:08.915003 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-5b0116fa-ab40-40b1-a1bb-2f5036970f9c container agnhost-container: <nil>
  STEP: delete the pod @ 04/10/25 18:45:08.929
  I0410 18:45:08.946181 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-559" for this suite. @ 04/10/25 18:45:08.949
• [4.080 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 04/10/25 18:45:08.954
  I0410 18:45:08.954457 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename webhook @ 04/10/25 18:45:08.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:45:08.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:45:08.967
  STEP: Setting up server cert @ 04/10/25 18:45:09.071
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/10/25 18:45:09.162
  STEP: Deploying the webhook pod @ 04/10/25 18:45:09.167
  STEP: Wait for the deployment to be ready @ 04/10/25 18:45:09.174
  I0410 18:45:09.177671 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/10/25 18:45:11.191
  STEP: Verifying the service has paired with the endpoint @ 04/10/25 18:45:11.204
  I0410 18:45:12.204863 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/10/25 18:45:12.213
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/10/25 18:45:12.232
  I0410 18:45:12.232064 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:45:12.269191 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6571" for this suite. @ 04/10/25 18:45:12.271
  STEP: Destroying namespace "webhook-markers-8542" for this suite. @ 04/10/25 18:45:12.275
• [3.326 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/10/25 18:45:12.28
  I0410 18:45:12.280571 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename secrets @ 04/10/25 18:45:12.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:45:12.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:45:12.292
  STEP: Creating secret with name secret-test-fa0f84b7-c289-4c30-9025-117dcc2592ae @ 04/10/25 18:45:12.404
  STEP: Creating a pod to test consume secrets @ 04/10/25 18:45:12.409
  STEP: Saw pod success @ 04/10/25 18:45:16.432
  I0410 18:45:16.434614 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-secrets-3f9c02ab-5c43-4d63-8947-7a84df5be38b container secret-volume-test: <nil>
  STEP: delete the pod @ 04/10/25 18:45:16.439
  I0410 18:45:16.451146 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3464" for this suite. @ 04/10/25 18:45:16.453
  STEP: Destroying namespace "secret-namespace-3831" for this suite. @ 04/10/25 18:45:16.457
• [4.184 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/10/25 18:45:16.464
  I0410 18:45:16.464766 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename tables @ 04/10/25 18:45:16.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:45:16.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:45:16.477
  I0410 18:45:16.481968 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-2634" for this suite. @ 04/10/25 18:45:16.555
• [0.099 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/10/25 18:45:16.563
  I0410 18:45:16.563582 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pods @ 04/10/25 18:45:16.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:45:16.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:45:16.58
  STEP: creating pod @ 04/10/25 18:45:16.583
  I0410 18:45:18.604655 23 pods.go:83] Pod pod-hostip-df293f46-0348-4ce4-b1d6-28379c683b1b has hostIP: 192.168.49.3
  I0410 18:45:18.604834 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-413" for this suite. @ 04/10/25 18:45:18.607
• [2.052 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/10/25 18:45:18.616
  I0410 18:45:18.616131 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename subpath @ 04/10/25 18:45:18.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:45:18.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:45:18.631
  STEP: Setting up data @ 04/10/25 18:45:18.635
  STEP: Creating pod pod-subpath-test-configmap-v4v9 @ 04/10/25 18:45:18.645
  STEP: Creating a pod to test atomic-volume-subpath @ 04/10/25 18:45:18.645
  STEP: Saw pod success @ 04/10/25 18:45:42.728
  I0410 18:45:42.731697 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-configmap-v4v9 container test-container-subpath-configmap-v4v9: <nil>
  STEP: delete the pod @ 04/10/25 18:45:42.742
  STEP: Deleting pod pod-subpath-test-configmap-v4v9 @ 04/10/25 18:45:42.759
  I0410 18:45:42.759638 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-v4v9" in namespace "subpath-5004"
  I0410 18:45:42.761742 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5004" for this suite. @ 04/10/25 18:45:42.765
• [24.154 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 04/10/25 18:45:42.77
  I0410 18:45:42.770190 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 18:45:42.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:45:42.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:45:42.782
  STEP: creating service in namespace services-6028 @ 04/10/25 18:45:42.785
  STEP: creating service affinity-nodeport in namespace services-6028 @ 04/10/25 18:45:42.785
  STEP: creating replication controller affinity-nodeport in namespace services-6028 @ 04/10/25 18:45:42.798
  I0410 18:45:42.805474      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-6028, replica count: 3
  I0410 18:45:45.856205      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0410 18:45:45.867581 23 resource.go:361] Creating new exec pod
  I0410 18:45:48.882684 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6028 exec execpod-affinity9tmmt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0410 18:45:48.986894 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0410 18:45:48.986952 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 18:45:48.987049 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6028 exec execpod-affinity9tmmt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.30.233 80'
  I0410 18:45:49.074889 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.30.233 80\nConnection to 10.96.30.233 80 port [tcp/http] succeeded!\n"
  I0410 18:45:49.074955 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 18:45:49.075068 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6028 exec execpod-affinity9tmmt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.2 31253'
  I0410 18:45:49.179008 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.2 31253\nConnection to 192.168.49.2 31253 port [tcp/*] succeeded!\n"
  I0410 18:45:49.179072 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 18:45:49.179186 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6028 exec execpod-affinity9tmmt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.49.3 31253'
  I0410 18:45:49.287290 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.49.3 31253\nConnection to 192.168.49.3 31253 port [tcp/*] succeeded!\n"
  I0410 18:45:49.287347 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0410 18:45:49.287426 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-6028 exec execpod-affinity9tmmt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.49.2:31253/ ; done'
  I0410 18:45:49.469678 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.49.2:31253/\n"
  I0410 18:45:49.469730 23 builder.go:147] stdout: "\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz\naffinity-nodeport-f9gbz"
  I0410 18:45:49.469748 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469758 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469766 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469774 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469784 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469791 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469798 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469805 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469813 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469820 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469827 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469842 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469849 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469856 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469865 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469873 23 service.go:242] Received response from host: affinity-nodeport-f9gbz
  I0410 18:45:49.469933 23 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6028, will wait for the garbage collector to delete the pods @ 04/10/25 18:45:49.481
  I0410 18:45:49.539895 23 resources.go:139] Deleting ReplicationController affinity-nodeport took: 5.034206ms
  I0410 18:45:49.641186 23 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 101.240343ms
  I0410 18:45:52.758880 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6028" for this suite. @ 04/10/25 18:45:52.761
• [9.995 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 04/10/25 18:45:52.765
  I0410 18:45:52.765118 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename services @ 04/10/25 18:45:52.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:45:52.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:45:52.777
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1024 @ 04/10/25 18:45:52.779
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/10/25 18:45:52.787
  STEP: creating service externalsvc in namespace services-1024 @ 04/10/25 18:45:52.787
  STEP: creating replication controller externalsvc in namespace services-1024 @ 04/10/25 18:45:52.801
  I0410 18:45:52.807374      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-1024, replica count: 2
  I0410 18:45:55.858996      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/10/25 18:45:55.864
  I0410 18:45:55.880841 23 resource.go:361] Creating new exec pod
  I0410 18:45:57.891871 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=services-1024 exec execpod8k76b -- /bin/sh -x -c nslookup clusterip-service.services-1024.svc.cluster.local'
  I0410 18:45:57.999858 23 builder.go:146] stderr: "+ nslookup clusterip-service.services-1024.svc.cluster.local\n"
  I0410 18:45:57.999905 23 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-1024.svc.cluster.local\tcanonical name = externalsvc.services-1024.svc.cluster.local.\nName:\texternalsvc.services-1024.svc.cluster.local\nAddress: 10.108.53.119\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1024, will wait for the garbage collector to delete the pods @ 04/10/25 18:45:58
  I0410 18:45:58.062365 23 resources.go:139] Deleting ReplicationController externalsvc took: 9.568102ms
  I0410 18:45:58.162927 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.553458ms
  I0410 18:46:00.882239 23 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0410 18:46:00.892538 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1024" for this suite. @ 04/10/25 18:46:00.896
• [8.140 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 04/10/25 18:46:00.905
  I0410 18:46:00.905668 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/10/25 18:46:00.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:46:00.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:46:00.922
  I0410 18:46:00.925129 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/10/25 18:46:02.064
  I0410 18:46:02.064114 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-3138 --namespace=crd-publish-openapi-3138 create -f -'
  I0410 18:46:02.115544 23 builder.go:146] stderr: ""
  I0410 18:46:02.115594 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8033-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0410 18:46:02.115673 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-3138 --namespace=crd-publish-openapi-3138 delete e2e-test-crd-publish-openapi-8033-crds test-cr'
  I0410 18:46:02.153310 23 builder.go:146] stderr: ""
  I0410 18:46:02.153337 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8033-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0410 18:46:02.153366 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-3138 --namespace=crd-publish-openapi-3138 apply -f -'
  I0410 18:46:02.199881 23 builder.go:146] stderr: ""
  I0410 18:46:02.199929 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8033-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0410 18:46:02.199988 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-3138 --namespace=crd-publish-openapi-3138 delete e2e-test-crd-publish-openapi-8033-crds test-cr'
  I0410 18:46:02.241685 23 builder.go:146] stderr: ""
  I0410 18:46:02.241728 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8033-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/10/25 18:46:02.241
  I0410 18:46:02.241794 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-371793439 --namespace=crd-publish-openapi-3138 explain e2e-test-crd-publish-openapi-8033-crds'
  I0410 18:46:02.282329 23 builder.go:146] stderr: ""
  I0410 18:46:02.282397 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8033-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0410 18:46:03.424914 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3138" for this suite. @ 04/10/25 18:46:03.433
• [2.533 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 04/10/25 18:46:03.438
  I0410 18:46:03.438546 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename replication-controller @ 04/10/25 18:46:03.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:46:03.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:46:03.448
  STEP: creating a ReplicationController @ 04/10/25 18:46:03.452
  STEP: waiting for RC to be added @ 04/10/25 18:46:03.456
  STEP: waiting for available Replicas @ 04/10/25 18:46:03.456
  STEP: patching ReplicationController @ 04/10/25 18:46:04.68
  STEP: waiting for RC to be modified @ 04/10/25 18:46:04.687
  STEP: patching ReplicationController status @ 04/10/25 18:46:04.687
  STEP: waiting for RC to be modified @ 04/10/25 18:46:04.691
  STEP: waiting for available Replicas @ 04/10/25 18:46:04.691
  STEP: fetching ReplicationController status @ 04/10/25 18:46:04.694
  STEP: patching ReplicationController scale @ 04/10/25 18:46:04.696
  STEP: waiting for RC to be modified @ 04/10/25 18:46:04.699
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/10/25 18:46:04.699
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/10/25 18:46:05.824
  STEP: updating ReplicationController status @ 04/10/25 18:46:05.825
  STEP: waiting for RC to be modified @ 04/10/25 18:46:05.829
  STEP: listing all ReplicationControllers @ 04/10/25 18:46:05.829
  STEP: checking that ReplicationController has expected values @ 04/10/25 18:46:05.831
  STEP: deleting ReplicationControllers by collection @ 04/10/25 18:46:05.831
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/10/25 18:46:05.835
  I0410 18:46:05.868989 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0410 18:46:05.869127      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-4265" for this suite. @ 04/10/25 18:46:05.871
• [2.436 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 04/10/25 18:46:05.874
  I0410 18:46:05.874173 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename gc @ 04/10/25 18:46:05.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:46:05.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:46:05.883
  STEP: create the rc1 @ 04/10/25 18:46:05.971
  STEP: create the rc2 @ 04/10/25 18:46:05.974
  E0410 18:46:06.869808      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:07.870502      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:08.871890      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:09.872669      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:10.873735      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:11.874310      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/10/25 18:46:11.982
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/10/25 18:46:12.373
  STEP: wait for the rc to be deleted @ 04/10/25 18:46:12.379
  E0410 18:46:12.874950      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:13.875231      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:14.875383      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:15.876452      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:16.876973      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0410 18:46:17.393610 23 garbage_collector.go:762] 65 pods remaining
  I0410 18:46:17.393684 23 garbage_collector.go:769] 64 pods has nil DeletionTimestamp
  I0410 18:46:17.393704 23 garbage_collector.go:770] 
  E0410 18:46:17.877495      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:18.878477      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:19.879440      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:20.879964      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:21.881051      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/10/25 18:46:22.391
  I0410 18:46:22.489337 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0410 18:46:22.489377 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2c9cl" in namespace "gc-5349"
  I0410 18:46:22.497814 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2n7cg" in namespace "gc-5349"
  I0410 18:46:22.505220 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-42jtn" in namespace "gc-5349"
  I0410 18:46:22.518739 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-48ptx" in namespace "gc-5349"
  I0410 18:46:22.530595 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-49t5h" in namespace "gc-5349"
  I0410 18:46:22.543576 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4f7h4" in namespace "gc-5349"
  I0410 18:46:22.558068 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4wpnr" in namespace "gc-5349"
  I0410 18:46:22.576568 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-52xnz" in namespace "gc-5349"
  I0410 18:46:22.592651 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-569k8" in namespace "gc-5349"
  I0410 18:46:22.606984 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5jh4p" in namespace "gc-5349"
  I0410 18:46:22.619283 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5l6nx" in namespace "gc-5349"
  I0410 18:46:22.628760 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5xsxz" in namespace "gc-5349"
  I0410 18:46:22.640756 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-66jqf" in namespace "gc-5349"
  I0410 18:46:22.653217 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6c7rc" in namespace "gc-5349"
  I0410 18:46:22.669931 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6f8cj" in namespace "gc-5349"
  I0410 18:46:22.683464 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6hwlf" in namespace "gc-5349"
  I0410 18:46:22.697892 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6jmt7" in namespace "gc-5349"
  I0410 18:46:22.706616 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6mpj6" in namespace "gc-5349"
  I0410 18:46:22.718214 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6v9fh" in namespace "gc-5349"
  I0410 18:46:22.732642 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-72x79" in namespace "gc-5349"
  I0410 18:46:22.746381 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-76cqd" in namespace "gc-5349"
  I0410 18:46:22.774969 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7h4p2" in namespace "gc-5349"
  I0410 18:46:22.787975 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7jbgt" in namespace "gc-5349"
  I0410 18:46:22.802863 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7jplw" in namespace "gc-5349"
  I0410 18:46:22.820532 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7qzdl" in namespace "gc-5349"
  I0410 18:46:22.839410 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7whrt" in namespace "gc-5349"
  I0410 18:46:22.856678 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8bxfk" in namespace "gc-5349"
  I0410 18:46:22.877040 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8cc6f" in namespace "gc-5349"
  E0410 18:46:22.882056      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0410 18:46:22.897411 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8mff9" in namespace "gc-5349"
  I0410 18:46:22.914791 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8mkrh" in namespace "gc-5349"
  I0410 18:46:22.937586 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9m8pr" in namespace "gc-5349"
  I0410 18:46:22.951815 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9mlc2" in namespace "gc-5349"
  I0410 18:46:22.962173 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9pccg" in namespace "gc-5349"
  I0410 18:46:22.989663 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b8kz7" in namespace "gc-5349"
  I0410 18:46:23.012740 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bhzf5" in namespace "gc-5349"
  I0410 18:46:23.030576 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cfbqm" in namespace "gc-5349"
  I0410 18:46:23.043024 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dh2mg" in namespace "gc-5349"
  I0410 18:46:23.058480 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dvxpt" in namespace "gc-5349"
  I0410 18:46:23.074847 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dxkpv" in namespace "gc-5349"
  I0410 18:46:23.090745 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f2dwf" in namespace "gc-5349"
  I0410 18:46:23.110133 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fdsdp" in namespace "gc-5349"
  I0410 18:46:23.128285 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fh6hc" in namespace "gc-5349"
  I0410 18:46:23.148005 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fpckg" in namespace "gc-5349"
  I0410 18:46:23.175080 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fxlzm" in namespace "gc-5349"
  I0410 18:46:23.192063 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g7ttk" in namespace "gc-5349"
  I0410 18:46:23.205302 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ghfd2" in namespace "gc-5349"
  I0410 18:46:23.224049 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hb4h6" in namespace "gc-5349"
  I0410 18:46:23.246864 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hgxvt" in namespace "gc-5349"
  I0410 18:46:23.269686 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j4f5w" in namespace "gc-5349"
  I0410 18:46:23.293692 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jjdp8" in namespace "gc-5349"
  I0410 18:46:23.311301 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5349" for this suite. @ 04/10/25 18:46:23.319
• [17.453 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/10/25 18:46:23.327
  I0410 18:46:23.327668 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename pods @ 04/10/25 18:46:23.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:46:23.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:46:23.36
  STEP: creating the pod @ 04/10/25 18:46:23.364
  STEP: submitting the pod to kubernetes @ 04/10/25 18:46:23.364
  E0410 18:46:23.883002      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:24.883708      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/10/25 18:46:25.392
  STEP: updating the pod @ 04/10/25 18:46:25.394
  E0410 18:46:25.884667      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0410 18:46:25.912978 23 pod_client.go:173] Successfully updated pod "pod-update-6eb2f68d-6629-4273-86c0-58dc6436c2ec"
  STEP: verifying the updated pod is in kubernetes @ 04/10/25 18:46:25.916
  I0410 18:46:25.918546 23 pods.go:391] Pod update OK
  I0410 18:46:25.918622 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6018" for this suite. @ 04/10/25 18:46:25.921
• [2.597 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 04/10/25 18:46:25.924
  I0410 18:46:25.924810 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename emptydir @ 04/10/25 18:46:25.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:46:25.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:46:25.934
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/10/25 18:46:25.936
  E0410 18:46:26.884852      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:27.885812      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:28.886629      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:29.887188      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/10/25 18:46:29.955
  I0410 18:46:29.959157 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod pod-c66f30f6-4b46-4da7-97be-94bead543685 container test-container: <nil>
  STEP: delete the pod @ 04/10/25 18:46:29.968
  I0410 18:46:29.983959 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1799" for this suite. @ 04/10/25 18:46:29.987
• [4.067 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 04/10/25 18:46:29.992
  I0410 18:46:29.992649 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename projected @ 04/10/25 18:46:29.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:46:30.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:46:30.01
  STEP: Creating a pod to test downward API volume plugin @ 04/10/25 18:46:30.013
  E0410 18:46:30.888186      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:31.889084      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:32.889372      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:33.889644      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/10/25 18:46:34.034
  I0410 18:46:34.036330 23 output.go:196] Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-45716bfd-41e5-4646-816b-dabc933f2c4d container client-container: <nil>
  STEP: delete the pod @ 04/10/25 18:46:34.04
  I0410 18:46:34.050316 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4909" for this suite. @ 04/10/25 18:46:34.052
• [4.063 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 04/10/25 18:46:34.055
  I0410 18:46:34.055910 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/10/25 18:46:34.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/10/25 18:46:34.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/10/25 18:46:34.065
  STEP: Setting up the test @ 04/10/25 18:46:34.066
  STEP: Creating hostNetwork=false pod @ 04/10/25 18:46:34.066
  E0410 18:46:34.890584      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:35.891368      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 04/10/25 18:46:36.079
  E0410 18:46:36.892537      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0410 18:46:37.892778      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Running the test @ 04/10/25 18:46:38.095
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/10/25 18:46:38.095
  I0410 18:46:38.095363 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8840 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:46:38.095377 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:46:38.095790 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:46:38.095834 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8840/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0410 18:46:38.143656 23 exec_util.go:111] Exec stderr: ""
  I0410 18:46:38.143705 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8840 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:46:38.143719 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:46:38.144257 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:46:38.144357 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8840/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0410 18:46:38.200333 23 exec_util.go:111] Exec stderr: ""
  I0410 18:46:38.200410 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8840 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:46:38.200430 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:46:38.201152 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:46:38.201223 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8840/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0410 18:46:38.265809 23 exec_util.go:111] Exec stderr: ""
  I0410 18:46:38.265871 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8840 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:46:38.265886 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:46:38.266510 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:46:38.266583 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8840/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0410 18:46:38.324413 23 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/10/25 18:46:38.324
  I0410 18:46:38.324557 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8840 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:46:38.324585 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:46:38.325347 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:46:38.325461 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8840/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0410 18:46:38.375789 23 exec_util.go:111] Exec stderr: ""
  I0410 18:46:38.375842 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8840 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:46:38.375853 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:46:38.376264 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:46:38.376310 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8840/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0410 18:46:38.436667 23 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/10/25 18:46:38.436
  I0410 18:46:38.436770 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8840 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:46:38.436783 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:46:38.437347 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:46:38.437407 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8840/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0410 18:46:38.502063 23 exec_util.go:111] Exec stderr: ""
  I0410 18:46:38.502116 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8840 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:46:38.502128 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:46:38.502671 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:46:38.502737 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8840/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0410 18:46:38.549059 23 exec_util.go:111] Exec stderr: ""
  I0410 18:46:38.549127 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8840 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:46:38.549143 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:46:38.549740 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:46:38.549850 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8840/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0410 18:46:38.610742 23 exec_util.go:111] Exec stderr: ""
  I0410 18:46:38.610798 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8840 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0410 18:46:38.610810 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-371793439
  I0410 18:46:38.611283 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0410 18:46:38.611345 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8840/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0410 18:46:38.669385 23 exec_util.go:111] Exec stderr: ""
  I0410 18:46:38.669590 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8840" for this suite. @ 04/10/25 18:46:38.673
• [4.627 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0410 18:46:38.683637 23 suites.go:34] Running AfterSuite actions on node 1
  I0410 18:46:38.683680 23 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.027 seconds]
------------------------------

Ran 404 of 6605 Specs in 6021.984 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h40m22.453826196s
Test Suite Passed
