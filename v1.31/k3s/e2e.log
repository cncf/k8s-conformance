  I0904 19:17:41.917078      21 e2e.go:109] Starting e2e run "13be9ef1-9f48-4b5c-aed9-7fa53ea9d482" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1725477460 - will randomize all specs

Will run 404 of 6603 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0904 19:17:42.315959 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:17:42.317511 21 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0904 19:17:43.473394 21 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0904 19:17:43.987040 21 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'svclb-traefik-b676ce4a' (0 seconds elapsed)
  I0904 19:17:43.987232 21 e2e.go:245] e2e test version: v1.31.0
  I0904 19:17:43.988486 21 e2e.go:254] kube-apiserver version: v1.31.0+k3s1
  I0904 19:17:43.988613 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:17:43.994053 21 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [1.678 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 09/04/24 19:17:44.229
  I0904 19:17:44.229840 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename dns @ 09/04/24 19:17:44.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:17:44.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:17:44.275
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/04/24 19:17:44.278
  I0904 19:17:45.501047 21 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-4451  62c49718-3672-4e3f-80bf-cb71c38bb4ec 200211 0 2024-09-04 19:17:45 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-09-04 19:17:44 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5lsdm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5lsdm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/04/24 19:17:51.54
  I0904 19:17:51.540764 21 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-4451 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 19:17:51.540941 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:17:51.541698 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 19:17:51.541865 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-4451/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/04/24 19:17:51.613
  I0904 19:17:51.613757 21 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-4451 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 19:17:51.613784 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:17:51.614505 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 19:17:51.614593 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-4451/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0904 19:17:51.704320 21 dns.go:423] Deleting pod test-dns-nameservers...
  I0904 19:17:51.740726 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4451" for this suite. @ 09/04/24 19:17:51.746
â€¢ [7.539 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/04/24 19:17:51.768
  I0904 19:17:51.768754 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename deployment @ 09/04/24 19:17:51.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:17:51.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:17:51.81
  I0904 19:17:51.834780 21 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0904 19:17:57.041767 21 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/24 19:17:57.041
  I0904 19:17:59.058580 21 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0904 19:18:01.065249 21 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0904 19:18:01.084045 21 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0904 19:18:03.092990 21 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0904 19:18:03.804606 21 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0904 19:18:03.811003 21 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0904 19:18:03.830144 21 deployment.go:313] Updating deployment test-rollover-deployment
  I0904 19:18:03.830206 21 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0904 19:18:05.838027 21 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0904 19:18:05.947184 21 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0904 19:18:06.248570 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0904 19:18:06.248701 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 19:18:08.759762 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0904 19:18:08.759859 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 19:18:10.409270 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0904 19:18:10.409377 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 19:18:12.968070 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0904 19:18:12.968326 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 19:18:14.258994 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0904 19:18:14.259160 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 19:18:16.662350 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0904 19:18:16.662577 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 19:18:18.267749 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0904 19:18:18.267837 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 19:18:20.428709 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0904 19:18:20.428824 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 18, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 18, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 19:18:23.569638 21 deployment.go:94] 
  I0904 19:18:23.569708 21 deployment.go:974] Ensure that both old replica sets have no replicas
  I0904 19:18:23.590747 21 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed4ac580-ac18-48bf-8684-1f7414bcc0b1",
      ResourceVersion: (string) (len=6) "200452",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861074281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 19:18:23.597849 21 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3855205-635a-410d-b2dd-79235840b2fe",
      ResourceVersion: (string) (len=6) "200441",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861074283,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "ed4ac580-ac18-48bf-8684-1f7414bcc0b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 64 34 61 63 35  38 30 2d 61 63 31 38 2d  |\"ed4ac580-ac18-|
              00000120  34 38 62 66 2d 38 36 38  34 2d 31 66 37 34 31 34  |48bf-8684-1f7414|
              00000130  62 63 63 30 62 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bcc0b1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 19:18:23.604128 21 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0904 19:18:23.604420 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38c4c21f-17ce-45ef-92ac-75638b38594a",
      ResourceVersion: (string) (len=6) "200451",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861074271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "ed4ac580-ac18-48bf-8684-1f7414bcc0b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  65 64 34 61 63 35 38 30  2d 61 63 31 38 2d 34 38  |ed4ac580-ac18-48|
              000000c0  62 66 2d 38 36 38 34 2d  31 66 37 34 31 34 62 63  |bf-8684-1f7414bc|
              000000d0  63 30 62 31 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |c0b1\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074300,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 19:18:23.605861 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5fac016-f16d-45fd-9d6f-b3919d9f3f7a",
      ResourceVersion: (string) (len=6) "200368",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861074281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "ed4ac580-ac18-48bf-8684-1f7414bcc0b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 64 34 61 63 35  38 30 2d 61 63 31 38 2d  |\"ed4ac580-ac18-|
              00000120  34 38 62 66 2d 38 36 38  34 2d 31 66 37 34 31 34  |48bf-8684-1f7414|
              00000130  62 63 63 30 62 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bcc0b1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 19:18:23.715315 21 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-9p7rj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-9p7rj",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-2991",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d23bf14-aa35-4af4-abd3-322a42d9238e",
      ResourceVersion: (string) (len=6) "200401",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861074283,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "b3855205-635a-410d-b2dd-79235840b2fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  38 35 35 32 30 35 2d 36  |d\":\"b3855205-6|
              00000090  33 35 61 2d 34 31 30 64  2d 62 32 64 64 2d 37 39  |35a-410d-b2dd-79|
              000000a0  32 33 35 38 34 30 62 32  66 65 5c 22 7d 22 3a 7b  |235840b2fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 31  5c 22 7d 22 3a 7b 22 2e  |.42.2.11\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9dtjc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9dtjc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-5-231.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861074283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.231"
        }
      },
      PodIP: (string) (len=10) "10.42.2.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861074284,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861074289,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://09a176a31f1332e944864daa8ce5925a9a4cae602b06977880b4cb6079e9adf5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9dtjc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:18:23.719943 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2991" for this suite. @ 09/04/24 19:18:23.724
â€¢ [31.971 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/04/24 19:18:23.74
  I0904 19:18:23.740171 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 19:18:23.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:18:23.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:18:23.806
  STEP: Creating secret with name secret-test-map-43bf6744-67c0-4603-aa8c-cd2eacaae9fc @ 09/04/24 19:18:23.808
  STEP: Creating a pod to test consume secrets @ 09/04/24 19:18:23.82
  STEP: Saw pod success @ 09/04/24 19:18:27.875
  I0904 19:18:27.878324 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-secrets-aa3c2d32-ce18-437e-ba28-149bbdd8081b container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 19:18:27.894
  I0904 19:18:27.933704 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2443" for this suite. @ 09/04/24 19:18:28.039
â€¢ [4.321 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/04/24 19:18:28.061
  I0904 19:18:28.061115 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 19:18:28.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:18:28.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:18:28.103
  STEP: Creating pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180 @ 09/04/24 19:18:28.107
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 19:18:30.242
  I0904 19:18:30.245939 21 container_probe.go:1749] Initial restart count of pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 is 0
  I0904 19:18:30.249338 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:32.253577 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:34.259324 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:36.263425 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:38.268227 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:40.272460 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:42.277373 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:44.284049 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:46.288044 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:48.293593 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:50.298786 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:52.304655 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:54.308794 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:56.312704 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:18:58.316921 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:00.322146 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:02.326530 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:04.333236 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:06.337067 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:08.341497 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:10.346335 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:12.350637 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:14.355517 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:16.360951 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:18.365451 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:20.371160 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:22.375273 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:24.379332 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:26.384191 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:28.388898 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:30.395089 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:32.399094 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:34.404709 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:36.408602 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:38.413220 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:40.432377 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:42.436914 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:44.443409 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:46.447758 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:48.452312 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:50.458433 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:52.462539 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:54.466706 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:56.471687 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:19:58.476999 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:00.482152 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:02.489183 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:04.495631 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:06.499960 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:08.512762 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:10.518403 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:12.525158 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:14.529300 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:16.534134 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:18.539681 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:20.544765 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:22.550344 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:24.555460 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:26.562644 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:28.567004 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:30.572666 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:32.576854 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:34.581001 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:36.586495 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:38.591161 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:40.603371 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:42.609600 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:44.613668 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:46.618126 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:48.622798 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:50.627115 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:53.090147 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:55.095566 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:57.101563 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:20:59.106007 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:01.111844 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:03.119836 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:05.127691 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:07.133104 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:09.138830 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:11.143158 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:13.147651 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:15.152568 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:17.158500 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:19.163164 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:21.168479 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:23.173194 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:25.186654 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:27.191981 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:29.195715 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:31.201020 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:33.205697 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:35.210212 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:37.214606 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:39.218721 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:41.223379 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:43.227447 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:45.235634 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:47.240640 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:49.245966 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:51.251756 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:53.256088 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:55.260046 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:57.264549 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:21:59.268477 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:01.273640 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:03.278619 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:05.287137 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:07.291697 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:09.295877 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:11.300149 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:13.307824 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:15.311960 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:17.318123 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:19.322301 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:21.326751 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:23.330609 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:25.349260 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:27.353495 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  I0904 19:22:29.358070 21 container_probe.go:1759] Get pod liveness-78bc5135-23b8-487d-870b-823d4bd468c4 in namespace container-probe-9180
  STEP: deleting the pod @ 09/04/24 19:22:31.359
  I0904 19:22:31.414461 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9180" for this suite. @ 09/04/24 19:22:31.419
â€¢ [243.387 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 09/04/24 19:22:31.448
  I0904 19:22:31.448205 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 19:22:31.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:22:31.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:22:31.495
  STEP: Creating configMap with name configmap-test-upd-9c8bf083-4789-450f-9557-349d04cf23f0 @ 09/04/24 19:22:31.519
  STEP: Creating the pod @ 09/04/24 19:22:31.533
  STEP: Waiting for pod with text data @ 09/04/24 19:22:36.782
  STEP: Waiting for pod with binary data @ 09/04/24 19:22:36.796
  I0904 19:22:36.804134 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9703" for this suite. @ 09/04/24 19:22:36.808
â€¢ [5.384 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 09/04/24 19:22:36.833
  I0904 19:22:36.833103 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 19:22:36.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:22:36.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:22:36.941
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/04/24 19:22:36.949
  STEP: Saw pod success @ 09/04/24 19:22:41.007
  I0904 19:22:41.010562 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod pod-e313b907-a016-43e3-bff7-01c38190d7c0 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 19:22:41.023
  I0904 19:22:41.052222 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-603" for this suite. @ 09/04/24 19:22:41.157
â€¢ [4.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/04/24 19:22:41.174
  I0904 19:22:41.175007 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename prestop @ 09/04/24 19:22:41.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:22:41.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:22:41.263
  STEP: Creating server pod server in namespace prestop-8477 @ 09/04/24 19:22:41.268
  STEP: Waiting for pods to come up. @ 09/04/24 19:22:41.6
  STEP: Creating tester pod tester in namespace prestop-8477 @ 09/04/24 19:22:43.628
  STEP: Deleting pre-stop pod @ 09/04/24 19:22:45.661
  I0904 19:22:50.688142 21 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/04/24 19:22:50.688
  I0904 19:22:50.736693 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8477" for this suite. @ 09/04/24 19:22:50.74
â€¢ [9.578 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 09/04/24 19:22:50.753
  I0904 19:22:50.753392 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 19:22:50.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:22:50.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:22:50.803
  STEP: Setting up server cert @ 09/04/24 19:22:50.899
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 19:22:51.209
  STEP: Deploying the webhook pod @ 09/04/24 19:22:51.229
  STEP: Wait for the deployment to be ready @ 09/04/24 19:22:51.264
  I0904 19:22:51.282946 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/24 19:22:53.898
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 19:22:53.929
  I0904 19:22:54.929448 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/04/24 19:22:55.041
  STEP: verifying the validating webhook match conditions @ 09/04/24 19:22:55.064
  STEP: updating the validating webhook match conditions @ 09/04/24 19:22:55.068
  STEP: verifying the validating webhook match conditions @ 09/04/24 19:22:55.089
  I0904 19:22:55.238950 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1381" for this suite. @ 09/04/24 19:22:55.244
  STEP: Destroying namespace "webhook-markers-4866" for this suite. @ 09/04/24 19:22:55.275
â€¢ [4.546 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/04/24 19:22:55.3
  I0904 19:22:55.300336 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename csi-storageclass @ 09/04/24 19:22:55.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:22:55.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:22:55.351
  STEP: Creating a StorageClass @ 09/04/24 19:22:55.354
  STEP: Get StorageClass "e2e-z66v7" @ 09/04/24 19:22:55.364
  STEP: Patching the StorageClass "e2e-z66v7" @ 09/04/24 19:22:55.368
  STEP: Delete StorageClass "e2e-z66v7" @ 09/04/24 19:22:55.39
  STEP: Confirm deletion of StorageClass "e2e-z66v7" @ 09/04/24 19:22:55.413
  STEP: Create a replacement StorageClass @ 09/04/24 19:22:55.417
  STEP: Updating StorageClass "e2e-v2-6n8sr" @ 09/04/24 19:22:55.427
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-6n8sr=updated" @ 09/04/24 19:22:55.454
  STEP: Deleting StorageClass "e2e-v2-6n8sr" via DeleteCollection @ 09/04/24 19:22:55.457
  STEP: Confirm deletion of StorageClass "e2e-v2-6n8sr" @ 09/04/24 19:22:55.47
  I0904 19:22:55.473148 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-7012" for this suite. @ 09/04/24 19:22:55.477
â€¢ [0.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 09/04/24 19:22:55.491
  I0904 19:22:55.491871 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/24 19:22:55.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:22:55.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:22:55.524
  I0904 19:22:55.580291 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0904 19:23:55.585768 21 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/04/24 19:23:55.692
  I0904 19:23:55.692443 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/04/24 19:23:55.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:23:55.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:23:55.746
  STEP: Finding an available node @ 09/04/24 19:23:55.753
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/04/24 19:23:55.753
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/04/24 19:24:00.208
  I0904 19:24:00.241308 21 preemption.go:585] found a healthy node: ip-172-31-15-190.us-east-2.compute.internal
  I0904 19:24:06.413821 21 preemption.go:708] pods created so far: [1 1 1]
  I0904 19:24:06.413899 21 preemption.go:709] length of pods created so far: 3
  I0904 19:24:08.436143 21 preemption.go:726] pods created so far: [2 2 1]
  I0904 19:24:15.577135 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9620" for this suite. @ 09/04/24 19:24:15.582
  I0904 19:24:15.593681 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4446" for this suite. @ 09/04/24 19:24:15.683
â€¢ [80.210 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/04/24 19:24:15.702
  I0904 19:24:15.702777 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 19:24:15.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:24:15.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:24:15.863
  STEP: Creating simple DaemonSet "daemon-set" @ 09/04/24 19:24:15.998
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/24 19:24:16.007
  I0904 19:24:16.097920 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:24:16.097976 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:17.532981 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:24:17.533037 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:18.124130 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 19:24:18.124186 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:20.122849 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 19:24:20.122890 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:20.129950 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 19:24:20.130071 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:21.751278 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0904 19:24:21.751341 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:22.244101 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:22.244158 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:23.293708 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:23.293889 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:24.149698 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:24.149746 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:25.028396 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:25.028450 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:27.124813 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:27.125051 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:27.131901 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:27.132134 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:28.570196 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 19:24:28.570263 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/04/24 19:24:28.573
  I0904 19:24:28.603825 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:28.603869 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:29.706865 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:29.707080 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:31.306441 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:31.306495 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:31.606011 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:31.606066 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:32.612022 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:32.612070 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:33.704463 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:33.704517 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:35.812800 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:35.812888 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:35.825133 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:35.825271 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:36.803741 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:36.803799 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:38.123016 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:38.123256 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:38.721623 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:24:38.721875 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:24:39.710285 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 19:24:39.710333 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/24 19:24:39.736
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9373, will wait for the garbage collector to delete the pods @ 09/04/24 19:24:39.736
  I0904 19:24:39.805911 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.506332ms
  I0904 19:24:39.906433 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.521227ms
  I0904 19:24:42.110541 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:24:42.110788 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 19:24:42.623004 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"202312"},"items":null}

  I0904 19:24:43.433932 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"202315"},"items":null}

  I0904 19:24:43.449838 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9373" for this suite. @ 09/04/24 19:24:43.453
â€¢ [27.761 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 09/04/24 19:24:43.464
  I0904 19:24:43.464551 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 19:24:43.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:24:43.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:24:43.725
  STEP: creating a collection of services @ 09/04/24 19:24:43.728
  I0904 19:24:43.728696 21 service.go:3655] Creating e2e-svc-a-brnts
  I0904 19:24:43.752245 21 service.go:3655] Creating e2e-svc-b-6ffpv
  I0904 19:24:43.778958 21 service.go:3655] Creating e2e-svc-c-5zx8c
  STEP: deleting service collection @ 09/04/24 19:24:43.806
  I0904 19:24:43.882720 21 service.go:3690] Collection of services has been deleted
  I0904 19:24:43.882868 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3955" for this suite. @ 09/04/24 19:24:43.886
â€¢ [0.438 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 09/04/24 19:24:43.902
  I0904 19:24:43.902510 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 19:24:43.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:24:43.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:24:43.929
  STEP: Creating service test in namespace statefulset-1551 @ 09/04/24 19:24:43.94
  STEP: Creating a new StatefulSet @ 09/04/24 19:24:43.951
  I0904 19:24:44.340683 21 wait.go:40] Found 1 stateful pods, waiting for 3
  I0904 19:24:54.488801 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 19:24:54.488872 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 19:24:54.488893 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0904 19:24:54.497473 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-1551 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 19:24:54.666736 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 19:24:54.666813 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 19:24:54.666835 21 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/04/24 19:25:04.675
  I0904 19:25:04.695595 21 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 09/04/24 19:25:04.695
  STEP: Updating Pods in reverse ordinal order @ 09/04/24 19:25:15.118
  I0904 19:25:15.125751 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-1551 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 19:25:15.298315 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 19:25:15.298372 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 19:25:15.298393 21 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 19:25:15.507042 21 wait.go:158] Waiting for StatefulSet statefulset-1551/ss2 to complete update
  I0904 19:25:15.507099 21 wait.go:165] Waiting for Pod statefulset-1551/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0904 19:25:15.507116 21 wait.go:165] Waiting for Pod statefulset-1551/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0904 19:25:15.507133 21 wait.go:165] Waiting for Pod statefulset-1551/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0904 19:25:25.634784 21 wait.go:158] Waiting for StatefulSet statefulset-1551/ss2 to complete update
  I0904 19:25:25.634850 21 wait.go:165] Waiting for Pod statefulset-1551/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0904 19:25:35.839843 21 wait.go:158] Waiting for StatefulSet statefulset-1551/ss2 to complete update
  STEP: Rolling back to a previous revision @ 09/04/24 19:25:45.736
  I0904 19:25:45.736557 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-1551 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 19:25:45.880940 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 19:25:45.881000 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 19:25:45.881022 21 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 19:25:56.111460 21 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 09/04/24 19:26:06.223
  I0904 19:26:06.227932 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-1551 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 19:26:06.386458 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 19:26:06.386539 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 19:26:06.386561 21 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 19:26:16.707106 21 statefulset.go:138] Deleting all statefulset in ns statefulset-1551
  I0904 19:26:16.710013 21 rest.go:150] Scaling statefulset ss2 to 0
  I0904 19:26:27.336334 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 19:26:27.339604 21 rest.go:88] Deleting statefulset ss2
  I0904 19:26:27.457348 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1551" for this suite. @ 09/04/24 19:26:27.462
â€¢ [103.571 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 09/04/24 19:26:27.473
  I0904 19:26:27.474008 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/24 19:26:27.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:26:27.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:26:27.527
  STEP: Deleting RuntimeClass runtimeclass-7472-delete-me @ 09/04/24 19:26:27.557
  STEP: Waiting for the RuntimeClass to disappear @ 09/04/24 19:26:27.569
  I0904 19:26:27.581125 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7472" for this suite. @ 09/04/24 19:26:27.586
â€¢ [0.132 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 09/04/24 19:26:27.607
  I0904 19:26:27.607227 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename replication-controller @ 09/04/24 19:26:27.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:26:27.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:26:27.658
  I0904 19:26:27.661031 21 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/04/24 19:26:27.682
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/04/24 19:26:27.698
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/04/24 19:26:28.707
  I0904 19:26:28.725153 21 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/04/24 19:26:28.725
  I0904 19:26:29.740593 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2224" for this suite. @ 09/04/24 19:26:29.744
â€¢ [2.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 09/04/24 19:26:29.761
  I0904 19:26:29.761226 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/24 19:26:29.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:26:29.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:26:29.907
  STEP: reading a file in the container @ 09/04/24 19:26:32.582
  I0904 19:26:32.582829 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5924 pod-service-account-ae241744-fd3e-4c92-87f2-611437bf0352 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/04/24 19:26:32.734
  I0904 19:26:32.734619 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5924 pod-service-account-ae241744-fd3e-4c92-87f2-611437bf0352 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/04/24 19:26:32.876
  I0904 19:26:32.876832 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5924 pod-service-account-ae241744-fd3e-4c92-87f2-611437bf0352 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0904 19:26:33.027258 21 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-5924"
  I0904 19:26:33.029373 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5924" for this suite. @ 09/04/24 19:26:33.035
â€¢ [3.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/04/24 19:26:33.057
  I0904 19:26:33.057091 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 19:26:33.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:26:33.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:26:33.105
  STEP: Creating pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562 @ 09/04/24 19:26:33.113
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 19:26:35.52
  I0904 19:26:35.523358 21 container_probe.go:1749] Initial restart count of pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc is 0
  I0904 19:26:35.530046 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:26:37.534009 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:26:39.538142 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:26:41.542813 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:26:43.546770 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:26:45.550685 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:26:47.554829 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:26:49.560205 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:26:51.564324 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:26:53.568734 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:26:55.573424 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:26:55.573491 21 container_probe.go:1763] Restart count of pod container-probe-9562/liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc is now 1 (20.050086069s elapsed)
  I0904 19:26:57.579132 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:26:59.583143 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:01.587396 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:03.592170 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:05.595967 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:07.600820 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:09.605290 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:11.609625 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:13.613704 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:15.618689 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:15.618748 21 container_probe.go:1763] Restart count of pod container-probe-9562/liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc is now 2 (40.095342741s elapsed)
  I0904 19:27:17.623746 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:19.627691 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:21.631990 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:23.637710 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:25.642571 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:27.647719 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:29.651705 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:31.655470 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:33.660321 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:35.665258 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:35.665457 21 container_probe.go:1763] Restart count of pod container-probe-9562/liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc is now 3 (1m0.142052176s elapsed)
  I0904 19:27:37.672321 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:39.676220 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:41.680537 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:43.685297 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:45.691548 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:47.697013 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:49.701949 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:51.714224 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:53.718819 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:55.725147 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:55.725199 21 container_probe.go:1763] Restart count of pod container-probe-9562/liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc is now 4 (1m20.201794261s elapsed)
  I0904 19:27:57.729814 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:27:59.734631 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:01.749597 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:03.753845 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:05.762593 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:07.767441 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:09.771801 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:11.776120 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:13.780714 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:15.785708 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:17.791642 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:19.797222 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:21.801865 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:23.806522 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:25.811187 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:27.816141 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:29.821096 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:31.825494 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:33.831276 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:35.839689 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:37.845029 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:39.849430 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:41.853179 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:43.859070 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:45.865385 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:47.869193 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:49.873573 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:51.879772 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:53.886027 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:55.891558 21 container_probe.go:1759] Get pod liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc in namespace container-probe-9562
  I0904 19:28:55.891876 21 container_probe.go:1763] Restart count of pod container-probe-9562/liveness-bbafdd9a-48dd-4c5a-9f6a-cdf066875bbc is now 5 (2m20.368469271s elapsed)
  STEP: deleting the pod @ 09/04/24 19:28:55.892
  I0904 19:28:55.923595 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9562" for this suite. @ 09/04/24 19:28:55.927
â€¢ [142.892 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/04/24 19:28:55.949
  I0904 19:28:55.949789 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 19:28:55.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:28:55.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:28:56.002
  STEP: Creating simple DaemonSet "daemon-set" @ 09/04/24 19:28:56.04
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/24 19:28:56.061
  I0904 19:28:56.231915 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:28:56.231972 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:28:57.081296 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:28:57.081343 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:28:58.171220 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:28:58.171275 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:28:59.272221 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 19:28:59.272279 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/04/24 19:28:59.275
  STEP: DeleteCollection of the DaemonSets @ 09/04/24 19:28:59.379
  STEP: Verify that ReplicaSets have been deleted @ 09/04/24 19:28:59.398
  I0904 19:28:59.409636 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"203856"},"items":null}

  I0904 19:28:59.433063 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"203857"},"items":[{"metadata":{"name":"daemon-set-ffpbl","generateName":"daemon-set-","namespace":"daemonsets-1296","uid":"e84cb2ae-3c5e-421f-9dde-4dd1c3b597b6","resourceVersion":"203845","creationTimestamp":"2024-09-04T19:28:56Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8a41a722-2662-4897-a8e1-1abf08b46b98","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-09-04T19:28:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8a41a722-2662-4897-a8e1-1abf08b46b98\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-09-04T19:28:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.21\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8q27r","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8q27r","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-5-231.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-5-231.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:57Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:56Z"}],"hostIP":"172.31.5.231","hostIPs":[{"ip":"172.31.5.231"}],"podIP":"10.42.2.21","podIPs":[{"ip":"10.42.2.21"}],"startTime":"2024-09-04T19:28:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-04T19:28:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4902fd957ad54ce5bff77ba9f8e963cf3db19eb65b9e10654fc022d81828a12a","started":true,"volumeMounts":[{"name":"kube-api-access-8q27r","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-gtchg","generateName":"daemon-set-","namespace":"daemonsets-1296","uid":"70b4d620-a88c-4c09-9076-214f1d048908","resourceVersion":"203857","creationTimestamp":"2024-09-04T19:28:56Z","deletionTimestamp":"2024-09-04T19:29:29Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8a41a722-2662-4897-a8e1-1abf08b46b98","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-09-04T19:28:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8a41a722-2662-4897-a8e1-1abf08b46b98\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-09-04T19:28:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.3.27\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8xvxj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8xvxj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-15-190.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-15-190.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:57Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:56Z"}],"hostIP":"172.31.15.190","hostIPs":[{"ip":"172.31.15.190"}],"podIP":"10.42.3.27","podIPs":[{"ip":"10.42.3.27"}],"startTime":"2024-09-04T19:28:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-04T19:28:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://82e489219cdee5622a05a7db05558558a4865ffcf5d3e6657b12ec75d728a6e8","started":true,"volumeMounts":[{"name":"kube-api-access-8xvxj","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-rk22t","generateName":"daemon-set-","namespace":"daemonsets-1296","uid":"df0979fc-e516-4fe0-bc63-db74582bd155","resourceVersion":"203847","creationTimestamp":"2024-09-04T19:28:56Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8a41a722-2662-4897-a8e1-1abf08b46b98","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-09-04T19:28:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8a41a722-2662-4897-a8e1-1abf08b46b98\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-09-04T19:28:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.12\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-74m5w","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-74m5w","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-11-100.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-11-100.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:57Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:56Z"}],"hostIP":"172.31.11.100","hostIPs":[{"ip":"172.31.11.100"}],"podIP":"10.42.0.12","podIPs":[{"ip":"10.42.0.12"}],"startTime":"2024-09-04T19:28:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-04T19:28:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://dd47c60860915a12e920b6e13fde11e7ccb5d0d9906d3c77c60619979b98a20d","started":true,"volumeMounts":[{"name":"kube-api-access-74m5w","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-xvsbp","generateName":"daemon-set-","namespace":"daemonsets-1296","uid":"fc4378ab-3a0d-4888-8d06-3dfc7f6be9e5","resourceVersion":"203851","creationTimestamp":"2024-09-04T19:28:56Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8a41a722-2662-4897-a8e1-1abf08b46b98","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-09-04T19:28:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8a41a722-2662-4897-a8e1-1abf08b46b98\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-09-04T19:28:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.19\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wr5pw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wr5pw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-8-15.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-8-15.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:58Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-04T19:28:56Z"}],"hostIP":"172.31.8.15","hostIPs":[{"ip":"172.31.8.15"}],"podIP":"10.42.1.19","podIPs":[{"ip":"10.42.1.19"}],"startTime":"2024-09-04T19:28:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-04T19:28:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://40bc95a208e0e5f83ec256e5655f5d8986f1bb75dfacdc20e7223aff21669c89","started":true,"volumeMounts":[{"name":"kube-api-access-wr5pw","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0904 19:28:59.508824 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1296" for this suite. @ 09/04/24 19:28:59.666
â€¢ [3.730 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/04/24 19:28:59.681
  I0904 19:28:59.681821 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 19:28:59.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:28:59.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:28:59.932
  STEP: Creating configMap that has name configmap-test-emptyKey-799b33a8-8bbf-44f5-a129-395ccfc669df @ 09/04/24 19:28:59.935
  I0904 19:28:59.937464 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2613" for this suite. @ 09/04/24 19:29:00.003
â€¢ [0.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/04/24 19:29:00.075
  I0904 19:29:00.075639 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/04/24 19:29:00.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:29:00.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:29:00.313
  STEP: mirroring a new custom Endpoint @ 09/04/24 19:29:00.38
  I0904 19:29:00.397735 21 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 09/04/24 19:29:02.413
  STEP: mirroring deletion of a custom Endpoint @ 09/04/24 19:29:02.438
  I0904 19:29:02.473543 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-1350" for this suite. @ 09/04/24 19:29:02.478
â€¢ [2.415 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 09/04/24 19:29:02.491
  I0904 19:29:02.491850 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 19:29:02.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:29:02.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:29:02.546
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 19:29:02.565
  STEP: Saw pod success @ 09/04/24 19:29:06.601
  I0904 19:29:06.609481 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-d984e581-8a22-4ae2-a7cd-63017f4f7b82 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 19:29:06.633
  I0904 19:29:06.686064 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6899" for this suite. @ 09/04/24 19:29:06.69
â€¢ [4.216 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 09/04/24 19:29:06.708
  I0904 19:29:06.708711 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 19:29:06.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:29:06.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:29:06.763
  STEP: Creating service test in namespace statefulset-1674 @ 09/04/24 19:29:06.766
  STEP: Creating a new StatefulSet @ 09/04/24 19:29:06.779
  I0904 19:29:06.847923 21 wait.go:40] Found 0 stateful pods, waiting for 3
  I0904 19:29:16.811717 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 19:29:16.811776 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 19:29:16.811799 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/04/24 19:29:16.82
  I0904 19:29:16.833157 21 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 09/04/24 19:29:16.833
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/04/24 19:29:26.845
  STEP: Performing a canary update @ 09/04/24 19:29:26.845
  I0904 19:29:26.865842 21 statefulset.go:2507] Updating stateful set ss2
  I0904 19:29:26.886338 21 wait.go:74] Waiting for Pod statefulset-1674/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/04/24 19:29:36.879
  I0904 19:29:37.047785 21 wait.go:40] Found 2 stateful pods, waiting for 3
  I0904 19:29:47.016192 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 19:29:47.016265 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 19:29:47.016304 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/04/24 19:29:47.022
  I0904 19:29:47.040736 21 statefulset.go:2507] Updating stateful set ss2
  I0904 19:29:47.057478 21 wait.go:74] Waiting for Pod statefulset-1674/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0904 19:29:57.074684 21 statefulset.go:2507] Updating stateful set ss2
  I0904 19:29:57.097659 21 wait.go:56] Waiting for StatefulSet statefulset-1674/ss2 to complete update
  I0904 19:29:57.097728 21 wait.go:63] Waiting for Pod statefulset-1674/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0904 19:30:07.353849 21 statefulset.go:138] Deleting all statefulset in ns statefulset-1674
  I0904 19:30:07.558581 21 rest.go:150] Scaling statefulset ss2 to 0
  I0904 19:30:17.580592 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 19:30:17.583446 21 rest.go:88] Deleting statefulset ss2
  I0904 19:30:18.097946 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1674" for this suite. @ 09/04/24 19:30:18.105
â€¢ [71.409 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/04/24 19:30:18.118
  I0904 19:30:18.118065 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 19:30:18.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:30:18.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:30:18.168
  STEP: Creating pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826 @ 09/04/24 19:30:18.171
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 19:30:20.201
  I0904 19:30:20.204111 21 container_probe.go:1749] Initial restart count of pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 is 0
  I0904 19:30:20.207099 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:22.211232 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:24.214249 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:26.218558 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:28.223295 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:30.227377 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:32.232759 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:34.236697 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:36.245873 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:38.251263 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:40.255338 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:42.259809 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:44.263945 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:46.269635 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:48.275071 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:50.282285 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:52.287242 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:54.293162 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:56.297857 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:30:58.303114 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:00.307356 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:02.312646 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:04.319353 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:06.325565 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:08.331406 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:10.335712 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:12.340908 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:14.344832 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:16.349134 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:18.354786 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:20.358997 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:22.368243 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:24.371911 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:26.386933 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:28.391538 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:30.397198 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:32.402156 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:34.406822 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:36.411738 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:38.416698 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:40.422377 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:42.427076 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:44.431451 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:46.442607 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:48.447514 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:50.451466 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:52.461368 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:54.466362 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:56.470871 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:31:58.477598 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:00.488370 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:02.492457 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:04.496901 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:06.505427 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:08.512216 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:10.515546 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:12.520192 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:14.525971 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:16.537284 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:18.553082 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:20.557782 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:22.562848 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:24.567123 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:26.571270 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:28.576307 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:30.583288 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:32.587543 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:34.595727 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:36.600095 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:38.605152 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:40.610317 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:42.617601 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:44.622668 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:46.632821 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:48.638082 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:50.643519 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:52.648275 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:54.653067 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:56.657373 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:32:58.664695 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:00.671814 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:03.000117 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:05.005680 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:07.010211 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:09.017459 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:11.021794 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:13.026436 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:15.031674 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:17.036413 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:19.044729 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:21.048702 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:23.054034 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:25.059729 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:27.065546 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:29.070486 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:31.075297 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:33.085233 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:35.089348 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:37.094622 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:39.100056 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:41.104314 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:43.109256 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:45.112796 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:47.116896 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:49.121347 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:51.125812 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:53.129646 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:55.134429 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:57.138941 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:33:59.146537 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:34:01.152116 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:34:03.156139 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:34:05.161097 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:34:07.166890 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:34:09.172297 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:34:11.177468 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:34:13.183029 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:34:15.191663 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:34:17.197533 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  I0904 19:34:19.202333 21 container_probe.go:1759] Get pod test-grpc-1baac400-ad6c-4aa3-bd9a-04d9121a4293 in namespace container-probe-2826
  STEP: deleting the pod @ 09/04/24 19:34:21.203
  I0904 19:34:21.238685 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2826" for this suite. @ 09/04/24 19:34:21.349
â€¢ [243.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/04/24 19:34:21.369
  I0904 19:34:21.370025 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 19:34:21.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:34:21.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:34:21.415
  STEP: Creating projection with secret that has name projected-secret-test-map-1904561a-f0e2-415e-9e19-c0f99a65788e @ 09/04/24 19:34:21.418
  STEP: Creating a pod to test consume secrets @ 09/04/24 19:34:21.435
  STEP: Saw pod success @ 09/04/24 19:34:25.628
  I0904 19:34:25.631495 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-secrets-ad521f48-4a2d-4d65-8077-095c3cbcf77a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 19:34:25.645
  I0904 19:34:25.680314 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-674" for this suite. @ 09/04/24 19:34:25.684
â€¢ [4.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 09/04/24 19:34:25.707
  I0904 19:34:25.707625 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 19:34:25.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:34:25.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:34:25.771
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/04/24 19:34:25.775
  STEP: Saw pod success @ 09/04/24 19:34:30.231
  I0904 19:34:30.234794 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-320a1d98-98bf-47a4-9724-373cf61d1cbf container test-container: <nil>
  STEP: delete the pod @ 09/04/24 19:34:30.242
  I0904 19:34:30.285137 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-52" for this suite. @ 09/04/24 19:34:30.298
â€¢ [4.621 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/04/24 19:34:30.329
  I0904 19:34:30.329484 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/24 19:34:30.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:34:30.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:34:30.384
  STEP: Waiting for pod completion @ 09/04/24 19:34:31.014
  I0904 19:34:35.051988 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7004" for this suite. @ 09/04/24 19:34:35.059
â€¢ [4.741 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/04/24 19:34:35.07
  I0904 19:34:35.070725 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename var-expansion @ 09/04/24 19:34:35.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:34:35.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:34:35.222
  I0904 19:34:37.284788 21 delete.go:62] Deleting pod "var-expansion-b17b48a5-35c6-4b4f-9907-e2dd236a3356" in namespace "var-expansion-5713"
  I0904 19:34:37.308577 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-b17b48a5-35c6-4b4f-9907-e2dd236a3356" to be fully deleted
  I0904 19:34:39.320599 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5713" for this suite. @ 09/04/24 19:34:39.325
â€¢ [4.276 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/04/24 19:34:39.346
  I0904 19:34:39.347008 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename var-expansion @ 09/04/24 19:34:39.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:34:39.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:34:39.49
  I0904 19:34:41.931844 21 delete.go:62] Deleting pod "var-expansion-969dcbf8-1cc2-48f7-bb06-3485e3379bd9" in namespace "var-expansion-8320"
  I0904 19:34:41.948147 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-969dcbf8-1cc2-48f7-bb06-3485e3379bd9" to be fully deleted
  I0904 19:34:43.955588 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8320" for this suite. @ 09/04/24 19:34:44.059
â€¢ [4.724 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/04/24 19:34:44.072
  I0904 19:34:44.072029 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename endpointslice @ 09/04/24 19:34:44.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:34:44.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:34:44.234
  I0904 19:34:46.362275 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5043" for this suite. @ 09/04/24 19:34:46.367
â€¢ [2.309 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/04/24 19:34:46.381
  I0904 19:34:46.381384 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 19:34:46.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:34:46.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:34:46.421
  STEP: Setting up server cert @ 09/04/24 19:34:46.521
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 19:34:47.601
  STEP: Deploying the webhook pod @ 09/04/24 19:34:47.645
  STEP: Wait for the deployment to be ready @ 09/04/24 19:34:47.674
  I0904 19:34:47.692463 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/24 19:34:50.111
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 19:34:50.139
  I0904 19:34:51.140109 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/04/24 19:34:51.153
  STEP: create a namespace for the webhook @ 09/04/24 19:34:51.187
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/04/24 19:34:51.221
  I0904 19:34:51.402573 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5707" for this suite. @ 09/04/24 19:34:51.425
  STEP: Destroying namespace "webhook-markers-7640" for this suite. @ 09/04/24 19:34:51.445
  STEP: Destroying namespace "fail-closed-namespace-7796" for this suite. @ 09/04/24 19:34:51.468
â€¢ [5.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/04/24 19:34:51.487
  I0904 19:34:51.487715 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 19:34:51.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:34:51.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:34:51.528
  STEP: Creating pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3 @ 09/04/24 19:34:51.533
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 19:34:53.764
  I0904 19:34:53.768171 21 container_probe.go:1749] Initial restart count of pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 is 0
  I0904 19:34:53.771667 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:34:55.775817 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:34:57.780019 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:34:59.790623 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:01.801725 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:03.805881 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:05.811316 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:07.815835 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:09.819986 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:11.824833 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:13.837881 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:15.844572 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:17.849602 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:19.855715 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:21.859628 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:23.879456 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:25.891465 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:27.898561 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:29.907636 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:31.917532 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:33.922120 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:35.926750 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:37.930796 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:39.935252 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:41.940542 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:43.946553 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:45.951874 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:47.956373 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:49.961561 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:51.966055 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:53.971608 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:55.975963 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:57.981196 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:35:59.987936 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:01.992234 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:03.997341 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:06.002303 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:08.006955 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:10.017970 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:12.026721 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:14.034380 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:16.042299 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:18.047517 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:20.052802 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:22.057863 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:24.063497 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:26.072553 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:28.078041 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:30.082981 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:32.087102 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:34.091570 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:36.095981 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:38.099819 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:40.104530 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:42.109677 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:44.115276 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:46.119382 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:48.124334 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:50.128772 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:52.133397 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:54.138659 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:56.146007 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:36:58.151148 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:00.156935 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:02.162059 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:04.166782 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:06.171472 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:08.175753 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:10.179828 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:12.185424 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:14.192082 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:16.196802 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:18.202433 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:20.215148 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:22.219821 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:24.224439 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:26.231734 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:28.236941 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:30.243187 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:32.251793 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:34.256948 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:36.261538 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:38.267565 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:40.274777 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:42.279812 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:44.291024 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:46.299706 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:48.304323 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:50.307677 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:52.312755 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:54.318416 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:56.323008 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:37:58.327087 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:00.333254 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:02.338254 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:04.343798 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:06.347646 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:08.353989 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:10.358945 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:12.367128 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:14.372768 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:16.377730 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:18.382661 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:20.388015 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:22.393060 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:24.398790 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:26.403467 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:28.409232 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:30.414347 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:32.422866 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:34.427429 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:36.431676 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:38.437643 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:40.442880 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:42.447738 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:44.453177 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:46.458147 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:48.463277 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:50.467772 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  I0904 19:38:52.472659 21 container_probe.go:1759] Get pod test-webserver-ad79bf6a-704f-4b27-9829-647a02085888 in namespace container-probe-3
  STEP: deleting the pod @ 09/04/24 19:38:54.473
  I0904 19:38:54.514766 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3" for this suite. @ 09/04/24 19:38:54.541
â€¢ [243.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/04/24 19:38:54.555
  I0904 19:38:54.555513 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/04/24 19:38:54.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:38:54.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:38:54.6
  STEP: creating a target pod @ 09/04/24 19:38:54.603
  STEP: adding an ephemeral container @ 09/04/24 19:38:57.837
  STEP: checking pod container endpoints @ 09/04/24 19:38:59.867
  I0904 19:38:59.867261 21 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8100 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 19:38:59.867321 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:38:59.868002 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 19:38:59.868078 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-8100/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0904 19:38:59.921607 21 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/04/24 19:38:59.933
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/04/24 19:38:59.938
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/04/24 19:38:59.966
  I0904 19:38:59.976816 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8100" for this suite. @ 09/04/24 19:39:00.014
â€¢ [5.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/04/24 19:39:00.032
  I0904 19:39:00.032394 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 19:39:00.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:39:00.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:39:00.189
  STEP: Setting up server cert @ 09/04/24 19:39:00.285
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 19:39:00.851
  STEP: Deploying the webhook pod @ 09/04/24 19:39:00.879
  STEP: Wait for the deployment to be ready @ 09/04/24 19:39:00.91
  I0904 19:39:00.927596 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0904 19:39:03.027608 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 19, 39, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 39, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 39, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 39, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/04/24 19:39:05.032
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 19:39:05.062
  I0904 19:39:06.062763 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/04/24 19:39:06.077
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/04/24 19:39:06.118
  I0904 19:39:06.118417 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:39:06.271467 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3167" for this suite. @ 09/04/24 19:39:06.295
  STEP: Destroying namespace "webhook-markers-926" for this suite. @ 09/04/24 19:39:06.31
â€¢ [6.301 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/04/24 19:39:06.333
  I0904 19:39:06.334083 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename events @ 09/04/24 19:39:06.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:39:06.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:39:06.476
  STEP: creating a test event @ 09/04/24 19:39:06.479
  STEP: listing all events in all namespaces @ 09/04/24 19:39:06.497
  STEP: patching the test event @ 09/04/24 19:39:06.504
  STEP: fetching the test event @ 09/04/24 19:39:06.529
  STEP: updating the test event @ 09/04/24 19:39:06.533
  STEP: getting the test event @ 09/04/24 19:39:06.548
  STEP: deleting the test event @ 09/04/24 19:39:06.551
  STEP: listing all events in all namespaces @ 09/04/24 19:39:06.579
  I0904 19:39:06.596283 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3890" for this suite. @ 09/04/24 19:39:06.603
â€¢ [0.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 09/04/24 19:39:06.64
  I0904 19:39:06.640491 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 19:39:06.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:39:06.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:39:06.682
  STEP: creating Agnhost RC @ 09/04/24 19:39:06.686
  I0904 19:39:06.686620 21 kubectl.go:1537] namespace kubectl-4106
  I0904 19:39:06.686675 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-4106 create -f -'
  I0904 19:39:06.923326 21 builder.go:146] stderr: ""
  I0904 19:39:06.923400 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/04/24 19:39:06.923
  I0904 19:39:08.707454 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 19:39:08.707500 21 framework.go:733] Found 1 / 1
  I0904 19:39:08.707530 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0904 19:39:08.714097 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 19:39:08.714149 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0904 19:39:08.714166 21 kubectl.go:1544] wait on agnhost-primary startup in kubectl-4106 
  I0904 19:39:08.714216 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-4106 logs agnhost-primary-8fccc agnhost-primary'
  I0904 19:39:08.841870 21 builder.go:146] stderr: ""
  I0904 19:39:08.841925 21 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/04/24 19:39:08.841
  I0904 19:39:08.842035 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-4106 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0904 19:39:08.957499 21 builder.go:146] stderr: ""
  I0904 19:39:08.957558 21 builder.go:147] stdout: "service/rm2 exposed\n"
  I0904 19:39:08.977846 21 utils.go:1203] Service rm2 in namespace kubectl-4106 found.
  STEP: exposing service @ 09/04/24 19:39:10.986
  I0904 19:39:10.986353 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-4106 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0904 19:39:11.091448 21 builder.go:146] stderr: ""
  I0904 19:39:11.091494 21 builder.go:147] stdout: "service/rm3 exposed\n"
  I0904 19:39:11.114999 21 utils.go:1203] Service rm3 in namespace kubectl-4106 found.
  I0904 19:39:13.122113 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4106" for this suite. @ 09/04/24 19:39:13.126
â€¢ [6.496 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 09/04/24 19:39:13.136
  I0904 19:39:13.136656 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 19:39:13.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:39:13.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:39:13.174
  STEP: Creating service test in namespace statefulset-5966 @ 09/04/24 19:39:13.177
  STEP: Creating stateful set ss in namespace statefulset-5966 @ 09/04/24 19:39:13.206
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5966 @ 09/04/24 19:39:13.251
  I0904 19:39:13.360578 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0904 19:39:23.660149 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/04/24 19:39:23.66
  I0904 19:39:23.664300 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-5966 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 19:39:23.815851 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 19:39:23.816046 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 19:39:23.816170 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 19:39:23.819638 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0904 19:39:33.865919 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0904 19:39:33.865970 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0904 19:39:33.899420 21 resource.go:168] POD   NODE                                        PHASE    GRACE  CONDITIONS
  I0904 19:39:33.899526 21 resource.go:175] ss-0  ip-172-31-5-231.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:14 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:13 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:13 +0000 UTC  }]
  I0904 19:39:33.899554 21 resource.go:175] ss-2                                              Pending         []
  I0904 19:39:33.899567 21 resource.go:178] 
  I0904 19:39:33.899581 21 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 2
  I0904 19:39:34.904901 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.987829841s
  I0904 19:39:36.310103 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.982912415s
  I0904 19:39:38.024414 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.57702767s
  I0904 19:39:39.029120 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.863387803s
  I0904 19:39:41.040708 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.858702551s
  I0904 19:39:42.348765 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.84675053s
  I0904 19:39:43.456271 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 539.02782ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5966 @ 09/04/24 19:39:44.457
  I0904 19:39:44.798580 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-5966 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 19:39:44.935086 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 19:39:44.935155 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 19:39:44.935174 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 19:39:44.935230 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-5966 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 19:39:45.091093 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0904 19:39:45.091236 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 19:39:45.091256 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 19:39:45.091316 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-5966 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 19:39:45.249279 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0904 19:39:45.249333 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 19:39:45.249352 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 19:39:45.372269 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 19:39:45.372362 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 19:39:45.372380 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/04/24 19:39:45.372
  I0904 19:39:45.376469 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-5966 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 19:39:45.533052 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 19:39:45.533102 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 19:39:45.533126 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 19:39:45.533184 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-5966 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 19:39:45.674710 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 19:39:45.674762 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 19:39:45.674783 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 19:39:45.674840 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-5966 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 19:39:45.829466 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 19:39:45.829521 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 19:39:45.829540 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 19:39:45.829556 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0904 19:39:45.839245 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0904 19:39:55.847416 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0904 19:39:55.847473 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0904 19:39:55.847493 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0904 19:39:55.884242 21 resource.go:168] POD   NODE                                         PHASE    GRACE  CONDITIONS
  I0904 19:39:55.884340 21 resource.go:175] ss-0  ip-172-31-5-231.us-east-2.compute.internal   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:14 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:13 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:13 +0000 UTC  }]
  I0904 19:39:55.884382 21 resource.go:175] ss-1  ip-172-31-8-15.us-east-2.compute.internal    Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:35 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:33 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:33 +0000 UTC  }]
  I0904 19:39:55.884437 21 resource.go:175] ss-2  ip-172-31-15-190.us-east-2.compute.internal  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:34 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:33 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:33 +0000 UTC  }]
  I0904 19:39:55.884472 21 resource.go:178] 
  I0904 19:39:55.884487 21 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I0904 19:39:57.041586 21 resource.go:168] POD   NODE                                        PHASE      GRACE  CONDITIONS
  I0904 19:39:57.041678 21 resource.go:175] ss-0  ip-172-31-5-231.us-east-2.compute.internal  Succeeded  0s     [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:56 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:13 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:46 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:46 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 19:39:13 +0000 UTC  }]
  I0904 19:39:57.041696 21 resource.go:178] 
  I0904 19:39:57.041714 21 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 1
  I0904 19:39:58.350141 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.82241115s
  I0904 19:39:59.858310 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.513431459s
  I0904 19:40:01.569551 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.005732311s
  I0904 19:40:02.778182 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.294173736s
  I0904 19:40:03.793503 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.085924212s
  I0904 19:40:05.508708 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.070629203s
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5966 @ 09/04/24 19:40:06.508
  I0904 19:40:07.242274 21 rest.go:150] Scaling statefulset ss to 0
  I0904 19:40:07.248565 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 19:40:07.252081 21 statefulset.go:138] Deleting all statefulset in ns statefulset-5966
  I0904 19:40:07.255447 21 rest.go:150] Scaling statefulset ss to 0
  I0904 19:40:07.261405 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 19:40:07.265110 21 rest.go:88] Deleting statefulset ss
  I0904 19:40:07.386543 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5966" for this suite. @ 09/04/24 19:40:07.391
â€¢ [54.266 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/04/24 19:40:07.403
  I0904 19:40:07.403363 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename crd-webhook @ 09/04/24 19:40:07.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:40:07.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:40:07.444
  STEP: Setting up server cert @ 09/04/24 19:40:07.449
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/04/24 19:40:08.037
  STEP: Deploying the custom resource conversion webhook pod @ 09/04/24 19:40:08.049
  STEP: Wait for the deployment to be ready @ 09/04/24 19:40:08.08
  I0904 19:40:08.106141 21 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/24 19:40:10.119
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 19:40:10.153
  I0904 19:40:11.153409 21 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0904 19:40:11.162022 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Creating a v1 custom resource @ 09/04/24 19:40:13.762
  STEP: v2 custom resource should be converted @ 09/04/24 19:40:13.772
  I0904 19:40:14.400988 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4675" for this suite. @ 09/04/24 19:40:14.506
â€¢ [7.121 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 09/04/24 19:40:14.524
  I0904 19:40:14.524742 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 19:40:14.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:40:14.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:40:14.574
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/04/24 19:40:14.58
  STEP: Saw pod success @ 09/04/24 19:40:18.633
  I0904 19:40:18.636642 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-d317b37a-3c02-4b5d-9663-fe2abc5df84d container test-container: <nil>
  STEP: delete the pod @ 09/04/24 19:40:18.646
  I0904 19:40:18.693072 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4378" for this suite. @ 09/04/24 19:40:18.697
â€¢ [4.187 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/04/24 19:40:18.712
  I0904 19:40:18.713003 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/24 19:40:18.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:40:18.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:40:18.782
  I0904 19:40:18.922137 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4541" for this suite. @ 09/04/24 19:40:18.938
â€¢ [0.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/04/24 19:40:18.97
  I0904 19:40:18.970448 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 19:40:18.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:40:19.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:40:19.027
  STEP: Setting up server cert @ 09/04/24 19:40:19.162
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 19:40:19.817
  STEP: Deploying the webhook pod @ 09/04/24 19:40:19.833
  STEP: Wait for the deployment to be ready @ 09/04/24 19:40:19.871
  I0904 19:40:19.894743 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/24 19:40:21.938
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 19:40:21.97
  I0904 19:40:22.970972 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/04/24 19:40:22.977
  STEP: create a pod @ 09/04/24 19:40:23.006
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/04/24 19:40:27.065
  I0904 19:40:27.065829 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=webhook-6802 attach --namespace=webhook-6802 to-be-attached-pod -i -c=container1'
  I0904 19:40:27.176275 21 builder.go:135] rc: 1
  I0904 19:40:27.307168 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6802" for this suite. @ 09/04/24 19:40:27.322
  STEP: Destroying namespace "webhook-markers-6448" for this suite. @ 09/04/24 19:40:27.356
â€¢ [8.412 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/04/24 19:40:27.382
  I0904 19:40:27.382652 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename var-expansion @ 09/04/24 19:40:27.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:40:27.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:40:27.851
  STEP: creating the pod @ 09/04/24 19:40:27.855
  STEP: waiting for pod running @ 09/04/24 19:40:28.088
  STEP: creating a file in subpath @ 09/04/24 19:40:30.107
  I0904 19:40:30.110754 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7901 PodName:var-expansion-aa97f020-323b-43a3-8599-b85c59b26c16 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 19:40:30.110800 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:40:30.111536 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 19:40:30.111609 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-7901/pods/var-expansion-aa97f020-323b-43a3-8599-b85c59b26c16/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/04/24 19:40:30.174
  I0904 19:40:30.186206 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7901 PodName:var-expansion-aa97f020-323b-43a3-8599-b85c59b26c16 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 19:40:30.186254 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:40:30.186953 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 19:40:30.187036 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-7901/pods/var-expansion-aa97f020-323b-43a3-8599-b85c59b26c16/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/04/24 19:40:30.234
  I0904 19:40:30.757621 21 pod_client.go:173] Successfully updated pod "var-expansion-aa97f020-323b-43a3-8599-b85c59b26c16"
  STEP: waiting for annotated pod running @ 09/04/24 19:40:30.757
  STEP: deleting the pod gracefully @ 09/04/24 19:40:30.762
  I0904 19:40:30.762801 21 delete.go:62] Deleting pod "var-expansion-aa97f020-323b-43a3-8599-b85c59b26c16" in namespace "var-expansion-7901"
  I0904 19:40:30.781182 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-aa97f020-323b-43a3-8599-b85c59b26c16" to be fully deleted
  I0904 19:41:04.881606 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7901" for this suite. @ 09/04/24 19:41:04.899
â€¢ [37.529 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/04/24 19:41:04.912
  I0904 19:41:04.912495 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 19:41:04.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:41:04.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:41:04.974
  I0904 19:41:27.449169 21 container_probe.go:92] Container started at 2024-09-04 19:41:06 +0000 UTC, pod became ready at 2024-09-04 19:41:25 +0000 UTC
  I0904 19:41:27.449345 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2270" for this suite. @ 09/04/24 19:41:27.454
â€¢ [22.556 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/04/24 19:41:27.469
  I0904 19:41:27.469782 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 19:41:27.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:41:27.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:41:27.517
  STEP: creating secret secrets-6940/secret-test-88df503f-fbe6-425c-87f0-811bdd474314 @ 09/04/24 19:41:27.521
  STEP: Creating a pod to test consume secrets @ 09/04/24 19:41:27.538
  STEP: Saw pod success @ 09/04/24 19:41:31.691
  I0904 19:41:31.697738 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod pod-configmaps-2dc46d24-66a6-4e26-9d33-1ad67f8e54c3 container env-test: <nil>
  STEP: delete the pod @ 09/04/24 19:41:31.714
  I0904 19:41:31.759256 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6940" for this suite. @ 09/04/24 19:41:31.763
â€¢ [4.311 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 09/04/24 19:41:31.78
  I0904 19:41:31.780418 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename namespaces @ 09/04/24 19:41:31.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:41:31.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:41:31.843
  STEP: Creating namespace "e2e-ns-fz6d6" @ 09/04/24 19:41:31.847
  I0904 19:41:32.179775 21 namespace.go:411] Namespace "e2e-ns-fz6d6-87" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-fz6d6-87" @ 09/04/24 19:41:32.179
  I0904 19:41:32.193347 21 namespace.go:434] Namespace "e2e-ns-fz6d6-87" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-fz6d6-87" @ 09/04/24 19:41:32.193
  I0904 19:41:32.211637 21 namespace.go:463] Namespace "e2e-ns-fz6d6-87" has []v1.FinalizerName{"kubernetes"}
  I0904 19:41:32.211796 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1458" for this suite. @ 09/04/24 19:41:32.216
  STEP: Destroying namespace "e2e-ns-fz6d6-87" for this suite. @ 09/04/24 19:41:32.232
â€¢ [0.462 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/04/24 19:41:32.243
  I0904 19:41:32.243713 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 19:41:32.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:41:32.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:41:32.439
  STEP: Creating secret with name s-test-opt-del-4e6de6d5-0779-4dfd-aebf-40733f82388d @ 09/04/24 19:41:32.447
  STEP: Creating secret with name s-test-opt-upd-33cd0906-b561-42fc-a462-944324e3796d @ 09/04/24 19:41:32.462
  STEP: Creating the pod @ 09/04/24 19:41:32.472
  STEP: Deleting secret s-test-opt-del-4e6de6d5-0779-4dfd-aebf-40733f82388d @ 09/04/24 19:41:35.344
  STEP: Updating secret s-test-opt-upd-33cd0906-b561-42fc-a462-944324e3796d @ 09/04/24 19:41:35.365
  STEP: Creating secret with name s-test-opt-create-56c29ba8-bc18-4865-85c1-5820fa18faac @ 09/04/24 19:41:35.38
  STEP: waiting to observe update in volume @ 09/04/24 19:41:35.392
  I0904 19:41:37.425958 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9010" for this suite. @ 09/04/24 19:41:37.436
â€¢ [5.205 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/04/24 19:41:37.449
  I0904 19:41:37.449945 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 19:41:37.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:41:37.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:41:37.603
  STEP: Creating secret with name secret-test-6bfc9019-0664-4018-87f2-f9c1550ec1be @ 09/04/24 19:41:37.722
  STEP: Creating a pod to test consume secrets @ 09/04/24 19:41:37.736
  STEP: Saw pod success @ 09/04/24 19:41:42.918
  I0904 19:41:42.926085 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod pod-secrets-07ab7144-17c8-4a82-aee2-4beea6dfdd8b container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 19:41:42.933
  I0904 19:41:42.967295 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2826" for this suite. @ 09/04/24 19:41:42.972
  STEP: Destroying namespace "secret-namespace-2920" for this suite. @ 09/04/24 19:41:42.991
â€¢ [5.557 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/04/24 19:41:43.007
  I0904 19:41:43.007424 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/24 19:41:43.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:41:43.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:41:43.044
  I0904 19:41:45.910957 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1870" for this suite. @ 09/04/24 19:41:45.915
â€¢ [2.919 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/04/24 19:41:45.926
  I0904 19:41:45.926869 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 19:41:45.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:41:45.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:41:45.968
  I0904 19:41:46.031875 21 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/04/24 19:41:46.048
  I0904 19:41:46.455549 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:41:46.455602 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/04/24 19:41:46.455
  I0904 19:41:46.690522 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:41:46.690742 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:41:47.672668 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 19:41:47.672921 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/04/24 19:41:47.757
  I0904 19:41:47.869120 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 19:41:47.869410 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I0904 19:41:48.940167 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:41:48.940353 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/04/24 19:41:48.94
  I0904 19:41:48.990678 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:41:48.990856 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:41:50.183589 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:41:50.183650 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:41:51.647923 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 19:41:51.647981 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/24 19:41:51.958
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6134, will wait for the garbage collector to delete the pods @ 09/04/24 19:41:51.958
  I0904 19:41:52.023590 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.531549ms
  I0904 19:41:52.124403 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.810163ms
  I0904 19:41:52.732570 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:41:52.732827 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 19:41:53.140649 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"208020"},"items":null}

  I0904 19:41:53.266609 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"208021"},"items":null}

  I0904 19:41:53.307764 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6134" for this suite. @ 09/04/24 19:41:53.317
â€¢ [7.408 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/04/24 19:41:53.336
  I0904 19:41:53.336407 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 19:41:53.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:41:53.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:41:53.575
  I0904 19:41:53.588647 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  W0904 19:41:53.589835      21 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000d4aec0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0904 19:41:56.145120      21 warnings.go:70] unknown field "alpha"
  W0904 19:41:56.145158      21 warnings.go:70] unknown field "beta"
  W0904 19:41:56.145168      21 warnings.go:70] unknown field "delta"
  W0904 19:41:56.145176      21 warnings.go:70] unknown field "epsilon"
  W0904 19:41:56.145184      21 warnings.go:70] unknown field "gamma"
  I0904 19:41:56.713347 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2282" for this suite. @ 09/04/24 19:41:56.717
â€¢ [3.392 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/04/24 19:41:56.728
  I0904 19:41:56.728793 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 19:41:56.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:41:56.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:41:56.784
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/04/24 19:41:56.83
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/24 19:41:56.846
  I0904 19:41:56.945453 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:41:56.945507 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:41:57.970640 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:41:57.970880 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:42:00.081363 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 19:42:00.081441 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/04/24 19:42:00.087
  I0904 19:42:00.293826 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:42:00.294098 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:42:01.136787 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:42:01.136950 21 fixtures.go:130] Node ip-172-31-8-15.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:42:02.135190 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 19:42:02.135242 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/04/24 19:42:02.135
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/24 19:42:03.147
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1826, will wait for the garbage collector to delete the pods @ 09/04/24 19:42:03.147
  I0904 19:42:03.214940 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.73103ms
  I0904 19:42:03.315740 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.796172ms
  I0904 19:42:04.619993 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:42:04.620046 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 19:42:04.623309 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"208190"},"items":null}

  I0904 19:42:04.626142 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"208190"},"items":null}

  I0904 19:42:04.654766 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1826" for this suite. @ 09/04/24 19:42:04.659
â€¢ [7.944 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/04/24 19:42:04.672
  I0904 19:42:04.672914 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 19:42:04.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:42:04.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:42:04.725
  I0904 19:43:04.756698 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9230" for this suite. @ 09/04/24 19:43:04.962
â€¢ [60.296 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/04/24 19:43:04.97
  I0904 19:43:04.970200 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename limitrange @ 09/04/24 19:43:04.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:43:05.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:43:05.016
  STEP: Creating LimitRange "e2e-limitrange-2zg9z" in namespace "limitrange-4167" @ 09/04/24 19:43:05.02
  STEP: Creating another limitRange in another namespace @ 09/04/24 19:43:05.038
  I0904 19:43:05.115136 21 limit_range.go:299] Namespace "e2e-limitrange-2zg9z-3873" created
  I0904 19:43:05.115349 21 limit_range.go:300] Creating LimitRange "e2e-limitrange-2zg9z" in namespace "e2e-limitrange-2zg9z-3873"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-2zg9z" @ 09/04/24 19:43:05.133
  I0904 19:43:05.147408 21 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-2zg9z" in "limitrange-4167" namespace @ 09/04/24 19:43:05.147
  I0904 19:43:05.165351 21 limit_range.go:335] LimitRange "e2e-limitrange-2zg9z" has been patched
  STEP: Delete LimitRange "e2e-limitrange-2zg9z" by Collection with labelSelector: "e2e-limitrange-2zg9z=patched" @ 09/04/24 19:43:05.165
  STEP: Confirm that the limitRange "e2e-limitrange-2zg9z" has been deleted @ 09/04/24 19:43:05.178
  I0904 19:43:05.178221 21 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0904 19:43:05.182145 21 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-2zg9z=patched"
  I0904 19:43:05.182197 21 limit_range.go:344] LimitRange "e2e-limitrange-2zg9z" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-2zg9z" @ 09/04/24 19:43:05.182
  I0904 19:43:05.186097 21 limit_range.go:350] Found 1 limitRange
  I0904 19:43:05.186234 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4167" for this suite. @ 09/04/24 19:43:05.191
  STEP: Destroying namespace "e2e-limitrange-2zg9z-3873" for this suite. @ 09/04/24 19:43:05.203
â€¢ [0.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/04/24 19:43:05.214
  I0904 19:43:05.214273 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 19:43:05.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:43:05.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:43:05.248
  STEP: Creating secret with name secret-test-66002c2d-e049-40cd-99c3-921e3f9bae90 @ 09/04/24 19:43:05.251
  STEP: Creating a pod to test consume secrets @ 09/04/24 19:43:05.263
  STEP: Saw pod success @ 09/04/24 19:43:09.4
  I0904 19:43:09.404018 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod pod-secrets-c375894a-686d-4c9a-acb3-92e154fc72f7 container secret-env-test: <nil>
  STEP: delete the pod @ 09/04/24 19:43:09.41
  I0904 19:43:09.453825 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1884" for this suite. @ 09/04/24 19:43:09.458
â€¢ [4.256 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/04/24 19:43:09.47
  I0904 19:43:09.470602 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 19:43:09.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:43:09.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:43:09.52
  STEP: Creating secret with name secret-test-map-21a72621-93a9-4f6a-9f34-94a2df3a45c8 @ 09/04/24 19:43:09.523
  STEP: Creating a pod to test consume secrets @ 09/04/24 19:43:09.54
  STEP: Saw pod success @ 09/04/24 19:43:13.586
  I0904 19:43:13.590549 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-secrets-cf0087b8-6c20-4d4a-8eb8-8ad0ce85ea2b container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 19:43:13.609
  I0904 19:43:13.660433 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1046" for this suite. @ 09/04/24 19:43:13.766
â€¢ [4.312 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 09/04/24 19:43:13.782
  I0904 19:43:13.782718 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 19:43:13.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:43:14.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:43:14.03
  STEP: Starting the proxy @ 09/04/24 19:43:14.033
  I0904 19:43:14.033891 21 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-5324 proxy --unix-socket=/tmp/kubectl-proxy-unix2624676158/test'
  STEP: retrieving proxy /api/ output @ 09/04/24 19:43:14.112
  I0904 19:43:14.112900 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5324" for this suite. @ 09/04/24 19:43:14.117
â€¢ [0.372 seconds]
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/04/24 19:43:14.154
  I0904 19:43:14.154405 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 19:43:14.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:43:14.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:43:14.31
  STEP: creating a secret @ 09/04/24 19:43:14.313
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/04/24 19:43:14.328
  STEP: patching the secret @ 09/04/24 19:43:14.339
  STEP: deleting the secret using a LabelSelector @ 09/04/24 19:43:14.378
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/04/24 19:43:14.402
  I0904 19:43:14.413316 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2821" for this suite. @ 09/04/24 19:43:14.42
â€¢ [0.282 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 09/04/24 19:43:14.435
  I0904 19:43:14.435945 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 19:43:14.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:43:14.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:43:14.481
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3234 @ 09/04/24 19:43:14.486
  STEP: changing the ExternalName service to type=ClusterIP @ 09/04/24 19:43:14.503
  STEP: creating replication controller externalname-service in namespace services-3234 @ 09/04/24 19:43:14.556
  I0904 19:43:14.572368      21 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3234, replica count: 2
  I0904 19:43:17.623497      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 19:43:17.623588 21 resource.go:361] Creating new exec pod
  I0904 19:43:20.648179 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-3234 exec execpodl8zhb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0904 19:43:20.787316 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0904 19:43:20.787366 21 builder.go:147] stdout: ""
  I0904 19:43:21.648264 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-3234 exec execpodl8zhb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0904 19:43:21.794515 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0904 19:43:21.794617 21 builder.go:147] stdout: ""
  I0904 19:43:22.648464 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-3234 exec execpodl8zhb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0904 19:43:22.802385 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0904 19:43:22.802437 21 builder.go:147] stdout: "externalname-service-mxdw5"
  I0904 19:43:22.802512 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-3234 exec execpodl8zhb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.74.17 80'
  I0904 19:43:22.966565 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.74.17 80\nConnection to 10.43.74.17 80 port [tcp/http] succeeded!\n"
  I0904 19:43:22.966621 21 builder.go:147] stdout: "externalname-service-99hd6"
  I0904 19:43:22.966761 21 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0904 19:43:23.042714 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3234" for this suite. @ 09/04/24 19:43:23.065
â€¢ [8.641 seconds]
------------------------------
S
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/04/24 19:43:23.077
  I0904 19:43:23.077596 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename limitrange @ 09/04/24 19:43:23.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:43:23.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:43:23.233
  STEP: Creating a LimitRange @ 09/04/24 19:43:23.236
  STEP: Setting up watch @ 09/04/24 19:43:23.236
  STEP: Submitting a LimitRange @ 09/04/24 19:43:23.744
  STEP: Verifying LimitRange creation was observed @ 09/04/24 19:43:23.759
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/04/24 19:43:23.759
  I0904 19:43:23.763050 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0904 19:43:23.763111 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/04/24 19:43:23.763
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/04/24 19:43:23.776
  I0904 19:43:23.802075 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0904 19:43:23.802130 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/04/24 19:43:23.802
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/04/24 19:43:23.821
  I0904 19:43:23.860635 21 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0904 19:43:23.860691 21 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/04/24 19:43:23.86
  STEP: Failing to create a Pod with more than max resources @ 09/04/24 19:43:23.864
  STEP: Updating a LimitRange @ 09/04/24 19:43:23.867
  STEP: Verifying LimitRange updating is effective @ 09/04/24 19:43:23.881
  STEP: Creating a Pod with less than former min resources @ 09/04/24 19:43:25.899
  STEP: Failing to create a Pod with more than max resources @ 09/04/24 19:43:25.913
  STEP: Deleting a LimitRange @ 09/04/24 19:43:25.916
  STEP: Verifying the LimitRange was deleted @ 09/04/24 19:43:25.95
  I0904 19:43:31.157424 21 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/04/24 19:43:31.157
  I0904 19:43:31.182206 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4449" for this suite. @ 09/04/24 19:43:31.203
â€¢ [8.141 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 09/04/24 19:43:31.218
  I0904 19:43:31.218810 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 19:43:31.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:43:31.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:43:31.356
  STEP: set up a multi version CRD @ 09/04/24 19:43:31.359
  I0904 19:43:31.360097 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: mark a version not serverd @ 09/04/24 19:43:36.484
  STEP: check the unserved version gets removed @ 09/04/24 19:43:36.52
  STEP: check the other version is not changed @ 09/04/24 19:43:38.024
  I0904 19:43:41.376941 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5874" for this suite. @ 09/04/24 19:43:41.383
â€¢ [10.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 09/04/24 19:43:41.399
  I0904 19:43:41.399489 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 19:43:41.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:43:41.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:43:41.559
  STEP: Creating a pod to test downward api env vars @ 09/04/24 19:43:41.562
  STEP: Saw pod success @ 09/04/24 19:43:45.808
  I0904 19:43:45.812398 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downward-api-4009570c-c3e8-4624-bbcc-113572a3d1a4 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 19:43:45.819
  I0904 19:43:45.859194 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1406" for this suite. @ 09/04/24 19:43:45.863
â€¢ [4.482 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 09/04/24 19:43:45.882
  I0904 19:43:45.882060 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 19:43:45.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:43:45.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:43:45.939
  STEP: Creating configMap with name configmap-test-volume-a5ca6789-3e9b-4cc5-95e4-614885809b02 @ 09/04/24 19:43:45.942
  STEP: Creating a pod to test consume configMaps @ 09/04/24 19:43:45.954
  STEP: Saw pod success @ 09/04/24 19:43:50.396
  I0904 19:43:50.399734 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-configmaps-241e0977-774d-4ae1-b9f9-97ab704ff4d7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 19:43:50.406
  I0904 19:43:50.462167 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8183" for this suite. @ 09/04/24 19:43:50.467
â€¢ [4.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 09/04/24 19:43:50.491
  I0904 19:43:50.491234 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 19:43:50.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:43:50.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:43:50.537
  STEP: Creating configMap with name configmap-test-upd-7c31955f-7458-48a0-9094-1fa31baf184c @ 09/04/24 19:43:50.567
  STEP: Creating the pod @ 09/04/24 19:43:50.582
  STEP: Updating configmap configmap-test-upd-7c31955f-7458-48a0-9094-1fa31baf184c @ 09/04/24 19:43:52.706
  STEP: waiting to observe update in volume @ 09/04/24 19:43:52.716
  I0904 19:43:54.730661 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8416" for this suite. @ 09/04/24 19:43:54.735
â€¢ [4.261 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/04/24 19:43:54.754
  I0904 19:43:54.754045 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename subpath @ 09/04/24 19:43:54.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:43:54.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:43:54.8
  STEP: Setting up data @ 09/04/24 19:43:54.803
  STEP: Creating pod pod-subpath-test-configmap-st74 @ 09/04/24 19:43:54.831
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/24 19:43:54.831
  STEP: Saw pod success @ 09/04/24 19:44:19.128
  I0904 19:44:19.130934 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod pod-subpath-test-configmap-st74 container test-container-subpath-configmap-st74: <nil>
  STEP: delete the pod @ 09/04/24 19:44:19.138
  STEP: Deleting pod pod-subpath-test-configmap-st74 @ 09/04/24 19:44:19.193
  I0904 19:44:19.193586 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-st74" in namespace "subpath-355"
  I0904 19:44:19.200025 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-355" for this suite. @ 09/04/24 19:44:19.208
â€¢ [24.476 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/04/24 19:44:19.23
  I0904 19:44:19.230284 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename proxy @ 09/04/24 19:44:19.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:44:19.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:44:19.374
  I0904 19:44:19.377804 21 proxy.go:293] Creating pod...
  I0904 19:44:21.716497 21 proxy.go:317] Creating service...
  I0904 19:44:21.742031 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/pods/agnhost/proxy/some/path/with/DELETE
  I0904 19:44:21.751791 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0904 19:44:21.751850 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/pods/agnhost/proxy/some/path/with/GET
  I0904 19:44:21.764614 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0904 19:44:21.764799 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/pods/agnhost/proxy/some/path/with/HEAD
  I0904 19:44:21.768471 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0904 19:44:21.768524 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/pods/agnhost/proxy/some/path/with/OPTIONS
  I0904 19:44:21.772579 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0904 19:44:21.772756 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/pods/agnhost/proxy/some/path/with/PATCH
  I0904 19:44:21.776826 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0904 19:44:21.777042 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/pods/agnhost/proxy/some/path/with/POST
  I0904 19:44:21.781188 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0904 19:44:21.781250 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/pods/agnhost/proxy/some/path/with/PUT
  I0904 19:44:21.784346 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0904 19:44:21.784480 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/services/test-service/proxy/some/path/with/DELETE
  I0904 19:44:21.789203 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0904 19:44:21.789257 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/services/test-service/proxy/some/path/with/GET
  I0904 19:44:21.795366 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0904 19:44:21.795419 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/services/test-service/proxy/some/path/with/HEAD
  I0904 19:44:21.799825 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0904 19:44:21.799868 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/services/test-service/proxy/some/path/with/OPTIONS
  I0904 19:44:21.804584 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0904 19:44:21.804628 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/services/test-service/proxy/some/path/with/PATCH
  I0904 19:44:21.809588 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0904 19:44:21.809636 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/services/test-service/proxy/some/path/with/POST
  I0904 19:44:21.814399 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0904 19:44:21.814458 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-3222/services/test-service/proxy/some/path/with/PUT
  I0904 19:44:21.818890 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0904 19:44:21.819148 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3222" for this suite. @ 09/04/24 19:44:21.823
â€¢ [2.627 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/04/24 19:44:21.857
  I0904 19:44:21.857466 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/24 19:44:21.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:44:21.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:44:21.913
  I0904 19:44:21.916394 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:44:22.495017 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5191" for this suite. @ 09/04/24 19:44:22.528
â€¢ [0.700 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/04/24 19:44:22.558
  I0904 19:44:22.558042 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-runtime @ 09/04/24 19:44:22.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:44:22.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:44:22.62
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/04/24 19:44:22.652
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/04/24 19:44:41.788
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/04/24 19:44:41.792
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/04/24 19:44:41.8
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/04/24 19:44:41.8
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/04/24 19:44:41.872
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/04/24 19:44:44.902
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/04/24 19:44:45.914
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/04/24 19:44:45.921
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/04/24 19:44:45.922
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/04/24 19:44:45.991
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/04/24 19:44:47.018
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/04/24 19:44:49.031
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/04/24 19:44:49.037
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/04/24 19:44:49.037
  I0904 19:44:49.083776 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8816" for this suite. @ 09/04/24 19:44:49.189
â€¢ [26.649 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 09/04/24 19:44:49.208
  I0904 19:44:49.208271 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename gc @ 09/04/24 19:44:49.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:44:49.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:44:49.251
  I0904 19:44:49.592390 21 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"f5c9b09e-ab23-4bf3-9315-21348d79d837", Controller:(*bool)(0xc004f5a072), BlockOwnerDeletion:(*bool)(0xc004f5a073)}}
  I0904 19:44:49.626523 21 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"7339df9c-a19d-4609-a87d-b7823f32660c", Controller:(*bool)(0xc004e34dea), BlockOwnerDeletion:(*bool)(0xc004e34deb)}}
  I0904 19:44:49.681782 21 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"dfaf875d-59b7-4c83-83d1-0ba716a5f7a2", Controller:(*bool)(0xc004f5a342), BlockOwnerDeletion:(*bool)(0xc004f5a343)}}
  I0904 19:44:55.113408 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7221" for this suite. @ 09/04/24 19:44:55.118
â€¢ [5.926 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/04/24 19:44:55.134
  I0904 19:44:55.134656 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 19:44:55.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:44:55.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:44:55.178
  STEP: Creating pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 in namespace container-probe-5308 @ 09/04/24 19:44:55.182
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 19:44:57.245
  I0904 19:44:57.251337 21 container_probe.go:1749] Initial restart count of pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 is 0
  I0904 19:44:57.254891 21 container_probe.go:1759] Get pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 in namespace container-probe-5308
  I0904 19:44:59.261718 21 container_probe.go:1759] Get pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 in namespace container-probe-5308
  I0904 19:45:01.271501 21 container_probe.go:1759] Get pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 in namespace container-probe-5308
  I0904 19:45:03.282158 21 container_probe.go:1759] Get pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 in namespace container-probe-5308
  I0904 19:45:05.286568 21 container_probe.go:1759] Get pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 in namespace container-probe-5308
  I0904 19:45:07.290659 21 container_probe.go:1759] Get pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 in namespace container-probe-5308
  I0904 19:45:09.295388 21 container_probe.go:1759] Get pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 in namespace container-probe-5308
  I0904 19:45:11.299138 21 container_probe.go:1759] Get pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 in namespace container-probe-5308
  I0904 19:45:13.303698 21 container_probe.go:1759] Get pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 in namespace container-probe-5308
  I0904 19:45:15.307814 21 container_probe.go:1759] Get pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 in namespace container-probe-5308
  I0904 19:45:17.312313 21 container_probe.go:1759] Get pod liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 in namespace container-probe-5308
  I0904 19:45:17.312372 21 container_probe.go:1763] Restart count of pod container-probe-5308/liveness-27543f08-aaf7-4c47-a657-aeb62ff770d2 is now 1 (20.060964253s elapsed)
  STEP: deleting the pod @ 09/04/24 19:45:17.312
  I0904 19:45:17.344245 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5308" for this suite. @ 09/04/24 19:45:17.348
â€¢ [22.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 09/04/24 19:45:17.38
  I0904 19:45:17.380497 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename job @ 09/04/24 19:45:17.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:45:17.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:45:17.43
  STEP: Creating a suspended job @ 09/04/24 19:45:17.437
  STEP: Patching the Job @ 09/04/24 19:45:17.457
  STEP: Watching for Job to be patched @ 09/04/24 19:45:17.478
  I0904 19:45:17.481368 21 job.go:1330] Event ADDED observed for Job e2e-6ssb8 in namespace job-9304 with labels: map[e2e-job-label:e2e-6ssb8] and annotations: map[]
  I0904 19:45:17.481463 21 job.go:1333] Event MODIFIED found for Job e2e-6ssb8 in namespace job-9304 with labels: map[e2e-6ssb8:patched e2e-job-label:e2e-6ssb8] and annotations: map[]
  STEP: Updating the job @ 09/04/24 19:45:17.481
  STEP: Watching for Job to be updated @ 09/04/24 19:45:17.522
  I0904 19:45:17.526237 21 job.go:1333] Event MODIFIED found for Job e2e-6ssb8 in namespace job-9304 with labels: map[e2e-6ssb8:patched e2e-job-label:e2e-6ssb8] and annotations: map[updated:true]
  I0904 19:45:17.526291 21 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/04/24 19:45:17.526
  I0904 19:45:17.542782 21 job.go:1233] Job: e2e-6ssb8 as labels: map[e2e-6ssb8:patched e2e-job-label:e2e-6ssb8]
  STEP: Waiting for job to complete @ 09/04/24 19:45:17.542
  STEP: Delete a job collection with a labelselector @ 09/04/24 19:45:27.555
  STEP: Watching for Job to be deleted @ 09/04/24 19:45:28.076
  I0904 19:45:28.079225 21 job.go:1330] Event MODIFIED observed for Job e2e-6ssb8 in namespace job-9304 with labels: map[e2e-6ssb8:patched e2e-job-label:e2e-6ssb8] and annotations: map[updated:true]
  I0904 19:45:28.079290 21 job.go:1330] Event MODIFIED observed for Job e2e-6ssb8 in namespace job-9304 with labels: map[e2e-6ssb8:patched e2e-job-label:e2e-6ssb8] and annotations: map[updated:true]
  I0904 19:45:28.079316 21 job.go:1330] Event MODIFIED observed for Job e2e-6ssb8 in namespace job-9304 with labels: map[e2e-6ssb8:patched e2e-job-label:e2e-6ssb8] and annotations: map[updated:true]
  I0904 19:45:28.079463 21 job.go:1330] Event MODIFIED observed for Job e2e-6ssb8 in namespace job-9304 with labels: map[e2e-6ssb8:patched e2e-job-label:e2e-6ssb8] and annotations: map[updated:true]
  I0904 19:45:28.079510 21 job.go:1330] Event MODIFIED observed for Job e2e-6ssb8 in namespace job-9304 with labels: map[e2e-6ssb8:patched e2e-job-label:e2e-6ssb8] and annotations: map[updated:true]
  I0904 19:45:28.079533 21 job.go:1330] Event MODIFIED observed for Job e2e-6ssb8 in namespace job-9304 with labels: map[e2e-6ssb8:patched e2e-job-label:e2e-6ssb8] and annotations: map[updated:true]
  I0904 19:45:28.079608 21 job.go:1330] Event MODIFIED observed for Job e2e-6ssb8 in namespace job-9304 with labels: map[e2e-6ssb8:patched e2e-job-label:e2e-6ssb8] and annotations: map[updated:true]
  I0904 19:45:28.079742 21 job.go:1333] Event DELETED found for Job e2e-6ssb8 in namespace job-9304 with labels: map[e2e-6ssb8:patched e2e-job-label:e2e-6ssb8] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/04/24 19:45:28.079
  I0904 19:45:28.162651 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9304" for this suite. @ 09/04/24 19:45:28.18
â€¢ [10.821 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 09/04/24 19:45:28.202
  I0904 19:45:28.202046 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename security-context @ 09/04/24 19:45:28.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:45:28.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:45:28.238
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/04/24 19:45:28.24
  STEP: Saw pod success @ 09/04/24 19:45:32.475
  I0904 19:45:32.479137 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod security-context-28925b76-6488-4967-bf0a-04b8ace87060 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 19:45:32.495
  I0904 19:45:32.531133 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3264" for this suite. @ 09/04/24 19:45:32.536
â€¢ [4.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/04/24 19:45:32.556
  I0904 19:45:32.556059 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 19:45:32.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:45:32.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:45:32.634
  STEP: Setting up server cert @ 09/04/24 19:45:32.735
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 19:45:33.165
  STEP: Deploying the webhook pod @ 09/04/24 19:45:33.283
  STEP: Wait for the deployment to be ready @ 09/04/24 19:45:33.317
  I0904 19:45:33.520523 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/24 19:45:35.539
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 19:45:35.567
  I0904 19:45:36.567740 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/04/24 19:45:36.575
  STEP: verifying the mutating webhook match conditions @ 09/04/24 19:45:36.592
  STEP: updating the mutating webhook match conditions @ 09/04/24 19:45:36.596
  STEP: verifying the mutating webhook match conditions @ 09/04/24 19:45:36.621
  I0904 19:45:36.738634 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8482" for this suite. @ 09/04/24 19:45:36.743
  STEP: Destroying namespace "webhook-markers-749" for this suite. @ 09/04/24 19:45:36.779
â€¢ [4.249 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/04/24 19:45:36.805
  I0904 19:45:36.805824 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/24 19:45:36.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:45:36.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:45:36.95
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/24 19:45:37.061
  STEP: create the pod with lifecycle hook @ 09/04/24 19:45:39.215
  STEP: delete the pod with lifecycle hook @ 09/04/24 19:45:41.261
  STEP: check prestop hook @ 09/04/24 19:45:45.299
  I0904 19:45:45.307184 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3713" for this suite. @ 09/04/24 19:45:45.312
â€¢ [8.546 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/04/24 19:45:45.352
  I0904 19:45:45.353008 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename security-context-test @ 09/04/24 19:45:45.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:45:45.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:45:45.534
  I0904 19:45:51.909370 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6626" for this suite. @ 09/04/24 19:45:52.015
â€¢ [6.678 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/04/24 19:45:52.031
  I0904 19:45:52.031610 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename subpath @ 09/04/24 19:45:52.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:45:52.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:45:52.069
  STEP: Setting up data @ 09/04/24 19:45:52.072
  STEP: Creating pod pod-subpath-test-configmap-wx9z @ 09/04/24 19:45:52.106
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/24 19:45:52.107
  STEP: Saw pod success @ 09/04/24 19:46:16.31
  I0904 19:46:16.317594 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-subpath-test-configmap-wx9z container test-container-subpath-configmap-wx9z: <nil>
  STEP: delete the pod @ 09/04/24 19:46:16.326
  STEP: Deleting pod pod-subpath-test-configmap-wx9z @ 09/04/24 19:46:16.359
  I0904 19:46:16.359826 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-wx9z" in namespace "subpath-9454"
  I0904 19:46:16.362832 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9454" for this suite. @ 09/04/24 19:46:16.366
â€¢ [24.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/04/24 19:46:16.381
  I0904 19:46:16.381345 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename endpointslice @ 09/04/24 19:46:16.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:46:16.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:46:16.536
  STEP: getting /apis @ 09/04/24 19:46:16.539
  STEP: getting /apis/discovery.k8s.io @ 09/04/24 19:46:16.546
  STEP: getting /apis/discovery.k8s.iov1 @ 09/04/24 19:46:16.55
  STEP: creating @ 09/04/24 19:46:16.552
  STEP: getting @ 09/04/24 19:46:16.587
  STEP: listing @ 09/04/24 19:46:16.59
  STEP: watching @ 09/04/24 19:46:16.594
  I0904 19:46:16.594556 21 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/04/24 19:46:16.596
  STEP: cluster-wide watching @ 09/04/24 19:46:16.6
  I0904 19:46:16.600529 21 endpointslice.go:459] starting watch
  STEP: patching @ 09/04/24 19:46:16.601
  STEP: updating @ 09/04/24 19:46:16.612
  I0904 19:46:16.631141 21 endpointslice.go:482] waiting for watch events with expected annotations
  I0904 19:46:16.631224 21 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/04/24 19:46:16.631
  STEP: deleting a collection @ 09/04/24 19:46:16.655
  I0904 19:46:16.680750 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9440" for this suite. @ 09/04/24 19:46:16.686
â€¢ [0.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 09/04/24 19:46:16.698
  I0904 19:46:16.698434 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 19:46:16.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:46:16.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:46:16.735
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/04/24 19:46:16.741
  I0904 19:46:16.741811 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/04/24 19:46:23.67
  I0904 19:46:23.671374 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:46:25.489806 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:46:32.685040 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1932" for this suite. @ 09/04/24 19:46:32.692
â€¢ [16.005 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/04/24 19:46:32.704
  I0904 19:46:32.704495 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/24 19:46:32.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:46:32.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:46:32.744
  STEP: Performing setup for networking test in namespace pod-network-test-4547 @ 09/04/24 19:46:32.751
  STEP: creating a selector @ 09/04/24 19:46:32.751
  STEP: Creating the service pods in kubernetes @ 09/04/24 19:46:32.751
  I0904 19:46:32.751579 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/04/24 19:46:55.229
  I0904 19:46:57.294517 21 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0904 19:46:57.294575 21 utils.go:496] Going to poll 10.42.0.14 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0904 19:46:57.297431 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.14:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4547 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 19:46:57.297474 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:46:57.298089 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 19:46:57.298170 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4547/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.14%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0904 19:46:57.362514 21 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0904 19:46:57.362590 21 utils.go:496] Going to poll 10.42.3.68 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0904 19:46:57.367175 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.3.68:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4547 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 19:46:57.367224 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:46:57.367975 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 19:46:57.368079 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4547/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.3.68%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0904 19:46:57.424321 21 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0904 19:46:57.424369 21 utils.go:496] Going to poll 10.42.2.38 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0904 19:46:57.428268 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.38:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4547 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 19:46:57.428311 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:46:57.428981 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 19:46:57.429063 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4547/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.38%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0904 19:46:57.484070 21 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0904 19:46:57.484174 21 utils.go:496] Going to poll 10.42.1.28 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0904 19:46:57.487920 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.28:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4547 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 19:46:57.487969 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:46:57.488621 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 19:46:57.488724 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4547/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.28%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0904 19:46:57.546147 21 utils.go:513] Found all 1 expected endpoints: [netserver-3]
  I0904 19:46:57.546509 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4547" for this suite. @ 09/04/24 19:46:57.552
â€¢ [24.865 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 09/04/24 19:46:57.569
  I0904 19:46:57.569641 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 19:46:57.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:46:57.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:46:57.61
  STEP: validating cluster-info @ 09/04/24 19:46:57.615
  I0904 19:46:57.615607 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-7370 cluster-info'
  I0904 19:46:57.715283 21 builder.go:146] stderr: ""
  I0904 19:46:57.715349 21 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0904 19:46:57.715482 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7370" for this suite. @ 09/04/24 19:46:57.719
â€¢ [0.165 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 09/04/24 19:46:57.734
  I0904 19:46:57.734717 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 19:46:57.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:46:57.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:46:57.782
  STEP: Creating service test in namespace statefulset-3529 @ 09/04/24 19:46:57.785
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/04/24 19:46:57.806
  STEP: Creating stateful set ss in namespace statefulset-3529 @ 09/04/24 19:46:57.81
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3529 @ 09/04/24 19:46:57.838
  I0904 19:46:58.112135 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0904 19:47:07.843199 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/04/24 19:47:07.843
  I0904 19:47:07.847031 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-3529 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 19:47:07.992759 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 19:47:07.992925 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 19:47:07.992980 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 19:47:07.998049 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0904 19:47:18.200367 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0904 19:47:18.200442 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0904 19:47:18.300725 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.99999969s
  I0904 19:47:19.305995 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.922179185s
  I0904 19:47:20.815238 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.917767659s
  I0904 19:47:21.825204 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.407791722s
  I0904 19:47:23.237414 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.398591145s
  I0904 19:47:24.548769 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.986298836s
  I0904 19:47:25.755626 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.674815248s
  I0904 19:47:27.565763 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.467873325s
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3529 @ 09/04/24 19:47:28.565
  I0904 19:47:28.570163 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-3529 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 19:47:28.707283 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 19:47:28.707429 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 19:47:28.707449 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 19:47:28.712102 21 wait.go:40] Found 1 stateful pods, waiting for 3
  I0904 19:47:38.915385 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 19:47:38.915442 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 19:47:38.915463 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/04/24 19:47:38.915
  STEP: Scale down will halt with unhealthy stateful pod @ 09/04/24 19:47:38.915
  I0904 19:47:38.922812 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-3529 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 19:47:39.057506 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 19:47:39.057565 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 19:47:39.057587 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 19:47:39.057648 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-3529 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 19:47:39.197055 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 19:47:39.197129 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 19:47:39.197171 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 19:47:39.197411 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-3529 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 19:47:39.369614 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 19:47:39.369677 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 19:47:39.369696 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 19:47:39.369713 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0904 19:47:39.373054 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0904 19:47:49.681528 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0904 19:47:49.681585 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0904 19:47:49.681603 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0904 19:47:49.781281 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.99999955s
  I0904 19:47:51.088152 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.919473598s
  I0904 19:47:52.213097 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.613491916s
  I0904 19:47:53.519708 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.487633139s
  I0904 19:47:54.525031 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.18183948s
  I0904 19:47:56.035283 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.176554489s
  I0904 19:47:57.443090 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.666480569s
  I0904 19:47:58.650098 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.257782187s
  I0904 19:47:59.654947 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 51.625269ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3529 @ 09/04/24 19:48:00.656
  I0904 19:48:00.863302 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-3529 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 19:48:00.993047 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 19:48:00.993116 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 19:48:00.993137 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 19:48:00.993308 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-3529 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 19:48:01.129495 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 19:48:01.129584 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 19:48:01.129634 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 19:48:01.129696 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=statefulset-3529 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 19:48:01.263673 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 19:48:01.263738 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 19:48:01.263758 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 19:48:01.263777 21 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/04/24 19:48:11.473
  I0904 19:48:11.473591 21 statefulset.go:138] Deleting all statefulset in ns statefulset-3529
  I0904 19:48:11.477282 21 rest.go:150] Scaling statefulset ss to 0
  I0904 19:48:11.483765 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 19:48:11.486762 21 rest.go:88] Deleting statefulset ss
  I0904 19:48:11.522003 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3529" for this suite. @ 09/04/24 19:48:11.535
â€¢ [73.819 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/04/24 19:48:11.556
  I0904 19:48:11.556503 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 19:48:11.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:48:11.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:48:11.654
  I0904 19:48:11.788084 21 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/24 19:48:11.801
  I0904 19:48:12.181794 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:48:12.181841 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:48:13.387878 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 19:48:13.387924 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:48:13.811610 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:48:13.811797 21 fixtures.go:130] Node ip-172-31-15-190.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:48:14.916842 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 19:48:14.916917 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/04/24 19:48:15.034
  STEP: Check that daemon pods images are updated. @ 09/04/24 19:48:15.055
  I0904 19:48:15.093052 21 daemon_set.go:1193] Wrong image for pod: daemon-set-2vsmw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 19:48:15.093106 21 daemon_set.go:1193] Wrong image for pod: daemon-set-gzk68. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 19:48:15.093123 21 daemon_set.go:1193] Wrong image for pod: daemon-set-rw7sb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 19:48:16.060820 21 daemon_set.go:1193] Wrong image for pod: daemon-set-2vsmw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 19:48:16.060874 21 daemon_set.go:1198] Pod daemon-set-d6fbc is not available
  I0904 19:48:16.060890 21 daemon_set.go:1193] Wrong image for pod: daemon-set-gzk68. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 19:48:16.060936 21 daemon_set.go:1193] Wrong image for pod: daemon-set-rw7sb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 19:48:17.062611 21 daemon_set.go:1193] Wrong image for pod: daemon-set-2vsmw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 19:48:17.062734 21 daemon_set.go:1198] Pod daemon-set-gc9wv is not available
  I0904 19:48:17.062756 21 daemon_set.go:1193] Wrong image for pod: daemon-set-rw7sb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 19:48:18.183690 21 daemon_set.go:1193] Wrong image for pod: daemon-set-2vsmw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 19:48:18.183957 21 daemon_set.go:1198] Pod daemon-set-gc9wv is not available
  I0904 19:48:18.184069 21 daemon_set.go:1193] Wrong image for pod: daemon-set-rw7sb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 19:48:19.060160 21 daemon_set.go:1193] Wrong image for pod: daemon-set-2vsmw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 19:48:19.060371 21 daemon_set.go:1198] Pod daemon-set-6zwj4 is not available
  I0904 19:48:21.060355 21 daemon_set.go:1198] Pod daemon-set-drxmz is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/04/24 19:48:21.165
  I0904 19:48:21.457025 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 19:48:21.457252 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/24 19:48:22.307
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6787, will wait for the garbage collector to delete the pods @ 09/04/24 19:48:22.307
  I0904 19:48:22.380691 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 20.302844ms
  I0904 19:48:22.481740 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.050373ms
  I0904 19:48:23.585231 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:48:23.585417 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 19:48:23.713664 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"210921"},"items":null}

  I0904 19:48:24.623959 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"210923"},"items":null}

  I0904 19:48:24.640979 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6787" for this suite. @ 09/04/24 19:48:24.644
â€¢ [13.098 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/04/24 19:48:24.654
  I0904 19:48:24.654447 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sysctl @ 09/04/24 19:48:24.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:48:24.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:48:24.891
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/04/24 19:48:24.897
  I0904 19:48:25.935358 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1436" for this suite. @ 09/04/24 19:48:26.04
â€¢ [1.397 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/04/24 19:48:26.052
  I0904 19:48:26.052210 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename containers @ 09/04/24 19:48:26.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:48:26.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:48:26.132
  STEP: Creating a pod to test override all @ 09/04/24 19:48:26.137
  STEP: Saw pod success @ 09/04/24 19:48:30.199
  I0904 19:48:30.202615 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod client-containers-c6907d7c-adb5-42b4-840c-ede50ee80f51 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 19:48:30.217
  I0904 19:48:30.265094 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9292" for this suite. @ 09/04/24 19:48:30.37
â€¢ [4.334 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/04/24 19:48:30.387
  I0904 19:48:30.387118 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename crd-webhook @ 09/04/24 19:48:30.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:48:30.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:48:30.523
  STEP: Setting up server cert @ 09/04/24 19:48:30.527
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/04/24 19:48:30.89
  STEP: Deploying the custom resource conversion webhook pod @ 09/04/24 19:48:30.902
  STEP: Wait for the deployment to be ready @ 09/04/24 19:48:30.934
  I0904 19:48:30.980059 21 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  I0904 19:48:33.048888 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 19, 48, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 48, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 48, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 48, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-5b599d56fc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/04/24 19:48:35.053
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 19:48:35.086
  I0904 19:48:36.086985 21 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0904 19:48:36.093274 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Creating a v1 custom resource @ 09/04/24 19:48:38.671
  STEP: Create a v2 custom resource @ 09/04/24 19:48:38.703
  STEP: List CRs in v1 @ 09/04/24 19:48:38.745
  STEP: List CRs in v2 @ 09/04/24 19:48:38.749
  I0904 19:48:39.393867 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1638" for this suite. @ 09/04/24 19:48:39.398
â€¢ [9.040 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 09/04/24 19:48:39.426
  I0904 19:48:39.427004 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/24 19:48:39.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:48:39.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:48:39.489
  STEP: Creating a pod to test service account token:  @ 09/04/24 19:48:39.493
  STEP: Saw pod success @ 09/04/24 19:48:43.639
  I0904 19:48:43.643774 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod test-pod-24931a89-402c-4093-a2c1-cf254cefd823 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 19:48:43.652
  I0904 19:48:43.699139 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7645" for this suite. @ 09/04/24 19:48:43.803
â€¢ [4.392 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/04/24 19:48:43.819
  I0904 19:48:43.819631 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename endpointslice @ 09/04/24 19:48:43.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:48:43.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:48:43.857
  I0904 19:48:43.881749 21 endpointslice.go:1045] Endpoints addresses: [18.116.20.223 18.217.184.65 3.145.32.45] , ports: [6443]
  I0904 19:48:43.881811 21 endpointslice.go:1075] EndpointSlices addresses: [18.116.20.223 18.217.184.65 3.145.32.45] , ports: [6443]
  I0904 19:48:43.881933 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2244" for this suite. @ 09/04/24 19:48:43.904
â€¢ [0.101 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/04/24 19:48:43.92
  I0904 19:48:43.920841 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/04/24 19:48:43.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:48:43.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:48:43.97
  I0904 19:48:43.973952 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:48:47.077425 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5632" for this suite. @ 09/04/24 19:48:47.081
â€¢ [3.175 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/04/24 19:48:47.097
  I0904 19:48:47.097553 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pods @ 09/04/24 19:48:47.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:48:47.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:48:47.128
  I0904 19:48:47.131400 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: creating the pod @ 09/04/24 19:48:47.132
  STEP: submitting the pod to kubernetes @ 09/04/24 19:48:47.132
  I0904 19:48:49.689241 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7093" for this suite. @ 09/04/24 19:48:49.699
â€¢ [2.614 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/04/24 19:48:49.711
  I0904 19:48:49.711627 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename deployment @ 09/04/24 19:48:49.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:48:49.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:48:49.82
  I0904 19:48:49.824451 21 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0904 19:48:49.840621 21 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0904 19:48:49.866390 21 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I0904 19:48:51.975982 21 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0904 19:48:51.979071 21 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0904 19:48:51.999548 21 deployment.go:313] Updating deployment test-recreate-deployment
  I0904 19:48:51.999730 21 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0904 19:48:52.269285 21 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5397",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e81eedc1-42da-4530-b6eb-cb46a8a9d125",
      ResourceVersion: (string) (len=6) "211268",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 19:48:52.682083 21 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5397",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "564ee8a1-f901-4d2c-a395-325e62de3e60",
      ResourceVersion: (string) (len=6) "211265",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "e81eedc1-42da-4530-b6eb-cb46a8a9d125",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 38 31 65 65 64  63 31 2d 34 32 64 61 2d  |\"e81eedc1-42da-|
              00000120  34 35 33 30 2d 62 36 65  62 2d 63 62 34 36 61 38  |4530-b6eb-cb46a8|
              00000130  61 39 64 31 32 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a9d125\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 19:48:52.683475 21 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0904 19:48:52.683759 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5397",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "315ae7b9-8885-4dc8-bbf9-6a48beb8146f",
      ResourceVersion: (string) (len=6) "211256",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "e81eedc1-42da-4530-b6eb-cb46a8a9d125",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 38 31 65 65 64  63 31 2d 34 32 64 61 2d  |\"e81eedc1-42da-|
              00000120  34 35 33 30 2d 62 36 65  62 2d 63 62 34 36 61 38  |4530-b6eb-cb46a8|
              00000130  61 39 64 31 32 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a9d125\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 19:48:53.292516 21 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-777mh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-777mh",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-5397",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81a6aa67-0a6a-4fcb-b62c-b97f8ab98b0e",
      ResourceVersion: (string) (len=6) "211267",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "564ee8a1-f901-4d2c-a395-325e62de3e60",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  34 65 65 38 61 31 2d 66  |d\":\"564ee8a1-f|
              00000090  39 30 31 2d 34 64 32 63  2d 61 33 39 35 2d 33 32  |901-4d2c-a395-32|
              000000a0  35 65 36 32 64 65 33 65  36 30 5c 22 7d 22 3a 7b  |5e62de3e60\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2llvm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2llvm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-5-231.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.231"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2llvm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:48:53.295328 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5397" for this suite. @ 09/04/24 19:48:53.508
â€¢ [3.849 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 09/04/24 19:48:53.561
  I0904 19:48:53.561444 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 19:48:53.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:48:53.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:48:53.609
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6489 @ 09/04/24 19:48:53.621
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/04/24 19:48:53.682
  STEP: creating service externalsvc in namespace services-6489 @ 09/04/24 19:48:53.682
  STEP: creating replication controller externalsvc in namespace services-6489 @ 09/04/24 19:48:53.749
  I0904 19:48:53.775772      21 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6489, replica count: 2
  I0904 19:48:56.826994      21 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/04/24 19:48:56.831
  I0904 19:48:56.867147 21 resource.go:361] Creating new exec pod
  I0904 19:48:58.910051 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-6489 exec execpodgk4nc -- /bin/sh -x -c nslookup clusterip-service.services-6489.svc.cluster.local'
  I0904 19:48:59.061208 21 builder.go:146] stderr: "+ nslookup clusterip-service.services-6489.svc.cluster.local\n"
  I0904 19:48:59.061264 21 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-6489.svc.cluster.local\tcanonical name = externalsvc.services-6489.svc.cluster.local.\nName:\texternalsvc.services-6489.svc.cluster.local\nAddress: 10.43.52.18\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6489, will wait for the garbage collector to delete the pods @ 09/04/24 19:48:59.061
  I0904 19:48:59.126863 21 resources.go:139] Deleting ReplicationController externalsvc took: 11.214251ms
  I0904 19:48:59.227799 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.931866ms
  I0904 19:49:02.292137 21 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0904 19:49:02.329298 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6489" for this suite. @ 09/04/24 19:49:02.342
â€¢ [8.807 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 09/04/24 19:49:02.369
  I0904 19:49:02.369047 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/24 19:49:02.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:49:02.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:49:02.41
  I0904 19:49:02.451802 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0904 19:50:02.558171 21 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/04/24 19:50:02.562
  I0904 19:50:02.633787 21 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I0904 19:50:02.675174 21 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I0904 19:50:02.746207 21 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I0904 19:50:02.793046 21 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I0904 19:50:02.880641 21 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I0904 19:50:02.914060 21 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  I0904 19:50:03.010147 21 preemption.go:266] Created pod: pod3-0-sched-preemption-medium-priority
  I0904 19:50:03.062411 21 preemption.go:266] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/04/24 19:50:03.062
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/04/24 19:50:07.133
  I0904 19:50:11.524526 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8049" for this suite. @ 09/04/24 19:50:11.529
â€¢ [69.177 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/04/24 19:50:11.546
  I0904 19:50:11.546890 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename subpath @ 09/04/24 19:50:11.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:50:11.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:50:11.582
  STEP: Setting up data @ 09/04/24 19:50:11.585
  STEP: Creating pod pod-subpath-test-secret-8qjk @ 09/04/24 19:50:11.621
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/24 19:50:11.621
  STEP: Saw pod success @ 09/04/24 19:50:36.316
  I0904 19:50:36.319383 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-subpath-test-secret-8qjk container test-container-subpath-secret-8qjk: <nil>
  STEP: delete the pod @ 09/04/24 19:50:36.334
  STEP: Deleting pod pod-subpath-test-secret-8qjk @ 09/04/24 19:50:36.362
  I0904 19:50:36.362376 21 delete.go:62] Deleting pod "pod-subpath-test-secret-8qjk" in namespace "subpath-5185"
  I0904 19:50:36.365619 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5185" for this suite. @ 09/04/24 19:50:36.369
â€¢ [24.844 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 09/04/24 19:50:36.391
  I0904 19:50:36.392080 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 19:50:36.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:50:36.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:50:36.449
  STEP: Creating service test in namespace statefulset-4886 @ 09/04/24 19:50:36.452
  STEP: Looking for a node to schedule stateful set and pod @ 09/04/24 19:50:36.463
  STEP: Creating pod with conflicting port in namespace statefulset-4886 @ 09/04/24 19:50:36.478
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4886 @ 09/04/24 19:50:36.6
  STEP: Creating statefulset with conflicting port in namespace statefulset-4886 @ 09/04/24 19:50:38.608
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4886 @ 09/04/24 19:50:38.617
  I0904 19:50:38.642277 21 statefulset.go:845] Observed stateful pod in namespace: statefulset-4886, name: ss-0, uid: a57843c1-2a16-4f7e-b89c-e5445da50df0, status phase: Pending. Waiting for statefulset controller to delete.
  I0904 19:50:38.692471 21 statefulset.go:869] Observed stateful pod in namespace: statefulset-4886, name: ss-0, uid: a57843c1-2a16-4f7e-b89c-e5445da50df0, status phase: Failed. Waiting for statefulset controller to delete.
  I0904 19:50:38.712779 21 statefulset.go:869] Observed stateful pod in namespace: statefulset-4886, name: ss-0, uid: a57843c1-2a16-4f7e-b89c-e5445da50df0, status phase: Failed. Waiting for statefulset controller to delete.
  I0904 19:50:38.721823 21 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-4886
  STEP: Removing pod with conflicting port in namespace statefulset-4886 @ 09/04/24 19:50:38.721
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4886 and will be in running state @ 09/04/24 19:50:38.804
  I0904 19:50:40.838406 21 statefulset.go:138] Deleting all statefulset in ns statefulset-4886
  I0904 19:50:40.841668 21 rest.go:150] Scaling statefulset ss to 0
  I0904 19:50:50.867276 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 19:50:50.870850 21 rest.go:88] Deleting statefulset ss
  I0904 19:50:51.015361 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4886" for this suite. @ 09/04/24 19:50:51.021
â€¢ [14.641 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/04/24 19:50:51.033
  I0904 19:50:51.033327 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename disruption @ 09/04/24 19:50:51.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:50:51.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:50:51.065
  STEP: Creating a kubernetes client @ 09/04/24 19:50:51.074
  I0904 19:50:51.074428 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename disruption-2 @ 09/04/24 19:50:51.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:50:51.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:50:51.173
  STEP: Waiting for the pdb to be processed @ 09/04/24 19:50:51.191
  STEP: Waiting for the pdb to be processed @ 09/04/24 19:50:53.208
  STEP: Waiting for the pdb to be processed @ 09/04/24 19:50:53.24
  STEP: listing a collection of PDBs across all namespaces @ 09/04/24 19:50:55.244
  STEP: listing a collection of PDBs in namespace disruption-5246 @ 09/04/24 19:50:55.247
  STEP: deleting a collection of PDBs @ 09/04/24 19:50:55.25
  STEP: Waiting for the PDB collection to be deleted @ 09/04/24 19:50:55.27
  I0904 19:50:55.273382 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1249" for this suite. @ 09/04/24 19:50:55.277
  I0904 19:50:55.297789 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5246" for this suite. @ 09/04/24 19:50:55.377
â€¢ [4.368 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/04/24 19:50:55.402
  I0904 19:50:55.402034 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename events @ 09/04/24 19:50:55.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:50:55.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:50:55.468
  STEP: Create set of events @ 09/04/24 19:50:55.472
  STEP: get a list of Events with a label in the current namespace @ 09/04/24 19:50:55.525
  STEP: delete a list of events @ 09/04/24 19:50:55.529
  I0904 19:50:55.529668 21 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/04/24 19:50:55.569
  I0904 19:50:55.572510 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5095" for this suite. @ 09/04/24 19:50:55.577
â€¢ [0.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 09/04/24 19:50:55.589
  I0904 19:50:55.589729 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 19:50:55.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:50:55.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:50:55.684
  I0904 19:50:55.690012 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/04/24 19:50:57.599
  I0904 19:50:57.599382 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 --namespace=crd-publish-openapi-9279 create -f -'
  I0904 19:50:57.816837 21 builder.go:146] stderr: ""
  I0904 19:50:57.817015 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7870-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0904 19:50:57.817098 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 --namespace=crd-publish-openapi-9279 delete e2e-test-crd-publish-openapi-7870-crds test-foo'
  I0904 19:50:57.936697 21 builder.go:146] stderr: ""
  I0904 19:50:57.936752 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7870-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0904 19:50:57.936816 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 --namespace=crd-publish-openapi-9279 apply -f -'
  I0904 19:50:58.039330 21 builder.go:146] stderr: ""
  I0904 19:50:58.039403 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7870-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0904 19:50:58.039464 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 --namespace=crd-publish-openapi-9279 delete e2e-test-crd-publish-openapi-7870-crds test-foo'
  I0904 19:50:58.134285 21 builder.go:146] stderr: ""
  I0904 19:50:58.134337 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7870-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/04/24 19:50:58.134
  I0904 19:50:58.134425 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 --namespace=crd-publish-openapi-9279 create -f -'
  I0904 19:50:58.223624 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/04/24 19:50:58.223
  I0904 19:50:58.224058 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 --namespace=crd-publish-openapi-9279 create -f -'
  I0904 19:50:58.306446 21 builder.go:135] rc: 1
  I0904 19:50:58.306583 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 --namespace=crd-publish-openapi-9279 apply -f -'
  I0904 19:50:58.417048 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/04/24 19:50:58.417
  I0904 19:50:58.417210 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 --namespace=crd-publish-openapi-9279 create -f -'
  I0904 19:50:58.556594 21 builder.go:135] rc: 1
  I0904 19:50:58.556699 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 --namespace=crd-publish-openapi-9279 apply -f -'
  I0904 19:50:58.672543 21 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/04/24 19:50:58.672
  I0904 19:50:58.672688 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 explain e2e-test-crd-publish-openapi-7870-crds'
  I0904 19:50:58.753891 21 builder.go:146] stderr: ""
  I0904 19:50:58.754082 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7870-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/04/24 19:50:58.754
  I0904 19:50:58.754553 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 explain e2e-test-crd-publish-openapi-7870-crds.metadata'
  I0904 19:50:58.840273 21 builder.go:146] stderr: ""
  I0904 19:50:58.840455 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7870-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0904 19:50:58.840734 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 explain e2e-test-crd-publish-openapi-7870-crds.spec'
  I0904 19:50:58.920875 21 builder.go:146] stderr: ""
  I0904 19:50:58.920969 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7870-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0904 19:50:58.921565 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 explain e2e-test-crd-publish-openapi-7870-crds.spec.bars'
  I0904 19:50:59.018860 21 builder.go:146] stderr: ""
  I0904 19:50:59.018960 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7870-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/04/24 19:50:59.019
  I0904 19:50:59.019335 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-9279 explain e2e-test-crd-publish-openapi-7870-crds.spec.bars2'
  I0904 19:50:59.107556 21 builder.go:135] rc: 1
  I0904 19:51:01.260336 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9279" for this suite. @ 09/04/24 19:51:01.267
â€¢ [5.687 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/04/24 19:51:01.276
  I0904 19:51:01.276856 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/04/24 19:51:01.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:01.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:01.318
  I0904 19:51:01.323056 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:51:04.407910 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8041" for this suite. @ 09/04/24 19:51:04.412
â€¢ [3.151 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/04/24 19:51:04.427
  I0904 19:51:04.428059 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename replicaset @ 09/04/24 19:51:04.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:04.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:04.463
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/04/24 19:51:04.467
  I0904 19:51:04.581396 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/24 19:51:04.581
  STEP: getting scale subresource @ 09/04/24 19:51:06.593
  STEP: updating a scale subresource @ 09/04/24 19:51:06.596
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/04/24 19:51:06.611
  STEP: Patch a scale subresource @ 09/04/24 19:51:06.614
  I0904 19:51:06.644695 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6376" for this suite. @ 09/04/24 19:51:06.762
â€¢ [2.364 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/04/24 19:51:06.793
  I0904 19:51:06.793327 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename ingress @ 09/04/24 19:51:06.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:07.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:07.035
  STEP: getting /apis @ 09/04/24 19:51:07.039
  STEP: getting /apis/networking.k8s.io @ 09/04/24 19:51:07.05
  STEP: getting /apis/networking.k8s.iov1 @ 09/04/24 19:51:07.051
  STEP: creating @ 09/04/24 19:51:07.054
  STEP: getting @ 09/04/24 19:51:07.107
  STEP: listing @ 09/04/24 19:51:07.117
  STEP: watching @ 09/04/24 19:51:07.12
  I0904 19:51:07.120240 21 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/04/24 19:51:07.121
  STEP: cluster-wide watching @ 09/04/24 19:51:07.124
  I0904 19:51:07.124422 21 ingress.go:198] starting watch
  STEP: patching @ 09/04/24 19:51:07.125
  STEP: updating @ 09/04/24 19:51:07.146
  I0904 19:51:07.162009 21 ingress.go:221] waiting for watch events with expected annotations
  I0904 19:51:07.162082 21 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/04/24 19:51:07.162
  STEP: updating /status @ 09/04/24 19:51:07.173
  STEP: get /status @ 09/04/24 19:51:07.225
  STEP: deleting @ 09/04/24 19:51:07.228
  STEP: deleting a collection @ 09/04/24 19:51:07.242
  I0904 19:51:07.281155 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-5976" for this suite. @ 09/04/24 19:51:07.285
â€¢ [0.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/04/24 19:51:07.305
  I0904 19:51:07.305818 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename apf @ 09/04/24 19:51:07.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:07.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:07.587
  STEP: getting /apis @ 09/04/24 19:51:07.59
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/04/24 19:51:07.595
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/04/24 19:51:07.596
  STEP: creating @ 09/04/24 19:51:07.597
  STEP: getting @ 09/04/24 19:51:07.662
  STEP: listing @ 09/04/24 19:51:07.665
  STEP: watching @ 09/04/24 19:51:07.673
  I0904 19:51:07.673626 21 flowcontrol.go:394] starting watch
  STEP: patching @ 09/04/24 19:51:07.674
  STEP: updating @ 09/04/24 19:51:07.698
  I0904 19:51:07.713948 21 flowcontrol.go:422] waiting for watch events with expected annotations
  I0904 19:51:07.714013 21 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/04/24 19:51:07.714
  STEP: patching /status @ 09/04/24 19:51:07.717
  STEP: updating /status @ 09/04/24 19:51:07.733
  STEP: deleting @ 09/04/24 19:51:07.788
  STEP: deleting a collection @ 09/04/24 19:51:07.803
  I0904 19:51:07.825883 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6817" for this suite. @ 09/04/24 19:51:07.829
â€¢ [0.533 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/04/24 19:51:07.838
  I0904 19:51:07.838753 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename podtemplate @ 09/04/24 19:51:07.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:07.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:07.929
  STEP: Create a pod template @ 09/04/24 19:51:07.933
  STEP: Replace a pod template @ 09/04/24 19:51:07.958
  I0904 19:51:07.975704 21 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0904 19:51:07.975942 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3832" for this suite. @ 09/04/24 19:51:07.979
â€¢ [0.151 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 09/04/24 19:51:07.99
  I0904 19:51:07.990739 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 19:51:07.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:08.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:08.227
  I0904 19:51:08.230589 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-268 create -f -'
  I0904 19:51:08.386173 21 builder.go:146] stderr: ""
  I0904 19:51:08.386379 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0904 19:51:08.386444 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-268 create -f -'
  I0904 19:51:08.582668 21 builder.go:146] stderr: ""
  I0904 19:51:08.582714 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/04/24 19:51:08.582
  I0904 19:51:09.598274 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 19:51:09.598353 21 framework.go:733] Found 0 / 1
  I0904 19:51:10.998991 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 19:51:10.999064 21 framework.go:733] Found 1 / 1
  I0904 19:51:10.999093 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0904 19:51:11.002047 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 19:51:11.002079 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0904 19:51:11.002137 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-268 describe pod agnhost-primary-zlscs'
  I0904 19:51:11.093517 21 builder.go:146] stderr: ""
  I0904 19:51:11.093626 21 builder.go:147] stdout: "Name:             agnhost-primary-zlscs\nNamespace:        kubectl-268\nPriority:         0\nService Account:  default\nNode:             ip-172-31-15-190.us-east-2.compute.internal/172.31.15.190\nStart Time:       Wed, 04 Sep 2024 19:51:09 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.42.3.85\nIPs:\n  IP:           10.42.3.85\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://5ffc8d9e408ee12a1b9842e808a7c498e29e645d2dde2db0480a330411258f02\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 04 Sep 2024 19:51:09 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-ftrnw (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-ftrnw:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-268/agnhost-primary-zlscs to ip-172-31-15-190.us-east-2.compute.internal\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I0904 19:51:11.093704 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-268 describe rc agnhost-primary'
  I0904 19:51:11.186104 21 builder.go:146] stderr: ""
  I0904 19:51:11.186178 21 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-268\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-zlscs\n"
  I0904 19:51:11.186265 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-268 describe service agnhost-primary'
  I0904 19:51:11.286603 21 builder.go:146] stderr: ""
  I0904 19:51:11.286692 21 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-268\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.43.235.95\nIPs:                      10.43.235.95\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.42.3.85:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0904 19:51:11.392078 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-268 describe node ip-172-31-11-100.us-east-2.compute.internal'
  I0904 19:51:11.503731 21 builder.go:146] stderr: ""
  I0904 19:51:11.504127 21 builder.go:147] stdout: "Name:               ip-172-31-11-100.us-east-2.compute.internal\nRoles:              control-plane,etcd,master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=k3s\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-11-100.us-east-2.compute.internal\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/master=true\n                    node.kubernetes.io/instance-type=k3s\n                    role-control-plane=true\n                    role-etcd=true\n                    role-worker=true\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.11.100\n                    etcd.k3s.cattle.io/local-snapshots-timestamp: 2024-09-04T12:00:01Z\n                    etcd.k3s.cattle.io/node-address: 172.31.11.100\n                    etcd.k3s.cattle.io/node-name: ip-172-31-11-100.us-east-2.compute.internal-3161f88c\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"12:41:44:8b:6a:29\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.11.100\n                    k3s.io/encryption-config-hash: start-aeba90fd1cd5ab89dbd4b4c3262e7c6ba0ede0e005508a252e83eb990daed2d3\n                    k3s.io/external-ip: 3.145.32.45\n                    k3s.io/hostname: ip-172-31-11-100\n                    k3s.io/internal-ip: 172.31.11.100\n                    k3s.io/node-args:\n                      [\"server\",\"--write-kubeconfig-mode\",\"0644\",\"--tls-san\",\"fake.fqdn.value\",\"--node-name\",\"ip-172-31-11-100.us-east-2.compute.internal\",\"--pr...\n                    k3s.io/node-config-hash: UQCC56MT3ZL4GHVVMHFQFWRC44HMR3AE2E5VALB2FCMXXPHJMVTA====\n                    k3s.io/node-env: {}\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 04 Sep 2024 03:31:03 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-11-100.us-east-2.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 04 Sep 2024 19:51:04 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  EtcdIsVoter      True    Wed, 04 Sep 2024 19:49:52 +0000   Wed, 04 Sep 2024 13:31:22 +0000   MemberNotLearner             Node is a voting member of the etcd cluster\n  MemoryPressure   False   Wed, 04 Sep 2024 19:50:25 +0000   Wed, 04 Sep 2024 03:31:03 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Wed, 04 Sep 2024 19:50:25 +0000   Wed, 04 Sep 2024 03:31:03 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Wed, 04 Sep 2024 19:50:25 +0000   Wed, 04 Sep 2024 03:31:03 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Wed, 04 Sep 2024 19:50:25 +0000   Wed, 04 Sep 2024 03:31:03 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.11.100\n  ExternalIP:  3.145.32.45\n  Hostname:    ip-172-31-11-100\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      20937708Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3937656Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      20368202327\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3937656Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 ec24cd3b9bfa11b7fe2622de31370afb\n  System UUID:                ec24cd3b-9bfa-11b7-fe26-22de31370afb\n  Boot ID:                    f26edfd1-b760-4925-8f1a-c4d5bfc5b348\n  Kernel Version:             5.14.21-150500.55.44-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP5\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.20-k3s1\n  Kubelet Version:            v1.31.0+k3s1\n  Kube-Proxy Version:         \nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nProviderID:                   k3s://ip-172-31-11-100.us-east-2.compute.internal\nNon-terminated Pods:          (7 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-5dd589bf46-5s5rv                                   100m (5%)     0 (0%)      70Mi (1%)        170Mi (4%)     16h\n  kube-system                 local-path-provisioner-846b9dcb6c-qlwlf                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         16h\n  kube-system                 metrics-server-5dc58b587c-blxn9                            100m (5%)     0 (0%)      70Mi (1%)        0 (0%)         16h\n  kube-system                 svclb-traefik-b676ce4a-bthjx                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         16h\n  kube-system                 traefik-7f4b44bf74-jvxjf                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         16h\n  replicaset-6376             test-rs-v4jmz                                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         5s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-lldsg    0 (0%)        0 (0%)      0 (0%)           0 (0%)         33m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    200m (10%)  0 (0%)\n  memory                 140Mi (3%)  170Mi (4%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:                  <none>\n"
  I0904 19:51:11.504267 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-268 describe namespace kubectl-268'
  I0904 19:51:11.597296 21 builder.go:146] stderr: ""
  I0904 19:51:11.597405 21 builder.go:147] stdout: "Name:         kubectl-268\nLabels:       e2e-framework=kubectl\n              e2e-run=13be9ef1-9f48-4b5c-aed9-7fa53ea9d482\n              kubernetes.io/metadata.name=kubectl-268\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0904 19:51:11.597752 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-268" for this suite. @ 09/04/24 19:51:11.601
â€¢ [3.626 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/04/24 19:51:11.616
  I0904 19:51:11.616725 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename subjectreview @ 09/04/24 19:51:11.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:11.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:11.705
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1357" @ 09/04/24 19:51:11.708
  I0904 19:51:11.716855 21 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-1357:e2e"
  I0904 19:51:11.716923 21 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1357"}
  I0904 19:51:11.716940 21 subjectreviews.go:71] saUID: "064c9218-53fe-4df5-bc6b-25b837223f56"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1357:e2e" @ 09/04/24 19:51:11.716
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1357:e2e" @ 09/04/24 19:51:11.717
  I0904 19:51:11.719531 21 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1357:e2e" api 'list' configmaps in "subjectreview-1357" namespace @ 09/04/24 19:51:11.719
  I0904 19:51:11.721076 21 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1357:e2e" @ 09/04/24 19:51:11.721
  I0904 19:51:11.723255 21 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0904 19:51:11.723292 21 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0904 19:51:11.723420 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1357" for this suite. @ 09/04/24 19:51:11.727
â€¢ [0.129 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/04/24 19:51:11.745
  I0904 19:51:11.746047 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename replicaset @ 09/04/24 19:51:11.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:11.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:11.819
  I0904 19:51:11.821790 21 replica_set.go:191] Creating ReplicaSet my-hostname-basic-e7dfe0a7-72f5-4055-bf06-9e086c159f7f
  I0904 19:51:11.841802 21 resource.go:87] Pod name my-hostname-basic-e7dfe0a7-72f5-4055-bf06-9e086c159f7f: Found 0 pods out of 1
  I0904 19:51:16.847303 21 resource.go:87] Pod name my-hostname-basic-e7dfe0a7-72f5-4055-bf06-9e086c159f7f: Found 1 pods out of 1
  I0904 19:51:16.847514 21 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-e7dfe0a7-72f5-4055-bf06-9e086c159f7f" is running
  I0904 19:51:16.850867 21 replica_set.go:220] Pod "my-hostname-basic-e7dfe0a7-72f5-4055-bf06-9e086c159f7f-v8kbc" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 19:51:13 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 19:51:12 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 19:51:13 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 19:51:13 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-04 19:51:12 +0000 UTC Reason: Message:}])
  I0904 19:51:16.850940 21 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/04/24 19:51:16.85
  I0904 19:51:16.862063 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7997" for this suite. @ 09/04/24 19:51:16.865
â€¢ [5.130 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 09/04/24 19:51:16.876
  I0904 19:51:16.876862 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 19:51:16.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:16.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:16.937
  STEP: Setting up server cert @ 09/04/24 19:51:17.041
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 19:51:17.411
  STEP: Deploying the webhook pod @ 09/04/24 19:51:17.423
  STEP: Wait for the deployment to be ready @ 09/04/24 19:51:17.456
  I0904 19:51:17.478387 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0904 19:51:19.604586 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 19, 51, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 51, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 19, 51, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 19, 51, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/04/24 19:51:21.616
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 19:51:21.639
  I0904 19:51:22.640641 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/04/24 19:51:22.646
  I0904 19:51:23.348706 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3545" for this suite. @ 09/04/24 19:51:23.431
  STEP: Destroying namespace "webhook-markers-5307" for this suite. @ 09/04/24 19:51:23.443
â€¢ [6.578 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 09/04/24 19:51:23.455
  I0904 19:51:23.455455 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 19:51:23.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:23.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:23.596
  STEP: Creating configMap with name cm-test-opt-del-9ef82a01-b95c-4418-ac3c-75f92accfb9b @ 09/04/24 19:51:23.705
  STEP: Creating configMap with name cm-test-opt-upd-b60917e6-1ed0-457f-9ac4-7ee3cc7672e7 @ 09/04/24 19:51:23.714
  STEP: Creating the pod @ 09/04/24 19:51:23.723
  STEP: Deleting configmap cm-test-opt-del-9ef82a01-b95c-4418-ac3c-75f92accfb9b @ 09/04/24 19:51:25.791
  STEP: Updating configmap cm-test-opt-upd-b60917e6-1ed0-457f-9ac4-7ee3cc7672e7 @ 09/04/24 19:51:25.801
  STEP: Creating configMap with name cm-test-opt-create-77582815-ef67-4a50-be32-381e3eb8020d @ 09/04/24 19:51:25.81
  STEP: waiting to observe update in volume @ 09/04/24 19:51:25.827
  I0904 19:51:29.859722 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7398" for this suite. @ 09/04/24 19:51:30.064
â€¢ [6.619 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/04/24 19:51:30.075
  I0904 19:51:30.075585 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename discovery @ 09/04/24 19:51:30.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:30.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:30.219
  STEP: Setting up server cert @ 09/04/24 19:51:30.223
  STEP: Requesting APIResourceList from "/api/v1" @ 09/04/24 19:51:31.17
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/04/24 19:51:31.172
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/04/24 19:51:31.174
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/04/24 19:51:31.175
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/04/24 19:51:31.176
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/04/24 19:51:31.178
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/04/24 19:51:31.179
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/04/24 19:51:31.181
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/04/24 19:51:31.182
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/04/24 19:51:31.184
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/04/24 19:51:31.186
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/04/24 19:51:31.188
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/04/24 19:51:31.19
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/04/24 19:51:31.193
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/04/24 19:51:31.195
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/04/24 19:51:31.199
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/04/24 19:51:31.201
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/04/24 19:51:31.202
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/04/24 19:51:31.204
  I0904 19:51:31.207285 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4752" for this suite. @ 09/04/24 19:51:31.211
â€¢ [1.149 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/04/24 19:51:31.226
  I0904 19:51:31.226056 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename discovery @ 09/04/24 19:51:31.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:31.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:31.485
  STEP: Setting up server cert @ 09/04/24 19:51:31.49
  I0904 19:51:31.877995 21 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0904 19:51:31.879394 21 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0904 19:51:31.879438 21 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0904 19:51:31.879454 21 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0904 19:51:31.879467 21 discovery.go:139] Checking APIGroup: apps
  I0904 19:51:31.880941 21 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0904 19:51:31.880978 21 discovery.go:148] Versions found [{apps/v1 v1}]
  I0904 19:51:31.880994 21 discovery.go:154] apps/v1 matches apps/v1
  I0904 19:51:31.881006 21 discovery.go:139] Checking APIGroup: events.k8s.io
  I0904 19:51:31.882605 21 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0904 19:51:31.882867 21 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0904 19:51:31.882886 21 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0904 19:51:31.882898 21 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0904 19:51:31.885135 21 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0904 19:51:31.885162 21 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0904 19:51:31.885174 21 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0904 19:51:31.885326 21 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0904 19:51:31.886878 21 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0904 19:51:31.886938 21 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0904 19:51:31.886970 21 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0904 19:51:31.886984 21 discovery.go:139] Checking APIGroup: autoscaling
  I0904 19:51:31.888297 21 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0904 19:51:31.888327 21 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0904 19:51:31.888337 21 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0904 19:51:31.888347 21 discovery.go:139] Checking APIGroup: batch
  I0904 19:51:31.889825 21 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0904 19:51:31.889861 21 discovery.go:148] Versions found [{batch/v1 v1}]
  I0904 19:51:31.889875 21 discovery.go:154] batch/v1 matches batch/v1
  I0904 19:51:31.890040 21 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0904 19:51:31.891815 21 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0904 19:51:31.891842 21 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0904 19:51:31.891855 21 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0904 19:51:31.891867 21 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0904 19:51:31.893283 21 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0904 19:51:31.893311 21 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0904 19:51:31.893326 21 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0904 19:51:31.893380 21 discovery.go:139] Checking APIGroup: policy
  I0904 19:51:31.895151 21 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0904 19:51:31.895384 21 discovery.go:148] Versions found [{policy/v1 v1}]
  I0904 19:51:31.895405 21 discovery.go:154] policy/v1 matches policy/v1
  I0904 19:51:31.895418 21 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0904 19:51:31.897038 21 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0904 19:51:31.897075 21 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0904 19:51:31.897088 21 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0904 19:51:31.897100 21 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0904 19:51:31.898679 21 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0904 19:51:31.898716 21 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0904 19:51:31.898730 21 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0904 19:51:31.898742 21 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0904 19:51:31.900341 21 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0904 19:51:31.900379 21 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0904 19:51:31.900392 21 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0904 19:51:31.900579 21 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0904 19:51:31.902234 21 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0904 19:51:31.902270 21 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0904 19:51:31.902284 21 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0904 19:51:31.902296 21 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0904 19:51:31.903898 21 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0904 19:51:31.903935 21 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0904 19:51:31.904001 21 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0904 19:51:31.904073 21 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0904 19:51:31.905956 21 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0904 19:51:31.905984 21 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0904 19:51:31.905997 21 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0904 19:51:31.906006 21 discovery.go:139] Checking APIGroup: node.k8s.io
  I0904 19:51:31.907277 21 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0904 19:51:31.907313 21 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0904 19:51:31.907363 21 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0904 19:51:31.907401 21 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0904 19:51:31.909241 21 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0904 19:51:31.909280 21 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0904 19:51:31.909293 21 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0904 19:51:31.909465 21 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0904 19:51:31.911157 21 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0904 19:51:31.911187 21 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0904 19:51:31.911200 21 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0904 19:51:31.911210 21 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0904 19:51:31.912458 21 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0904 19:51:31.912495 21 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0904 19:51:31.912508 21 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0904 19:51:31.912520 21 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0904 19:51:31.913752 21 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0904 19:51:31.913781 21 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0904 19:51:31.913793 21 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0904 19:51:31.913803 21 discovery.go:139] Checking APIGroup: traefik.containo.us
  I0904 19:51:31.915151 21 discovery.go:147] PreferredVersion.GroupVersion: traefik.containo.us/v1alpha1
  I0904 19:51:31.915191 21 discovery.go:148] Versions found [{traefik.containo.us/v1alpha1 v1alpha1}]
  I0904 19:51:31.915204 21 discovery.go:154] traefik.containo.us/v1alpha1 matches traefik.containo.us/v1alpha1
  I0904 19:51:31.915243 21 discovery.go:139] Checking APIGroup: traefik.io
  I0904 19:51:31.916922 21 discovery.go:147] PreferredVersion.GroupVersion: traefik.io/v1alpha1
  I0904 19:51:31.916959 21 discovery.go:148] Versions found [{traefik.io/v1alpha1 v1alpha1}]
  I0904 19:51:31.917027 21 discovery.go:154] traefik.io/v1alpha1 matches traefik.io/v1alpha1
  I0904 19:51:31.917133 21 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0904 19:51:31.918771 21 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0904 19:51:31.918806 21 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0904 19:51:31.918996 21 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0904 19:51:31.919345 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8155" for this suite. @ 09/04/24 19:51:31.924
â€¢ [0.709 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 09/04/24 19:51:31.935
  I0904 19:51:31.935312 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 19:51:31.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:31.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:31.974
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/24 19:51:31.978
  I0904 19:51:31.978631 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8469 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0904 19:51:32.087464 21 builder.go:146] stderr: ""
  I0904 19:51:32.087521 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/04/24 19:51:32.087
  I0904 19:51:32.100010 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8469 delete pods e2e-test-httpd-pod'
  I0904 19:51:33.944706 21 builder.go:146] stderr: ""
  I0904 19:51:33.944768 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0904 19:51:33.945041 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8469" for this suite. @ 09/04/24 19:51:33.949
â€¢ [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 09/04/24 19:51:33.965
  I0904 19:51:33.965439 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 19:51:33.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:34.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:34.016
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/24 19:51:34.026
  I0904 19:51:34.026631 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-4659 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0904 19:51:34.851577 21 builder.go:146] stderr: ""
  I0904 19:51:34.851631 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/04/24 19:51:34.851
  I0904 19:51:34.851875 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-4659 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0904 19:51:34.955879 21 builder.go:146] stderr: ""
  I0904 19:51:34.955938 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/24 19:51:34.955
  I0904 19:51:34.967265 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-4659 delete pods e2e-test-httpd-pod'
  I0904 19:51:36.920466 21 builder.go:146] stderr: ""
  I0904 19:51:36.920514 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0904 19:51:36.920665 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4659" for this suite. @ 09/04/24 19:51:36.936
â€¢ [2.985 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 09/04/24 19:51:36.95
  I0904 19:51:36.950724 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 19:51:36.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:36.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:36.995
  STEP: creating service in namespace services-5510 @ 09/04/24 19:51:36.998
  STEP: creating service affinity-nodeport-transition in namespace services-5510 @ 09/04/24 19:51:36.998
  STEP: creating replication controller affinity-nodeport-transition in namespace services-5510 @ 09/04/24 19:51:37.032
  I0904 19:51:37.054300      21 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-5510, replica count: 3
  I0904 19:51:40.105299      21 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 19:51:40.117583 21 resource.go:361] Creating new exec pod
  I0904 19:51:43.152367 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5510 exec execpod-affinityqq4wq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0904 19:51:43.306730 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0904 19:51:43.306976 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 19:51:43.307169 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5510 exec execpod-affinityqq4wq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.117.16 80'
  I0904 19:51:43.441871 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.117.16 80\nConnection to 10.43.117.16 80 port [tcp/http] succeeded!\n"
  I0904 19:51:43.441953 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 19:51:43.442148 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5510 exec execpod-affinityqq4wq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.100 32387'
  I0904 19:51:43.597432 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.11.100 32387\nConnection to 172.31.11.100 32387 port [tcp/*] succeeded!\n"
  I0904 19:51:43.597616 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 19:51:43.597770 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5510 exec execpod-affinityqq4wq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.15 32387'
  I0904 19:51:43.732521 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.15 32387\nConnection to 172.31.8.15 32387 port [tcp/*] succeeded!\n"
  I0904 19:51:43.732796 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 19:51:43.748013 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5510 exec execpod-affinityqq4wq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.11.100:32387/ ; done'
  I0904 19:51:43.984299 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n"
  I0904 19:51:43.984377 21 builder.go:147] stdout: "\naffinity-nodeport-transition-f82gm\naffinity-nodeport-transition-rc6jh\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-f82gm\naffinity-nodeport-transition-rc6jh\naffinity-nodeport-transition-f82gm\naffinity-nodeport-transition-f82gm\naffinity-nodeport-transition-rc6jh\naffinity-nodeport-transition-rc6jh\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-rc6jh\naffinity-nodeport-transition-f82gm\naffinity-nodeport-transition-rc6jh\naffinity-nodeport-transition-xjxv7"
  I0904 19:51:43.984403 21 service.go:242] Received response from host: affinity-nodeport-transition-f82gm
  I0904 19:51:43.984420 21 service.go:242] Received response from host: affinity-nodeport-transition-rc6jh
  I0904 19:51:43.984472 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:43.984519 21 service.go:242] Received response from host: affinity-nodeport-transition-f82gm
  I0904 19:51:43.984591 21 service.go:242] Received response from host: affinity-nodeport-transition-rc6jh
  I0904 19:51:43.984606 21 service.go:242] Received response from host: affinity-nodeport-transition-f82gm
  I0904 19:51:43.984620 21 service.go:242] Received response from host: affinity-nodeport-transition-f82gm
  I0904 19:51:43.984692 21 service.go:242] Received response from host: affinity-nodeport-transition-rc6jh
  I0904 19:51:43.984711 21 service.go:242] Received response from host: affinity-nodeport-transition-rc6jh
  I0904 19:51:43.984725 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:43.984790 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:43.984825 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:43.984890 21 service.go:242] Received response from host: affinity-nodeport-transition-rc6jh
  I0904 19:51:43.984909 21 service.go:242] Received response from host: affinity-nodeport-transition-f82gm
  I0904 19:51:43.984924 21 service.go:242] Received response from host: affinity-nodeport-transition-rc6jh
  I0904 19:51:43.984995 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:43.996750 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5510 exec execpod-affinityqq4wq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.11.100:32387/ ; done'
  I0904 19:51:44.234383 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:32387/\n"
  I0904 19:51:44.234516 21 builder.go:147] stdout: "\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7\naffinity-nodeport-transition-xjxv7"
  I0904 19:51:44.234542 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.234561 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.234576 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.234755 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.234799 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.234950 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.234969 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.234984 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.234999 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.235183 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.235396 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.235431 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.235447 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.235461 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.235474 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.235488 21 service.go:242] Received response from host: affinity-nodeport-transition-xjxv7
  I0904 19:51:44.235667 21 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-5510, will wait for the garbage collector to delete the pods @ 09/04/24 19:51:44.273
  I0904 19:51:44.355000 21 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 18.673484ms
  I0904 19:51:44.455637 21 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.634406ms
  I0904 19:51:47.714107 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5510" for this suite. @ 09/04/24 19:51:47.718
â€¢ [10.784 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/04/24 19:51:47.735
  I0904 19:51:47.735110 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename cronjob @ 09/04/24 19:51:47.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:51:47.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:51:47.779
  STEP: Creating a ForbidConcurrent cronjob @ 09/04/24 19:51:47.783
  STEP: Ensuring a job is scheduled @ 09/04/24 19:51:47.811
  STEP: Ensuring exactly one is scheduled @ 09/04/24 19:52:01.818
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/04/24 19:52:01.827
  STEP: Ensuring no more jobs are scheduled @ 09/04/24 19:52:01.83
  STEP: Removing cronjob @ 09/04/24 19:52:01.849
  I0904 19:52:01.859662 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4030" for this suite. @ 09/04/24 19:52:01.963
â€¢ [14.239 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/04/24 19:52:01.975
  I0904 19:52:01.975169 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/04/24 19:52:01.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:52:02.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:52:02.035
  STEP: Cleaning up the secret @ 09/04/24 19:52:04.134
  STEP: Cleaning up the configmap @ 09/04/24 19:52:04.149
  STEP: Cleaning up the pod @ 09/04/24 19:52:04.159
  I0904 19:52:04.198967 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8296" for this suite. @ 09/04/24 19:52:04.202
â€¢ [2.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/04/24 19:52:04.22
  I0904 19:52:04.220224 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 19:52:04.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:52:04.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:52:04.276
  STEP: Creating projection with secret that has name projected-secret-test-609cc3f2-eaf0-40b2-b5cf-98faf55253ad @ 09/04/24 19:52:04.279
  STEP: Creating a pod to test consume secrets @ 09/04/24 19:52:04.29
  STEP: Saw pod success @ 09/04/24 19:52:08.541
  I0904 19:52:08.543744 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-secrets-ed921708-b98e-4bfb-8556-f4c7e49b42c4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 19:52:08.562
  I0904 19:52:08.608033 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8683" for this suite. @ 09/04/24 19:52:08.613
â€¢ [4.404 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 09/04/24 19:52:08.624
  I0904 19:52:08.624563 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/24 19:52:08.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:52:08.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:52:08.672
  I0904 19:52:08.713364 21 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0904 19:52:08.713606 21 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0904 19:52:08.745532 21 service_accounts.go:253] created pod pod-service-account-mountsa
  I0904 19:52:08.745701 21 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0904 19:52:08.774443 21 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0904 19:52:08.774514 21 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0904 19:52:08.802233 21 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0904 19:52:08.802273 21 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0904 19:52:08.828831 21 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0904 19:52:08.828871 21 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0904 19:52:08.859780 21 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0904 19:52:08.860014 21 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0904 19:52:08.894032 21 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0904 19:52:08.894251 21 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0904 19:52:08.924542 21 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0904 19:52:08.924704 21 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0904 19:52:08.963175 21 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0904 19:52:08.963375 21 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0904 19:52:08.963629 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1744" for this suite. @ 09/04/24 19:52:09.095
â€¢ [0.483 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/04/24 19:52:09.108
  I0904 19:52:09.108817 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-runtime @ 09/04/24 19:52:09.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:52:09.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:52:09.483
  STEP: create the container @ 09/04/24 19:52:09.493
  W0904 19:52:09.522094      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/04/24 19:52:09.522
  STEP: get the container status @ 09/04/24 19:52:13.557
  STEP: the container should be terminated @ 09/04/24 19:52:13.56
  STEP: the termination message should be set @ 09/04/24 19:52:13.56
  I0904 19:52:13.560739 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/04/24 19:52:13.56
  I0904 19:52:13.600944 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6391" for this suite. @ 09/04/24 19:52:13.816
â€¢ [4.717 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 09/04/24 19:52:13.826
  I0904 19:52:13.826968 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 19:52:13.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:52:13.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:52:13.868
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 19:52:13.872
  STEP: Saw pod success @ 09/04/24 19:52:17.925
  I0904 19:52:17.928920 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-dbb98bfe-f604-4c97-b3f7-be945f11d347 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 19:52:17.938
  I0904 19:52:17.986077 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6899" for this suite. @ 09/04/24 19:52:18.007
â€¢ [4.193 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 09/04/24 19:52:18.021
  I0904 19:52:18.021397 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 19:52:18.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:52:18.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:52:18.157
  STEP: Creating configMap with name configmap-test-volume-map-c553ce4d-3eed-4686-8b79-aeceb678ffea @ 09/04/24 19:52:18.163
  STEP: Creating a pod to test consume configMaps @ 09/04/24 19:52:18.192
  STEP: Saw pod success @ 09/04/24 19:52:22.27
  I0904 19:52:22.272884 21 output.go:196] Trying to get logs from node ip-172-31-8-15.us-east-2.compute.internal pod pod-configmaps-bd925f5f-2afb-4cd3-8dc5-76904ec9bb98 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 19:52:22.286
  I0904 19:52:22.316266 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7248" for this suite. @ 09/04/24 19:52:22.321
â€¢ [4.318 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 09/04/24 19:52:22.34
  I0904 19:52:22.340745 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 19:52:22.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:52:22.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:52:22.492
  STEP: Setting up server cert @ 09/04/24 19:52:22.594
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 19:52:22.992
  STEP: Deploying the webhook pod @ 09/04/24 19:52:23.009
  STEP: Wait for the deployment to be ready @ 09/04/24 19:52:23.033
  I0904 19:52:23.039285 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/04/24 19:52:25.853
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 19:52:25.875
  I0904 19:52:26.876000 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/04/24 19:52:26.882
  I0904 19:52:26.961683 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6790" for this suite. @ 09/04/24 19:52:27.067
  STEP: Destroying namespace "webhook-markers-4922" for this suite. @ 09/04/24 19:52:27.092
â€¢ [4.762 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 09/04/24 19:52:27.102
  I0904 19:52:27.102712 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 19:52:27.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:52:27.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:52:27.245
  STEP: Counting existing ResourceQuota @ 09/04/24 19:52:27.253
  STEP: Creating a ResourceQuota @ 09/04/24 19:52:32.257
  STEP: Ensuring resource quota status is calculated @ 09/04/24 19:52:32.269
  I0904 19:52:34.274984 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5535" for this suite. @ 09/04/24 19:52:34.379
â€¢ [7.292 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 09/04/24 19:52:34.394
  I0904 19:52:34.394693 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 19:52:34.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:52:34.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:52:34.43
  STEP: Creating service test in namespace statefulset-8038 @ 09/04/24 19:52:34.434
  STEP: Creating statefulset ss in namespace statefulset-8038 @ 09/04/24 19:52:34.452
  I0904 19:52:34.487060 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0904 19:52:44.481406 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/04/24 19:52:44.486
  STEP: Getting /status @ 09/04/24 19:52:44.503
  I0904 19:52:44.513766 21 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/04/24 19:52:44.513
  I0904 19:52:44.531675 21 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/04/24 19:52:44.531
  I0904 19:52:44.533703 21 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I0904 19:52:44.533763 21 statefulset.go:1111] Found Statefulset ss in namespace statefulset-8038 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 19:52:44.533783 21 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/04/24 19:52:44.533
  I0904 19:52:44.533866 21 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0904 19:52:44.546234 21 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/04/24 19:52:44.546
  I0904 19:52:44.548204 21 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I0904 19:52:44.548422 21 statefulset.go:138] Deleting all statefulset in ns statefulset-8038
  I0904 19:52:44.551194 21 rest.go:150] Scaling statefulset ss to 0
  I0904 19:52:55.105953 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 19:52:55.108722 21 rest.go:88] Deleting statefulset ss
  I0904 19:52:55.124007 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8038" for this suite. @ 09/04/24 19:52:55.127
â€¢ [20.743 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 09/04/24 19:52:55.138
  I0904 19:52:55.138380 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename security-context-test @ 09/04/24 19:52:55.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:52:55.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:52:55.377
  I0904 19:52:59.413288 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8563" for this suite. @ 09/04/24 19:52:59.417
â€¢ [4.290 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 09/04/24 19:52:59.429
  I0904 19:52:59.429113 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 19:52:59.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:52:59.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:52:59.609
  STEP: creating service in namespace services-237 @ 09/04/24 19:52:59.618
  STEP: creating service affinity-nodeport in namespace services-237 @ 09/04/24 19:52:59.619
  STEP: creating replication controller affinity-nodeport in namespace services-237 @ 09/04/24 19:52:59.65
  I0904 19:52:59.663146      21 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-237, replica count: 3
  I0904 19:53:02.715121      21 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 19:53:02.725893 21 resource.go:361] Creating new exec pod
  I0904 19:53:05.856245 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-237 exec execpod-affinitylbmpq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0904 19:53:06.003001 21 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0904 19:53:06.003062 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 19:53:06.003149 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-237 exec execpod-affinitylbmpq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.59.44 80'
  I0904 19:53:06.170697 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.59.44 80\nConnection to 10.43.59.44 80 port [tcp/http] succeeded!\n"
  I0904 19:53:06.170755 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 19:53:06.170855 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-237 exec execpod-affinitylbmpq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.15 30507'
  I0904 19:53:06.306670 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.15 30507\nConnection to 172.31.8.15 30507 port [tcp/*] succeeded!\n"
  I0904 19:53:06.306745 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 19:53:06.306890 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-237 exec execpod-affinitylbmpq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.231 30507'
  I0904 19:53:06.458016 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.5.231 30507\nConnection to 172.31.5.231 30507 port [tcp/*] succeeded!\n"
  I0904 19:53:06.458162 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 19:53:06.458253 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-237 exec execpod-affinitylbmpq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.11.100:30507/ ; done'
  I0904 19:53:06.737457 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.100:30507/\n"
  I0904 19:53:06.737558 21 builder.go:147] stdout: "\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4\naffinity-nodeport-ktpp4"
  I0904 19:53:06.737589 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.737814 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.737835 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.737853 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.737906 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.737948 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.738001 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.738072 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.738092 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.738145 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.738184 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.738226 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.738280 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.738349 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.738368 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.738418 21 service.go:242] Received response from host: affinity-nodeport-ktpp4
  I0904 19:53:06.738579 21 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-237, will wait for the garbage collector to delete the pods @ 09/04/24 19:53:06.773
  I0904 19:53:06.843948 21 resources.go:139] Deleting ReplicationController affinity-nodeport took: 10.092744ms
  I0904 19:53:06.944736 21 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.785394ms
  I0904 19:53:10.384043 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-237" for this suite. @ 09/04/24 19:53:10.387
â€¢ [10.973 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 09/04/24 19:53:10.403
  I0904 19:53:10.403123 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 19:53:10.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:53:10.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:53:10.551
  STEP: validating api versions @ 09/04/24 19:53:10.554
  I0904 19:53:10.554630 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-72 api-versions'
  I0904 19:53:10.629405 21 builder.go:146] stderr: ""
  I0904 19:53:10.629484 21 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\ntraefik.containo.us/v1alpha1\ntraefik.io/v1alpha1\nv1\n"
  I0904 19:53:10.629592 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-72" for this suite. @ 09/04/24 19:53:10.633
â€¢ [0.241 seconds]
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/04/24 19:53:10.643
  I0904 19:53:10.643669 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename deployment @ 09/04/24 19:53:10.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:53:10.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:53:10.721
  I0904 19:53:10.729613 21 deployment.go:1196] Creating deployment "webserver-deployment"
  I0904 19:53:10.739276 21 deployment.go:1200] Waiting for observed generation 1
  I0904 19:53:12.745631 21 deployment.go:1205] Waiting for all required pods to come up
  I0904 19:53:12.749251 21 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/04/24 19:53:12.749
  I0904 19:53:14.755877 21 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0904 19:53:14.963049 21 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0904 19:53:14.982542 21 deployment.go:313] Updating deployment webserver-deployment
  I0904 19:53:14.982590 21 deployment.go:1224] Waiting for observed generation 2
  I0904 19:53:16.988288 21 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0904 19:53:16.991256 21 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0904 19:53:16.994040 21 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0904 19:53:17.220240 21 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0904 19:53:17.220328 21 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0904 19:53:17.229775 21 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0904 19:53:17.235316 21 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0904 19:53:17.235358 21 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0904 19:53:17.251542 21 deployment.go:313] Updating deployment webserver-deployment
  I0904 19:53:17.251588 21 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0904 19:53:17.267194 21 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0904 19:53:17.269705 21 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0904 19:53:19.317316 21 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be9a2f92-46b2-41a9-8622-27925dead1d5",
      ResourceVersion: (string) (len=6) "213991",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 19:53:19.365482 21 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
      ResourceVersion: (string) (len=6) "213987",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076394,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "be9a2f92-46b2-41a9-8622-27925dead1d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 65 39 61 32 66  39 32 2d 34 36 62 32 2d  |\"be9a2f92-46b2-|
              00000120  34 31 61 39 2d 38 36 32  32 2d 32 37 39 32 35 64  |41a9-8622-27925d|
              00000130  65 61 64 31 64 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ead1d5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 19:53:19.366861 21 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0904 19:53:19.367333 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
      ResourceVersion: (string) (len=6) "214074",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "be9a2f92-46b2-41a9-8622-27925dead1d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 65 39 61 32 66  39 32 2d 34 36 62 32 2d  |\"be9a2f92-46b2-|
              00000120  34 31 61 39 2d 38 36 32  32 2d 32 37 39 32 35 64  |41a9-8622-27925d|
              00000130  65 61 64 31 64 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ead1d5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 10,
      AvailableReplicas: (int32) 10,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 19:53:19.390455 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-27rdz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-27rdz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "846ac323-af6a-43e8-82c1-6a945cf7471d",
      ResourceVersion: (string) (len=6) "214067",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 34 33  5c 22 7d 22 3a 7b 22 2e  |.42.1.43\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w75l7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w75l7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-15.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.15"
        }
      },
      PodIP: (string) (len=10) "10.42.1.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861076399,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b0ec576ea37e4c92c069289ccdb8bcc85d504a0f90453689cb4e1c88aec9484b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w75l7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.400874 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-462br" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-462br",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d499f561-3dc9-45e9-b7ff-8d7d8320d44d",
      ResourceVersion: (string) (len=6) "213978",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cnt2l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cnt2l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-5-231.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.231"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cnt2l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.410173 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-4ncbp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-4ncbp",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41389d32-548e-462f-88f9-70eeb2aae692",
      ResourceVersion: (string) (len=6) "213773",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 34 30  5c 22 7d 22 3a 7b 22 2e  |.42.1.40\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n25tz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n25tz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-15.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.15"
        }
      },
      PodIP: (string) (len=10) "10.42.1.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861076391,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://595a2536b0a023082870c43616976880bd74859321f2a8137fee9eaad0188cec",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n25tz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.421499 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-7v4dc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7v4dc",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79877bd3-0ad4-4836-8f0f-38ad08cd0dff",
      ResourceVersion: (string) (len=6) "213989",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ctcbc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ctcbc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ctcbc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.430125 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-86z2d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-86z2d",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a5eb223-2b05-404d-856f-c6a4587517da",
      ResourceVersion: (string) (len=6) "213993",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tgs72",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tgs72",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tgs72",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.437180 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9vgrr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9vgrr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11d773c1-19a4-46b8-bb88-dbed80dc9d9b",
      ResourceVersion: (string) (len=6) "213788",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 35 33  5c 22 7d 22 3a 7b 22 2e  |.42.2.53\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9rjhp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9rjhp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-5-231.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.231"
        }
      },
      PodIP: (string) (len=10) "10.42.2.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861076391,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://60c205d17d0fcf091b654fea3f676a5d061e0abd005554d46bfce3f03639608e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9rjhp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.450066 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-b5btm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-b5btm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18d01dee-42c3-461b-b2f0-863d93c846fd",
      ResourceVersion: (string) (len=6) "213983",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wpp7s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wpp7s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-15.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.15"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wpp7s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.456820 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-bl6fr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-bl6fr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20b1205c-cb1b-4f15-a8ce-24137b8b96ed",
      ResourceVersion: (string) (len=6) "214000",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5848c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5848c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-190.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5848c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.476815 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-cldjv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-cldjv",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1dd3a7c7-383c-4980-9f47-1e7b7dbd0135",
      ResourceVersion: (string) (len=6) "213986",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dk8m8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dk8m8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-190.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dk8m8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.492938 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-jk5f8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jk5f8",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca67fbd7-7ce5-44a9-85f6-745b4b7ef917",
      ResourceVersion: (string) (len=6) "213974",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pkc2k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pkc2k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-190.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pkc2k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.500684 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mlzs6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mlzs6",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f356a740-56cf-4693-9449-5c2dbe4b5862",
      ResourceVersion: (string) (len=6) "213782",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 35 35  5c 22 7d 22 3a 7b 22 2e  |.42.2.55\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wjpmr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wjpmr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-5-231.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.231"
        }
      },
      PodIP: (string) (len=10) "10.42.2.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861076392,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4cce194e01742e256d174fe0ae6eacc65d2079766f776267f9bdb672c1befd9f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wjpmr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.512055 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mqbxz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mqbxz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0bc9fbad-fd50-482a-babe-1ee24d8fb2d3",
      ResourceVersion: (string) (len=6) "213784",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 35 34  5c 22 7d 22 3a 7b 22 2e  |.42.2.54\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vnjp5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vnjp5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-5-231.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.231"
        }
      },
      PodIP: (string) (len=10) "10.42.2.54",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.54"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861076392,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://99741b5957e9324ec338d39c9780b455a4732726573f59f24088102c70d20ca0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vnjp5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.539167 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-ptktd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ptktd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "deff2c7c-8d21-4ce1-9225-0a13aae4a0d3",
      ResourceVersion: (string) (len=6) "213785",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 32 31  5c 22 7d 22 3a 7b 22 2e  |.42.0.21\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q7tbj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q7tbj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.100"
        }
      },
      PodIP: (string) (len=10) "10.42.0.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861076391,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://34dc0ed863b11618a139bd67e603ec83be9e70965c007a26bab3e3adfd0958e4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q7tbj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.542247 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qjcpw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qjcpw",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1f932e8-cc12-498f-9d27-60bb5a95dc92",
      ResourceVersion: (string) (len=6) "213775",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 33 39  5c 22 7d 22 3a 7b 22 2e  |.42.1.39\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ml22r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ml22r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-15.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.15"
        }
      },
      PodIP: (string) (len=10) "10.42.1.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861076391,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://325e507f3369b97c29ddfdfb305b6e9ca1d84d22f2f46c9b56043c1c6b47797b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ml22r",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.559636 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qz9v2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qz9v2",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e12dee7b-7326-44ba-8997-f6a432336d06",
      ResourceVersion: (string) (len=6) "213973",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h477t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h477t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h477t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.563293 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-sg6tq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-sg6tq",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40882758-8b60-4881-9eb2-2782978a534f",
      ResourceVersion: (string) (len=6) "214059",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 34 32  5c 22 7d 22 3a 7b 22 2e  |.42.1.42\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jlhc8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jlhc8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-15.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.15"
        }
      },
      PodIP: (string) (len=10) "10.42.1.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861076398,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5c145e63f11ac335f79fc7df02e3b7ac3f123fd287462f35aecfa6a8490333e8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jlhc8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.566401 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-v9rgs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-v9rgs",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5bd01f02-bd3e-4421-aeec-ecf9c3a3054c",
      ResourceVersion: (string) (len=6) "214003",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b7wjm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b7wjm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-190.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b7wjm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.572565 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-wzjzk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-wzjzk",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1c191e1-4ea0-4888-a832-61df247f3957",
      ResourceVersion: (string) (len=6) "213781",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 32 30  5c 22 7d 22 3a 7b 22 2e  |.42.0.20\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c7qsm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c7qsm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.100"
        }
      },
      PodIP: (string) (len=10) "10.42.0.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861076391,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f95e8b0e34290c5c676aebda569d667df66336994ced74bd4d1923f6abd0e4dd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c7qsm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.588389 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-xfhsf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-xfhsf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee78b974-e54f-4193-bdbb-c486845cfa49",
      ResourceVersion: (string) (len=6) "213797",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 30  33 5c 22 7d 22 3a 7b 22  |.42.3.103\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ts7dg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ts7dg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-190.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.190"
        }
      },
      PodIP: (string) (len=11) "10.42.3.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861076391,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6b254ba4cc0eb943c67e637a1498e66142f41fe0675a9d8452faa1c02f8265c9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ts7dg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.591564 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-xhwfn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-xhwfn",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c9cc2d2-52df-440d-ba08-c8d64eff14e3",
      ResourceVersion: (string) (len=6) "213970",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3a47c23b-a08e-4a18-877d-a004a23e08f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  34 37 63 32 33 62 2d 61  |d\":\"3a47c23b-a|
              00000090  30 38 65 2d 34 61 31 38  2d 38 37 37 64 2d 61 30  |08e-4a18-877d-a0|
              000000a0  30 34 61 32 33 65 30 38  66 39 5c 22 7d 22 3a 7b  |04a23e08f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x6rx5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x6rx5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-5-231.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.231"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x6rx5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.594600 21 deployment.go:67] Pod "webserver-deployment-786f49d774-48pdb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-48pdb",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "42e37749-2567-4325-b909-5f8d1553ed67",
      ResourceVersion: (string) (len=6) "213990",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5fxhp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5fxhp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-190.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5fxhp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.597619 21 deployment.go:67] Pod "webserver-deployment-786f49d774-58bpt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-58bpt",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc0354f8-25a7-4e9f-ba39-72381a6ea689",
      ResourceVersion: (string) (len=6) "213878",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 35 36 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.2.56\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ld7r7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ld7r7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-5-231.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.231"
        }
      },
      PodIP: (string) (len=10) "10.42.2.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ld7r7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.603850 21 deployment.go:67] Pod "webserver-deployment-786f49d774-5g266" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-5g266",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26c8684e-c5d6-4fa8-8c8f-54b2958cd11d",
      ResourceVersion: (string) (len=6) "213950",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p857r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p857r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-5-231.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.231"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p857r",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.606879 21 deployment.go:67] Pod "webserver-deployment-786f49d774-5v9rn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-5v9rn",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90356729-f41a-430b-b04c-ee14dded8466",
      ResourceVersion: (string) (len=6) "214071",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 34 35 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.45\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8c4kh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8c4kh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-15.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.15"
        }
      },
      PodIP: (string) (len=10) "10.42.1.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8c4kh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.611507 21 deployment.go:67] Pod "webserver-deployment-786f49d774-69sw5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-69sw5",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7df68797-938a-4259-8782-1b7d864dc75c",
      ResourceVersion: (string) (len=6) "213984",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x9jgh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x9jgh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x9jgh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.614679 21 deployment.go:67] Pod "webserver-deployment-786f49d774-6nmb9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6nmb9",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ff8b1b0-e063-4169-9bf1-1e336dfdab0a",
      ResourceVersion: (string) (len=6) "213996",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076398,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-554q5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-554q5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-554q5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.617982 21 deployment.go:67] Pod "webserver-deployment-786f49d774-6wtm8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6wtm8",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90ab45e4-0218-475d-a68f-a2f368a7eea9",
      ResourceVersion: (string) (len=6) "213888",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076394,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 33 2e 31 30 35 5c 22  7d 22 3a 7b 22 2e 22 3a  |.3.105\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jpwgm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jpwgm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-190.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.190"
        }
      },
      PodIP: (string) (len=11) "10.42.3.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jpwgm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.621261 21 deployment.go:67] Pod "webserver-deployment-786f49d774-879xg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-879xg",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1526298-226d-45bd-9285-4a09a2d8e67b",
      ResourceVersion: (string) (len=6) "213875",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 34 31 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.41\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5qn6d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5qn6d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-15.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.15"
        }
      },
      PodIP: (string) (len=10) "10.42.1.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5qn6d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.624378 21 deployment.go:67] Pod "webserver-deployment-786f49d774-8bjj7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-8bjj7",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82c99eba-0f5a-4578-82a1-5643d1b6eea5",
      ResourceVersion: (string) (len=6) "213892",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 33 2e 31 30 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |.3.106\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-689s6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-689s6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-190.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.190"
        }
      },
      PodIP: (string) (len=11) "10.42.3.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-689s6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.631977 21 deployment.go:67] Pod "webserver-deployment-786f49d774-9rdgc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-9rdgc",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f5f921d-160c-4817-b8b8-0f1c95634dd3",
      ResourceVersion: (string) (len=6) "214051",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 34 34 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.44\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rssmg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rssmg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-15.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.15",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.15"
        }
      },
      PodIP: (string) (len=10) "10.42.1.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rssmg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.635223 21 deployment.go:67] Pod "webserver-deployment-786f49d774-f42qg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-f42qg",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8cc32fd2-384c-498e-869f-9f316edd2daa",
      ResourceVersion: (string) (len=6) "213917",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 32 32 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.22\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4pb6p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4pb6p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-11-100.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.100"
        }
      },
      PodIP: (string) (len=10) "10.42.0.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4pb6p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.641093 21 deployment.go:67] Pod "webserver-deployment-786f49d774-lthf6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-lthf6",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4306f645-c38e-4201-a7f3-2a1ad328b3a4",
      ResourceVersion: (string) (len=6) "213995",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jk7w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jk7w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-190.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.190"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8jk7w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.658392 21 deployment.go:67] Pod "webserver-deployment-786f49d774-xmrd4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xmrd4",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8071",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "321caf47-063a-4b41-8d41-a3eaa0b82a25",
      ResourceVersion: (string) (len=6) "214068",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "c6a13747-bc57-4ca7-bcaa-a8cb2b133e30",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  61 31 33 37 34 37 2d 62  |d\":\"c6a13747-b|
              00000090  63 35 37 2d 34 63 61 37  2d 62 63 61 61 2d 61 38  |c57-4ca7-bcaa-a8|
              000000a0  63 62 32 62 31 33 33 65  33 30 5c 22 7d 22 3a 7b  |cb2b133e30\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 36 30 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.2.60\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ft9n5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ft9n5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-5-231.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076399,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861076397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.231"
        }
      },
      PodIP: (string) (len=10) "10.42.2.60",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.60"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861076397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ft9n5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 19:53:19.672166 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8071" for this suite. @ 09/04/24 19:53:19.694
â€¢ [9.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/04/24 19:53:19.713
  I0904 19:53:19.713195 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 19:53:19.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:53:19.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:53:19.854
  I0904 19:53:19.895046 21 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0904 19:53:19.909105 21 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0904 19:53:20.008680 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:53:20.008730 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:53:20.923501 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:53:20.923671 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:53:22.017961 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 19:53:22.018029 21 fixtures.go:130] Node ip-172-31-15-190.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:53:22.916615 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 19:53:22.916692 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  I0904 19:53:22.916747 21 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0904 19:53:22.928761 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0904 19:53:23.945829 21 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0904 19:53:23.962444 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0904 19:53:23.962493 21 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0904 19:53:26.968089 21 daemon_set.go:1198] Pod daemon-set-c2mlf is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/24 19:53:27.178
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2284, will wait for the garbage collector to delete the pods @ 09/04/24 19:53:27.179
  I0904 19:53:27.242135 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.539847ms
  I0904 19:53:27.342485 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.346031ms
  I0904 19:53:29.249545 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 19:53:29.249586 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 19:53:29.352821 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"214367"},"items":null}

  I0904 19:53:29.355467 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"214367"},"items":null}

  I0904 19:53:29.369278 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2284" for this suite. @ 09/04/24 19:53:29.372
â€¢ [9.669 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 09/04/24 19:53:29.382
  I0904 19:53:29.382179 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename security-context @ 09/04/24 19:53:29.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:53:29.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:53:29.632
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/04/24 19:53:29.636
  STEP: Saw pod success @ 09/04/24 19:53:33.764
  I0904 19:53:33.766615 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod security-context-1bc0c38d-617f-4a7e-b97a-2f9b0513260c container test-container: <nil>
  STEP: delete the pod @ 09/04/24 19:53:33.772
  I0904 19:53:33.805036 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6924" for this suite. @ 09/04/24 19:53:33.809
â€¢ [4.441 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/04/24 19:53:33.823
  I0904 19:53:33.823818 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-runtime @ 09/04/24 19:53:33.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:53:33.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:53:33.971
  STEP: create the container @ 09/04/24 19:53:33.974
  W0904 19:53:34.007139      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/04/24 19:53:34.007
  STEP: get the container status @ 09/04/24 19:53:37.039
  STEP: the container should be terminated @ 09/04/24 19:53:37.042
  STEP: the termination message should be set @ 09/04/24 19:53:37.042
  I0904 19:53:37.042875 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/04/24 19:53:37.042
  I0904 19:53:37.084693 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1763" for this suite. @ 09/04/24 19:53:37.093
â€¢ [3.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/04/24 19:53:37.117
  I0904 19:53:37.117514 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename controllerrevisions @ 09/04/24 19:53:37.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:53:37.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:53:37.253
  STEP: Creating DaemonSet "e2e-gxnhq-daemon-set" @ 09/04/24 19:53:37.285
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/24 19:53:37.305
  I0904 19:53:37.377847 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-gxnhq-daemon-set: 0
  I0904 19:53:37.377896 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:53:38.319826 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-gxnhq-daemon-set: 0
  I0904 19:53:38.320017 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:53:39.336665 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-gxnhq-daemon-set: 3
  I0904 19:53:39.336858 21 fixtures.go:130] Node ip-172-31-5-231.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0904 19:53:40.313043 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-gxnhq-daemon-set: 4
  I0904 19:53:40.313099 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset e2e-gxnhq-daemon-set
  STEP: Confirm DaemonSet "e2e-gxnhq-daemon-set" successfully created with "daemonset-name=e2e-gxnhq-daemon-set" label @ 09/04/24 19:53:40.315
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-gxnhq-daemon-set" @ 09/04/24 19:53:40.728
  I0904 19:53:40.730893 21 controller_revision.go:162] Located ControllerRevision: "e2e-gxnhq-daemon-set-5c5f9f8f7b"
  STEP: Patching ControllerRevision "e2e-gxnhq-daemon-set-5c5f9f8f7b" @ 09/04/24 19:53:40.733
  I0904 19:53:40.748944 21 controller_revision.go:173] e2e-gxnhq-daemon-set-5c5f9f8f7b has been patched
  STEP: Create a new ControllerRevision @ 09/04/24 19:53:40.749
  I0904 19:53:40.759475 21 controller_revision.go:191] Created ControllerRevision: e2e-gxnhq-daemon-set-55c45f6f6b
  STEP: Confirm that there are two ControllerRevisions @ 09/04/24 19:53:40.759
  I0904 19:53:40.759736 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 19:53:40.762331 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-gxnhq-daemon-set-5c5f9f8f7b" @ 09/04/24 19:53:40.762
  STEP: Confirm that there is only one ControllerRevision @ 09/04/24 19:53:40.771
  I0904 19:53:40.771564 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 19:53:40.774159 21 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-gxnhq-daemon-set-55c45f6f6b" @ 09/04/24 19:53:40.776
  I0904 19:53:40.793116 21 controller_revision.go:220] e2e-gxnhq-daemon-set-55c45f6f6b has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/04/24 19:53:40.793
  W0904 19:53:40.806807      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/04/24 19:53:40.807
  I0904 19:53:40.807318 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 19:53:41.808324 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 19:53:41.812323 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-gxnhq-daemon-set-55c45f6f6b=updated" @ 09/04/24 19:53:41.812
  STEP: Confirm that there is only one ControllerRevision @ 09/04/24 19:53:41.822
  I0904 19:53:41.822622 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 19:53:41.824888 21 controller_revision.go:265] Found 1 ControllerRevisions
  I0904 19:53:41.827097 21 controller_revision.go:246] ControllerRevision "e2e-gxnhq-daemon-set-7fbd746d8c" has revision 3
  STEP: Deleting DaemonSet "e2e-gxnhq-daemon-set" @ 09/04/24 19:53:42.032
  STEP: deleting DaemonSet.extensions e2e-gxnhq-daemon-set in namespace controllerrevisions-7735, will wait for the garbage collector to delete the pods @ 09/04/24 19:53:42.032
  I0904 19:53:42.096994 21 resources.go:139] Deleting DaemonSet.extensions e2e-gxnhq-daemon-set took: 10.947309ms
  I0904 19:53:42.197989 21 resources.go:163] Terminating DaemonSet.extensions e2e-gxnhq-daemon-set pods took: 100.990801ms
  I0904 19:53:43.502244 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-gxnhq-daemon-set: 0
  I0904 19:53:43.502312 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-gxnhq-daemon-set
  I0904 19:53:43.505398 21 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"214789"},"items":null}

  I0904 19:53:43.508288 21 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"214789"},"items":null}

  I0904 19:53:43.529053 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-7735" for this suite. @ 09/04/24 19:53:43.532
â€¢ [6.426 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 09/04/24 19:53:43.544
  I0904 19:53:43.544349 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 19:53:43.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:53:43.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:53:43.584
  STEP: creating a Service @ 09/04/24 19:53:43.591
  STEP: watching for the Service to be added @ 09/04/24 19:53:43.623
  I0904 19:53:43.625299 21 service.go:3445] Found Service test-service-tj92n in namespace services-4263 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30654}]
  I0904 19:53:43.625491 21 service.go:3452] Service test-service-tj92n created
  STEP: Getting /status @ 09/04/24 19:53:43.625
  I0904 19:53:43.628932 21 service.go:3463] Service test-service-tj92n has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/04/24 19:53:43.628
  STEP: watching for the Service to be patched @ 09/04/24 19:53:43.644
  I0904 19:53:43.646373 21 service.go:3486] observed Service test-service-tj92n in namespace services-4263 with annotations: map[] & LoadBalancer: {[]}
  I0904 19:53:43.646545 21 service.go:3489] Found Service test-service-tj92n in namespace services-4263 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc001219ba0 []}]}
  I0904 19:53:43.646670 21 service.go:3496] Service test-service-tj92n has service status patched
  STEP: updating the ServiceStatus @ 09/04/24 19:53:43.646
  I0904 19:53:43.664490 21 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/04/24 19:53:43.664
  I0904 19:53:43.666343 21 service.go:3527] Observed Service test-service-tj92n in namespace services-4263 with annotations: map[] & Conditions: []
  I0904 19:53:43.666389 21 service.go:3538] Observed Service test-service-tj92n in namespace services-4263 with annotations: map[patchedstatus:true] & Conditions: []
  I0904 19:53:43.666469 21 service.go:3534] Found Service test-service-tj92n in namespace services-4263 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0904 19:53:43.666503 21 service.go:3545] Service test-service-tj92n has service status updated
  STEP: patching the service @ 09/04/24 19:53:43.666
  STEP: watching for the Service to be patched @ 09/04/24 19:53:43.683
  I0904 19:53:43.685262 21 service.go:3568] observed Service test-service-tj92n in namespace services-4263 with labels: map[test-service-static:true]
  I0904 19:53:43.685336 21 service.go:3568] observed Service test-service-tj92n in namespace services-4263 with labels: map[test-service-static:true]
  I0904 19:53:43.685393 21 service.go:3568] observed Service test-service-tj92n in namespace services-4263 with labels: map[test-service-static:true]
  I0904 19:53:43.685476 21 service.go:3571] Found Service test-service-tj92n in namespace services-4263 with labels: map[test-service:patched test-service-static:true]
  I0904 19:53:43.685512 21 service.go:3578] Service test-service-tj92n patched
  STEP: deleting the service @ 09/04/24 19:53:43.685
  STEP: watching for the Service to be deleted @ 09/04/24 19:53:43.726
  I0904 19:53:43.728500 21 service.go:3602] Observed event: ADDED
  I0904 19:53:43.728575 21 service.go:3602] Observed event: MODIFIED
  I0904 19:53:43.728598 21 service.go:3602] Observed event: MODIFIED
  I0904 19:53:43.728723 21 service.go:3602] Observed event: MODIFIED
  I0904 19:53:43.728805 21 service.go:3598] Found Service test-service-tj92n in namespace services-4263 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0904 19:53:43.728947 21 service.go:3607] Service test-service-tj92n deleted
  I0904 19:53:43.729253 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4263" for this suite. @ 09/04/24 19:53:43.732
â€¢ [0.203 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/04/24 19:53:43.748
  I0904 19:53:43.748687 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename proxy @ 09/04/24 19:53:43.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:53:43.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:53:43.937
  STEP: starting an echo server on multiple ports @ 09/04/24 19:53:43.972
  STEP: creating replication controller proxy-service-smmp6 in namespace proxy-2701 @ 09/04/24 19:53:43.972
  I0904 19:53:43.988022      21 runners.go:193] Created replication controller with name: proxy-service-smmp6, namespace: proxy-2701, replica count: 1
  I0904 19:53:45.039001      21 runners.go:193] proxy-service-smmp6 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 19:53:46.039257      21 runners.go:193] proxy-service-smmp6 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 19:53:46.042085 21 proxy.go:230] setup took 2.102301685s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/04/24 19:53:46.042
  I0904 19:53:46.094880 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 52.543561ms)
  I0904 19:53:46.095272 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 52.311218ms)
  I0904 19:53:46.097007 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 54.111976ms)
  I0904 19:53:46.097063 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 54.541252ms)
  I0904 19:53:46.100298 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 57.545719ms)
  I0904 19:53:46.105529 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 62.855551ms)
  I0904 19:53:46.105585 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 63.096535ms)
  I0904 19:53:46.106001 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 63.202526ms)
  I0904 19:53:46.105995 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 63.278197ms)
  I0904 19:53:46.111230 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 68.64474ms)
  I0904 19:53:46.111812 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 69.179939ms)
  I0904 19:53:46.112184 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 69.810059ms)
  I0904 19:53:46.112569 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 69.716877ms)
  I0904 19:53:46.119052 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 76.820417ms)
  I0904 19:53:46.119059 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 76.824247ms)
  I0904 19:53:46.120405 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 77.976035ms)
  I0904 19:53:46.127931 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 7.167731ms)
  I0904 19:53:46.128124 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 7.606107ms)
  I0904 19:53:46.129241 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 8.783975ms)
  I0904 19:53:46.129533 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 7.75448ms)
  I0904 19:53:46.130331 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 9.659889ms)
  I0904 19:53:46.131125 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 9.663369ms)
  I0904 19:53:46.131473 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 10.090556ms)
  I0904 19:53:46.132719 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 11.859263ms)
  I0904 19:53:46.132736 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 11.768412ms)
  I0904 19:53:46.133737 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 12.032686ms)
  I0904 19:53:46.133737 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 12.100867ms)
  I0904 19:53:46.133992 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 12.867109ms)
  I0904 19:53:46.134706 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 13.407057ms)
  I0904 19:53:46.134833 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 13.623161ms)
  I0904 19:53:46.135243 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 13.696451ms)
  I0904 19:53:46.135579 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 14.545694ms)
  I0904 19:53:46.143078 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 7.006648ms)
  I0904 19:53:46.144806 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 8.084115ms)
  I0904 19:53:46.145250 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 8.443341ms)
  I0904 19:53:46.145416 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 9.561619ms)
  I0904 19:53:46.145503 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 9.729471ms)
  I0904 19:53:46.145654 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 9.352395ms)
  I0904 19:53:46.145953 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 9.03819ms)
  I0904 19:53:46.146744 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 10.756147ms)
  I0904 19:53:46.147535 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 11.067451ms)
  I0904 19:53:46.148395 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 12.24627ms)
  I0904 19:53:46.149379 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 13.157174ms)
  I0904 19:53:46.150064 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 13.682051ms)
  I0904 19:53:46.150189 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 14.506294ms)
  I0904 19:53:46.150432 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 13.435148ms)
  I0904 19:53:46.151322 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 14.705588ms)
  I0904 19:53:46.152779 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 16.239741ms)
  I0904 19:53:46.162543 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 9.413175ms)
  I0904 19:53:46.163055 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 9.835302ms)
  I0904 19:53:46.163108 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 10.226308ms)
  I0904 19:53:46.164440 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 11.126002ms)
  I0904 19:53:46.165085 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 12.050036ms)
  I0904 19:53:46.170751 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 17.256407ms)
  I0904 19:53:46.170873 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 17.345448ms)
  I0904 19:53:46.174399 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 21.563223ms)
  I0904 19:53:46.174859 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 21.078215ms)
  I0904 19:53:46.176802 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 23.107857ms)
  I0904 19:53:46.177395 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 23.789328ms)
  I0904 19:53:46.177450 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 23.494833ms)
  I0904 19:53:46.178653 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 24.534469ms)
  I0904 19:53:46.179046 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 25.011296ms)
  I0904 19:53:46.179408 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 25.538855ms)
  I0904 19:53:46.180142 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 25.912421ms)
  I0904 19:53:46.188827 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 8.41597ms)
  I0904 19:53:46.190900 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 10.279028ms)
  I0904 19:53:46.191571 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 10.126797ms)
  I0904 19:53:46.192273 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 11.088091ms)
  I0904 19:53:46.192282 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 11.01355ms)
  I0904 19:53:46.192718 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 12.051666ms)
  I0904 19:53:46.193219 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 11.859033ms)
  I0904 19:53:46.193283 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 12.356911ms)
  I0904 19:53:46.193345 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 12.506223ms)
  I0904 19:53:46.193771 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 12.142308ms)
  I0904 19:53:46.194128 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 13.115142ms)
  I0904 19:53:46.195000 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 14.506424ms)
  I0904 19:53:46.195594 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 14.493054ms)
  I0904 19:53:46.195599 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 15.392778ms)
  I0904 19:53:46.195966 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 15.217094ms)
  I0904 19:53:46.195969 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 14.429483ms)
  I0904 19:53:46.202554 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 6.447499ms)
  I0904 19:53:46.204921 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 8.282778ms)
  I0904 19:53:46.204926 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 8.330399ms)
  I0904 19:53:46.204976 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 8.437991ms)
  I0904 19:53:46.205754 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 9.080371ms)
  I0904 19:53:46.206062 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 9.695199ms)
  I0904 19:53:46.206650 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 10.248118ms)
  I0904 19:53:46.207265 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 11.117052ms)
  I0904 19:53:46.207769 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 11.582879ms)
  I0904 19:53:46.208460 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 11.995405ms)
  I0904 19:53:46.208980 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 12.903529ms)
  I0904 19:53:46.208980 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 12.629025ms)
  I0904 19:53:46.209165 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 12.868298ms)
  I0904 19:53:46.209190 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 12.967251ms)
  I0904 19:53:46.209524 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 13.263935ms)
  I0904 19:53:46.209766 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 13.263554ms)
  I0904 19:53:46.218554 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 8.34402ms)
  I0904 19:53:46.218567 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 8.503682ms)
  I0904 19:53:46.218645 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 8.504952ms)
  I0904 19:53:46.218978 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 8.661364ms)
  I0904 19:53:46.220035 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 10.042546ms)
  I0904 19:53:46.220504 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 10.610065ms)
  I0904 19:53:46.221198 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 10.671695ms)
  I0904 19:53:46.221589 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 10.994671ms)
  I0904 19:53:46.221589 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 11.131253ms)
  I0904 19:53:46.222664 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 12.27348ms)
  I0904 19:53:46.223929 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 13.044222ms)
  I0904 19:53:46.224425 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 13.429188ms)
  I0904 19:53:46.224465 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 13.388977ms)
  I0904 19:53:46.226116 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 15.375887ms)
  I0904 19:53:46.226395 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 15.585861ms)
  I0904 19:53:46.226748 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 16.085949ms)
  I0904 19:53:46.234334 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 7.481495ms)
  I0904 19:53:46.235614 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 8.707994ms)
  I0904 19:53:46.235748 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 8.785106ms)
  I0904 19:53:46.236177 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 9.130481ms)
  I0904 19:53:46.236391 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 9.299184ms)
  I0904 19:53:46.236936 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 9.707019ms)
  I0904 19:53:46.237248 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 9.974224ms)
  I0904 19:53:46.241023 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 13.713552ms)
  I0904 19:53:46.242810 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 15.279946ms)
  I0904 19:53:46.243850 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 16.477014ms)
  I0904 19:53:46.244209 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 16.718998ms)
  I0904 19:53:46.244420 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 17.292967ms)
  I0904 19:53:46.245933 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 18.758919ms)
  I0904 19:53:46.246205 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 18.796991ms)
  I0904 19:53:46.246233 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 18.893062ms)
  I0904 19:53:46.246256 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 18.81873ms)
  I0904 19:53:46.251539 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 4.808094ms)
  I0904 19:53:46.254350 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 7.572978ms)
  I0904 19:53:46.261291 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 13.870934ms)
  I0904 19:53:46.265487 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 18.277503ms)
  I0904 19:53:46.265630 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 18.346104ms)
  I0904 19:53:46.265745 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 18.645729ms)
  I0904 19:53:46.266167 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 18.812041ms)
  I0904 19:53:46.266191 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 18.870692ms)
  I0904 19:53:46.266228 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 19.164696ms)
  I0904 19:53:46.266249 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 19.259787ms)
  I0904 19:53:46.266982 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 19.813857ms)
  I0904 19:53:46.267347 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 20.320284ms)
  I0904 19:53:46.269157 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 22.342325ms)
  I0904 19:53:46.269322 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 22.433787ms)
  I0904 19:53:46.269403 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 22.154842ms)
  I0904 19:53:46.269678 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 22.729551ms)
  I0904 19:53:46.278934 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 8.277718ms)
  I0904 19:53:46.278988 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 8.46158ms)
  I0904 19:53:46.280569 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 10.593454ms)
  I0904 19:53:46.280913 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 10.704475ms)
  I0904 19:53:46.280967 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 10.256249ms)
  I0904 19:53:46.281265 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 11.153932ms)
  I0904 19:53:46.281928 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 11.03977ms)
  I0904 19:53:46.281990 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 11.560758ms)
  I0904 19:53:46.282219 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 10.798066ms)
  I0904 19:53:46.284822 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 14.487043ms)
  I0904 19:53:46.284928 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 14.131718ms)
  I0904 19:53:46.284985 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 13.697272ms)
  I0904 19:53:46.285014 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 13.546089ms)
  I0904 19:53:46.285088 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 13.985977ms)
  I0904 19:53:46.285875 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 14.681427ms)
  I0904 19:53:46.286008 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 14.998822ms)
  I0904 19:53:46.305221 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 18.162791ms)
  I0904 19:53:46.305444 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 18.465625ms)
  I0904 19:53:46.305436 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 18.717369ms)
  I0904 19:53:46.305469 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 18.463575ms)
  I0904 19:53:46.305492 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 18.383624ms)
  I0904 19:53:46.305509 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 19.271708ms)
  I0904 19:53:46.314257 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 28.140264ms)
  I0904 19:53:46.314345 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 27.113578ms)
  I0904 19:53:46.314579 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 27.692647ms)
  I0904 19:53:46.314706 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 28.082264ms)
  I0904 19:53:46.314733 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 27.540775ms)
  I0904 19:53:46.315242 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 28.093863ms)
  I0904 19:53:46.315424 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 28.975017ms)
  I0904 19:53:46.315657 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 29.11729ms)
  I0904 19:53:46.315883 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 29.078199ms)
  I0904 19:53:46.315991 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 29.631388ms)
  I0904 19:53:46.326990 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 10.668775ms)
  I0904 19:53:46.328579 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 12.020436ms)
  I0904 19:53:46.329180 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 12.708087ms)
  I0904 19:53:46.330554 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 13.754373ms)
  I0904 19:53:46.330702 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 14.057678ms)
  I0904 19:53:46.331020 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 13.723502ms)
  I0904 19:53:46.331544 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 14.564765ms)
  I0904 19:53:46.331729 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 14.821199ms)
  I0904 19:53:46.333358 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 15.976707ms)
  I0904 19:53:46.334821 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 17.196216ms)
  I0904 19:53:46.335616 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 18.395644ms)
  I0904 19:53:46.336015 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 18.950934ms)
  I0904 19:53:46.336400 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 19.258347ms)
  I0904 19:53:46.336700 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 19.977039ms)
  I0904 19:53:46.336903 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 19.43739ms)
  I0904 19:53:46.338262 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 20.71601ms)
  I0904 19:53:46.346578 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 8.240268ms)
  I0904 19:53:46.347334 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 8.290738ms)
  I0904 19:53:46.347985 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 9.184001ms)
  I0904 19:53:46.348355 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 9.447876ms)
  I0904 19:53:46.348822 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 9.181582ms)
  I0904 19:53:46.349252 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 9.876923ms)
  I0904 19:53:46.349495 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 10.037025ms)
  I0904 19:53:46.351088 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 11.787682ms)
  I0904 19:53:46.351377 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 12.91798ms)
  I0904 19:53:46.351434 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 11.869364ms)
  I0904 19:53:46.352795 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 13.57161ms)
  I0904 19:53:46.352885 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 13.174853ms)
  I0904 19:53:46.352919 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 14.226909ms)
  I0904 19:53:46.353224 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 14.606625ms)
  I0904 19:53:46.353609 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 14.459403ms)
  I0904 19:53:46.353992 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 15.452619ms)
  I0904 19:53:46.361317 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 6.678004ms)
  I0904 19:53:46.361495 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 6.943777ms)
  I0904 19:53:46.361852 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 7.390935ms)
  I0904 19:53:46.362483 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 8.110076ms)
  I0904 19:53:46.363259 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 8.434331ms)
  I0904 19:53:46.364748 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 9.321545ms)
  I0904 19:53:46.364850 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 9.901333ms)
  I0904 19:53:46.364914 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 10.786057ms)
  I0904 19:53:46.365172 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 10.140867ms)
  I0904 19:53:46.365268 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 10.537444ms)
  I0904 19:53:46.365487 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 9.963384ms)
  I0904 19:53:46.365611 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 11.362916ms)
  I0904 19:53:46.365868 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 10.242889ms)
  I0904 19:53:46.366724 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 11.494428ms)
  I0904 19:53:46.367010 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 11.684461ms)
  I0904 19:53:46.367240 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 12.107397ms)
  I0904 19:53:46.374837 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 7.446405ms)
  I0904 19:53:46.375987 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 8.709514ms)
  I0904 19:53:46.376643 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 9.138481ms)
  I0904 19:53:46.377086 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 9.533077ms)
  I0904 19:53:46.377086 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 9.486116ms)
  I0904 19:53:46.379103 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 11.65595ms)
  I0904 19:53:46.379104 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 11.237243ms)
  I0904 19:53:46.380276 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 12.630365ms)
  I0904 19:53:46.380466 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 12.674285ms)
  I0904 19:53:46.382762 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 14.688677ms)
  I0904 19:53:46.384896 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 17.202996ms)
  I0904 19:53:46.384998 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 17.256066ms)
  I0904 19:53:46.385027 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 16.901821ms)
  I0904 19:53:46.385659 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 17.734683ms)
  I0904 19:53:46.385946 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 17.923097ms)
  I0904 19:53:46.386496 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 18.520096ms)
  I0904 19:53:46.395754 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 8.959729ms)
  I0904 19:53:46.396361 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 9.313964ms)
  I0904 19:53:46.396483 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 9.120151ms)
  I0904 19:53:46.396693 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 9.397865ms)
  I0904 19:53:46.396719 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 9.286444ms)
  I0904 19:53:46.396829 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 9.412666ms)
  I0904 19:53:46.397169 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 9.907184ms)
  I0904 19:53:46.397294 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 9.788152ms)
  I0904 19:53:46.397630 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 10.754567ms)
  I0904 19:53:46.397637 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 10.169638ms)
  I0904 19:53:46.397994 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 11.330855ms)
  I0904 19:53:46.399040 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 11.836473ms)
  I0904 19:53:46.399409 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 12.27063ms)
  I0904 19:53:46.399799 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 12.400632ms)
  I0904 19:53:46.399884 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 12.720557ms)
  I0904 19:53:46.399910 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 12.369442ms)
  I0904 19:53:46.407769 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 7.404164ms)
  I0904 19:53:46.408996 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 7.380954ms)
  I0904 19:53:46.409216 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 8.647464ms)
  I0904 19:53:46.409753 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 9.098441ms)
  I0904 19:53:46.409943 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 8.904278ms)
  I0904 19:53:46.410275 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 9.794311ms)
  I0904 19:53:46.411144 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 9.943223ms)
  I0904 19:53:46.411365 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 10.246218ms)
  I0904 19:53:46.412911 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 11.380206ms)
  I0904 19:53:46.414104 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 12.625675ms)
  I0904 19:53:46.414224 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 12.94152ms)
  I0904 19:53:46.414998 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 14.143609ms)
  I0904 19:53:46.416132 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 14.761528ms)
  I0904 19:53:46.416453 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 16.131599ms)
  I0904 19:53:46.416872 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 16.104019ms)
  I0904 19:53:46.416951 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 15.995427ms)
  I0904 19:53:46.421760 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 4.454379ms)
  I0904 19:53:46.422477 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 5.287531ms)
  I0904 19:53:46.426687 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 9.301363ms)
  I0904 19:53:46.432964 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 15.293967ms)
  I0904 19:53:46.433331 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 15.51173ms)
  I0904 19:53:46.433730 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 15.986378ms)
  I0904 19:53:46.434214 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 16.057678ms)
  I0904 19:53:46.434729 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 16.674938ms)
  I0904 19:53:46.434816 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 16.478985ms)
  I0904 19:53:46.435485 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 17.584002ms)
  I0904 19:53:46.435647 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 17.403839ms)
  I0904 19:53:46.435841 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 17.347268ms)
  I0904 19:53:46.436105 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 18.522916ms)
  I0904 19:53:46.436528 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 18.550157ms)
  I0904 19:53:46.436699 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 19.226257ms)
  I0904 19:53:46.437246 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 18.827701ms)
  I0904 19:53:46.444609 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 6.661072ms)
  I0904 19:53:46.445005 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 7.345453ms)
  I0904 19:53:46.446963 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 9.264143ms)
  I0904 19:53:46.447067 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 9.010759ms)
  I0904 19:53:46.447095 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 8.777066ms)
  I0904 19:53:46.447132 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 9.702209ms)
  I0904 19:53:46.447166 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 9.305974ms)
  I0904 19:53:46.447671 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 9.908293ms)
  I0904 19:53:46.447713 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 9.574757ms)
  I0904 19:53:46.447966 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 9.74544ms)
  I0904 19:53:46.448970 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 10.562813ms)
  I0904 19:53:46.448991 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 10.506652ms)
  I0904 19:53:46.449062 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 10.413351ms)
  I0904 19:53:46.450189 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 11.455657ms)
  I0904 19:53:46.450227 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 11.66357ms)
  I0904 19:53:46.450248 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 11.431887ms)
  I0904 19:53:46.466201 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">... (200; 9.506257ms)
  I0904 19:53:46.466335 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:1080/proxy/rewriteme">test<... (200; 9.434786ms)
  I0904 19:53:46.466383 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:460/proxy/: tls baz (200; 9.883103ms)
  I0904 19:53:46.466595 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:462/proxy/: tls qux (200; 9.461426ms)
  I0904 19:53:46.466652 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 8.526352ms)
  I0904 19:53:46.466709 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9/proxy/rewriteme">test</a> (200; 8.670254ms)
  I0904 19:53:46.467144 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:160/proxy/: foo (200; 9.65425ms)
  I0904 19:53:46.467363 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/: <a href="/api/v1/namespaces/proxy-2701/pods/https:proxy-service-smmp6-ggvn9:443/proxy/tlsrewritem... (200; 10.33537ms)
  I0904 19:53:46.467400 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/pods/proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 9.796902ms)
  I0904 19:53:46.467427 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/pods/http:proxy-service-smmp6-ggvn9:162/proxy/: bar (200; 9.73285ms)
  I0904 19:53:46.467879 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname1/proxy/: tls baz (200; 11.087101ms)
  I0904 19:53:46.468782 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname1/proxy/: foo (200; 11.560189ms)
  I0904 19:53:46.468848 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/services/proxy-service-smmp6:portname2/proxy/: bar (200; 11.035781ms)
  I0904 19:53:46.469250 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname2/proxy/: bar (200; 11.844723ms)
  I0904 19:53:46.469301 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/services/https:proxy-service-smmp6:tlsportname2/proxy/: tls qux (200; 11.368146ms)
  I0904 19:53:46.469348 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2701/services/http:proxy-service-smmp6:portname1/proxy/: foo (200; 12.030446ms)
  STEP: deleting ReplicationController proxy-service-smmp6 in namespace proxy-2701, will wait for the garbage collector to delete the pods @ 09/04/24 19:53:46.469
  I0904 19:53:46.537445 21 resources.go:139] Deleting ReplicationController proxy-service-smmp6 took: 11.474497ms
  I0904 19:53:46.637600 21 resources.go:163] Terminating ReplicationController proxy-service-smmp6 pods took: 100.152677ms
  I0904 19:53:49.338878 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2701" for this suite. @ 09/04/24 19:53:49.448
â€¢ [5.715 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 09/04/24 19:53:49.463
  I0904 19:53:49.463655 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 19:53:49.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:53:49.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:53:49.801
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/04/24 19:53:49.805
  I0904 19:53:49.805909 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:53:51.581149 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 19:53:58.827154 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-169" for this suite. @ 09/04/24 19:53:58.834
â€¢ [9.389 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 09/04/24 19:53:58.852
  I0904 19:53:58.852942 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 19:53:58.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:53:58.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:53:58.893
  STEP: Creating a ResourceQuota with best effort scope @ 09/04/24 19:53:58.898
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/24 19:53:58.914
  STEP: Creating a ResourceQuota with not best effort scope @ 09/04/24 19:54:00.918
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/24 19:54:00.937
  STEP: Creating a best-effort pod @ 09/04/24 19:54:02.942
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/04/24 19:54:03.071
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/04/24 19:54:05.075
  STEP: Deleting the pod @ 09/04/24 19:54:07.08
  STEP: Ensuring resource quota status released the pod usage @ 09/04/24 19:54:07.122
  STEP: Creating a not best-effort pod @ 09/04/24 19:54:09.131
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/04/24 19:54:09.154
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/04/24 19:54:11.159
  STEP: Deleting the pod @ 09/04/24 19:54:13.171
  STEP: Ensuring resource quota status released the pod usage @ 09/04/24 19:54:13.208
  I0904 19:54:15.214202 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9567" for this suite. @ 09/04/24 19:54:15.219
â€¢ [16.378 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 09/04/24 19:54:15.231
  I0904 19:54:15.231338 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 19:54:15.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:54:15.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:54:15.383
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 19:54:15.387
  STEP: Saw pod success @ 09/04/24 19:54:19.722
  I0904 19:54:19.726001 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-71daf24a-4724-450c-b088-ecf4a6c1492d container client-container: <nil>
  STEP: delete the pod @ 09/04/24 19:54:19.738
  I0904 19:54:19.777917 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1220" for this suite. @ 09/04/24 19:54:19.882
â€¢ [4.671 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 09/04/24 19:54:19.902
  I0904 19:54:19.902699 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename job @ 09/04/24 19:54:19.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:54:19.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:54:19.939
  STEP: Looking for a node to schedule job pod @ 09/04/24 19:54:19.943
  STEP: Creating a job @ 09/04/24 19:54:20.083
  STEP: Ensuring job fails @ 09/04/24 19:54:20.1
  I0904 19:54:24.108233 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2358" for this suite. @ 09/04/24 19:54:24.112
â€¢ [4.222 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 09/04/24 19:54:24.125
  I0904 19:54:24.125913 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename replication-controller @ 09/04/24 19:54:24.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:54:24.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:54:24.48
  STEP: creating a ReplicationController @ 09/04/24 19:54:24.486
  STEP: waiting for RC to be added @ 09/04/24 19:54:24.507
  STEP: waiting for available Replicas @ 09/04/24 19:54:24.507
  STEP: patching ReplicationController @ 09/04/24 19:54:28.409
  STEP: waiting for RC to be modified @ 09/04/24 19:54:28.424
  STEP: patching ReplicationController status @ 09/04/24 19:54:28.425
  STEP: waiting for RC to be modified @ 09/04/24 19:54:28.442
  STEP: waiting for available Replicas @ 09/04/24 19:54:28.443
  STEP: fetching ReplicationController status @ 09/04/24 19:54:28.465
  STEP: patching ReplicationController scale @ 09/04/24 19:54:28.468
  STEP: waiting for RC to be modified @ 09/04/24 19:54:28.534
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/04/24 19:54:28.534
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/04/24 19:54:31.675
  STEP: updating ReplicationController status @ 09/04/24 19:54:31.678
  STEP: waiting for RC to be modified @ 09/04/24 19:54:31.709
  STEP: listing all ReplicationControllers @ 09/04/24 19:54:31.709
  STEP: checking that ReplicationController has expected values @ 09/04/24 19:54:31.714
  STEP: deleting ReplicationControllers by collection @ 09/04/24 19:54:31.714
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/04/24 19:54:31.743
  I0904 19:54:31.875736 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 19:54:31.876055      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-6213" for this suite. @ 09/04/24 19:54:31.88
â€¢ [7.772 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/04/24 19:54:31.897
  I0904 19:54:31.897776 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename chunking @ 09/04/24 19:54:31.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 19:54:31.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 19:54:31.95
  STEP: creating a large number of resources @ 09/04/24 19:54:31.953
  E0904 19:54:32.876903      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:33.877814      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:34.878150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:35.879128      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:36.879436      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:37.880420      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:38.881477      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:39.881562      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:40.881972      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:41.882529      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:42.883432      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:43.883765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:44.884266      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:45.884425      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:46.885067      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:47.885131      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:48.885618      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 09/04/24 19:54:49.609
  I0904 19:54:49.655026 21 chunking.go:163] Retrieved 40/40 results with rv 215722 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 09/04/24 19:54:49.655
  E0904 19:54:49.886026      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:50.886359      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:51.886806      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:52.887089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:53.888194      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:54.888311      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:55.888551      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:56.888688      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:57.889095      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:58.889526      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:54:59.889828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:00.890082      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:01.890400      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:02.890867      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:03.891098      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:04.892200      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:05.892341      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:06.892742      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:07.893346      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:08.894231      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:55:09.669890 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:55:09.894965      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:10.895108      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:11.895364      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:12.895667      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:13.895932      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:14.896069      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:15.896322      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:16.896581      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:17.896715      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:18.897130      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:19.897438      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:20.897577      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:21.897809      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:22.898376      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:23.898574      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:24.899614      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:25.900642      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:26.900902      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:27.901487      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:28.901745      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:55:29.674651 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:55:29.902754      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:30.902897      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:31.903051      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:32.903223      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:33.903369      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:34.903619      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:35.903771      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:36.904634      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:37.905094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:38.905362      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:39.905632      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:40.905997      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:41.906243      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:42.906405      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:43.906644      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:44.906773      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:45.907063      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:46.907095      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:47.907595      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:48.908148      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:55:49.660819 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:55:49.908884      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:50.908997      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:51.909163      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:52.909692      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:53.909879      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:54.910193      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:55.910628      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:56.911041      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:57.911057      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:58.912170      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:55:59.912464      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:00.912761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:01.913029      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:02.913601      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:03.913876      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:04.914160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:05.914405      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:06.914666      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:07.915056      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:08.915248      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:56:09.661806 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:56:09.915919      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:10.916156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:11.917089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:12.918207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:13.918342      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:14.918466      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:15.918745      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:16.919601      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:17.919743      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:18.920498      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:19.920967      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:20.921277      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:21.921763      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:22.921906      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:23.922433      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:24.922727      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:25.923698      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:26.924377      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:27.924709      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:28.924962      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:56:29.662352 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:56:29.925464      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:30.925695      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:31.926520      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:32.926649      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:33.927389      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:34.928128      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:35.928407      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:36.928487      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:37.928601      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:38.928756      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:39.929030      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:40.929410      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:41.929920      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:42.930213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:43.930498      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:44.930779      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:45.931076      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:46.932143      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:47.932542      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:48.932822      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:56:49.662108 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:56:49.932956      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:50.933237      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:51.933713      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:52.933965      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:53.934262      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:54.934509      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:55.934815      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:56.935328      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:57.935613      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:58.936240      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:56:59.936386      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:00.936651      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:01.937273      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:02.937867      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:03.938193      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:04.938550      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:05.938679      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:06.939655      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:07.939920      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:08.940196      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:57:09.660917 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:57:09.941190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:10.941880      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:11.942544      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:12.942808      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:13.943280      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:14.943522      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:15.944180      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:16.944668      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:17.944934      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:18.945311      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:19.945825      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:20.946341      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:21.946845      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:22.947107      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:23.948150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:24.948338      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:25.948808      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:26.949353      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:27.949902      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:28.950058      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:57:29.661717 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:57:29.951002      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:30.951064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:31.951560      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:32.952166      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:33.952433      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:34.953474      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:35.953693      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:36.953754      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:37.953988      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:38.954298      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:39.954684      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:40.954834      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:41.955511      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:42.956165      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:43.957047      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:44.957162      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:45.957315      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:46.957553      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:47.957719      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:48.958183      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:57:49.661607 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:57:49.958794      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:50.959081      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:51.959633      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:52.959669      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:53.960159      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:54.960425      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:55.961353      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:56.961965      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:57.962088      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:58.962244      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:57:59.962408      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:00.962695      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:01.963174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:02.963358      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:03.964174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:04.964474      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:05.964757      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:06.965214      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:07.965317      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:08.965967      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:58:09.661138 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:58:09.966105      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:10.966256      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:11.966554      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:12.966984      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:13.967094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:14.967240      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:15.967373      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:16.967429      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:17.967560      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:18.968399      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:19.968526      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:20.968751      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:21.969152      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:22.970265      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:23.970371      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:24.970704      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:25.970795      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:26.971179      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:27.971342      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:28.972181      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:58:29.667736 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:58:29.972907      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:30.973054      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:31.973527      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:32.973676      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:33.974368      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:34.974489      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:35.975079      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:36.975575      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:37.975814      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:38.976159      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:39.976414      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:40.976675      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:41.977110      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:42.977321      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:43.977897      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:44.978326      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:45.978552      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:46.978998      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:47.979111      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:48.980149      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:58:49.662272 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:58:49.980280      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:50.980389      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:51.980854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:52.981091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:53.981300      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:54.981559      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:55.981662      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:56.982125      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:57.982291      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:58.982575      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:58:59.982854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:00.983157      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:01.983999      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:02.984272      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:03.984555      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:04.984842      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:05.985684      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:06.986557      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:07.986569      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:08.986762      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:59:09.661270 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:59:09.987441      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:10.988158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:11.988563      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:12.988803      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:13.989036      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:14.989307      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:15.989456      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:16.989911      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:17.990063      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:18.990141      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:19.991056      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:20.991168      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:21.991615      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:22.992142      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:23.992315      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:24.992741      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:25.992877      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:26.993320      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:27.993592      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:28.994450      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:59:29.661792 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:59:29.995051      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:30.995161      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:31.995324      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:32.996169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:33.996429      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:34.996651      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:35.996801      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:36.997506      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:37.998115      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:38.998262      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:39.998547      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:40.998825      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:41.999280      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:43.000183      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:44.000327      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:45.000599      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:46.000884      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:47.001386      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:48.001532      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:49.001803      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 19:59:49.661461 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 19:59:50.002722      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:51.003225      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:52.003605      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:53.003751      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:54.003880      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:55.004033      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:56.004276      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:57.004782      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:58.004911      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 19:59:59.005084      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:00.005251      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:01.005396      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:02.005652      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:03.005795      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:04.006074      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:05.006344      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:06.006491      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:07.006950      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:08.007211      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:09.008187      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:00:09.661982 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 20:00:10.009186      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:11.009312      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:12.009771      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:13.009908      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:14.010056      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:15.010546      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:16.010661      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:17.011583      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:18.011702      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:19.012186      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:20.012296      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:21.012445      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:22.012870      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:23.013024      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:24.013800      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:25.014022      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:26.014158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:27.014866      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:28.015174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:29.015307      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:00:29.661041 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NzIyLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0904 20:00:30.016132      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:31.016420      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:32.016474      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:33.016582      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:34.017108      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:35.017313      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:36.017404      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:37.017880      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:38.018158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:39.018394      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:40.018675      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:41.019077      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:42.019505      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:43.019793      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:44.019982      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:45.020698      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:46.021515      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:47.022659      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:48.023077      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:49.024180      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:00:49.660366 21 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0904 20:00:49.660434 21 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/04/24 20:00:49.66
  STEP: retrieving all remaining pages @ 09/04/24 20:00:49.665
  I0904 20:00:49.670058 21 chunking.go:221] Retrieved 40/40 results with rv 216988 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE2OTg4LCJzdGFydCI6InRlbXBsYXRlLTAxMTlcdTAwMDAifQ
  I0904 20:00:49.674581 21 chunking.go:221] Retrieved 40/40 results with rv 216988 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE2OTg4LCJzdGFydCI6InRlbXBsYXRlLTAxNTlcdTAwMDAifQ
  I0904 20:00:49.679268 21 chunking.go:221] Retrieved 40/40 results with rv 216988 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE2OTg4LCJzdGFydCI6InRlbXBsYXRlLTAxOTlcdTAwMDAifQ
  I0904 20:00:49.683514 21 chunking.go:221] Retrieved 40/40 results with rv 216988 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE2OTg4LCJzdGFydCI6InRlbXBsYXRlLTAyMzlcdTAwMDAifQ
  I0904 20:00:49.688029 21 chunking.go:221] Retrieved 40/40 results with rv 216988 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE2OTg4LCJzdGFydCI6InRlbXBsYXRlLTAyNzlcdTAwMDAifQ
  I0904 20:00:49.692713 21 chunking.go:221] Retrieved 40/40 results with rv 216988 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE2OTg4LCJzdGFydCI6InRlbXBsYXRlLTAzMTlcdTAwMDAifQ
  I0904 20:00:49.697825 21 chunking.go:221] Retrieved 40/40 results with rv 216988 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE2OTg4LCJzdGFydCI6InRlbXBsYXRlLTAzNTlcdTAwMDAifQ
  I0904 20:00:49.702283 21 chunking.go:221] Retrieved 40/40 results with rv 216988 and continue 
  I0904 20:00:49.702491 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9605" for this suite. @ 09/04/24 20:00:49.708
â€¢ [377.821 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 09/04/24 20:00:49.719
  I0904 20:00:49.719813 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 20:00:49.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:00:49.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:00:49.768
  STEP: fetching services @ 09/04/24 20:00:49.771
  I0904 20:00:49.878679 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5268" for this suite. @ 09/04/24 20:00:49.883
â€¢ [0.174 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 09/04/24 20:00:49.893
  I0904 20:00:49.893936 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 20:00:49.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:00:49.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:00:49.94
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1492 @ 09/04/24 20:00:49.947
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/04/24 20:00:49.983
  STEP: creating service externalsvc in namespace services-1492 @ 09/04/24 20:00:49.983
  E0904 20:00:50.024259      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating replication controller externalsvc in namespace services-1492 @ 09/04/24 20:00:50.048
  I0904 20:00:50.064128      21 runners.go:193] Created replication controller with name: externalsvc, namespace: services-1492, replica count: 2
  E0904 20:00:51.025014      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:52.025434      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:53.025553      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:00:53.115978      21 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/04/24 20:00:53.119
  I0904 20:00:53.161882 21 resource.go:361] Creating new exec pod
  E0904 20:00:54.025674      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:55.026183      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:00:55.191839 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-1492 exec execpodwxtxf -- /bin/sh -x -c nslookup nodeport-service.services-1492.svc.cluster.local'
  I0904 20:00:55.351019 21 builder.go:146] stderr: "+ nslookup nodeport-service.services-1492.svc.cluster.local\n"
  I0904 20:00:55.351086 21 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-1492.svc.cluster.local\tcanonical name = externalsvc.services-1492.svc.cluster.local.\nName:\texternalsvc.services-1492.svc.cluster.local\nAddress: 10.43.93.17\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1492, will wait for the garbage collector to delete the pods @ 09/04/24 20:00:55.351
  I0904 20:00:55.419252 21 resources.go:139] Deleting ReplicationController externalsvc took: 11.374692ms
  I0904 20:00:55.520392 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.136861ms
  E0904 20:00:56.026207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:57.026256      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:00:58.026674      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:00:58.701978 21 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0904 20:00:58.731190 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1492" for this suite. @ 09/04/24 20:00:58.744
â€¢ [8.881 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/04/24 20:00:58.775
  I0904 20:00:58.775589 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 20:00:58.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:00:58.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:00:58.942
  STEP: Creating secret with name secret-test-61f50dd8-141f-4066-b8ce-980e001bca02 @ 09/04/24 20:00:58.952
  STEP: Creating a pod to test consume secrets @ 09/04/24 20:00:58.963
  E0904 20:00:59.026980      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:00.028060      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:01.028728      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:02.029505      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:03.029664      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:01:03.245
  I0904 20:01:03.248915 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-secrets-34862731-1bac-4344-b618-dab10aed186f container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 20:01:03.265
  I0904 20:01:03.302420 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7099" for this suite. @ 09/04/24 20:01:03.308
â€¢ [4.550 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 09/04/24 20:01:03.326
  I0904 20:01:03.326786 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 20:01:03.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:01:03.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:01:03.47
  STEP: creating all guestbook components @ 09/04/24 20:01:03.475
  I0904 20:01:03.475528 21 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0904 20:01:03.477171 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-1084 create -f -'
  I0904 20:01:03.781002 21 builder.go:146] stderr: ""
  I0904 20:01:03.781049 21 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0904 20:01:03.781104 21 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0904 20:01:03.781223 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-1084 create -f -'
  I0904 20:01:03.983476 21 builder.go:146] stderr: ""
  I0904 20:01:03.983545 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0904 20:01:03.983596 21 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0904 20:01:03.983709 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-1084 create -f -'
  E0904 20:01:04.030247      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:01:04.177237 21 builder.go:146] stderr: ""
  I0904 20:01:04.177287 21 builder.go:147] stdout: "service/frontend created\n"
  I0904 20:01:04.177523 21 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0904 20:01:04.177696 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-1084 create -f -'
  I0904 20:01:04.417756 21 builder.go:146] stderr: ""
  I0904 20:01:04.417805 21 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0904 20:01:04.418015 21 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0904 20:01:04.418180 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-1084 create -f -'
  I0904 20:01:04.542333 21 builder.go:146] stderr: ""
  I0904 20:01:04.542404 21 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0904 20:01:04.542474 21 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0904 20:01:04.542647 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-1084 create -f -'
  I0904 20:01:04.715467 21 builder.go:146] stderr: ""
  I0904 20:01:04.715520 21 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/04/24 20:01:04.715
  I0904 20:01:04.715572 21 kubectl.go:2272] Waiting for all frontend pods to be Running.
  E0904 20:01:05.032739      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:06.032951      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:07.033437      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:08.033718      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:09.034207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:01:09.767210 21 kubectl.go:2276] Waiting for frontend to serve content.
  I0904 20:01:09.795749 21 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I0904 20:01:09.813774 21 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/04/24 20:01:09.834
  I0904 20:01:09.834593 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-1084 delete --grace-period=0 --force -f -'
  E0904 20:01:10.035201      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:01:10.435843 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 20:01:10.435899 21 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/24 20:01:10.435
  I0904 20:01:10.436143 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-1084 delete --grace-period=0 --force -f -'
  I0904 20:01:10.723811 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 20:01:10.723881 21 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/24 20:01:10.724
  I0904 20:01:10.724157 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-1084 delete --grace-period=0 --force -f -'
  I0904 20:01:10.856051 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 20:01:10.856143 21 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/24 20:01:10.856
  I0904 20:01:10.856289 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-1084 delete --grace-period=0 --force -f -'
  I0904 20:01:10.947664 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 20:01:10.947708 21 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/24 20:01:10.947
  I0904 20:01:10.947830 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-1084 delete --grace-period=0 --force -f -'
  E0904 20:01:11.036211      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:01:11.058558 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 20:01:11.058610 21 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/24 20:01:11.058
  I0904 20:01:11.058761 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-1084 delete --grace-period=0 --force -f -'
  I0904 20:01:11.179372 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 20:01:11.179464 21 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0904 20:01:11.179606 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1084" for this suite. @ 09/04/24 20:01:11.286
â€¢ [8.035 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/04/24 20:01:11.361
  I0904 20:01:11.361617 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/24 20:01:11.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:01:11.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:01:11.467
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/24 20:01:11.573
  E0904 20:01:12.036500      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:13.036881      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/04/24 20:01:13.667
  E0904 20:01:14.037019      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:15.037395      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/04/24 20:01:15.711
  E0904 20:01:16.037544      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:17.038572      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/04/24 20:01:17.737
  I0904 20:01:17.753684 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6477" for this suite. @ 09/04/24 20:01:17.759
â€¢ [6.409 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 09/04/24 20:01:17.771
  I0904 20:01:17.771351 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename replication-controller @ 09/04/24 20:01:17.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:01:17.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:01:17.884
  STEP: Creating ReplicationController "e2e-rc-x4sgh" @ 09/04/24 20:01:17.888
  I0904 20:01:17.900553 21 rc.go:792] Get Replication Controller "e2e-rc-x4sgh" to confirm replicas
  E0904 20:01:18.039181      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:01:18.901525 21 rc.go:792] Get Replication Controller "e2e-rc-x4sgh" to confirm replicas
  I0904 20:01:18.905744 21 rc.go:801] Found 1 replicas for "e2e-rc-x4sgh" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-x4sgh" @ 09/04/24 20:01:18.905
  STEP: Updating a scale subresource @ 09/04/24 20:01:18.909
  STEP: Verifying replicas where modified for replication controller "e2e-rc-x4sgh" @ 09/04/24 20:01:18.925
  I0904 20:01:18.925191 21 rc.go:792] Get Replication Controller "e2e-rc-x4sgh" to confirm replicas
  E0904 20:01:19.039543      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:01:19.925589 21 rc.go:792] Get Replication Controller "e2e-rc-x4sgh" to confirm replicas
  I0904 20:01:19.929923 21 rc.go:801] Found 2 replicas for "e2e-rc-x4sgh" replication controller
  I0904 20:01:19.930105 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6958" for this suite. @ 09/04/24 20:01:19.934
â€¢ [2.179 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/04/24 20:01:19.95
  I0904 20:01:19.950752 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename subpath @ 09/04/24 20:01:19.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:01:19.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:01:20.003
  STEP: Setting up data @ 09/04/24 20:01:20.006
  STEP: Creating pod pod-subpath-test-downwardapi-p6rp @ 09/04/24 20:01:20.026
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/24 20:01:20.026
  E0904 20:01:20.039565      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:21.039731      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:22.040733      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:23.040913      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:24.041558      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:25.041737      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:26.041846      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:27.042004      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:28.042163      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:29.042334      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:30.042482      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:31.042734      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:32.043771      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:33.044012      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:34.044560      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:35.045330      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:36.045602      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:37.046682      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:38.047134      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:39.047174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:40.047275      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:41.048297      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:42.048732      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:43.048880      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:44.049023      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:01:44.422
  I0904 20:01:44.425210 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-subpath-test-downwardapi-p6rp container test-container-subpath-downwardapi-p6rp: <nil>
  STEP: delete the pod @ 09/04/24 20:01:44.433
  STEP: Deleting pod pod-subpath-test-downwardapi-p6rp @ 09/04/24 20:01:44.469
  I0904 20:01:44.469368 21 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-p6rp" in namespace "subpath-2796"
  I0904 20:01:44.473875 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2796" for this suite. @ 09/04/24 20:01:44.478
â€¢ [24.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 09/04/24 20:01:44.492
  I0904 20:01:44.492766 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename gc @ 09/04/24 20:01:44.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:01:44.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:01:44.538
  STEP: create the rc1 @ 09/04/24 20:01:44.578
  STEP: create the rc2 @ 09/04/24 20:01:44.59
  E0904 20:01:45.049160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:46.049276      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:47.049808      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:48.050540      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:49.051676      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:50.052233      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/04/24 20:01:50.756
  E0904 20:01:51.053068      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:52.053753      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:53.054191      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:54.055172      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:55.055306      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:56.055905      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:57.056565      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/04/24 20:01:57.941
  STEP: wait for the rc to be deleted @ 09/04/24 20:01:58.021
  E0904 20:01:58.056982      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:01:59.057208      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:00.057682      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:01.057795      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:02.058625      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:03.051750 21 garbage_collector.go:762] 71 pods remaining
  I0904 20:02:03.051814 21 garbage_collector.go:769] 71 pods has nil DeletionTimestamp
  I0904 20:02:03.051829 21 garbage_collector.go:770] 
  E0904 20:02:03.059244      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:04.059382      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:05.059518      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:06.059924      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:07.060816      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:08.061917      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/04/24 20:02:08.643
  W0904 20:02:08.648657      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0904 20:02:08.648724 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 20:02:08.648851 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2s4k4" in namespace "gc-3434"
  I0904 20:02:08.690110 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4gxnb" in namespace "gc-3434"
  I0904 20:02:08.737771 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xhsq" in namespace "gc-3434"
  I0904 20:02:08.781130 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-54mpq" in namespace "gc-3434"
  I0904 20:02:08.835516 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-56kgz" in namespace "gc-3434"
  I0904 20:02:08.881359 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5txmv" in namespace "gc-3434"
  I0904 20:02:08.954170 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5wrvg" in namespace "gc-3434"
  I0904 20:02:09.013017 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-64jl9" in namespace "gc-3434"
  E0904 20:02:09.062335      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:09.105086 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6jvtg" in namespace "gc-3434"
  I0904 20:02:09.198982 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6n57c" in namespace "gc-3434"
  I0904 20:02:09.241962 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6rpzf" in namespace "gc-3434"
  I0904 20:02:09.293860 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-74q9g" in namespace "gc-3434"
  I0904 20:02:09.382277 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7578b" in namespace "gc-3434"
  I0904 20:02:09.500759 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-77jqp" in namespace "gc-3434"
  I0904 20:02:09.613973 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-78nv7" in namespace "gc-3434"
  I0904 20:02:09.653218 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7bnjs" in namespace "gc-3434"
  I0904 20:02:09.750890 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7cjgw" in namespace "gc-3434"
  I0904 20:02:09.825900 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7fvvc" in namespace "gc-3434"
  I0904 20:02:09.926554 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7qnwx" in namespace "gc-3434"
  I0904 20:02:09.999874 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7t7dl" in namespace "gc-3434"
  E0904 20:02:10.063362      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:10.070371 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-88fss" in namespace "gc-3434"
  I0904 20:02:10.264351 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8fg4b" in namespace "gc-3434"
  I0904 20:02:10.384102 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8nhlq" in namespace "gc-3434"
  I0904 20:02:10.463646 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8p4d4" in namespace "gc-3434"
  I0904 20:02:10.590533 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8qnnn" in namespace "gc-3434"
  I0904 20:02:10.690202 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8sbdt" in namespace "gc-3434"
  I0904 20:02:10.816018 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-927b2" in namespace "gc-3434"
  I0904 20:02:10.889402 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-94ghq" in namespace "gc-3434"
  I0904 20:02:10.950288 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-97jqb" in namespace "gc-3434"
  I0904 20:02:10.999060 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9dvq5" in namespace "gc-3434"
  E0904 20:02:11.064197      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:11.084201 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9g4v9" in namespace "gc-3434"
  I0904 20:02:11.140259 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6bvl" in namespace "gc-3434"
  I0904 20:02:11.238493 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b7tmw" in namespace "gc-3434"
  I0904 20:02:11.316259 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bm54j" in namespace "gc-3434"
  I0904 20:02:11.373823 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmnjh" in namespace "gc-3434"
  I0904 20:02:11.421227 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bsqsc" in namespace "gc-3434"
  I0904 20:02:11.485493 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bvcnr" in namespace "gc-3434"
  I0904 20:02:11.527520 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-chps4" in namespace "gc-3434"
  I0904 20:02:11.598558 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ck8hq" in namespace "gc-3434"
  I0904 20:02:12.011535 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cn59z" in namespace "gc-3434"
  E0904 20:02:12.065247      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:12.068348 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cq855" in namespace "gc-3434"
  I0904 20:02:12.125704 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cztds" in namespace "gc-3434"
  I0904 20:02:12.175245 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d79z5" in namespace "gc-3434"
  I0904 20:02:12.204435 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dhfwc" in namespace "gc-3434"
  I0904 20:02:12.292920 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dkmc9" in namespace "gc-3434"
  I0904 20:02:12.368602 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dld8d" in namespace "gc-3434"
  I0904 20:02:12.412671 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dn29r" in namespace "gc-3434"
  I0904 20:02:12.459680 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dpvm4" in namespace "gc-3434"
  I0904 20:02:12.506426 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ffxch" in namespace "gc-3434"
  I0904 20:02:12.572198 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fnwm4" in namespace "gc-3434"
  I0904 20:02:12.616556 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3434" for this suite. @ 09/04/24 20:02:12.625
â€¢ [28.192 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/04/24 20:02:12.686
  I0904 20:02:12.686550 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 20:02:12.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:02:12.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:02:12.799
  STEP: Creating pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884 @ 09/04/24 20:02:12.804
  E0904 20:02:13.066055      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:14.066221      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:15.066893      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:16.067636      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 20:02:16.47
  I0904 20:02:16.474746 21 container_probe.go:1749] Initial restart count of pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 is 0
  I0904 20:02:16.479439 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:17.068193      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:18.068297      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:18.488671 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:19.068794      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:20.069336      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:20.492465 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:21.069927      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:22.070436      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:22.496972 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:23.070642      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:24.070746      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:24.500841 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:25.071489      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:26.071629      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:26.505131 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:27.072537      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:28.072687      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:28.508882 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:29.073502      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:30.073650      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:30.513444 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:31.073805      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:32.074887      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:32.517620 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:33.075116      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:34.075693      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:34.521909 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:35.075662      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:36.076186      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:36.526970 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:37.076624      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:38.076907      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:38.532379 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:39.077021      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:40.077233      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:40.536955 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:41.077340      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:42.077712      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:42.541766 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:43.077839      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:44.078324      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:44.545920 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:45.078687      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:46.079531      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:46.550233 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:47.079551      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:48.079633      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:48.554445 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:49.080006      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:50.080135      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:50.559665 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:51.080311      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:52.080665      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:52.569584 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:53.081196      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:54.081496      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:54.597777 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:55.082244      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:56.082422      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:56.618525 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:57.083308      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:02:58.084182      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:02:58.623139 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:02:59.084295      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:00.085363      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:00.635134 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:01.085700      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:02.086728      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:02.652701 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:03.087213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:04.087444      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:04.664911 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:05.088209      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:06.088370      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:06.680343 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:07.089350      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:08.089742      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:08.685522 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:09.090351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:10.090463      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:10.692425 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:11.090873      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:12.091580      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:12.697450 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:13.091916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:14.092043      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:14.702427 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:15.093093      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:16.093413      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:16.707225 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:17.094113      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:18.094331      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:18.711511 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:19.095294      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:20.096303      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:20.715874 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:21.097034      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:22.097617      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:22.721314 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:23.097702      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:24.098648      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:24.726557 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:25.099290      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:26.099409      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:26.732370 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:27.099615      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:28.099693      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:28.739880 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:29.100575      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:30.100901      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:30.744686 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:31.102223      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:32.102783      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:32.750007 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:33.103828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:34.104128      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:34.755870 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:35.104452      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:36.104676      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:36.760562 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:37.105351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:38.105562      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:38.764761 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:39.106584      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:40.106510      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:40.771812 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:41.107552      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:42.107807      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:42.778708 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:43.108246      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:44.108679      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:44.783852 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:45.109454      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:46.109916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:46.788548 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:47.110164      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:48.110317      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:48.793183 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:49.110599      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:50.111667      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:50.797408 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:51.111999      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:52.112752      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:52.801732 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:53.112966      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:54.113279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:54.806652 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:55.114130      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:56.114239      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:56.811003 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:57.114943      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:03:58.115107      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:03:58.816170 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:03:59.115567      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:00.115716      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:00.819812 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:01.116216      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:02.116701      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:02.825363 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:03.117888      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:04.118337      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:04.830485 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:05.118740      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:06.119089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:06.835237 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:07.119701      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:08.119834      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:08.839764 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:09.120094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:10.120244      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:10.845187 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:11.120699      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:12.121222      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:12.850121 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:13.121529      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:14.121736      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:14.854395 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:15.122150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:16.122788      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:16.859358 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:17.122960      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:18.123134      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:18.864654 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:19.124292      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:20.124404      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:20.869023 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:21.125373      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:22.125807      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:22.874714 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:23.126408      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:24.126941      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:24.879198 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:25.127759      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:26.127923      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:26.883695 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:27.128687      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:28.128842      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:28.887709 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:29.129575      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:30.129919      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:30.892671 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:31.131069      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:32.131710      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:32.902612 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:33.131988      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:34.132445      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:34.907734 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:35.132905      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:36.133197      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:36.912235 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:37.133859      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:38.134042      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:38.916745 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:39.135096      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:40.135239      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:40.920979 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:41.136978      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:42.137739      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:42.926468 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:43.137815      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:44.138234      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:44.931633 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:45.139273      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:46.139673      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:46.935749 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:47.140064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:48.140171      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:48.942032 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:49.140295      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:50.140590      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:50.946727 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:51.141178      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:52.141845      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:52.952541 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:53.142841      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:54.143027      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:54.956959 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:55.143546      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:56.144237      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:56.962233 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:57.144611      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:04:58.145674      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:04:58.966648 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:04:59.146006      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:00.146083      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:00.971166 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:01.146643      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:02.147279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:02.976339 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:03.147700      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:04.147809      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:04.981100 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:05.148562      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:06.148708      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:06.987921 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:07.149145      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:08.149411      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:08.992369 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:09.149635      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:10.149914      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:10.996394 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:11.150633      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:12.151086      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:13.001460 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:13.151797      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:14.151991      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:15.005736 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:15.152046      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:16.152897      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:17.010483 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:17.153721      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:18.153894      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:19.015821 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:19.154551      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:20.154160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:21.020636 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:21.155014      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:22.155571      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:23.025342 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:23.156663      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:24.156963      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:25.035203 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:25.157407      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:26.157688      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:27.040528 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:27.158041      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:28.158471      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:29.045784 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:29.159068      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:30.159225      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:31.050880 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:31.160160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:32.161257      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:33.058738 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:33.161976      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:34.162262      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:35.063376 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:35.162656      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:36.162778      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:37.068133 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:37.163304      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:38.163428      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:39.072476 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:39.163736      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:40.164138      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:41.077637 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:41.164810      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:42.165642      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:43.082096 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:43.166335      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:44.166478      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:45.086553 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:45.166869      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:46.167179      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:47.091364 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:47.167550      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:48.168193      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:49.095992 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:49.169179      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:50.169471      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:51.101092 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:51.170424      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:52.170999      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:53.112193 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:53.171391      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:54.172198      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:55.118485 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:55.172704      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:56.172813      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:57.123594 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:57.173788      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:05:58.173881      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:05:59.128745 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:05:59.174044      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:00.174515      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:06:01.135149 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:06:01.175306      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:02.176214      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:06:03.139853 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:06:03.177064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:04.177336      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:06:05.144697 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:06:05.177955      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:06.178135      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:06:07.158196 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:06:07.178380      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:08.178526      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:06:09.162870 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:06:09.179049      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:10.179103      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:06:11.167136 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:06:11.179300      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:12.179886      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:06:13.171765 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:06:13.180844      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:14.181245      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:06:15.176309 21 container_probe.go:1759] Get pod busybox-6919a8bc-6706-4990-8adf-0f7b5b9bfb90 in namespace container-probe-7884
  E0904 20:06:15.181638      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:16.181830      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/04/24 20:06:17.176
  E0904 20:06:17.181834      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:06:17.227431 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7884" for this suite. @ 09/04/24 20:06:17.239
â€¢ [244.570 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 09/04/24 20:06:17.256
  I0904 20:06:17.256606 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:06:17.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:06:17.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:06:17.323
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:06:17.327
  E0904 20:06:18.182564      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:19.183116      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:20.184206      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:21.185168      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:22.185751      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:06:22.482
  I0904 20:06:22.486311 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-364e0aee-0f47-4ba7-85a5-a43b09edd85c container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:06:22.5
  I0904 20:06:22.529080 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1187" for this suite. @ 09/04/24 20:06:22.534
â€¢ [5.315 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/04/24 20:06:22.572
  I0904 20:06:22.572812 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:06:22.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:06:22.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:06:22.608
  STEP: Creating a pod to test downward api env vars @ 09/04/24 20:06:22.613
  E0904 20:06:23.185929      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:24.186198      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:25.186793      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:26.187117      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:06:26.657
  I0904 20:06:26.660321 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downward-api-a8e58056-5833-416e-879b-a46859fd8110 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 20:06:26.668
  I0904 20:06:26.720540 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7008" for this suite. @ 09/04/24 20:06:26.724
â€¢ [4.175 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 09/04/24 20:06:26.748
  I0904 20:06:26.748577 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 20:06:26.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:06:26.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:06:26.793
  I0904 20:06:26.795757 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:06:27.187924      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:28.193493      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/04/24 20:06:28.643
  I0904 20:06:28.644171 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-6994 --namespace=crd-publish-openapi-6994 create -f -'
  I0904 20:06:28.750746 21 builder.go:146] stderr: ""
  I0904 20:06:28.750810 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-704-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0904 20:06:28.750870 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-6994 --namespace=crd-publish-openapi-6994 delete e2e-test-crd-publish-openapi-704-crds test-cr'
  I0904 20:06:28.894851 21 builder.go:146] stderr: ""
  I0904 20:06:28.894937 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-704-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0904 20:06:28.895114 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-6994 --namespace=crd-publish-openapi-6994 apply -f -'
  E0904 20:06:29.193671      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:06:29.565448 21 builder.go:146] stderr: ""
  I0904 20:06:29.565495 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-704-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0904 20:06:29.565578 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-6994 --namespace=crd-publish-openapi-6994 delete e2e-test-crd-publish-openapi-704-crds test-cr'
  I0904 20:06:29.675739 21 builder.go:146] stderr: ""
  I0904 20:06:29.675791 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-704-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/04/24 20:06:29.675
  I0904 20:06:29.675978 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-6994 explain e2e-test-crd-publish-openapi-704-crds'
  I0904 20:06:29.756122 21 builder.go:146] stderr: ""
  I0904 20:06:29.756196 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-704-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0904 20:06:30.194593      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:31.195402      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:06:31.577494 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6994" for this suite. @ 09/04/24 20:06:31.785
â€¢ [5.047 seconds]
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 09/04/24 20:06:31.795
  I0904 20:06:31.795235 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 20:06:31.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:06:31.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:06:31.882
  STEP: Creating configMap with name cm-test-opt-del-012cc1e1-3840-4924-aad9-65506ab68a51 @ 09/04/24 20:06:31.889
  STEP: Creating configMap with name cm-test-opt-upd-a7e3357f-9f41-423e-bcd1-0f5775ce08df @ 09/04/24 20:06:31.9
  STEP: Creating the pod @ 09/04/24 20:06:31.909
  E0904 20:06:32.195717      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:33.196411      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-012cc1e1-3840-4924-aad9-65506ab68a51 @ 09/04/24 20:06:33.958
  STEP: Updating configmap cm-test-opt-upd-a7e3357f-9f41-423e-bcd1-0f5775ce08df @ 09/04/24 20:06:33.968
  STEP: Creating configMap with name cm-test-opt-create-c0de9ff7-e6aa-4d38-b10e-bdb4a5a59eaf @ 09/04/24 20:06:33.977
  STEP: waiting to observe update in volume @ 09/04/24 20:06:33.986
  E0904 20:06:34.197025      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:35.197294      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:36.197368      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:37.197474      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:06:38.039122 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4897" for this suite. @ 09/04/24 20:06:38.043
â€¢ [6.258 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/04/24 20:06:38.053
  I0904 20:06:38.053736 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename disruption @ 09/04/24 20:06:38.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:06:38.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:06:38.11
  STEP: Waiting for the pdb to be processed @ 09/04/24 20:06:38.13
  E0904 20:06:38.198331      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:39.198532      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/04/24 20:06:40.134
  STEP: Waiting for all pods to be running @ 09/04/24 20:06:40.151
  I0904 20:06:40.160170 21 disruption.go:691] running pods: 0 < 1
  E0904 20:06:40.198626      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:41.199103      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/04/24 20:06:42.156
  STEP: Waiting for the pdb to be processed @ 09/04/24 20:06:42.176
  STEP: Patching PodDisruptionBudget status @ 09/04/24 20:06:42.194
  E0904 20:06:42.199558      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/04/24 20:06:42.216
  I0904 20:06:42.219117 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9455" for this suite. @ 09/04/24 20:06:42.232
â€¢ [4.188 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/04/24 20:06:42.242
  I0904 20:06:42.242123 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename watch @ 09/04/24 20:06:42.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:06:42.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:06:42.335
  STEP: creating a watch on configmaps with label A @ 09/04/24 20:06:42.341
  STEP: creating a watch on configmaps with label B @ 09/04/24 20:06:42.343
  STEP: creating a watch on configmaps with label A or B @ 09/04/24 20:06:42.345
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/04/24 20:06:42.347
  I0904 20:06:42.356939 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5911  d728d4d7-7886-4bd8-b97d-cd8f1ea1865d 221164 0 2024-09-04 20:06:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 20:06:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:06:42.357126 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5911  d728d4d7-7886-4bd8-b97d-cd8f1ea1865d 221164 0 2024-09-04 20:06:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 20:06:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/04/24 20:06:42.357
  I0904 20:06:42.375451 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5911  d728d4d7-7886-4bd8-b97d-cd8f1ea1865d 221165 0 2024-09-04 20:06:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 20:06:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:06:42.375592 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5911  d728d4d7-7886-4bd8-b97d-cd8f1ea1865d 221165 0 2024-09-04 20:06:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 20:06:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/04/24 20:06:42.375
  I0904 20:06:42.387394 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5911  d728d4d7-7886-4bd8-b97d-cd8f1ea1865d 221166 0 2024-09-04 20:06:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 20:06:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:06:42.387543 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5911  d728d4d7-7886-4bd8-b97d-cd8f1ea1865d 221166 0 2024-09-04 20:06:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 20:06:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/04/24 20:06:42.387
  I0904 20:06:42.402111 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5911  d728d4d7-7886-4bd8-b97d-cd8f1ea1865d 221167 0 2024-09-04 20:06:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 20:06:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:06:42.402195 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5911  d728d4d7-7886-4bd8-b97d-cd8f1ea1865d 221167 0 2024-09-04 20:06:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-04 20:06:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/04/24 20:06:42.402
  I0904 20:06:42.410930 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5911  4344a781-69fb-405f-b6d4-3bb9cc60ef72 221168 0 2024-09-04 20:06:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-04 20:06:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:06:42.411165 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5911  4344a781-69fb-405f-b6d4-3bb9cc60ef72 221168 0 2024-09-04 20:06:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-04 20:06:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0904 20:06:43.200201      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:44.200317      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:45.200476      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:46.201042      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:47.201713      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:48.201844      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:49.202117      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:50.202436      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:51.202626      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:52.202716      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/04/24 20:06:52.412
  I0904 20:06:52.423031 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5911  4344a781-69fb-405f-b6d4-3bb9cc60ef72 221235 0 2024-09-04 20:06:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-04 20:06:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:06:52.423118 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5911  4344a781-69fb-405f-b6d4-3bb9cc60ef72 221235 0 2024-09-04 20:06:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-04 20:06:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0904 20:06:53.202807      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:54.203406      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:55.203407      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:56.203604      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:57.203601      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:58.204180      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:06:59.204438      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:00.204602      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:01.205531      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:02.206589      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:07:02.424385 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5911" for this suite. @ 09/04/24 20:07:02.53
â€¢ [20.720 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 09/04/24 20:07:02.962
  I0904 20:07:02.962850 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 20:07:02.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:07:02.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:07:03.001
  I0904 20:07:03.054640 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8823" for this suite. @ 09/04/24 20:07:03.058
â€¢ [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 09/04/24 20:07:03.07
  I0904 20:07:03.070874 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 20:07:03.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:07:03.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:07:03.202
  E0904 20:07:03.207452      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with terminating scope @ 09/04/24 20:07:03.21
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/24 20:07:03.218
  E0904 20:07:04.208466      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:05.208611      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/04/24 20:07:05.323
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/24 20:07:05.332
  E0904 20:07:06.208750      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:07.209737      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/04/24 20:07:07.338
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/04/24 20:07:07.567
  E0904 20:07:08.210872      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:09.211138      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/04/24 20:07:09.788
  E0904 20:07:10.212110      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:11.212219      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/04/24 20:07:11.792
  STEP: Ensuring resource quota status released the pod usage @ 09/04/24 20:07:11.815
  E0904 20:07:12.212371      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:13.212549      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/04/24 20:07:13.819
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/04/24 20:07:13.838
  E0904 20:07:14.213237      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:15.213417      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/04/24 20:07:15.842
  E0904 20:07:16.214384      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:17.214868      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/04/24 20:07:17.845
  STEP: Ensuring resource quota status released the pod usage @ 09/04/24 20:07:17.872
  E0904 20:07:18.214994      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:19.215099      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:07:19.876802 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5447" for this suite. @ 09/04/24 20:07:20.082
â€¢ [17.022 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/04/24 20:07:20.093
  I0904 20:07:20.093554 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename var-expansion @ 09/04/24 20:07:20.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:07:20.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:07:20.133
  STEP: Creating a pod to test substitution in volume subpath @ 09/04/24 20:07:20.136
  E0904 20:07:20.215976      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:21.216428      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:22.216875      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:23.217250      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:07:24.196
  I0904 20:07:24.198736 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod var-expansion-8bbc0feb-76e3-4cd9-ac68-b967b3658a0c container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 20:07:24.204
  E0904 20:07:24.217968      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:07:24.229386 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4309" for this suite. @ 09/04/24 20:07:24.234
â€¢ [4.152 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/04/24 20:07:24.245
  I0904 20:07:24.245795 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:07:24.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:07:24.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:07:24.589
  STEP: Setting up server cert @ 09/04/24 20:07:24.676
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:07:25.067
  STEP: Deploying the webhook pod @ 09/04/24 20:07:25.08
  STEP: Wait for the deployment to be ready @ 09/04/24 20:07:25.109
  I0904 20:07:25.136566 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:07:25.219019      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:26.219087      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:27.219768      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:28.219903      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:07:28.356
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:07:28.382
  E0904 20:07:29.220110      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:07:29.383596 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/04/24 20:07:29.39
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/04/24 20:07:29.426
  STEP: Creating a dummy validating-webhook-configuration object @ 09/04/24 20:07:29.452
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/04/24 20:07:29.475
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/04/24 20:07:29.484
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/04/24 20:07:29.505
  I0904 20:07:29.659079 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2358" for this suite. @ 09/04/24 20:07:29.663
  STEP: Destroying namespace "webhook-markers-433" for this suite. @ 09/04/24 20:07:29.674
â€¢ [5.438 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 09/04/24 20:07:29.684
  I0904 20:07:29.684598 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename replication-controller @ 09/04/24 20:07:29.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:07:29.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:07:29.83
  STEP: Given a ReplicationController is created @ 09/04/24 20:07:29.834
  STEP: When the matched label of one of its pods change @ 09/04/24 20:07:29.848
  I0904 20:07:29.850774 21 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0904 20:07:30.220196      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:31.221013      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:32.221622      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:33.222321      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:34.222491      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:07:34.855004 21 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/04/24 20:07:34.873
  E0904 20:07:35.222608      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:07:35.880344 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4784" for this suite. @ 09/04/24 20:07:35.888
â€¢ [6.233 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 09/04/24 20:07:35.918
  I0904 20:07:35.918613 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:07:35.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:07:35.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:07:35.961
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:07:35.964
  E0904 20:07:36.223227      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:37.223518      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:38.223624      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:39.224186      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:07:40.004
  I0904 20:07:40.011737 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod downwardapi-volume-7c5846d2-f8cf-4f47-8765-644e1ef03bf2 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:07:40.025
  I0904 20:07:40.065760 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7419" for this suite. @ 09/04/24 20:07:40.071
â€¢ [4.164 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 09/04/24 20:07:40.083
  I0904 20:07:40.083814 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 20:07:40.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:07:40.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:07:40.121
  STEP: Creating configMap with name configmap-test-volume-map-e4ae1280-f5b3-43cb-8447-bbcced7d559e @ 09/04/24 20:07:40.124
  STEP: Creating a pod to test consume configMaps @ 09/04/24 20:07:40.133
  E0904 20:07:40.225198      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:41.225494      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:42.225492      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:43.226224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:07:44.189
  I0904 20:07:44.191770 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod pod-configmaps-2a5f2ac4-002e-459c-8c50-65c764651fda container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 20:07:44.196
  I0904 20:07:44.223749 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 20:07:44.227003      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "configmap-5439" for this suite. @ 09/04/24 20:07:44.227
â€¢ [4.154 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/04/24 20:07:44.239
  I0904 20:07:44.239620 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 20:07:44.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:07:44.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:07:44.295
  I0904 20:07:44.300894 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:07:45.227336      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:46.227782      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0904 20:07:47.095863      21 warnings.go:70] unknown field "alpha"
  W0904 20:07:47.096024      21 warnings.go:70] unknown field "beta"
  W0904 20:07:47.096105      21 warnings.go:70] unknown field "delta"
  W0904 20:07:47.096200      21 warnings.go:70] unknown field "epsilon"
  W0904 20:07:47.096273      21 warnings.go:70] unknown field "gamma"
  E0904 20:07:47.228414      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:07:47.654115 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4032" for this suite. @ 09/04/24 20:07:47.658
â€¢ [3.428 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/04/24 20:07:47.667
  I0904 20:07:47.667713 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename init-container @ 09/04/24 20:07:47.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:07:47.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:07:47.699
  STEP: creating the pod @ 09/04/24 20:07:47.703
  I0904 20:07:47.703649 21 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0904 20:07:48.229330      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:49.229960      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:50.230773      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:07:50.935592 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2474" for this suite. @ 09/04/24 20:07:50.94
â€¢ [3.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/04/24 20:07:50.956
  I0904 20:07:50.956900 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename deployment @ 09/04/24 20:07:50.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:07:51.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:07:51.221
  I0904 20:07:51.225380 21 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  E0904 20:07:51.231439      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:07:51.245305 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0904 20:07:52.231927      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:53.232909      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:54.233062      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:55.233257      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:56.233532      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:07:56.250612 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/24 20:07:56.25
  I0904 20:07:56.250716 21 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0904 20:07:56.268060 21 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0904 20:07:56.291865 21 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0904 20:07:57.234109      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:07:58.234538      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:07:58.504308 21 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0904 20:07:58.507212 21 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0904 20:07:58.516250 21 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7473",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e85f743-01af-4c41-a458-76aaa78fd2c4",
      ResourceVersion: (string) (len=6) "221799",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861077276,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 20:07:58.525742 21 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7473",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "acb815dd-5fc1-4ede-a1e3-62dd74def084",
      ResourceVersion: (string) (len=6) "221789",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861077276,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5e85f743-01af-4c41-a458-76aaa78fd2c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 65 38 35 66 37  34 33 2d 30 31 61 66 2d  |\"5e85f743-01af-|
              00000120  34 63 34 31 2d 61 34 35  38 2d 37 36 61 61 61 37  |4c41-a458-76aaa7|
              00000130  38 66 64 32 63 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8fd2c4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 20:07:58.527154 21 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0904 20:07:58.527537 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7473",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c26df132-5bda-4c81-81cb-9aacb877e045",
      ResourceVersion: (string) (len=6) "221798",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861077271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5e85f743-01af-4c41-a458-76aaa78fd2c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 65 38 35 66 37 34  |"uid\":\"5e85f74|
              000000b0  33 2d 30 31 61 66 2d 34  63 34 31 2d 61 34 35 38  |3-01af-4c41-a458|
              000000c0  2d 37 36 61 61 61 37 38  66 64 32 63 34 5c 22 7d  |-76aaa78fd2c4\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 20:07:58.533181 21 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-pszxw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-pszxw",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-7473",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8851e669-ddc6-4ce2-9163-4642f967a73a",
      ResourceVersion: (string) (len=6) "221788",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861077276,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "acb815dd-5fc1-4ede-a1e3-62dd74def084",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 63  62 38 31 35 64 64 2d 35  |d\":\"acb815dd-5|
              00000090  66 63 31 2d 34 65 64 65  2d 61 31 65 33 2d 36 32  |fc1-4ede-a1e3-62|
              000000a0  64 64 37 34 64 65 66 30  38 34 5c 22 7d 22 3a 7b  |dd74def084\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 36  35 5c 22 7d 22 3a 7b 22  |.42.3.165\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-45vzc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-45vzc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-190.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861077276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.190"
        }
      },
      PodIP: (string) (len=11) "10.42.3.165",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.165"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861077276,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861077277,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://f8767e3389524fb48349fb6fac5f22c958fa8bcec5d5c13ba219d5a1a6fb2ebb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-45vzc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 20:07:58.537579 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7473" for this suite. @ 09/04/24 20:07:58.541
â€¢ [7.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 09/04/24 20:07:58.559
  I0904 20:07:58.559330 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename job @ 09/04/24 20:07:58.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:07:58.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:07:58.605
  STEP: Creating a job @ 09/04/24 20:07:58.609
  STEP: Ensuring active pods == parallelism @ 09/04/24 20:07:58.625
  E0904 20:07:59.234660      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:00.234767      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/04/24 20:08:00.628
  STEP: deleting Job.batch foo in namespace job-5116, will wait for the garbage collector to delete the pods @ 09/04/24 20:08:00.628
  I0904 20:08:00.693078 21 resources.go:139] Deleting Job.batch foo took: 9.716595ms
  I0904 20:08:00.794035 21 resources.go:163] Terminating Job.batch foo pods took: 100.955193ms
  E0904 20:08:01.235481      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:02.236613      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:03.236929      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/04/24 20:08:03.594
  I0904 20:08:03.608375 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5116" for this suite. @ 09/04/24 20:08:03.612
â€¢ [5.064 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/04/24 20:08:03.624
  I0904 20:08:03.624306 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/24 20:08:03.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:08:03.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:08:03.666
  I0904 20:08:03.669869 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:08:04.237206      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:05.237871      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:06.238061      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:07.238690      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:08.238863      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:09.239441      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:10.240330      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:10.884821 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9977" for this suite. @ 09/04/24 20:08:10.888
â€¢ [7.277 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 09/04/24 20:08:10.901
  I0904 20:08:10.901855 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:08:10.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:08:11.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:08:11.089
  STEP: Creating configMap with name projected-configmap-test-volume-4b825534-7211-4900-9233-36b12cba6bfe @ 09/04/24 20:08:11.093
  STEP: Creating a pod to test consume configMaps @ 09/04/24 20:08:11.102
  E0904 20:08:11.240612      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:12.240735      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:13.241820      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:14.241966      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:08:15.131
  I0904 20:08:15.133583 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-configmaps-19dbe62c-7946-4fcd-9600-ea4092a5c288 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 20:08:15.138
  I0904 20:08:15.169341 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 20:08:15.242788      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-4779" for this suite. @ 09/04/24 20:08:15.374
â€¢ [4.488 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 09/04/24 20:08:15.391
  I0904 20:08:15.391585 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:08:15.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:08:15.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:08:15.441
  STEP: Creating configMap with name projected-configmap-test-volume-12ce4053-678f-4c5f-a9b7-65c3a0ff345c @ 09/04/24 20:08:15.445
  STEP: Creating a pod to test consume configMaps @ 09/04/24 20:08:15.464
  E0904 20:08:16.243101      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:17.243670      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:18.243690      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:19.243808      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:08:19.523
  I0904 20:08:19.549978 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-configmaps-c1b3907d-9522-4b97-bbd1-5a45949fdbe6 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 20:08:19.556
  I0904 20:08:19.613289 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9065" for this suite. @ 09/04/24 20:08:19.616
â€¢ [4.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 09/04/24 20:08:19.629
  I0904 20:08:19.629528 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 20:08:19.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:08:19.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:08:19.876
  STEP: creating a replication controller @ 09/04/24 20:08:19.882
  I0904 20:08:19.882306 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 create -f -'
  I0904 20:08:20.070870 21 builder.go:146] stderr: ""
  I0904 20:08:20.070952 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/24 20:08:20.07
  I0904 20:08:20.071060 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 20:08:20.158745 21 builder.go:146] stderr: ""
  I0904 20:08:20.158793 21 builder.go:147] stdout: ""
  STEP: Replicas for name=update-demo: expected=2 actual=0 @ 09/04/24 20:08:20.158
  E0904 20:08:20.244018      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:21.244153      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:22.244693      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:23.245626      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:24.245916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:25.159108 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0904 20:08:25.246797      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:25.555451 21 builder.go:146] stderr: ""
  I0904 20:08:25.555516 21 builder.go:147] stdout: "update-demo-nautilus-4rqvh update-demo-nautilus-n7xv5 "
  I0904 20:08:25.555591 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-4rqvh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 20:08:25.645176 21 builder.go:146] stderr: ""
  I0904 20:08:25.645233 21 builder.go:147] stdout: "true"
  I0904 20:08:25.645301 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-4rqvh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 20:08:25.750516 21 builder.go:146] stderr: ""
  I0904 20:08:25.750572 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 20:08:25.750592 21 kubectl.go:2393] validating pod update-demo-nautilus-4rqvh
  I0904 20:08:25.762703 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 20:08:25.762793 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 20:08:25.762813 21 kubectl.go:2520] update-demo-nautilus-4rqvh is verified up and running
  I0904 20:08:25.762866 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-n7xv5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 20:08:25.858284 21 builder.go:146] stderr: ""
  I0904 20:08:25.858489 21 builder.go:147] stdout: ""
  I0904 20:08:25.858509 21 kubectl.go:2502] update-demo-nautilus-n7xv5 is created but not running
  E0904 20:08:26.246816      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:27.247085      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:28.247223      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:29.248158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:30.248359      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:30.859029 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 20:08:30.982169 21 builder.go:146] stderr: ""
  I0904 20:08:30.982229 21 builder.go:147] stdout: "update-demo-nautilus-4rqvh update-demo-nautilus-n7xv5 "
  I0904 20:08:30.982375 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-4rqvh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 20:08:31.068177 21 builder.go:146] stderr: ""
  I0904 20:08:31.068226 21 builder.go:147] stdout: "true"
  I0904 20:08:31.068293 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-4rqvh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 20:08:31.159897 21 builder.go:146] stderr: ""
  I0904 20:08:31.159967 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 20:08:31.159988 21 kubectl.go:2393] validating pod update-demo-nautilus-4rqvh
  I0904 20:08:31.167430 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 20:08:31.167573 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 20:08:31.167676 21 kubectl.go:2520] update-demo-nautilus-4rqvh is verified up and running
  I0904 20:08:31.167817 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-n7xv5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0904 20:08:31.248520      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:31.278813 21 builder.go:146] stderr: ""
  I0904 20:08:31.278875 21 builder.go:147] stdout: "true"
  I0904 20:08:31.279227 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-n7xv5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 20:08:31.391286 21 builder.go:146] stderr: ""
  I0904 20:08:31.391338 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 20:08:31.391373 21 kubectl.go:2393] validating pod update-demo-nautilus-n7xv5
  I0904 20:08:31.402107 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 20:08:31.402175 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 20:08:31.402195 21 kubectl.go:2520] update-demo-nautilus-n7xv5 is verified up and running
  STEP: scaling down the replication controller @ 09/04/24 20:08:31.402
  I0904 20:08:31.404598 21 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0904 20:08:31.404653 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0904 20:08:32.248924      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:32.530986 21 builder.go:146] stderr: ""
  I0904 20:08:32.531051 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/24 20:08:32.531
  I0904 20:08:32.531170 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 20:08:32.628321 21 builder.go:146] stderr: ""
  I0904 20:08:32.628380 21 builder.go:147] stdout: "update-demo-nautilus-4rqvh update-demo-nautilus-n7xv5 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 09/04/24 20:08:32.628
  E0904 20:08:33.249214      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:34.249326      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:35.249482      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:36.249644      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:37.249723      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:37.629430 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 20:08:37.723114 21 builder.go:146] stderr: ""
  I0904 20:08:37.723244 21 builder.go:147] stdout: "update-demo-nautilus-n7xv5 "
  I0904 20:08:37.723322 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-n7xv5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 20:08:37.852748 21 builder.go:146] stderr: ""
  I0904 20:08:37.852830 21 builder.go:147] stdout: "true"
  I0904 20:08:37.852993 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-n7xv5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 20:08:37.935262 21 builder.go:146] stderr: ""
  I0904 20:08:37.935335 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 20:08:37.935358 21 kubectl.go:2393] validating pod update-demo-nautilus-n7xv5
  I0904 20:08:37.939219 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 20:08:37.939300 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 20:08:37.939320 21 kubectl.go:2520] update-demo-nautilus-n7xv5 is verified up and running
  STEP: scaling up the replication controller @ 09/04/24 20:08:37.939
  I0904 20:08:37.941506 21 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0904 20:08:37.941583 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0904 20:08:38.250347      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:39.075980 21 builder.go:146] stderr: ""
  I0904 20:08:39.076048 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/24 20:08:39.076
  I0904 20:08:39.076178 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 20:08:39.160165 21 builder.go:146] stderr: ""
  I0904 20:08:39.160224 21 builder.go:147] stdout: "update-demo-nautilus-n7xv5 update-demo-nautilus-wklrt "
  I0904 20:08:39.160643 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-n7xv5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 20:08:39.245351 21 builder.go:146] stderr: ""
  I0904 20:08:39.245412 21 builder.go:147] stdout: "true"
  I0904 20:08:39.245689 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-n7xv5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0904 20:08:39.251314      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:39.328185 21 builder.go:146] stderr: ""
  I0904 20:08:39.328247 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 20:08:39.328269 21 kubectl.go:2393] validating pod update-demo-nautilus-n7xv5
  I0904 20:08:39.332732 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 20:08:39.332824 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 20:08:39.332845 21 kubectl.go:2520] update-demo-nautilus-n7xv5 is verified up and running
  I0904 20:08:39.332903 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-wklrt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 20:08:39.411950 21 builder.go:146] stderr: ""
  I0904 20:08:39.412015 21 builder.go:147] stdout: ""
  I0904 20:08:39.412036 21 kubectl.go:2502] update-demo-nautilus-wklrt is created but not running
  E0904 20:08:40.252160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:41.252410      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:42.252812      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:43.253150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:44.253475      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:44.412981 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 20:08:44.504743 21 builder.go:146] stderr: ""
  I0904 20:08:44.504805 21 builder.go:147] stdout: "update-demo-nautilus-n7xv5 update-demo-nautilus-wklrt "
  I0904 20:08:44.504869 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-n7xv5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 20:08:44.589449 21 builder.go:146] stderr: ""
  I0904 20:08:44.589499 21 builder.go:147] stdout: "true"
  I0904 20:08:44.589578 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-n7xv5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 20:08:44.683429 21 builder.go:146] stderr: ""
  I0904 20:08:44.683511 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 20:08:44.683532 21 kubectl.go:2393] validating pod update-demo-nautilus-n7xv5
  I0904 20:08:44.687600 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 20:08:44.687668 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 20:08:44.687685 21 kubectl.go:2520] update-demo-nautilus-n7xv5 is verified up and running
  I0904 20:08:44.687739 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-wklrt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 20:08:44.767773 21 builder.go:146] stderr: ""
  I0904 20:08:44.767842 21 builder.go:147] stdout: "true"
  I0904 20:08:44.767914 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods update-demo-nautilus-wklrt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 20:08:44.849852 21 builder.go:146] stderr: ""
  I0904 20:08:44.849920 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 20:08:44.849943 21 kubectl.go:2393] validating pod update-demo-nautilus-wklrt
  I0904 20:08:44.856737 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 20:08:44.856815 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 20:08:44.856835 21 kubectl.go:2520] update-demo-nautilus-wklrt is verified up and running
  STEP: using delete to clean up resources @ 09/04/24 20:08:44.857
  I0904 20:08:44.857317 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 delete --grace-period=0 --force -f -'
  I0904 20:08:44.943001 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 20:08:44.943185 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0904 20:08:44.943281 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get rc,svc -l name=update-demo --no-headers'
  I0904 20:08:45.154784 21 builder.go:146] stderr: "No resources found in kubectl-6861 namespace.\n"
  I0904 20:08:45.154844 21 builder.go:147] stdout: ""
  I0904 20:08:45.154987 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-6861 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0904 20:08:45.253593      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:45.290897 21 builder.go:146] stderr: ""
  I0904 20:08:45.291008 21 builder.go:147] stdout: ""
  I0904 20:08:45.291141 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6861" for this suite. @ 09/04/24 20:08:45.396
â€¢ [25.777 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 09/04/24 20:08:45.406
  I0904 20:08:45.406674 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename security-context-test @ 09/04/24 20:08:45.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:08:45.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:08:45.649
  E0904 20:08:46.254623      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:47.255242      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:48.255973      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:49.256108      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:49.793593 21 security_context.go:538] Got logs for pod "busybox-privileged-false-b7bd496f-c1aa-4d65-b89a-b1ecaa643cbb": "ip: RTNETLINK answers: Operation not permitted\n"
  I0904 20:08:49.794202 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7864" for this suite. @ 09/04/24 20:08:49.798
â€¢ [4.406 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/04/24 20:08:49.813
  I0904 20:08:49.813473 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename watch @ 09/04/24 20:08:49.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:08:49.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:08:49.949
  STEP: getting a starting resourceVersion @ 09/04/24 20:08:49.953
  STEP: starting a background goroutine to produce watch events @ 09/04/24 20:08:49.955
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/04/24 20:08:49.955
  E0904 20:08:50.257198      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:51.257244      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:52.257242      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:08:52.656150 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1419" for this suite. @ 09/04/24 20:08:52.7
â€¢ [2.943 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 09/04/24 20:08:52.756
  I0904 20:08:52.756254 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/24 20:08:52.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:08:52.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:08:52.799
  I0904 20:08:52.807224 21 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-7065"
  I0904 20:08:52.822134 21 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-7065"
  E0904 20:08:53.257439      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 09/04/24 20:08:53.322
  I0904 20:08:53.326558 21 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-7065"
  I0904 20:08:53.336111 21 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-7065"
  STEP: waiting for the root ca configmap reconciled @ 09/04/24 20:08:53.836
  I0904 20:08:53.839719 21 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-7065"
  I0904 20:08:53.839850 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7065" for this suite. @ 09/04/24 20:08:53.843
â€¢ [1.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/04/24 20:08:53.853
  I0904 20:08:53.853653 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename var-expansion @ 09/04/24 20:08:53.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:08:53.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:08:53.907
  STEP: Creating a pod to test env composition @ 09/04/24 20:08:53.912
  E0904 20:08:54.258307      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:55.258414      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:56.259312      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:57.261032      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:08:58.051
  I0904 20:08:58.054259 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod var-expansion-85e9582a-8bc7-41af-8d4a-22a9cdfa081c container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 20:08:58.06
  I0904 20:08:58.080636 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6573" for this suite. @ 09/04/24 20:08:58.084
â€¢ [4.246 seconds]
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/04/24 20:08:58.099
  I0904 20:08:58.099580 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/24 20:08:58.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:08:58.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:08:58.172
  E0904 20:08:58.261685      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:08:59.261728      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:09:00.217514 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1120" for this suite. @ 09/04/24 20:09:00.221
â€¢ [2.133 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 09/04/24 20:09:00.233
  I0904 20:09:00.233117 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 20:09:00.234
  E0904 20:09:00.262500      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:09:00.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:09:00.391
  STEP: set up a multi version CRD @ 09/04/24 20:09:00.396
  I0904 20:09:00.396770 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:09:01.263232      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:02.263534      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:03.264582      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:04.265455      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/04/24 20:09:04.568
  STEP: check the new version name is served @ 09/04/24 20:09:04.595
  E0904 20:09:05.266156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/04/24 20:09:06.083
  E0904 20:09:06.267225      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/04/24 20:09:06.833
  E0904 20:09:07.268150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:08.268868      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:09.269403      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:10.270351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:09:10.360161 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-338" for this suite. @ 09/04/24 20:09:10.471
â€¢ [10.254 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/04/24 20:09:10.487
  I0904 20:09:10.487924 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sched-pred @ 09/04/24 20:09:10.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:09:10.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:09:10.653
  I0904 20:09:10.655927 21 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0904 20:09:10.663458 21 util.go:393] Waiting for terminating namespaces to be deleted...
  I0904 20:09:10.666395 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-11-100.us-east-2.compute.internal before test
  I0904 20:09:10.872796 21 predicates.go:957] coredns-5dd589bf46-5s5rv from kube-system started at 2024-09-04 03:31:12 +0000 UTC (1 container statuses recorded)
  I0904 20:09:10.872852 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0904 20:09:10.872872 21 predicates.go:957] helm-install-traefik-crd-b7qfb from kube-system started at 2024-09-04 03:31:13 +0000 UTC (1 container statuses recorded)
  I0904 20:09:10.872894 21 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 20:09:10.872910 21 predicates.go:957] helm-install-traefik-jps75 from kube-system started at 2024-09-04 03:31:13 +0000 UTC (1 container statuses recorded)
  I0904 20:09:10.872923 21 predicates.go:959] 	Container helm ready: false, restart count 1
  I0904 20:09:10.872949 21 predicates.go:957] local-path-provisioner-846b9dcb6c-qlwlf from kube-system started at 2024-09-04 03:31:12 +0000 UTC (1 container statuses recorded)
  I0904 20:09:10.872962 21 predicates.go:959] 	Container local-path-provisioner ready: true, restart count 0
  I0904 20:09:10.872978 21 predicates.go:957] metrics-server-5dc58b587c-blxn9 from kube-system started at 2024-09-04 03:31:12 +0000 UTC (1 container statuses recorded)
  I0904 20:09:10.872999 21 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0904 20:09:10.873014 21 predicates.go:957] svclb-traefik-b676ce4a-bthjx from kube-system started at 2024-09-04 03:31:27 +0000 UTC (2 container statuses recorded)
  I0904 20:09:10.873033 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:09:10.873046 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:09:10.873061 21 predicates.go:957] traefik-7f4b44bf74-jvxjf from kube-system started at 2024-09-04 03:31:27 +0000 UTC (1 container statuses recorded)
  I0904 20:09:10.873082 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0904 20:09:10.873098 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-lldsg from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:09:10.873113 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:09:10.873132 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 20:09:10.873145 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-15-190.us-east-2.compute.internal before test
  I0904 20:09:10.895451 21 predicates.go:957] svclb-traefik-b676ce4a-5lpw2 from kube-system started at 2024-09-04 03:37:06 +0000 UTC (2 container statuses recorded)
  I0904 20:09:10.895510 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:09:10.895532 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:09:10.895770 21 predicates.go:957] busybox-readonly-fsc4f2e56b-14b3-414b-93b5-f944cf710b99 from kubelet-test-1120 started at 2024-09-04 20:08:58 +0000 UTC (1 container statuses recorded)
  I0904 20:09:10.896032 21 predicates.go:959] 	Container busybox-readonly-fsc4f2e56b-14b3-414b-93b5-f944cf710b99 ready: true, restart count 0
  I0904 20:09:10.896109 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-hp2kg from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:09:10.896258 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:09:10.896439 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 20:09:10.896603 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-5-231.us-east-2.compute.internal before test
  I0904 20:09:10.901388 21 predicates.go:957] svclb-traefik-b676ce4a-hhvc9 from kube-system started at 2024-09-04 03:34:46 +0000 UTC (2 container statuses recorded)
  I0904 20:09:10.901440 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:09:10.901455 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:09:10.901471 21 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-04 19:17:22 +0000 UTC (1 container statuses recorded)
  I0904 20:09:10.901708 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0904 20:09:10.901732 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-jhfrj from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:09:10.901751 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:09:10.901764 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 20:09:10.901776 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-15.us-east-2.compute.internal before test
  I0904 20:09:10.907919 21 predicates.go:957] svclb-traefik-b676ce4a-w8mwb from kube-system started at 2024-09-04 03:34:28 +0000 UTC (2 container statuses recorded)
  I0904 20:09:10.907970 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:09:10.907983 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:09:10.907998 21 predicates.go:957] sonobuoy-e2e-job-ae616c3caee949dd from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:09:10.908143 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0904 20:09:10.908161 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:09:10.908177 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-xn4qz from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:09:10.908246 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:09:10.908299 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/04/24 20:09:10.908
  E0904 20:09:11.271524      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:12.272035      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/04/24 20:09:12.938
  STEP: Trying to apply a random label on the found node. @ 09/04/24 20:09:12.969
  STEP: verifying the node has the label kubernetes.io/e2e-5cd4b904-01df-472d-bb35-6d9956a22b87 42 @ 09/04/24 20:09:13.002
  STEP: Trying to relaunch the pod, now with labels. @ 09/04/24 20:09:13.016
  E0904 20:09:13.272226      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:14.272541      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-5cd4b904-01df-472d-bb35-6d9956a22b87 off the node ip-172-31-5-231.us-east-2.compute.internal @ 09/04/24 20:09:15.047
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5cd4b904-01df-472d-bb35-6d9956a22b87 @ 09/04/24 20:09:15.07
  I0904 20:09:15.075893 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6005" for this suite. @ 09/04/24 20:09:15.079
â€¢ [4.608 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/04/24 20:09:15.096
  I0904 20:09:15.096409 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:09:15.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:09:15.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:09:15.135
  STEP: Setting up server cert @ 09/04/24 20:09:15.237
  E0904 20:09:15.273346      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:09:15.642
  STEP: Deploying the webhook pod @ 09/04/24 20:09:15.655
  STEP: Wait for the deployment to be ready @ 09/04/24 20:09:15.691
  I0904 20:09:15.711195 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:09:16.273508      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:17.273649      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:09:17.925
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:09:17.949
  E0904 20:09:18.274661      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:09:18.950286 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/04/24 20:09:18.958
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/24 20:09:19.031
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/04/24 20:09:19.045
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/24 20:09:19.065
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/04/24 20:09:19.085
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/24 20:09:19.101
  I0904 20:09:19.189959 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2292" for this suite. @ 09/04/24 20:09:19.194
  STEP: Destroying namespace "webhook-markers-1525" for this suite. @ 09/04/24 20:09:19.211
â€¢ [4.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/04/24 20:09:19.23
  I0904 20:09:19.230333 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/24 20:09:19.231
  E0904 20:09:19.275201      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:09:19.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:09:19.298
  E0904 20:09:20.276176      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:21.276398      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:22.276967      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:23.278682      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:09:23.384175 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8571" for this suite. @ 09/04/24 20:09:23.389
â€¢ [4.171 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 09/04/24 20:09:23.401
  I0904 20:09:23.401097 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:09:23.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:09:23.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:09:23.575
  STEP: Setting up server cert @ 09/04/24 20:09:23.68
  E0904 20:09:24.279541      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:09:24.374
  STEP: Deploying the webhook pod @ 09/04/24 20:09:24.384
  STEP: Wait for the deployment to be ready @ 09/04/24 20:09:24.42
  I0904 20:09:24.431739 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:09:25.280507      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:26.280471      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:09:26.443
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:09:26.473
  E0904 20:09:27.281428      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:09:27.473686 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/04/24 20:09:27.772
  STEP: Creating a configMap that should be mutated @ 09/04/24 20:09:27.789
  STEP: Deleting the collection of validation webhooks @ 09/04/24 20:09:27.85
  STEP: Creating a configMap that should not be mutated @ 09/04/24 20:09:27.955
  I0904 20:09:28.071810 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4651" for this suite. @ 09/04/24 20:09:28.079
  STEP: Destroying namespace "webhook-markers-6599" for this suite. @ 09/04/24 20:09:28.103
â€¢ [4.719 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 09/04/24 20:09:28.12
  I0904 20:09:28.120678 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 20:09:28.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:09:28.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:09:28.264
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/04/24 20:09:28.267
  E0904 20:09:28.281761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:29.282748      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:30.282870      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:31.283091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:32.283997      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:09:32.323
  I0904 20:09:32.327400 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod pod-3ec15078-0ba4-4709-a0c6-162af0bc2082 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 20:09:32.342
  I0904 20:09:32.397790 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9332" for this suite. @ 09/04/24 20:09:32.504
â€¢ [4.395 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/04/24 20:09:32.516
  I0904 20:09:32.516800 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename taint-single-pod @ 09/04/24 20:09:32.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:09:32.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:09:32.672
  I0904 20:09:32.679629 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0904 20:09:33.284785      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:34.285813      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:35.286267      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:36.286767      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:37.287463      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:38.287606      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:39.287713      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:40.288279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:41.288418      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:42.289236      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:43.289357      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:44.289615      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:45.289968      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:46.290121      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:47.290441      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:48.290710      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:49.291099      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:50.291231      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:51.292179      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:52.292840      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:53.293859      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:54.294067      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:55.294193      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:56.294467      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:57.294583      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:58.295521      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:09:59.295801      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:00.296640      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:01.297536      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:02.297911      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:03.298225      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:04.298486      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:05.299089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:06.299266      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:07.300208      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:08.300652      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:09.301471      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:10.301594      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:11.302512      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:12.302985      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:13.303829      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:14.304178      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:15.304951      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:16.305080      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:17.305115      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:18.305508      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:19.305595      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:20.305747      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:21.305991      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:22.306860      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:23.307069      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:24.307665      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:25.308577      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:26.308953      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:27.309845      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:28.310600      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:29.311297      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:30.311443      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:31.311684      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:32.312131      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:10:32.680937 21 util.go:393] Waiting for terminating namespaces to be deleted...
  I0904 20:10:32.890994 21 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/04/24 20:10:32.891
  I0904 20:10:33.111285 21 taints.go:294] Pod is running on ip-172-31-15-190.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/04/24 20:10:33.111
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/24 20:10:33.135
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/04/24 20:10:33.139
  I0904 20:10:33.139493 21 taints.go:313] Pod wasn't evicted. Proceeding
  I0904 20:10:33.139521 21 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/24 20:10:33.162
  STEP: Waiting some time to make sure that toleration time passed. @ 09/04/24 20:10:33.174
  E0904 20:10:33.312926      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:34.313736      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:35.314282      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:36.314591      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:37.315024      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:38.315081      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:39.316226      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:40.316327      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:41.317322      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:42.318061      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:43.318851      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:44.318944      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:45.319103      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:46.319314      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:47.320156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:48.320238      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:49.320385      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:50.320506      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:51.320926      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:52.321588      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:53.321996      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:54.322111      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:55.322293      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:56.322456      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:57.322875      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:58.323338      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:10:59.324156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:00.324277      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:01.324557      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:02.324823      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:03.324975      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:04.325131      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:05.325256      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:06.325532      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:07.325780      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:08.326048      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:09.327016      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:10.327084      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:11.328144      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:12.328439      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:13.328704      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:14.328992      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:15.329463      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:16.329599      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:17.330584      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:18.330749      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:19.331102      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:20.332173      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:21.332301      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:22.333219      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:23.334126      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:24.334505      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:25.334817      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:26.335198      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:27.335456      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:28.335590      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:29.336116      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:30.336373      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:31.336658      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:32.337082      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:33.337172      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:34.337322      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:35.337692      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:36.337808      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:37.338746      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:38.339122      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:39.340152      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:40.340409      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:41.340551      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:42.340822      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:43.341000      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:44.341086      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:45.341237      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:46.341369      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:47.341903      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:11:48.174948 21 taints.go:329] Pod wasn't evicted. Test successful
  I0904 20:11:48.175329 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-8287" for this suite. @ 09/04/24 20:11:48.181
â€¢ [135.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 09/04/24 20:11:48.193
  I0904 20:11:48.193325 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 20:11:48.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:11:48.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:11:48.288
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/04/24 20:11:48.292
  E0904 20:11:48.343003      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:49.343208      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:50.343753      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:51.344190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:11:52.334
  I0904 20:11:52.337396 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod pod-c74b1e47-a650-4232-b1cf-ccf0b68f594b container test-container: <nil>
  E0904 20:11:52.344701      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod @ 09/04/24 20:11:52.359
  I0904 20:11:52.396019 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6800" for this suite. @ 09/04/24 20:11:52.401
â€¢ [4.230 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 09/04/24 20:11:52.423
  I0904 20:11:52.423941 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename aggregator @ 09/04/24 20:11:52.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:11:52.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:11:52.467
  I0904 20:11:52.471211 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Registering the sample API server. @ 09/04/24 20:11:52.472
  I0904 20:11:52.917414 21 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0904 20:11:52.983863 21 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0904 20:11:53.345120      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:54.345291      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:55.346363      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:11:55.582277 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:11:56.347418      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:57.348016      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:11:57.586191 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:11:58.349065      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:11:59.349196      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:11:59.587371 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:12:00.349369      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:01.349738      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:01.587366 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:12:02.350660      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:03.350880      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:03.589320 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:12:04.351036      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:05.351252      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:05.590142 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:12:06.351561      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:07.351599      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:07.587229 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:12:08.352064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:09.352352      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:09.586579 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:12:10.353460      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:11.353737      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:11.586889 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:12:12.354226      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:13.355029      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:13.586563 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:12:14.355227      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:15.355362      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:15.589801 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 11, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 11, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:12:16.355498      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:17.355934      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:17.746375 21 aggregator.go:755] Waited 131.027744ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/04/24 20:12:17.824
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/04/24 20:12:17.828
  STEP: List APIServices @ 09/04/24 20:12:17.844
  I0904 20:12:17.849955 21 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/04/24 20:12:17.85
  I0904 20:12:17.876443 21 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/04/24 20:12:17.876
  I0904 20:12:17.895140 21 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.September, 4, 20, 12, 17, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/04/24 20:12:17.895
  I0904 20:12:17.923473 21 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-09-04 20:12:17 +0000 UTC Passed all checks passed}
  I0904 20:12:17.923574 21 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 20:12:17.923658 21 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/04/24 20:12:17.923
  I0904 20:12:17.990706 21 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-529576318" @ 09/04/24 20:12:17.99
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/04/24 20:12:18.021
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/04/24 20:12:18.038
  STEP: Patch APIService Status @ 09/04/24 20:12:18.042
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/04/24 20:12:18.071
  I0904 20:12:18.076986 21 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-09-04 20:12:17 +0000 UTC Passed all checks passed}
  I0904 20:12:18.077176 21 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 20:12:18.077230 21 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0904 20:12:18.077256 21 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/04/24 20:12:18.077
  STEP: Confirm that the generated APIService has been deleted @ 09/04/24 20:12:18.096
  I0904 20:12:18.096772 21 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0904 20:12:18.107291 21 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0904 20:12:18.107339 21 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  E0904 20:12:18.356450      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:18.371092 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2095" for this suite. @ 09/04/24 20:12:18.576
â€¢ [26.169 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/04/24 20:12:18.592
  I0904 20:12:18.592973 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pods @ 09/04/24 20:12:18.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:12:18.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:12:18.735
  STEP: creating a Pod with a static label @ 09/04/24 20:12:18.742
  STEP: watching for Pod to be ready @ 09/04/24 20:12:18.765
  I0904 20:12:18.768249 21 pods.go:945] observed Pod pod-test in namespace pods-9830 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0904 20:12:18.802643 21 pods.go:945] observed Pod pod-test in namespace pods-9830 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 20:12:18 +0000 UTC  }]
  I0904 20:12:18.845666 21 pods.go:945] observed Pod pod-test in namespace pods-9830 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 20:12:18 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 20:12:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 20:12:18 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-04 20:12:18 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 20:12:18 +0000 UTC  }]
  E0904 20:12:19.357577      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:20.357989      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:20.599037 21 pods.go:948] Found Pod pod-test in namespace pods-9830 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 20:12:20 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 20:12:18 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 20:12:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 20:12:20 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-04 20:12:18 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/04/24 20:12:20.604
  STEP: getting the Pod and ensuring that it's patched @ 09/04/24 20:12:20.626
  STEP: replacing the Pod's status Ready condition to False @ 09/04/24 20:12:20.631
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/04/24 20:12:20.651
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/04/24 20:12:20.651
  STEP: watching for the Pod to be deleted @ 09/04/24 20:12:20.67
  I0904 20:12:20.672783 21 pods.go:1058] observed event type MODIFIED
  E0904 20:12:21.358123      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:21.749065 21 pods.go:1058] observed event type MODIFIED
  E0904 20:12:22.359111      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:22.834203 21 pods.go:1058] observed event type MODIFIED
  E0904 20:12:23.359103      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:23.616122 21 pods.go:1058] observed event type MODIFIED
  I0904 20:12:23.659012 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9830" for this suite. @ 09/04/24 20:12:23.663
â€¢ [5.083 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 09/04/24 20:12:23.675
  I0904 20:12:23.675960 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename gc @ 09/04/24 20:12:23.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:12:23.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:12:23.825
  STEP: create the deployment @ 09/04/24 20:12:23.829
  W0904 20:12:23.842308      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/04/24 20:12:23.842
  STEP: delete the deployment @ 09/04/24 20:12:24.347
  E0904 20:12:24.359304      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for all rs to be garbage collected @ 09/04/24 20:12:24.361
  STEP: expected 0 pods, got 2 pods @ 09/04/24 20:12:24.382
  STEP: Gathering metrics @ 09/04/24 20:12:24.981
  W0904 20:12:25.079241      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0904 20:12:25.079305 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 20:12:25.079543 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9033" for this suite. @ 09/04/24 20:12:25.1
â€¢ [1.452 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/04/24 20:12:25.13
  I0904 20:12:25.131041 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:12:25.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:12:25.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:12:25.192
  STEP: Setting up server cert @ 09/04/24 20:12:25.288
  E0904 20:12:25.360304      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:12:25.714
  STEP: Deploying the webhook pod @ 09/04/24 20:12:25.731
  STEP: Wait for the deployment to be ready @ 09/04/24 20:12:25.766
  I0904 20:12:25.781903 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:12:26.360702      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:27.360907      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:12:27.895
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:12:27.923
  E0904 20:12:28.361710      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:28.924425 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/04/24 20:12:29.233
  STEP: create a configmap that should be updated by the webhook @ 09/04/24 20:12:29.261
  E0904 20:12:29.361899      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:29.388536 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8363" for this suite. @ 09/04/24 20:12:29.402
  STEP: Destroying namespace "webhook-markers-1962" for this suite. @ 09/04/24 20:12:29.43
â€¢ [4.334 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 09/04/24 20:12:29.466
  I0904 20:12:29.466512 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 20:12:29.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:12:29.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:12:29.607
  STEP: Creating configMap with name configmap-test-volume-16034954-6933-4eb2-8d91-a2f706814f23 @ 09/04/24 20:12:29.61
  STEP: Creating a pod to test consume configMaps @ 09/04/24 20:12:29.619
  E0904 20:12:30.362888      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:31.363180      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:32.363339      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:33.364178      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:12:33.658
  I0904 20:12:33.662133 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-configmaps-95cbf5f9-77a9-4116-8c32-c586ba3fc456 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 20:12:33.677
  I0904 20:12:33.704929 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5730" for this suite. @ 09/04/24 20:12:33.709
â€¢ [4.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/04/24 20:12:33.726
  I0904 20:12:33.727059 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/04/24 20:12:33.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:12:33.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:12:33.785
  STEP: Creating 50 configmaps @ 09/04/24 20:12:33.789
  STEP: Creating RC which spawns configmap-volume pods @ 09/04/24 20:12:34.362
  E0904 20:12:34.365165      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:34.385818 21 resource.go:87] Pod name wrapped-volume-race-b210824c-5a93-4d64-a0c4-2ff513a08798: Found 0 pods out of 5
  E0904 20:12:35.365378      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:36.366068      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:37.366499      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:38.366624      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:39.366746      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:39.391688 21 resource.go:87] Pod name wrapped-volume-race-b210824c-5a93-4d64-a0c4-2ff513a08798: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/04/24 20:12:39.391
  STEP: Creating RC which spawns configmap-volume pods @ 09/04/24 20:12:39.616
  I0904 20:12:39.640511 21 resource.go:87] Pod name wrapped-volume-race-6afdf3b7-7960-41a5-ba25-8e2f1ddf200d: Found 0 pods out of 5
  E0904 20:12:40.367196      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:41.367320      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:42.367407      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:43.367578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:44.367883      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:44.749123 21 resource.go:87] Pod name wrapped-volume-race-6afdf3b7-7960-41a5-ba25-8e2f1ddf200d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/04/24 20:12:44.749
  STEP: Creating RC which spawns configmap-volume pods @ 09/04/24 20:12:44.775
  I0904 20:12:44.820307 21 resource.go:87] Pod name wrapped-volume-race-42daf7f0-cf39-41f2-ada6-203985355f20: Found 1 pods out of 5
  E0904 20:12:45.367956      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:46.368266      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:47.368396      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:48.368531      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:49.368679      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:49.827093 21 resource.go:87] Pod name wrapped-volume-race-42daf7f0-cf39-41f2-ada6-203985355f20: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/04/24 20:12:49.827
  STEP: deleting ReplicationController wrapped-volume-race-42daf7f0-cf39-41f2-ada6-203985355f20 in namespace emptydir-wrapper-852, will wait for the garbage collector to delete the pods @ 09/04/24 20:12:49.855
  I0904 20:12:49.926067 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-42daf7f0-cf39-41f2-ada6-203985355f20 took: 16.899638ms
  I0904 20:12:50.026759 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-42daf7f0-cf39-41f2-ada6-203985355f20 pods took: 100.692199ms
  E0904 20:12:50.369135      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:51.369370      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:52.370218      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-6afdf3b7-7960-41a5-ba25-8e2f1ddf200d in namespace emptydir-wrapper-852, will wait for the garbage collector to delete the pods @ 09/04/24 20:12:52.528
  I0904 20:12:52.598552 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-6afdf3b7-7960-41a5-ba25-8e2f1ddf200d took: 15.371693ms
  I0904 20:12:52.699364 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-6afdf3b7-7960-41a5-ba25-8e2f1ddf200d pods took: 100.8088ms
  E0904 20:12:53.371069      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:54.371606      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-b210824c-5a93-4d64-a0c4-2ff513a08798 in namespace emptydir-wrapper-852, will wait for the garbage collector to delete the pods @ 09/04/24 20:12:54.799
  I0904 20:12:54.869908 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-b210824c-5a93-4d64-a0c4-2ff513a08798 took: 14.534319ms
  I0904 20:12:55.070453 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-b210824c-5a93-4d64-a0c4-2ff513a08798 pods took: 200.545564ms
  E0904 20:12:55.371670      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:56.372030      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 09/04/24 20:12:56.971
  E0904 20:12:57.372407      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:12:57.671683 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-852" for this suite. @ 09/04/24 20:12:57.776
â€¢ [24.066 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 09/04/24 20:12:57.792
  I0904 20:12:57.792840 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:12:57.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:12:57.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:12:57.837
  STEP: Creating a pod to test downward api env vars @ 09/04/24 20:12:57.84
  E0904 20:12:58.372967      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:12:59.373157      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:00.373589      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:01.373918      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:13:01.897
  I0904 20:13:01.902825 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downward-api-fff42ce2-06ba-4906-8692-6a3f9ee2f818 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 20:13:01.915
  I0904 20:13:01.968480 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2611" for this suite. @ 09/04/24 20:13:01.972
â€¢ [4.195 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/04/24 20:13:01.988
  I0904 20:13:01.988440 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename crd-watch @ 09/04/24 20:13:01.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:13:02.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:13:02.059
  I0904 20:13:02.064442 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:13:02.374741      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:03.374855      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:04.375172      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/04/24 20:13:04.618
  I0904 20:13:04.627887 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-04T20:13:04Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-04T20:13:04Z]] name:name1 resourceVersion:224327 uid:20a63491-3bd7-4552-8992-9aa4cc1f1504] num:map[num1:9223372036854775807 num2:1000000]]}
  E0904 20:13:05.375300      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:06.375418      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:07.375856      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:08.376160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:09.376285      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:10.376761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:11.377261      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:12.377769      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:13.377909      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:14.378299      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/04/24 20:13:14.628
  I0904 20:13:14.639719 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-04T20:13:14Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-04T20:13:14Z]] name:name2 resourceVersion:224464 uid:724b6658-f337-4c66-8f93-bfce1244988c] num:map[num1:9223372036854775807 num2:1000000]]}
  E0904 20:13:15.378421      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:16.378842      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:17.378964      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:18.379190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:19.379335      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:20.379485      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:21.379572      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:22.379733      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:23.379832      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:24.379975      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/04/24 20:13:24.64
  I0904 20:13:24.651654 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-04T20:13:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-04T20:13:24Z]] name:name1 resourceVersion:224500 uid:20a63491-3bd7-4552-8992-9aa4cc1f1504] num:map[num1:9223372036854775807 num2:1000000]]}
  E0904 20:13:25.380373      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:26.380481      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:27.380981      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:28.381093      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:29.381333      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:30.381541      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:31.381692      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:32.381874      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:33.382001      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:34.382681      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/04/24 20:13:34.652
  I0904 20:13:34.662456 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-04T20:13:14Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-04T20:13:34Z]] name:name2 resourceVersion:224536 uid:724b6658-f337-4c66-8f93-bfce1244988c] num:map[num1:9223372036854775807 num2:1000000]]}
  E0904 20:13:35.382975      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:36.383157      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:37.383690      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:38.383819      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:39.384146      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:40.385004      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:41.385437      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:42.385839      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:43.385978      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:44.386233      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/04/24 20:13:44.663
  I0904 20:13:44.674887 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-04T20:13:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-04T20:13:24Z]] name:name1 resourceVersion:224572 uid:20a63491-3bd7-4552-8992-9aa4cc1f1504] num:map[num1:9223372036854775807 num2:1000000]]}
  E0904 20:13:45.386374      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:46.386469      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:47.386934      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:48.387071      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:49.387200      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:50.388166      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:51.388465      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:52.388923      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:53.389060      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:54.389935      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/04/24 20:13:54.675
  I0904 20:13:54.686686 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-04T20:13:14Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-04T20:13:34Z]] name:name2 resourceVersion:224608 uid:724b6658-f337-4c66-8f93-bfce1244988c] num:map[num1:9223372036854775807 num2:1000000]]}
  E0904 20:13:55.390061      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:56.390151      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:57.390662      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:58.391749      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:13:59.391844      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:00.391964      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:01.392088      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:02.392326      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:03.392458      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:04.392568      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:14:05.209032 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-5492" for this suite. @ 09/04/24 20:14:05.213
â€¢ [63.236 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 09/04/24 20:14:05.225
  I0904 20:14:05.225617 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename dns @ 09/04/24 20:14:05.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:14:05.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:14:05.272
  STEP: Creating a test externalName service @ 09/04/24 20:14:05.276
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1660.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1660.svc.cluster.local; sleep 1; done
   @ 09/04/24 20:14:05.292
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1660.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1660.svc.cluster.local; sleep 1; done
   @ 09/04/24 20:14:05.292
  STEP: creating a pod to probe DNS @ 09/04/24 20:14:05.292
  STEP: submitting the pod to kubernetes @ 09/04/24 20:14:05.292
  E0904 20:14:05.392941      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:06.393054      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:07.393302      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:08.393417      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:09.393734      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:10.393874      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:11.393946      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:12.394514      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:13.395256      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:14.396169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/24 20:14:15.348
  STEP: looking for the results for each expected name from probers @ 09/04/24 20:14:15.351
  I0904 20:14:15.363297 21 dns_common.go:552] DNS probes using dns-test-96919987-c680-4cb0-818c-850c5dc0094f succeeded

  STEP: changing the externalName to bar.example.com @ 09/04/24 20:14:15.363
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1660.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1660.svc.cluster.local; sleep 1; done
   @ 09/04/24 20:14:15.375
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1660.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1660.svc.cluster.local; sleep 1; done
   @ 09/04/24 20:14:15.375
  STEP: creating a second pod to probe DNS @ 09/04/24 20:14:15.375
  STEP: submitting the pod to kubernetes @ 09/04/24 20:14:15.375
  E0904 20:14:15.397240      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:16.397369      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:17.398109      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:18.399273      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:19.399980      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:20.400605      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:21.400705      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:22.400844      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:23.400973      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:24.401120      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:25.401310      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:26.401861      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:27.402055      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/24 20:14:27.424
  STEP: looking for the results for each expected name from probers @ 09/04/24 20:14:27.427
  I0904 20:14:27.438994 21 dns_common.go:552] DNS probes using dns-test-82b8fd92-a94e-44dc-863e-03c59ee03e19 succeeded

  STEP: changing the service to type=ClusterIP @ 09/04/24 20:14:27.439
  W0904 20:14:27.470086      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1660.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1660.svc.cluster.local; sleep 1; done
   @ 09/04/24 20:14:27.47
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1660.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1660.svc.cluster.local; sleep 1; done
   @ 09/04/24 20:14:27.47
  STEP: creating a third pod to probe DNS @ 09/04/24 20:14:27.47
  STEP: submitting the pod to kubernetes @ 09/04/24 20:14:27.473
  E0904 20:14:28.402248      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:29.402357      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:30.403319      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:31.403424      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:32.404157      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:33.404407      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:34.404481      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:35.404629      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:36.405058      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:37.405640      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/24 20:14:37.529
  STEP: looking for the results for each expected name from probers @ 09/04/24 20:14:37.532
  I0904 20:14:37.545675 21 dns_common.go:552] DNS probes using dns-test-ad871fa8-8148-4854-a6f9-825eba46a0cb succeeded

  STEP: deleting the pod @ 09/04/24 20:14:37.545
  STEP: deleting the pod @ 09/04/24 20:14:37.577
  STEP: deleting the pod @ 09/04/24 20:14:37.623
  STEP: deleting the test externalName service @ 09/04/24 20:14:37.693
  I0904 20:14:37.798678 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1660" for this suite. @ 09/04/24 20:14:37.914
â€¢ [32.732 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 09/04/24 20:14:37.957
  I0904 20:14:37.957551 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:14:37.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:14:38.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:14:38.022
  STEP: Setting up server cert @ 09/04/24 20:14:38.12
  E0904 20:14:38.406987      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:14:38.612
  STEP: Deploying the webhook pod @ 09/04/24 20:14:38.723
  STEP: Wait for the deployment to be ready @ 09/04/24 20:14:38.789
  I0904 20:14:38.813873 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:14:39.407007      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:40.407398      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:14:40.825872 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 14, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 14, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 14, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 14, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:14:41.407313      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:42.408292      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:14:42.831
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:14:42.855
  E0904 20:14:43.409124      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:14:43.855542 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/04/24 20:14:43.968
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/04/24 20:14:43.997
  STEP: Creating a configMap that should not be mutated @ 09/04/24 20:14:44.024
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/04/24 20:14:44.049
  STEP: Creating a configMap that should be mutated @ 09/04/24 20:14:44.065
  I0904 20:14:44.233786 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-122" for this suite. @ 09/04/24 20:14:44.24
  STEP: Destroying namespace "webhook-markers-4391" for this suite. @ 09/04/24 20:14:44.284
â€¢ [6.354 seconds]
------------------------------
SSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/04/24 20:14:44.311
  I0904 20:14:44.312033 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename conformance-tests @ 09/04/24 20:14:44.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:14:44.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:14:44.379
  STEP: Getting node addresses @ 09/04/24 20:14:44.382
  I0904 20:14:44.382972 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0904 20:14:44.404469 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 20:14:44.409466      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "conformance-tests-12" for this suite. @ 09/04/24 20:14:44.504
â€¢ [0.203 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/04/24 20:14:44.515
  I0904 20:14:44.515309 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename watch @ 09/04/24 20:14:44.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:14:44.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:14:44.553
  STEP: creating a watch on configmaps with a certain label @ 09/04/24 20:14:44.556
  STEP: creating a new configmap @ 09/04/24 20:14:44.558
  STEP: modifying the configmap once @ 09/04/24 20:14:44.572
  STEP: changing the label value of the configmap @ 09/04/24 20:14:44.607
  STEP: Expecting to observe a delete notification for the watched object @ 09/04/24 20:14:44.624
  I0904 20:14:44.624622 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4236  6ecebdfa-a689-4dc4-bb3c-01dfa8bc6300 224961 0 2024-09-04 20:14:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-04 20:14:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:14:44.624922 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4236  6ecebdfa-a689-4dc4-bb3c-01dfa8bc6300 224963 0 2024-09-04 20:14:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-04 20:14:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:14:44.625274 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4236  6ecebdfa-a689-4dc4-bb3c-01dfa8bc6300 224964 0 2024-09-04 20:14:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-04 20:14:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/04/24 20:14:44.625
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/04/24 20:14:44.637
  E0904 20:14:45.409609      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:46.409913      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:47.411003      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:48.411070      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:49.411104      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:50.411244      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:51.411352      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:52.411651      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:53.411791      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:54.412116      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/04/24 20:14:54.638
  STEP: modifying the configmap a third time @ 09/04/24 20:14:54.652
  STEP: deleting the configmap @ 09/04/24 20:14:54.664
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/04/24 20:14:54.673
  I0904 20:14:54.674016 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4236  6ecebdfa-a689-4dc4-bb3c-01dfa8bc6300 225025 0 2024-09-04 20:14:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-04 20:14:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:14:54.674336 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4236  6ecebdfa-a689-4dc4-bb3c-01dfa8bc6300 225026 0 2024-09-04 20:14:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-04 20:14:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:14:54.674498 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4236  6ecebdfa-a689-4dc4-bb3c-01dfa8bc6300 225027 0 2024-09-04 20:14:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-04 20:14:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:14:54.674661 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4236" for this suite. @ 09/04/24 20:14:54.78
â€¢ [10.282 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/04/24 20:14:54.797
  I0904 20:14:54.797404 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:14:54.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:14:55.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:14:55.247
  STEP: Setting up server cert @ 09/04/24 20:14:55.347
  E0904 20:14:55.415073      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:14:55.992
  STEP: Deploying the webhook pod @ 09/04/24 20:14:56.003
  STEP: Wait for the deployment to be ready @ 09/04/24 20:14:56.035
  I0904 20:14:56.051234 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:14:56.415586      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:14:57.415952      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:14:58.161
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:14:58.19
  E0904 20:14:58.416614      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:14:59.190286 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0904 20:14:59.298105 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:14:59.417448      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4946-crds.webhook.example.com via the AdmissionRegistration API @ 09/04/24 20:14:59.822
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/04/24 20:14:59.85
  E0904 20:15:00.418392      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:01.418537      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:02.418614      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:15:02.527077 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5050" for this suite. @ 09/04/24 20:15:02.532
  STEP: Destroying namespace "webhook-markers-9647" for this suite. @ 09/04/24 20:15:02.543
â€¢ [7.757 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/04/24 20:15:02.554
  I0904 20:15:02.554711 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename events @ 09/04/24 20:15:02.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:15:02.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:15:02.607
  STEP: Create set of events @ 09/04/24 20:15:02.611
  I0904 20:15:02.623296 21 core_events.go:198] created test-event-1
  I0904 20:15:02.633487 21 core_events.go:198] created test-event-2
  I0904 20:15:02.647702 21 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/04/24 20:15:02.647
  STEP: delete collection of events @ 09/04/24 20:15:02.651
  I0904 20:15:02.652033 21 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/04/24 20:15:02.71
  I0904 20:15:02.710445 21 core_events.go:230] requesting list of events to confirm quantity
  I0904 20:15:02.720801 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3406" for this suite. @ 09/04/24 20:15:02.73
â€¢ [0.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/04/24 20:15:02.743
  I0904 20:15:02.743789 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:15:02.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:15:02.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:15:02.955
  STEP: Creating projection with secret that has name projected-secret-test-daffd2a4-5427-4263-b098-4a192d0b304e @ 09/04/24 20:15:02.958
  STEP: Creating a pod to test consume secrets @ 09/04/24 20:15:02.967
  E0904 20:15:03.419664      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:04.419797      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:05.420903      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:06.421031      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:15:07.002
  I0904 20:15:07.005326 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-secrets-3b138b53-b237-4ed1-be34-f9a8abba9ac0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 20:15:07.026
  I0904 20:15:07.060045 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4457" for this suite. @ 09/04/24 20:15:07.074
â€¢ [4.347 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/04/24 20:15:07.092
  I0904 20:15:07.092502 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/24 20:15:07.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:15:07.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:15:07.279
  STEP: Performing setup for networking test in namespace pod-network-test-9898 @ 09/04/24 20:15:07.283
  STEP: creating a selector @ 09/04/24 20:15:07.283
  STEP: Creating the service pods in kubernetes @ 09/04/24 20:15:07.283
  I0904 20:15:07.283967 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0904 20:15:07.421199      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:08.421349      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:09.421729      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:10.421861      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:11.422132      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:12.422929      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:13.423260      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:14.424153      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:15.424329      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:16.424446      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:17.425519      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:18.425682      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:19.425810      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:20.425951      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:21.426049      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:22.426891      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:23.427118      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:24.428153      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:25.428294      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:26.428495      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:27.429034      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:28.429202      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:29.429499      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/04/24 20:15:29.63
  E0904 20:15:30.429630      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:31.429784      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:15:31.654433 21 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0904 20:15:31.654504 21 networking.go:42] Breadth first check of 10.42.0.67 on host 172.31.11.100...
  I0904 20:15:31.657367 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.188:9080/dial?request=hostname&protocol=http&host=10.42.0.67&port=8083&tries=1'] Namespace:pod-network-test-9898 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:15:31.657417 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:15:31.658066 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:15:31.658146 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9898/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.188%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.67%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0904 20:15:31.716596 21 utils.go:356] Waiting for responses: map[]
  I0904 20:15:31.716657 21 utils.go:360] reached 10.42.0.67 after 0/1 tries
  I0904 20:15:31.717028 21 networking.go:42] Breadth first check of 10.42.3.187 on host 172.31.15.190...
  I0904 20:15:31.722803 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.188:9080/dial?request=hostname&protocol=http&host=10.42.3.187&port=8083&tries=1'] Namespace:pod-network-test-9898 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:15:31.723077 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:15:31.723811 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:15:31.723970 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9898/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.188%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.3.187%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0904 20:15:31.776733 21 utils.go:356] Waiting for responses: map[]
  I0904 20:15:31.776794 21 utils.go:360] reached 10.42.3.187 after 0/1 tries
  I0904 20:15:31.776824 21 networking.go:42] Breadth first check of 10.42.2.109 on host 172.31.5.231...
  I0904 20:15:31.780398 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.188:9080/dial?request=hostname&protocol=http&host=10.42.2.109&port=8083&tries=1'] Namespace:pod-network-test-9898 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:15:31.780552 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:15:31.781288 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:15:31.781374 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9898/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.188%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.109%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0904 20:15:31.834693 21 utils.go:356] Waiting for responses: map[]
  I0904 20:15:31.834750 21 utils.go:360] reached 10.42.2.109 after 0/1 tries
  I0904 20:15:31.834767 21 networking.go:42] Breadth first check of 10.42.1.81 on host 172.31.8.15...
  I0904 20:15:31.838683 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.188:9080/dial?request=hostname&protocol=http&host=10.42.1.81&port=8083&tries=1'] Namespace:pod-network-test-9898 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:15:31.838857 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:15:31.839540 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:15:31.839624 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9898/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.188%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.81%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0904 20:15:31.894899 21 utils.go:356] Waiting for responses: map[]
  I0904 20:15:31.895000 21 utils.go:360] reached 10.42.1.81 after 0/1 tries
  I0904 20:15:31.895232 21 networking.go:53] Going to retry 0 out of 4 pods....
  I0904 20:15:31.895588 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9898" for this suite. @ 09/04/24 20:15:32.001
â€¢ [24.925 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 09/04/24 20:15:32.019
  I0904 20:15:32.019408 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename namespaces @ 09/04/24 20:15:32.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:15:32.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:15:32.17
  STEP: creating a Namespace @ 09/04/24 20:15:32.173
  STEP: patching the Namespace @ 09/04/24 20:15:32.281
  STEP: get the Namespace and ensuring it has the label @ 09/04/24 20:15:32.293
  I0904 20:15:32.297189 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3297" for this suite. @ 09/04/24 20:15:32.301
  STEP: Destroying namespace "nspatchtest-6965787e-7b78-40d1-a6f4-a535788e3f40-4532" for this suite. @ 09/04/24 20:15:32.322
â€¢ [0.330 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 09/04/24 20:15:32.35
  I0904 20:15:32.350349 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 20:15:32.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:15:32.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:15:32.428
  E0904 20:15:32.430305      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/04/24 20:15:32.434
  E0904 20:15:33.430497      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:34.430836      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:35.431097      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:36.431236      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:15:36.481
  I0904 20:15:36.485008 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod pod-a9f44ea0-2041-44e5-a386-2f269e98597d container test-container: <nil>
  STEP: delete the pod @ 09/04/24 20:15:36.499
  I0904 20:15:36.536473 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-115" for this suite. @ 09/04/24 20:15:36.551
â€¢ [4.233 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/04/24 20:15:36.584
  I0904 20:15:36.584272 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pods @ 09/04/24 20:15:36.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:15:36.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:15:36.696
  STEP: creating the pod @ 09/04/24 20:15:36.7
  STEP: submitting the pod to kubernetes @ 09/04/24 20:15:36.701
  W0904 20:15:36.759589      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0904 20:15:37.431557      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:38.431709      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/04/24 20:15:38.794
  STEP: updating the pod @ 09/04/24 20:15:38.798
  I0904 20:15:39.339473 21 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-24ac9c4f-7c91-4585-86d7-26e67dc45f36"
  E0904 20:15:39.432489      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:40.432760      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:41.433432      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:42.433866      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:15:43.352567 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8971" for this suite. @ 09/04/24 20:15:43.358
â€¢ [6.795 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/04/24 20:15:43.38
  I0904 20:15:43.380081 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 20:15:43.381
  E0904 20:15:43.434674      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:15:43.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:15:43.537
  I0904 20:15:43.541705 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:15:44.435048      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:45.435185      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:46.435440      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:15:46.687747 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9445" for this suite. @ 09/04/24 20:15:46.692
â€¢ [3.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 09/04/24 20:15:46.703
  I0904 20:15:46.703572 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 20:15:46.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:15:46.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:15:46.949
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/04/24 20:15:46.953
  I0904 20:15:46.953998 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:15:47.435639      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:48.436270      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:15:48.934685 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:15:49.436627      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:50.437334      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:51.437575      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:52.438186      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:53.438630      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:54.439477      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:55.440518      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:15:55.888461 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9909" for this suite. @ 09/04/24 20:15:55.895
â€¢ [9.203 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 09/04/24 20:15:55.907
  I0904 20:15:55.907049 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 20:15:55.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:15:56.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:15:56.042
  STEP: Creating resourceQuota "e2e-rq-status-lcgh2" @ 09/04/24 20:15:56.114
  I0904 20:15:56.136293 21 resource_quota.go:1102] Resource quota "e2e-rq-status-lcgh2" reports spec: hard cpu limit of 500m
  I0904 20:15:56.136349 21 resource_quota.go:1104] Resource quota "e2e-rq-status-lcgh2" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-lcgh2" /status @ 09/04/24 20:15:56.136
  STEP: Confirm /status for "e2e-rq-status-lcgh2" resourceQuota via watch @ 09/04/24 20:15:56.149
  I0904 20:15:56.150607 21 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-lcgh2" in namespace "resourcequota-7200" with hard status: v1.ResourceList(nil)
  I0904 20:15:56.150729 21 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-lcgh2" in namespace "resourcequota-7200" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0904 20:15:56.150841 21 resource_quota.go:1141] ResourceQuota "e2e-rq-status-lcgh2" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/04/24 20:15:56.153
  I0904 20:15:56.176443 21 resource_quota.go:1152] Resource quota "e2e-rq-status-lcgh2" reports spec: hard cpu limit of 1
  I0904 20:15:56.176496 21 resource_quota.go:1153] Resource quota "e2e-rq-status-lcgh2" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-lcgh2" /status @ 09/04/24 20:15:56.176
  STEP: Confirm /status for "e2e-rq-status-lcgh2" resourceQuota via watch @ 09/04/24 20:15:56.191
  I0904 20:15:56.192948 21 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-lcgh2" in namespace "resourcequota-7200" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0904 20:15:56.193042 21 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-lcgh2" in namespace "resourcequota-7200" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0904 20:15:56.193081 21 resource_quota.go:1185] ResourceQuota "e2e-rq-status-lcgh2" /status was patched
  STEP: Get "e2e-rq-status-lcgh2" /status @ 09/04/24 20:15:56.193
  I0904 20:15:56.199882 21 resource_quota.go:1196] Resourcequota "e2e-rq-status-lcgh2" reports status: hard cpu of 1
  I0904 20:15:56.200073 21 resource_quota.go:1198] Resourcequota "e2e-rq-status-lcgh2" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-lcgh2" /status before checking Spec is unchanged @ 09/04/24 20:15:56.203
  I0904 20:15:56.213915 21 resource_quota.go:1218] Resourcequota "e2e-rq-status-lcgh2" reports status: hard cpu of 2
  I0904 20:15:56.213977 21 resource_quota.go:1220] Resourcequota "e2e-rq-status-lcgh2" reports status: hard memory of 2Gi
  I0904 20:15:56.215446 21 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-lcgh2" in namespace "resourcequota-7200" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0904 20:15:56.218438 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9c798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9c828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9c8a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:15:56.440909      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:57.441798      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:58.441936      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:15:59.442051      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:00.442658      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:16:01.220239 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9ca68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9cac8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9caf8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:16:01.443635      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:02.443749      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:03.444165      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:04.444644      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:05.444759      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:16:06.221042 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9cde0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9ce28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9cea0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:16:06.445645      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:07.445913      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:08.446188      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:09.446439      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:10.446626      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:16:11.219987 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc43f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc4438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc4498), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:16:11.447225      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:12.447708      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:13.447856      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:14.448157      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:15.448286      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:16:16.219530 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9d128), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9d170), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9d1b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:16:16.448838      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:17.449192      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:18.449593      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:19.449909      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:20.450314      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:16:21.220244 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9d4a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9d518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9d560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:16:21.450454      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:22.450810      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:23.451055      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:24.451970      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:25.452600      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:16:26.219833 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc46d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc4738), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc4768), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:16:26.453127      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:27.453281      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:28.453542      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:29.453790      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:30.454046      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:16:31.220213 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc49a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc49f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc4a38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:16:31.454436      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:32.455464      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:33.456205      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:34.456352      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:35.456402      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:16:36.219678 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9d920), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9d968), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9d998), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:16:36.456732      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:37.456956      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:38.457080      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:39.458350      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:40.458502      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:16:41.219798 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc4d38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc4d68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc4d98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:16:41.459094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:42.460180      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:43.460486      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:44.460822      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:45.461103      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:16:46.220162 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc4f90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc4fd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc5008), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:16:46.461476      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:47.461897      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:48.462194      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:49.462599      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:50.462751      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:16:51.220070 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc5248), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc5278), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc5308), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:16:51.463381      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:52.463567      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:53.464172      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:54.464439      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:55.464428      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:16:56.220419 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9dcf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9dd40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c9dd70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:16:56.464576      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:57.464974      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:58.465103      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:16:59.465242      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:00.465359      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:17:01.220574 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc5668), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc56b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc56f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:17:01.465888      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:02.466016      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:03.466145      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:04.466615      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:05.467006      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:17:06.219672 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc5908), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc5938), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fc5998), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:17:06.467951      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:07.468046      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:08.468185      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:09.468320      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:10.468426      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:17:11.224914 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001388150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001388180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013881e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:17:11.469315      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:12.470127      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:13.470202      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:14.470323      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:15.470644      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:16.471296      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:17:16.691461 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lcgh2" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lcgh2", GenerateName:"", Namespace:"resourcequota-7200", SelfLink:"", UID:"0eb9da76-3393-4d0a-8b5a-3e41e06e1d5f", ResourceVersion:"225576", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lcgh2"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001388420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001388450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 15, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013884c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0904 20:17:17.472185      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:18.472442      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:19.472561      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:20.473032      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:17:21.220453 21 resource_quota.go:1260] ResourceQuota "e2e-rq-status-lcgh2" Spec was unchanged and /status reset
  I0904 20:17:21.220723 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7200" for this suite. @ 09/04/24 20:17:21.225
â€¢ [85.338 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/04/24 20:17:21.245
  I0904 20:17:21.246017 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename containers @ 09/04/24 20:17:21.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:17:21.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:17:21.303
  E0904 20:17:21.473990      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:22.474770      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:17:23.452872 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 20:17:23.475365      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "containers-4691" for this suite. @ 09/04/24 20:17:23.558
â€¢ [2.333 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 09/04/24 20:17:23.579
  I0904 20:17:23.579810 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:17:23.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:17:23.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:17:23.616
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:17:23.62
  E0904 20:17:24.475513      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:25.475677      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:26.476220      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:27.477258      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:28.477546      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:17:29.185
  I0904 20:17:29.188590 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-dceef425-903f-4048-9724-f302f23421e0 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:17:29.194
  I0904 20:17:29.237188 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5784" for this suite. @ 09/04/24 20:17:29.252
â€¢ [5.698 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 09/04/24 20:17:29.278
  I0904 20:17:29.278675 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 20:17:29.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:17:29.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:17:29.33
  STEP: creating service multi-endpoint-test in namespace services-5579 @ 09/04/24 20:17:29.333
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5579 to expose endpoints map[] @ 09/04/24 20:17:29.366
  I0904 20:17:29.425148 21 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5579 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5579 @ 09/04/24 20:17:29.425
  E0904 20:17:29.478426      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:30.479305      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:31.479355      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5579 to expose endpoints map[pod1:[100]] @ 09/04/24 20:17:31.766
  I0904 20:17:31.879625 21 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5579 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5579 @ 09/04/24 20:17:31.879
  E0904 20:17:32.479523      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:33.480193      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5579 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/04/24 20:17:33.915
  I0904 20:17:34.030715 21 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5579 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/04/24 20:17:34.03
  I0904 20:17:34.030827 21 resource.go:361] Creating new exec pod
  E0904 20:17:34.480377      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:35.480500      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:36.480627      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:17:37.060343 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5579 exec execpodnmvb9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0904 20:17:37.195397 21 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0904 20:17:37.195452 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 20:17:37.195571 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5579 exec execpodnmvb9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.49.215 80'
  I0904 20:17:37.344643 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.49.215 80\nConnection to 10.43.49.215 80 port [tcp/http] succeeded!\n"
  I0904 20:17:37.344695 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 20:17:37.344801 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5579 exec execpodnmvb9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  E0904 20:17:37.480970      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:17:37.481108 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0904 20:17:37.481187 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 20:17:37.481271 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5579 exec execpodnmvb9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.49.215 81'
  I0904 20:17:37.611470 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.49.215 81\nConnection to 10.43.49.215 81 port [tcp/*] succeeded!\n"
  I0904 20:17:37.611533 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5579 @ 09/04/24 20:17:37.611
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5579 to expose endpoints map[pod2:[101]] @ 09/04/24 20:17:37.683
  I0904 20:17:37.752530 21 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5579 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5579 @ 09/04/24 20:17:37.752
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5579 to expose endpoints map[] @ 09/04/24 20:17:37.815
  I0904 20:17:37.836519 21 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5579 exposes endpoints map[]
  I0904 20:17:37.895449 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5579" for this suite. @ 09/04/24 20:17:37.907
â€¢ [8.655 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/04/24 20:17:37.934
  I0904 20:17:37.934977 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename replicaset @ 09/04/24 20:17:37.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:17:38.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:17:38.398
  E0904 20:17:38.481354      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a Replicaset @ 09/04/24 20:17:38.684
  STEP: Verify that the required pods have come up. @ 09/04/24 20:17:38.699
  I0904 20:17:38.903537 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0904 20:17:39.481904      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:40.482023      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:41.482260      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:42.482357      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:43.483023      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:44.483850      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:17:44.813288 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/24 20:17:44.813
  STEP: Getting /status @ 09/04/24 20:17:44.813
  I0904 20:17:44.821808 21 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/04/24 20:17:44.821
  I0904 20:17:44.841588 21 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/04/24 20:17:44.841
  I0904 20:17:44.851355 21 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0904 20:17:44.851603 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0904 20:17:44.851760 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0904 20:17:44.852046 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0904 20:17:44.852112 21 replica_set.go:682] Found replicaset test-rs in namespace replicaset-219 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0904 20:17:44.852196 21 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/04/24 20:17:44.852
  I0904 20:17:44.852359 21 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0904 20:17:44.868488 21 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/04/24 20:17:44.868
  I0904 20:17:44.870337 21 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0904 20:17:44.870468 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0904 20:17:44.870605 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0904 20:17:44.870891 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0904 20:17:44.870950 21 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-219 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 20:17:44.871073 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0904 20:17:44.871125 21 replica_set.go:718] Found replicaset test-rs in namespace replicaset-219 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0904 20:17:44.871146 21 replica_set.go:729] Replicaset test-rs has a patched status
  I0904 20:17:44.871251 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-219" for this suite. @ 09/04/24 20:17:44.875
â€¢ [6.958 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 09/04/24 20:17:44.893
  I0904 20:17:44.893770 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename dns @ 09/04/24 20:17:44.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:17:44.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:17:44.965
  STEP: Creating a test headless service @ 09/04/24 20:17:44.969
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5628.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5628.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/04/24 20:17:44.99
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5628.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5628.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/04/24 20:17:44.99
  STEP: creating a pod to probe DNS @ 09/04/24 20:17:44.99
  STEP: submitting the pod to kubernetes @ 09/04/24 20:17:44.99
  E0904 20:17:45.484801      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:46.485748      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:47.485885      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/24 20:17:47.788
  STEP: looking for the results for each expected name from probers @ 09/04/24 20:17:47.8
  I0904 20:17:47.819342 21 dns_common.go:527] DNS probes using dns-5628/dns-test-02538233-ed0e-45c4-86c1-aa8910c38e6d succeeded

  STEP: deleting the pod @ 09/04/24 20:17:47.819
  STEP: deleting the test headless service @ 09/04/24 20:17:47.878
  I0904 20:17:47.938251 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5628" for this suite. @ 09/04/24 20:17:47.945
â€¢ [3.073 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 09/04/24 20:17:47.967
  I0904 20:17:47.967261 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/24 20:17:47.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:17:48.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:17:48.009
  I0904 20:17:48.068521 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0904 20:17:48.486704      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:49.486847      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:50.487858      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:51.488003      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:52.488630      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:53.488816      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:54.488867      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:55.489159      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:56.490133      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:57.490234      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:58.491359      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:17:59.492167      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:00.492904      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:01.493176      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:02.493884      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:03.494034      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:04.494146      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:05.494259      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:06.494410      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:07.494899      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:08.495088      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:09.495401      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:10.496300      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:11.496597      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:12.497473      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:13.497704      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:14.498116      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:15.498483      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:16.498634      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:17.498821      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:18.499097      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:19.499238      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:20.499925      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:21.500048      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:22.500698      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:23.500828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:24.501644      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:25.501765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:26.501907      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:27.502556      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:28.502745      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:29.502870      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:30.503852      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:31.503985      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:32.504190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:33.505119      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:34.506143      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:35.506459      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:36.507230      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:37.507987      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:38.508637      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:39.509362      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:40.510148      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:41.510317      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:42.510524      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:43.510768      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:44.511170      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:45.511453      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:46.512178      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:47.512232      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:18:48.074172 21 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/04/24 20:18:48.077
  I0904 20:18:48.217100 21 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I0904 20:18:48.250322 21 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I0904 20:18:48.318987 21 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I0904 20:18:48.375391 21 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I0904 20:18:48.431171 21 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I0904 20:18:48.476097 21 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  E0904 20:18:48.512995      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:18:48.561780 21 preemption.go:175] Created pod: pod3-0-sched-preemption-medium-priority
  I0904 20:18:48.592691 21 preemption.go:175] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/04/24 20:18:48.592
  E0904 20:18:49.514006      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:50.514366      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/04/24 20:18:50.671
  E0904 20:18:51.515472      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:52.515580      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:53.516367      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:54.516602      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:18:54.868645 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9317" for this suite. @ 09/04/24 20:18:54.874
â€¢ [66.916 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/04/24 20:18:54.883
  I0904 20:18:54.884011 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sched-pred @ 09/04/24 20:18:54.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:18:54.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:18:54.929
  I0904 20:18:54.932724 21 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0904 20:18:54.941317 21 util.go:393] Waiting for terminating namespaces to be deleted...
  I0904 20:18:54.945966 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-11-100.us-east-2.compute.internal before test
  E0904 20:18:55.516823      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:18:56.359826 21 predicates.go:957] coredns-5dd589bf46-5s5rv from kube-system started at 2024-09-04 03:31:12 +0000 UTC (1 container statuses recorded)
  I0904 20:18:56.359877 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0904 20:18:56.359896 21 predicates.go:957] helm-install-traefik-crd-b7qfb from kube-system started at 2024-09-04 03:31:13 +0000 UTC (1 container statuses recorded)
  I0904 20:18:56.359943 21 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 20:18:56.359970 21 predicates.go:957] helm-install-traefik-jps75 from kube-system started at 2024-09-04 03:31:13 +0000 UTC (1 container statuses recorded)
  I0904 20:18:56.359987 21 predicates.go:959] 	Container helm ready: false, restart count 1
  I0904 20:18:56.360048 21 predicates.go:957] local-path-provisioner-846b9dcb6c-qlwlf from kube-system started at 2024-09-04 03:31:12 +0000 UTC (1 container statuses recorded)
  I0904 20:18:56.360065 21 predicates.go:959] 	Container local-path-provisioner ready: true, restart count 0
  I0904 20:18:56.360114 21 predicates.go:957] metrics-server-5dc58b587c-blxn9 from kube-system started at 2024-09-04 03:31:12 +0000 UTC (1 container statuses recorded)
  I0904 20:18:56.360147 21 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0904 20:18:56.360163 21 predicates.go:957] svclb-traefik-b676ce4a-bthjx from kube-system started at 2024-09-04 03:31:27 +0000 UTC (2 container statuses recorded)
  I0904 20:18:56.360210 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:18:56.360250 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:18:56.360286 21 predicates.go:957] traefik-7f4b44bf74-jvxjf from kube-system started at 2024-09-04 03:31:27 +0000 UTC (1 container statuses recorded)
  I0904 20:18:56.360299 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0904 20:18:56.360357 21 predicates.go:957] pod0-1-sched-preemption-medium-priority from sched-preemption-9317 started at 2024-09-04 20:18:48 +0000 UTC (1 container statuses recorded)
  I0904 20:18:56.360412 21 predicates.go:959] 	Container pod0-1-sched-preemption-medium-priority ready: true, restart count 0
  I0904 20:18:56.360431 21 predicates.go:957] preemptor-pod from sched-preemption-9317 started at 2024-09-04 20:18:52 +0000 UTC (1 container statuses recorded)
  I0904 20:18:56.360443 21 predicates.go:959] 	Container preemptor-pod ready: true, restart count 0
  I0904 20:18:56.360486 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-lldsg from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:18:56.360518 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:18:56.360560 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 20:18:56.360689 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-15-190.us-east-2.compute.internal before test
  E0904 20:18:56.517471      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:57.518062      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:18:58.169507 21 predicates.go:957] svclb-traefik-b676ce4a-gv84c from kube-system started at 2024-09-04 20:10:33 +0000 UTC (2 container statuses recorded)
  I0904 20:18:58.169564 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:18:58.169580 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:18:58.169596 21 predicates.go:957] pod1-0-sched-preemption-medium-priority from sched-preemption-9317 started at 2024-09-04 20:18:48 +0000 UTC (1 container statuses recorded)
  I0904 20:18:58.169645 21 predicates.go:959] 	Container pod1-0-sched-preemption-medium-priority ready: true, restart count 0
  I0904 20:18:58.169667 21 predicates.go:957] pod1-1-sched-preemption-medium-priority from sched-preemption-9317 started at 2024-09-04 20:18:48 +0000 UTC (1 container statuses recorded)
  I0904 20:18:58.169679 21 predicates.go:959] 	Container pod1-1-sched-preemption-medium-priority ready: true, restart count 0
  I0904 20:18:58.169693 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-hp2kg from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:18:58.169752 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:18:58.169797 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 20:18:58.169817 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-5-231.us-east-2.compute.internal before test
  I0904 20:18:58.173441 21 predicates.go:957] svclb-traefik-b676ce4a-hhvc9 from kube-system started at 2024-09-04 03:34:46 +0000 UTC (2 container statuses recorded)
  I0904 20:18:58.173482 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:18:58.173496 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:18:58.173512 21 predicates.go:957] pod2-0-sched-preemption-medium-priority from sched-preemption-9317 started at 2024-09-04 20:18:48 +0000 UTC (1 container statuses recorded)
  I0904 20:18:58.173557 21 predicates.go:959] 	Container pod2-0-sched-preemption-medium-priority ready: true, restart count 0
  I0904 20:18:58.173581 21 predicates.go:957] pod2-1-sched-preemption-medium-priority from sched-preemption-9317 started at 2024-09-04 20:18:48 +0000 UTC (1 container statuses recorded)
  I0904 20:18:58.173596 21 predicates.go:959] 	Container pod2-1-sched-preemption-medium-priority ready: true, restart count 0
  I0904 20:18:58.173611 21 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-04 19:17:22 +0000 UTC (1 container statuses recorded)
  I0904 20:18:58.173667 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0904 20:18:58.173688 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-jhfrj from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:18:58.173726 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:18:58.173741 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 20:18:58.173754 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-15.us-east-2.compute.internal before test
  I0904 20:18:58.177306 21 predicates.go:957] svclb-traefik-b676ce4a-w8mwb from kube-system started at 2024-09-04 03:34:28 +0000 UTC (2 container statuses recorded)
  I0904 20:18:58.177341 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:18:58.177355 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:18:58.177370 21 predicates.go:957] pod3-0-sched-preemption-medium-priority from sched-preemption-9317 started at 2024-09-04 20:18:48 +0000 UTC (1 container statuses recorded)
  I0904 20:18:58.177410 21 predicates.go:959] 	Container pod3-0-sched-preemption-medium-priority ready: true, restart count 0
  I0904 20:18:58.177436 21 predicates.go:957] pod3-1-sched-preemption-medium-priority from sched-preemption-9317 started at 2024-09-04 20:18:48 +0000 UTC (1 container statuses recorded)
  I0904 20:18:58.177448 21 predicates.go:959] 	Container pod3-1-sched-preemption-medium-priority ready: true, restart count 0
  I0904 20:18:58.177462 21 predicates.go:957] sonobuoy-e2e-job-ae616c3caee949dd from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:18:58.177516 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0904 20:18:58.177532 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:18:58.177575 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-xn4qz from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:18:58.177606 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:18:58.177619 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/04/24 20:18:58.177
  E0904 20:18:58.518145      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:18:59.518364      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/04/24 20:19:00.255
  STEP: Trying to apply a random label on the found node. @ 09/04/24 20:19:00.29
  STEP: verifying the node has the label kubernetes.io/e2e-0905ce52-ec4d-48a9-88ec-d02ce4e4f022 95 @ 09/04/24 20:19:00.329
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/04/24 20:19:00.352
  E0904 20:19:00.518516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:01.518688      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.15.190 on the node which pod4 resides and expect not scheduled @ 09/04/24 20:19:02.384
  E0904 20:19:02.519711      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:03.520202      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:04.520652      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:05.520797      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:06.521385      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:07.521687      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:08.522530      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:09.522760      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:10.523550      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:11.523659      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:12.524594      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:13.524702      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:14.525467      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:15.525738      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:16.526947      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:17.527182      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:18.527491      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:19.527600      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:20.528578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:21.530156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:22.530501      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:23.530637      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:24.531440      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:25.531587      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:26.532534      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:27.532929      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:28.533252      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:29.533569      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:30.533949      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:31.534106      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:32.534687      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:33.534988      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:34.535914      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:35.536071      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:36.536976      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:37.537178      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:38.537575      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:39.537845      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:40.538714      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:41.539032      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:42.539786      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:43.540133      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:44.541079      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:45.541416      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:46.542183      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:47.542606      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:48.542655      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:49.543350      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:50.544184      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:51.544806      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:52.545006      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:53.545160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:54.545259      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:55.545400      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:56.545768      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:57.546015      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:58.546158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:19:59.546296      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:00.546424      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:01.547224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:02.548035      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:03.548488      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:04.548600      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:05.549620      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:06.549757      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:07.550827      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:08.551120      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:09.552156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:10.552280      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:11.552438      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:12.552555      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:13.552630      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:14.553174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:15.554287      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:16.554458      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:17.554559      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:18.554693      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:19.554738      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:20.555064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:21.555321      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:22.555955      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:23.556060      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:24.556154      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:25.556267      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:26.557355      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:27.557578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:28.557667      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:29.558048      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:30.558956      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:31.559402      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:32.559589      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:33.560191      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:34.560429      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:35.561264      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:36.561516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:37.561840      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:38.562689      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:39.563280      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:40.563436      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:41.564255      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:42.564427      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:43.565010      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:44.565150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:45.565954      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:46.566089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:47.566376      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:48.566624      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:49.567092      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:50.567253      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:51.568151      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:52.568396      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:53.568544      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:54.568807      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:55.569050      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:56.569091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:57.569210      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:58.569384      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:20:59.569662      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:00.569796      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:01.569997      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:02.570533      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:03.570675      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:04.570800      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:05.571107      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:06.572181      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:07.573072      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:08.573204      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:09.573258      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:10.573386      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:11.573506      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:12.573643      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:13.573800      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:14.574212      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:15.574389      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:16.574516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:17.574569      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:18.574750      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:19.575705      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:20.576191      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:21.576317      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:22.576956      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:23.577090      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:24.577194      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:25.578279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:26.578416      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:27.578586      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:28.578715      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:29.578844      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:30.579064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:31.579220      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:32.579424      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:33.579571      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:34.579696      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:35.580266      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:36.580326      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:37.580687      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:38.580828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:39.580965      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:40.581310      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:41.581452      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:42.581828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:43.581952      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:44.582985      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:45.583100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:46.583265      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:47.583872      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:48.584018      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:49.584148      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:50.584630      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:51.584742      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:52.585047      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:53.585599      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:54.585922      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:55.586045      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:56.586704      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:57.587273      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:58.587395      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:21:59.588190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:00.588467      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:01.588959      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:02.589090      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:03.589221      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:04.589883      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:05.591273      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:06.591385      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:07.591813      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:08.591943      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:09.592857      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:10.592943      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:11.593107      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:12.593959      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:13.595029      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:14.595090      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:15.595236      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:16.595383      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:17.596178      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:18.596295      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:19.597394      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:20.597478      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:21.598402      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:22.598863      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:23.599783      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:24.599902      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:25.600760      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:26.601029      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:27.601161      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:28.601261      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:29.601396      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:30.601526      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:31.601618      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:32.602161      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:33.602541      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:34.602759      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:35.603658      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:36.603743      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:37.603806      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:38.604141      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:39.604310      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:40.604580      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:41.604714      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:42.605036      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:43.605132      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:44.605272      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:45.605374      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:46.605665      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:47.605977      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:48.606079      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:49.606657      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:50.606973      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:51.607625      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:52.607758      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:53.607915      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:54.608351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:55.609100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:56.609234      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:57.610122      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:58.610259      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:22:59.611312      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:00.611447      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:01.611981      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:02.612540      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:03.612672      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:04.612829      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:05.613580      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:06.614029      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:07.614117      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:08.614274      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:09.615313      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:10.616176      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:11.617186      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:12.617684      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:13.618422      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:14.618798      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:15.619589      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:16.619723      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:17.620497      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:18.620831      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:19.621227      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:20.621385      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:21.621494      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:22.621880      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:23.622012      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:24.622201      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:25.622277      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:26.622537      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:27.622699      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:28.622872      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:29.623012      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:30.623096      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:31.624162      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:32.624592      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:33.625495      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:34.625669      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:35.626655      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:36.626785      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:37.627100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:38.628182      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:39.628302      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:40.628595      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:41.629195      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:42.629793      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:43.629895      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:44.630044      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:45.630109      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:46.630269      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:47.631354      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:48.631828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:49.632621      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:50.632723      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:51.633390      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:52.634248      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:53.634410      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:54.635082      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:55.635280      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:56.635372      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:57.635526      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:58.635656      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:23:59.636631      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:00.636686      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:01.637702      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-0905ce52-ec4d-48a9-88ec-d02ce4e4f022 off the node ip-172-31-15-190.us-east-2.compute.internal @ 09/04/24 20:24:02.404
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-0905ce52-ec4d-48a9-88ec-d02ce4e4f022 @ 09/04/24 20:24:02.432
  I0904 20:24:02.437663 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6833" for this suite. @ 09/04/24 20:24:02.441
â€¢ [307.574 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/04/24 20:24:02.459
  I0904 20:24:02.459551 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename deployment @ 09/04/24 20:24:02.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:02.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:24:02.534
  I0904 20:24:02.537878 21 deployment.go:1645] Creating simple deployment test-new-deployment
  I0904 20:24:02.567329 21 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E0904 20:24:02.638504      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:03.638966      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/04/24 20:24:04.582
  STEP: updating a scale subresource @ 09/04/24 20:24:04.585
  STEP: verifying the deployment Spec.Replicas was modified @ 09/04/24 20:24:04.602
  STEP: Patch a scale subresource @ 09/04/24 20:24:04.606
  E0904 20:24:04.639942      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:24:04.683353 21 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8695",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83cad696-c163-4034-b2c2-895a89473aa4",
      ResourceVersion: (string) (len=6) "227718",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861078242,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 20:24:04.738602 21 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8695",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e2aef17-95a4-4bb5-957f-34ef346b9c97",
      ResourceVersion: (string) (len=6) "227726",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861078242,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "83cad696-c163-4034-b2c2-895a89473aa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 33 63 61 64 36  39 36 2d 63 31 36 33 2d  |\"83cad696-c163-|
              00000120  34 30 33 34 2d 62 32 63  32 2d 38 39 35 61 38 39  |4034-b2c2-895a89|
              00000130  34 37 33 61 61 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |473aa4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 20:24:04.793862 21 deployment.go:67] Pod "test-new-deployment-64bcfc6446-gtwkb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-gtwkb",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8695",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad0f3fce-d825-48fa-bd34-07755cf5f43d",
      ResourceVersion: (string) (len=6) "227713",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861078242,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "5e2aef17-95a4-4bb5-957f-34ef346b9c97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  32 61 65 66 31 37 2d 39  |d\":\"5e2aef17-9|
              00000090  35 61 34 2d 34 62 62 35  2d 39 35 37 66 2d 33 34  |5a4-4bb5-957f-34|
              000000a0  65 66 33 34 36 62 39 63  39 37 5c 22 7d 22 3a 7b  |ef346b9c97\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 39  39 5c 22 7d 22 3a 7b 22  |.42.3.199\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-874sl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-874sl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-190.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.190"
        }
      },
      PodIP: (string) (len=11) "10.42.3.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861078242,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861078243,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1ff95c9df5344b593e51f5a343c7f15c86d1e2a60f8c0181a5096477939be9a4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-874sl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 20:24:04.797094 21 deployment.go:67] Pod "test-new-deployment-64bcfc6446-l2kv8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-l2kv8",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8695",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba22a557-be2f-45c6-ade7-eaed464ad93f",
      ResourceVersion: (string) (len=6) "227725",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861078244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "5e2aef17-95a4-4bb5-957f-34ef346b9c97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  32 61 65 66 31 37 2d 39  |d\":\"5e2aef17-9|
              00000090  35 61 34 2d 34 62 62 35  2d 39 35 37 66 2d 33 34  |5a4-4bb5-957f-34|
              000000a0  65 66 33 34 36 62 39 63  39 37 5c 22 7d 22 3a 7b  |ef346b9c97\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-swnlw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-swnlw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-5-231.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.231"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861078244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-swnlw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 20:24:04.800109 21 deployment.go:67] Pod "test-new-deployment-64bcfc6446-r6xj4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-r6xj4",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8695",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b209a4fc-92a3-4cc7-8539-ec3d919c75c8",
      ResourceVersion: (string) (len=6) "227729",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861078244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "5e2aef17-95a4-4bb5-957f-34ef346b9c97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  32 61 65 66 31 37 2d 39  |d\":\"5e2aef17-9|
              00000090  35 61 34 2d 34 62 62 35  2d 39 35 37 66 2d 33 34  |5a4-4bb5-957f-34|
              000000a0  65 66 33 34 36 62 39 63  39 37 5c 22 7d 22 3a 7b  |ef346b9c97\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4jtj2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4jtj2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 20:24:04.801698 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8695" for this suite. @ 09/04/24 20:24:04.834
â€¢ [2.459 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 09/04/24 20:24:04.919
  I0904 20:24:04.919254 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename gc @ 09/04/24 20:24:04.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:04.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:24:05.002
  STEP: create the rc @ 09/04/24 20:24:05.006
  W0904 20:24:05.028792      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0904 20:24:05.640247      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:06.640518      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:07.640566      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:08.641092      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:09.641362      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/04/24 20:24:10.636
  E0904 20:24:10.641888      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for all pods to be garbage collected @ 09/04/24 20:24:10.647
  E0904 20:24:11.642111      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:12.642524      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:13.642523      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:14.642793      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:15.643106      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/04/24 20:24:16.057
  W0904 20:24:16.062758      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0904 20:24:16.062792 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 20:24:16.063041 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3335" for this suite. @ 09/04/24 20:24:16.066
â€¢ [11.164 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/04/24 20:24:16.084
  I0904 20:24:16.084220 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:24:16.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:16.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:24:16.13
  STEP: Creating configMap with name configmap-projected-all-test-volume-55013772-ad41-4e58-b652-c0e21b774778 @ 09/04/24 20:24:16.134
  STEP: Creating secret with name secret-projected-all-test-volume-a745e85f-a227-44ca-8f9c-4e891df03fc2 @ 09/04/24 20:24:16.163
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/04/24 20:24:16.176
  E0904 20:24:16.643891      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:17.643988      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:18.644681      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:19.644963      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:24:20.514
  I0904 20:24:20.520111 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod projected-volume-e291e15b-2bc2-44e3-a402-e27714887633 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 20:24:20.534
  I0904 20:24:20.593588 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 20:24:20.646025      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-8851" for this suite. @ 09/04/24 20:24:20.698
â€¢ [4.626 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/04/24 20:24:20.71
  I0904 20:24:20.710572 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/24 20:24:20.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:20.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:24:20.751
  I0904 20:24:20.754490 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:24:21.646786      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:24:21.796076 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7360" for this suite. @ 09/04/24 20:24:21.8
â€¢ [1.101 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 09/04/24 20:24:21.811
  I0904 20:24:21.811896 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:24:21.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:21.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:24:21.859
  STEP: Setting up server cert @ 09/04/24 20:24:21.971
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:24:22.536
  STEP: Deploying the webhook pod @ 09/04/24 20:24:22.55
  STEP: Wait for the deployment to be ready @ 09/04/24 20:24:22.584
  I0904 20:24:22.603081 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:24:22.647470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:23.647594      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:24.647698      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:24:25.219
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:24:25.244
  E0904 20:24:25.648235      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:24:26.245041 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/04/24 20:24:26.251
  STEP: create the configmap with a random name @ 09/04/24 20:24:26.291
  STEP: verify the configmap is mutated @ 09/04/24 20:24:26.323
  STEP: create the configmap with 'skip-me' name @ 09/04/24 20:24:26.323
  I0904 20:24:26.462020 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7172" for this suite. @ 09/04/24 20:24:26.477
  STEP: Destroying namespace "webhook-markers-4512" for this suite. @ 09/04/24 20:24:26.503
â€¢ [4.704 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 09/04/24 20:24:26.517
  I0904 20:24:26.517096 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:24:26.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:26.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:24:26.562
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:24:26.567
  E0904 20:24:26.648582      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:27.649631      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:28.649755      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:29.649858      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:30.650138      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:24:30.901
  I0904 20:24:30.905066 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-57fdd54e-b6ae-431f-9610-0c7afc29b030 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:24:30.912
  I0904 20:24:30.948941 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1913" for this suite. @ 09/04/24 20:24:30.953
â€¢ [4.469 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/04/24 20:24:30.989
  I0904 20:24:30.989912 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename var-expansion @ 09/04/24 20:24:30.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:31.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:24:31.035
  STEP: Creating a pod to test substitution in container's command @ 09/04/24 20:24:31.038
  E0904 20:24:31.650493      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:32.651126      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:33.651320      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:34.652296      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:24:35.594
  I0904 20:24:35.597721 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod var-expansion-7628f1fe-f585-4328-912a-42a2720de298 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 20:24:35.609
  E0904 20:24:35.653415      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:24:35.667641 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1889" for this suite. @ 09/04/24 20:24:35.675
â€¢ [4.697 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 09/04/24 20:24:35.688
  I0904 20:24:35.688245 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 20:24:35.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:35.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:24:35.75
  STEP: creating the pod @ 09/04/24 20:24:35.755
  I0904 20:24:35.755342 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-734 create -f -'
  I0904 20:24:36.049660 21 builder.go:146] stderr: ""
  I0904 20:24:36.049710 21 builder.go:147] stdout: "pod/pause created\n"
  E0904 20:24:36.653538      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:37.653711      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/04/24 20:24:38.09
  I0904 20:24:38.090320 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-734 label pods pause testing-label=testing-label-value'
  I0904 20:24:38.190837 21 builder.go:146] stderr: ""
  I0904 20:24:38.190886 21 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/04/24 20:24:38.19
  I0904 20:24:38.191005 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-734 get pod pause -L testing-label'
  I0904 20:24:38.294819 21 builder.go:146] stderr: ""
  I0904 20:24:38.294877 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/04/24 20:24:38.295
  I0904 20:24:38.295115 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-734 label pods pause testing-label-'
  I0904 20:24:38.393087 21 builder.go:146] stderr: ""
  I0904 20:24:38.393151 21 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/04/24 20:24:38.393
  I0904 20:24:38.393241 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-734 get pod pause -L testing-label'
  I0904 20:24:38.493737 21 builder.go:146] stderr: ""
  I0904 20:24:38.493812 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/04/24 20:24:38.493
  I0904 20:24:38.494042 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-734 delete --grace-period=0 --force -f -'
  I0904 20:24:38.609641 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 20:24:38.609690 21 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0904 20:24:38.609749 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-734 get rc,svc -l name=pause --no-headers'
  E0904 20:24:38.654182      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:24:38.814780 21 builder.go:146] stderr: "No resources found in kubectl-734 namespace.\n"
  I0904 20:24:38.814867 21 builder.go:147] stdout: ""
  I0904 20:24:38.815112 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-734 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0904 20:24:39.495507 21 builder.go:146] stderr: ""
  I0904 20:24:39.495677 21 builder.go:147] stdout: ""
  I0904 20:24:39.495849 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-734" for this suite. @ 09/04/24 20:24:39.506
â€¢ [3.831 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/04/24 20:24:39.518
  I0904 20:24:39.518850 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sched-pred @ 09/04/24 20:24:39.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:39.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:24:39.559
  I0904 20:24:39.563158 21 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0904 20:24:39.571163 21 util.go:393] Waiting for terminating namespaces to be deleted...
  I0904 20:24:39.574627 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-11-100.us-east-2.compute.internal before test
  E0904 20:24:39.655193      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:24:39.704613 21 predicates.go:957] coredns-5dd589bf46-5s5rv from kube-system started at 2024-09-04 03:31:12 +0000 UTC (1 container statuses recorded)
  I0904 20:24:39.704665 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0904 20:24:39.704682 21 predicates.go:957] helm-install-traefik-crd-b7qfb from kube-system started at 2024-09-04 03:31:13 +0000 UTC (1 container statuses recorded)
  I0904 20:24:39.704741 21 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 20:24:39.704769 21 predicates.go:957] helm-install-traefik-jps75 from kube-system started at 2024-09-04 03:31:13 +0000 UTC (1 container statuses recorded)
  I0904 20:24:39.704782 21 predicates.go:959] 	Container helm ready: false, restart count 1
  I0904 20:24:39.704829 21 predicates.go:957] local-path-provisioner-846b9dcb6c-qlwlf from kube-system started at 2024-09-04 03:31:12 +0000 UTC (1 container statuses recorded)
  I0904 20:24:39.704844 21 predicates.go:959] 	Container local-path-provisioner ready: true, restart count 0
  I0904 20:24:39.704856 21 predicates.go:957] metrics-server-5dc58b587c-blxn9 from kube-system started at 2024-09-04 03:31:12 +0000 UTC (1 container statuses recorded)
  I0904 20:24:39.704871 21 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0904 20:24:39.704881 21 predicates.go:957] svclb-traefik-b676ce4a-bthjx from kube-system started at 2024-09-04 03:31:27 +0000 UTC (2 container statuses recorded)
  I0904 20:24:39.704890 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:24:39.704899 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:24:39.704909 21 predicates.go:957] traefik-7f4b44bf74-jvxjf from kube-system started at 2024-09-04 03:31:27 +0000 UTC (1 container statuses recorded)
  I0904 20:24:39.704917 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0904 20:24:39.704928 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-lldsg from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:24:39.704936 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:24:39.704946 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 20:24:39.704956 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-15-190.us-east-2.compute.internal before test
  I0904 20:24:39.708125 21 predicates.go:957] svclb-traefik-b676ce4a-gv84c from kube-system started at 2024-09-04 20:10:33 +0000 UTC (2 container statuses recorded)
  I0904 20:24:39.708160 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:24:39.708174 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:24:39.708189 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-hp2kg from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:24:39.708201 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:24:39.708213 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 20:24:39.708225 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-5-231.us-east-2.compute.internal before test
  I0904 20:24:39.711763 21 predicates.go:957] svclb-traefik-b676ce4a-hhvc9 from kube-system started at 2024-09-04 03:34:46 +0000 UTC (2 container statuses recorded)
  I0904 20:24:39.711791 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:24:39.711804 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:24:39.711823 21 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-04 19:17:22 +0000 UTC (1 container statuses recorded)
  I0904 20:24:39.711832 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0904 20:24:39.711843 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-jhfrj from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:24:39.711851 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:24:39.711862 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 20:24:39.711875 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-15.us-east-2.compute.internal before test
  I0904 20:24:39.715763 21 predicates.go:957] svclb-traefik-b676ce4a-w8mwb from kube-system started at 2024-09-04 03:34:28 +0000 UTC (2 container statuses recorded)
  I0904 20:24:39.715805 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:24:39.715819 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:24:39.715834 21 predicates.go:957] sonobuoy-e2e-job-ae616c3caee949dd from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:24:39.715991 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0904 20:24:39.716120 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:24:39.716256 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-xn4qz from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:24:39.716388 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:24:39.716514 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/04/24 20:24:39.716
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17f22443acaad128], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 09/04/24 20:24:40.341
  E0904 20:24:40.655273      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:24:41.319630 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8773" for this suite. @ 09/04/24 20:24:41.323
â€¢ [1.831 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/04/24 20:24:41.35
  I0904 20:24:41.350344 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 20:24:41.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:41.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:24:41.407
  STEP: Creating secret with name secret-test-a2016347-e599-4c27-9620-741199277050 @ 09/04/24 20:24:41.411
  STEP: Creating a pod to test consume secrets @ 09/04/24 20:24:41.425
  E0904 20:24:41.655399      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:42.656305      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:43.656624      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:44.656758      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:45.656999      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:24:45.869
  I0904 20:24:45.873707 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-secrets-d619b9d9-48c2-45b7-ac3e-8d1f155903ad container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 20:24:45.886
  I0904 20:24:45.934185 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6699" for this suite. @ 09/04/24 20:24:45.938
â€¢ [4.604 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 09/04/24 20:24:45.954
  I0904 20:24:45.954292 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename namespaces @ 09/04/24 20:24:45.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:46.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:24:46.006
  STEP: Creating a test namespace @ 09/04/24 20:24:46.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:46.115
  STEP: Creating a service in the namespace @ 09/04/24 20:24:46.118
  STEP: Deleting the namespace @ 09/04/24 20:24:46.148
  STEP: Waiting for the namespace to be removed. @ 09/04/24 20:24:46.21
  E0904 20:24:46.657124      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:47.657258      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:48.657404      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:49.658239      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:50.659194      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:51.659335      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:52.660252      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:53.660351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:54.661306      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:55.662260      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:56.663078      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:57.664214      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:24:58.664901      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/04/24 20:24:59.215
  STEP: Verifying there is no service in the namespace @ 09/04/24 20:24:59.573
  I0904 20:24:59.578105 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3503" for this suite. @ 09/04/24 20:24:59.582
  STEP: Destroying namespace "nsdeletetest-7392" for this suite. @ 09/04/24 20:24:59.605
  I0904 20:24:59.610029 21 framework.go:370] Namespace nsdeletetest-7392 was already deleted
  STEP: Destroying namespace "nsdeletetest-8870" for this suite. @ 09/04/24 20:24:59.61
â€¢ [13.672 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 09/04/24 20:24:59.627
  I0904 20:24:59.627965 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:24:59.628
  E0904 20:24:59.665187      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:24:59.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:24:59.669
  STEP: Creating the pod @ 09/04/24 20:24:59.672
  E0904 20:25:00.665334      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:01.665712      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:25:02.372989 21 pod_client.go:173] Successfully updated pod "annotationupdatea2ad9ab4-cd3b-4608-be08-d20c49e46d4e"
  E0904 20:25:02.666259      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:03.666674      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:25:04.395218 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6692" for this suite. @ 09/04/24 20:25:04.4
â€¢ [4.789 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/04/24 20:25:04.417
  I0904 20:25:04.417585 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:25:04.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:25:04.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:25:04.486
  STEP: Setting up server cert @ 09/04/24 20:25:04.576
  E0904 20:25:04.667053      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:25:05.185
  STEP: Deploying the webhook pod @ 09/04/24 20:25:05.207
  STEP: Wait for the deployment to be ready @ 09/04/24 20:25:05.235
  I0904 20:25:05.252877 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:25:05.667233      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:06.668162      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:07.669015      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:25:07.868
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:25:07.9
  E0904 20:25:08.669455      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:25:08.900799 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0904 20:25:08.907943 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5567-crds.webhook.example.com via the AdmissionRegistration API @ 09/04/24 20:25:09.432
  STEP: Creating a custom resource while v1 is storage version @ 09/04/24 20:25:09.472
  E0904 20:25:09.670271      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:10.670778      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/04/24 20:25:11.522
  STEP: Patching the custom resource while v2 is storage version @ 09/04/24 20:25:11.562
  E0904 20:25:11.671290      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:25:12.264398 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9934" for this suite. @ 09/04/24 20:25:12.268
  STEP: Destroying namespace "webhook-markers-8569" for this suite. @ 09/04/24 20:25:12.284
â€¢ [7.880 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 09/04/24 20:25:12.297
  I0904 20:25:12.297675 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename deployment @ 09/04/24 20:25:12.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:25:12.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:25:12.343
  STEP: creating a Deployment @ 09/04/24 20:25:12.357
  I0904 20:25:12.358015 21 deployment.go:507] Creating simple deployment test-deployment-sj7mj
  I0904 20:25:12.409984 21 deployment.go:222] deployment "test-deployment-sj7mj" doesn't have the required revision set
  E0904 20:25:12.672198      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:13.672308      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:14.673031      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/04/24 20:25:15.435
  I0904 20:25:15.439702 21 deployment.go:532] Deployment test-deployment-sj7mj has Conditions: [{Available True 2024-09-04 20:25:13 +0000 UTC 2024-09-04 20:25:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-09-04 20:25:13 +0000 UTC 2024-09-04 20:25:12 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sj7mj-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/04/24 20:25:15.439
  I0904 20:25:15.458168 21 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 25, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 25, 13, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 25, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 25, 12, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-sj7mj-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/04/24 20:25:15.458
  I0904 20:25:15.460336 21 deployment.go:579] Observed &Deployment event: ADDED
  I0904 20:25:15.460444 21 deployment.go:575] Observed Deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 20:25:12 +0000 UTC 2024-09-04 20:25:12 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sj7mj-f4dbbbf74"}
  I0904 20:25:15.460609 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0904 20:25:15.460655 21 deployment.go:575] Observed Deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 20:25:12 +0000 UTC 2024-09-04 20:25:12 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sj7mj-f4dbbbf74"}
  I0904 20:25:15.460696 21 deployment.go:575] Observed Deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-04 20:25:12 +0000 UTC 2024-09-04 20:25:12 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0904 20:25:15.460839 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0904 20:25:15.461101 21 deployment.go:575] Observed Deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-04 20:25:12 +0000 UTC 2024-09-04 20:25:12 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0904 20:25:15.461142 21 deployment.go:575] Observed Deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 20:25:12 +0000 UTC 2024-09-04 20:25:12 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-sj7mj-f4dbbbf74" is progressing.}
  I0904 20:25:15.461288 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0904 20:25:15.461330 21 deployment.go:575] Observed Deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-04 20:25:13 +0000 UTC 2024-09-04 20:25:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0904 20:25:15.461352 21 deployment.go:575] Observed Deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 20:25:13 +0000 UTC 2024-09-04 20:25:12 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sj7mj-f4dbbbf74" has successfully progressed.}
  I0904 20:25:15.461483 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0904 20:25:15.461520 21 deployment.go:575] Observed Deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-04 20:25:13 +0000 UTC 2024-09-04 20:25:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0904 20:25:15.461550 21 deployment.go:575] Observed Deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 20:25:13 +0000 UTC 2024-09-04 20:25:12 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sj7mj-f4dbbbf74" has successfully progressed.}
  I0904 20:25:15.461591 21 deployment.go:572] Found Deployment test-deployment-sj7mj in namespace deployment-341 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 20:25:15.461611 21 deployment.go:583] Deployment test-deployment-sj7mj has an updated status
  STEP: patching the Statefulset Status @ 09/04/24 20:25:15.461
  I0904 20:25:15.461654 21 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0904 20:25:15.472564 21 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/04/24 20:25:15.472
  I0904 20:25:15.474497 21 deployment.go:616] Observed &Deployment event: ADDED
  I0904 20:25:15.474566 21 deployment.go:612] Observed deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 20:25:12 +0000 UTC 2024-09-04 20:25:12 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sj7mj-f4dbbbf74"}
  I0904 20:25:15.474788 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0904 20:25:15.474842 21 deployment.go:612] Observed deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 20:25:12 +0000 UTC 2024-09-04 20:25:12 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sj7mj-f4dbbbf74"}
  I0904 20:25:15.474902 21 deployment.go:612] Observed deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-04 20:25:12 +0000 UTC 2024-09-04 20:25:12 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0904 20:25:15.475113 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0904 20:25:15.475269 21 deployment.go:612] Observed deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-04 20:25:12 +0000 UTC 2024-09-04 20:25:12 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0904 20:25:15.475315 21 deployment.go:612] Observed deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 20:25:12 +0000 UTC 2024-09-04 20:25:12 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-sj7mj-f4dbbbf74" is progressing.}
  I0904 20:25:15.475519 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0904 20:25:15.475563 21 deployment.go:612] Observed deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-04 20:25:13 +0000 UTC 2024-09-04 20:25:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0904 20:25:15.475637 21 deployment.go:612] Observed deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 20:25:13 +0000 UTC 2024-09-04 20:25:12 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sj7mj-f4dbbbf74" has successfully progressed.}
  I0904 20:25:15.475841 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0904 20:25:15.475961 21 deployment.go:612] Observed deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-04 20:25:13 +0000 UTC 2024-09-04 20:25:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0904 20:25:15.476019 21 deployment.go:612] Observed deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-04 20:25:13 +0000 UTC 2024-09-04 20:25:12 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sj7mj-f4dbbbf74" has successfully progressed.}
  I0904 20:25:15.476085 21 deployment.go:612] Observed deployment test-deployment-sj7mj in namespace deployment-341 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 20:25:15.476298 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0904 20:25:15.476518 21 deployment.go:609] Found deployment test-deployment-sj7mj in namespace deployment-341 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0904 20:25:15.476675 21 deployment.go:620] Deployment test-deployment-sj7mj has a patched status
  I0904 20:25:15.504201 21 deployment.go:633] Deployment "test-deployment-sj7mj":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-sj7mj",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a578e857-45aa-4b54-924f-855b9a5147b9",
      ResourceVersion: (string) (len=6) "228457",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861078312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-sj7mj-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 20:25:15.630355 21 deployment.go:39] New ReplicaSet "test-deployment-sj7mj-f4dbbbf74" of Deployment "test-deployment-sj7mj":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-sj7mj-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "54bb4ad4-f8ce-4865-a086-54335f139745",
      ResourceVersion: (string) (len=6) "228448",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861078312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-sj7mj",
          UID: (types.UID) (len=36) "a578e857-45aa-4b54-924f-855b9a5147b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 61 35 37  |k:{\"uid\":\"a57|
              00000120  38 65 38 35 37 2d 34 35  61 61 2d 34 62 35 34 2d  |8e857-45aa-4b54-|
              00000130  39 32 34 66 2d 38 35 35  62 39 61 35 31 34 37 62  |924f-855b9a5147b|
              00000140  39 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |9\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078313,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 20:25:15.638261 21 deployment.go:67] Pod "test-deployment-sj7mj-f4dbbbf74-6zhxf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-sj7mj-f4dbbbf74-6zhxf",
      GenerateName: (string) (len=32) "test-deployment-sj7mj-f4dbbbf74-",
      Namespace: (string) (len=14) "deployment-341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea770e7d-bbf6-4bb1-89e3-0f03a4773e5a",
      ResourceVersion: (string) (len=6) "228447",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861078312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-sj7mj-f4dbbbf74",
          UID: (types.UID) (len=36) "54bb4ad4-f8ce-4865-a086-54335f139745",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 35 34 62 62 34 61 64  34 2d 66 38 63 65 2d 34  |"54bb4ad4-f8ce-4|
              000000a0  38 36 35 2d 61 30 38 36  2d 35 34 33 33 35 66 31  |865-a086-54335f1|
              000000b0  33 39 37 34 35 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |39745\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078313,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 32 30  39 5c 22 7d 22 3a 7b 22  |.42.3.209\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8rktz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8rktz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-190.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078313,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078313,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078313,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861078312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.190",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.190"
        }
      },
      PodIP: (string) (len=11) "10.42.3.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861078312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861078313,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://740344bcd989975ee42d1c8e7a7048b4274ce23b04963a4e655d2de6cac60e46",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8rktz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 20:25:15.641072 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-341" for this suite. @ 09/04/24 20:25:15.647
â€¢ [3.366 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/04/24 20:25:15.664
  I0904 20:25:15.664499 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/24 20:25:15.665
  E0904 20:25:15.673906      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:25:15.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:25:15.824
  I0904 20:25:15.827712 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:25:16.674112      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:17.674479      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:18.674830      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:25:19.066353 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8787" for this suite. @ 09/04/24 20:25:19.071
â€¢ [3.422 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/04/24 20:25:19.086
  I0904 20:25:19.086716 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 20:25:19.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:25:19.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:25:19.125
  I0904 20:25:19.129204 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:25:19.675190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:20.676219      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:21.676884      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0904 20:25:21.681495      21 warnings.go:70] unknown field "alpha"
  W0904 20:25:21.681525      21 warnings.go:70] unknown field "beta"
  W0904 20:25:21.681534      21 warnings.go:70] unknown field "delta"
  W0904 20:25:21.681583      21 warnings.go:70] unknown field "epsilon"
  W0904 20:25:21.681608      21 warnings.go:70] unknown field "gamma"
  I0904 20:25:22.256904 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-313" for this suite. @ 09/04/24 20:25:22.27
â€¢ [3.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/04/24 20:25:22.306
  I0904 20:25:22.306475 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 20:25:22.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:25:22.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:25:22.355
  I0904 20:25:22.359514 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:25:22.677874      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:23.678890      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:24.679129      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0904 20:25:24.923561      21 warnings.go:70] unknown field "alpha"
  W0904 20:25:24.923598      21 warnings.go:70] unknown field "beta"
  W0904 20:25:24.923607      21 warnings.go:70] unknown field "delta"
  W0904 20:25:24.923616      21 warnings.go:70] unknown field "epsilon"
  W0904 20:25:24.923662      21 warnings.go:70] unknown field "gamma"
  I0904 20:25:25.520435 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1821" for this suite. @ 09/04/24 20:25:25.524
â€¢ [3.235 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/04/24 20:25:25.541
  I0904 20:25:25.541557 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename apf @ 09/04/24 20:25:25.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:25:25.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:25:25.595
  STEP: getting /apis @ 09/04/24 20:25:25.611
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/04/24 20:25:25.617
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/04/24 20:25:25.619
  STEP: creating @ 09/04/24 20:25:25.621
  STEP: getting @ 09/04/24 20:25:25.662
  STEP: listing @ 09/04/24 20:25:25.665
  STEP: watching @ 09/04/24 20:25:25.671
  I0904 20:25:25.671264 21 flowcontrol.go:620] starting watch
  STEP: patching @ 09/04/24 20:25:25.672
  E0904 20:25:25.679986      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating @ 09/04/24 20:25:25.686
  I0904 20:25:25.717157 21 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/04/24 20:25:25.717
  STEP: patching /status @ 09/04/24 20:25:25.722
  STEP: updating /status @ 09/04/24 20:25:25.736
  STEP: deleting @ 09/04/24 20:25:25.764
  STEP: deleting a collection @ 09/04/24 20:25:25.783
  I0904 20:25:25.822460 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4224" for this suite. @ 09/04/24 20:25:25.828
â€¢ [0.303 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/04/24 20:25:25.847
  I0904 20:25:25.848139 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename init-container @ 09/04/24 20:25:25.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:25:25.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:25:25.9
  STEP: creating the pod @ 09/04/24 20:25:25.905
  I0904 20:25:25.905594 21 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0904 20:25:26.681086      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:27.682030      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:28.682178      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:29.682311      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:30.682944      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:31.683329      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:32.684151      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:33.684272      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:34.684475      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:35.684810      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:36.684899      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:37.685293      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:38.685450      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:39.685664      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:40.685837      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:41.685954      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:42.686779      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:43.687106      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:44.687242      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:45.687531      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:46.688174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:47.688721      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:48.688997      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:49.689169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:50.689516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:51.689803      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:52.690180      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:53.690263      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:54.690543      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:55.690851      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:56.691081      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:57.692183      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:58.692347      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:25:59.692465      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:00.692707      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:01.693916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:02.694332      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:03.694640      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:04.695072      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:05.696214      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:06.696358      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:07.696845      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:08.696945      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:09.697461      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:10.697612      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:11.697720      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:12.698039      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:26:13.505651 21 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-e5a049cf-c752-4160-9987-ec2563a3dedf", GenerateName:"", Namespace:"init-container-5143", SelfLink:"", UID:"6c544668-bf13-45a3-8b61-392abfb274b3", ResourceVersion:"228811", Generation:0, CreationTimestamp:time.Date(2024, time.September, 4, 20, 25, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"905581611"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 25, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bc9ce0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 4, 20, 26, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003bc9d40), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-gllx4", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0007296e0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-gllx4", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-gllx4", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-gllx4", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0066ceb68), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-15-190.us-east-2.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004081780), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0066cebe0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0066cec00)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0066cec08), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0066cec0c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000fbd430), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 4, 20, 25, 27, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 4, 20, 25, 26, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 4, 20, 25, 26, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 4, 20, 25, 26, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 4, 20, 25, 26, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.15.190", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.15.190"}}, PodIP:"10.42.3.210", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.3.210"}}, StartTime:time.Date(2024, time.September, 4, 20, 25, 26, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000003c70)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000003ce0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://523ab890359ece2034966ee55f98ade6bc6cf29f602971e2dcc3852e18494d3e", Started:(*bool)(0xc0066cecba), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-gllx4", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000fbd460)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000729760), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0066ceccd), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-gllx4", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000fbd470)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000729740), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0066cec8f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-gllx4", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000fbd450)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0904 20:26:13.506071 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 20:26:13.698435      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "init-container-5143" for this suite. @ 09/04/24 20:26:13.713
â€¢ [47.881 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/04/24 20:26:13.728
  I0904 20:26:13.728899 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename var-expansion @ 09/04/24 20:26:13.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:26:13.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:26:13.778
  STEP: Creating a pod to test substitution in container's args @ 09/04/24 20:26:13.783
  E0904 20:26:14.698773      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:15.699063      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:16.700146      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:17.700629      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:26:18.634
  I0904 20:26:18.637302 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod var-expansion-cb01cefa-ec8e-416d-9949-fa09ccbc9ada container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 20:26:18.663
  E0904 20:26:18.701487      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:26:18.707960 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8754" for this suite. @ 09/04/24 20:26:18.813
â€¢ [5.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/04/24 20:26:18.827
  I0904 20:26:18.827763 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename deployment @ 09/04/24 20:26:18.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:26:18.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:26:18.881
  STEP: creating a Deployment @ 09/04/24 20:26:18.889
  STEP: waiting for Deployment to be created @ 09/04/24 20:26:18.911
  STEP: waiting for all Replicas to be Ready @ 09/04/24 20:26:18.917
  I0904 20:26:18.919152 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 20:26:18.919352 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 20:26:18.961812 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 20:26:18.961944 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 20:26:18.989064 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 20:26:18.989116 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0904 20:26:19.701602      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:26:20.416718 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 20:26:20.416942 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0904 20:26:20.702425      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:26:21.557368 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0904 20:26:21.557581 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0904 20:26:21.702970      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:26:22.059509 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/04/24 20:26:22.059
  I0904 20:26:22.082227 21 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/04/24 20:26:22.082
  I0904 20:26:22.085206 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0
  I0904 20:26:22.085247 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0
  I0904 20:26:22.085301 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0
  I0904 20:26:22.085318 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0
  I0904 20:26:22.085533 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0
  I0904 20:26:22.085558 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0
  I0904 20:26:22.085576 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0
  I0904 20:26:22.085719 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 0
  I0904 20:26:22.085985 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  I0904 20:26:22.086307 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  I0904 20:26:22.086516 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:22.086654 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:22.086739 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:22.086855 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:22.134514 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:22.134568 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:22.231863 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:22.232104 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:22.261180 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  I0904 20:26:22.261232 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  I0904 20:26:22.287683 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  I0904 20:26:22.287942 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  E0904 20:26:22.703478      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:26:23.284700 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:23.284829 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:23.367185 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  STEP: listing Deployments @ 09/04/24 20:26:23.367
  I0904 20:26:23.370672 21 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/04/24 20:26:23.37
  I0904 20:26:23.397907 21 deployment.go:360] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/04/24 20:26:23.397
  I0904 20:26:23.417464 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 20:26:23.444614 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 20:26:23.510490 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 20:26:23.569944 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 20:26:23.602455 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0904 20:26:23.703928      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:26:24.681671 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0904 20:26:24.704771      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:26:24.767824 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 20:26:24.792882 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 20:26:24.849058 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 20:26:24.868970 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0904 20:26:25.705554      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:26:26.131584 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/04/24 20:26:26.231
  STEP: fetching the DeploymentStatus @ 09/04/24 20:26:26.251
  I0904 20:26:26.272668 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  I0904 20:26:26.272760 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  I0904 20:26:26.272783 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  I0904 20:26:26.273096 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  I0904 20:26:26.273231 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 1
  I0904 20:26:26.273489 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:26.273580 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:26.273600 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:26.273936 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:26.274002 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 2
  I0904 20:26:26.274022 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-5221 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/04/24 20:26:26.274
  I0904 20:26:26.288114 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.288664 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.288996 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.289255 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.289561 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.289817 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.290117 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.290343 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.290673 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.291013 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.291360 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.291634 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.291912 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.292160 21 deployment.go:475] observed event type MODIFIED
  I0904 20:26:26.298703 21 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0904 20:26:26.316591 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5221" for this suite. @ 09/04/24 20:26:26.422
â€¢ [7.606 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 09/04/24 20:26:26.435
  I0904 20:26:26.435131 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:26:26.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:26:26.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:26:26.489
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:26:26.497
  E0904 20:26:26.705702      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:27.705755      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:28.705889      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:29.706057      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:30.706378      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:26:30.846
  I0904 20:26:30.850545 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-a4cd34cb-6f63-43ae-b09f-ad8ffe8baa24 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:26:30.857
  I0904 20:26:30.898074 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7448" for this suite. @ 09/04/24 20:26:30.902
â€¢ [4.480 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 09/04/24 20:26:30.916
  I0904 20:26:30.916532 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 20:26:30.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:26:31.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:26:31.122
  STEP: creating Agnhost RC @ 09/04/24 20:26:31.126
  I0904 20:26:31.126138 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8435 create -f -'
  I0904 20:26:31.290973 21 builder.go:146] stderr: ""
  I0904 20:26:31.291021 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/04/24 20:26:31.291
  E0904 20:26:31.706476      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:26:32.402439 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 20:26:32.402547 21 framework.go:733] Found 0 / 1
  E0904 20:26:32.706714      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:26:33.606966 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 20:26:33.607015 21 framework.go:733] Found 1 / 1
  I0904 20:26:33.607042 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/04/24 20:26:33.607
  I0904 20:26:33.627005 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 20:26:33.627070 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0904 20:26:33.627121 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8435 patch pod agnhost-primary-qrps2 -p {"metadata":{"annotations":{"x":"y"}}}'
  E0904 20:26:33.708754      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:26:33.741491 21 builder.go:146] stderr: ""
  I0904 20:26:33.741542 21 builder.go:147] stdout: "pod/agnhost-primary-qrps2 patched\n"
  STEP: checking annotations @ 09/04/24 20:26:33.741
  I0904 20:26:33.745052 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0904 20:26:33.745093 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0904 20:26:33.745204 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8435" for this suite. @ 09/04/24 20:26:33.749
â€¢ [2.844 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 09/04/24 20:26:33.76
  I0904 20:26:33.760676 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 20:26:33.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:26:33.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:26:33.856
  E0904 20:26:34.709409      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:35.709478      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:36.709614      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:37.709802      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:38.709985      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:39.710069      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:40.710314      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:41.711126      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:42.712199      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:43.712331      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:44.712734      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:45.712861      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:46.713500      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:47.714582      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:48.715579      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:49.715702      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:50.715833      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/04/24 20:26:50.864
  E0904 20:26:51.715963      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:52.716105      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:53.716222      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:54.716347      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:55.716482      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/24 20:26:55.868
  STEP: Ensuring resource quota status is calculated @ 09/04/24 20:26:55.887
  E0904 20:26:56.717216      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:57.717362      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 09/04/24 20:26:57.891
  STEP: Ensuring resource quota status captures configMap creation @ 09/04/24 20:26:57.927
  E0904 20:26:58.717488      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:26:59.717761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 09/04/24 20:26:59.932
  STEP: Ensuring resource quota status released usage @ 09/04/24 20:26:59.943
  E0904 20:27:00.718339      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:01.718760      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:27:01.947853 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7894" for this suite. @ 09/04/24 20:27:01.953
â€¢ [28.210 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 09/04/24 20:27:01.97
  I0904 20:27:01.970822 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 20:27:01.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:02.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:02.021
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1120 @ 09/04/24 20:27:02.024
  STEP: changing the ExternalName service to type=NodePort @ 09/04/24 20:27:02.057
  STEP: creating replication controller externalname-service in namespace services-1120 @ 09/04/24 20:27:02.126
  I0904 20:27:02.157588      21 runners.go:193] Created replication controller with name: externalname-service, namespace: services-1120, replica count: 2
  E0904 20:27:02.719179      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:03.720226      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:04.720360      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:27:05.208058      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 20:27:05.208116 21 resource.go:361] Creating new exec pod
  E0904 20:27:05.720429      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:06.720547      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:07.721558      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:27:08.235583 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-1120 exec execpodrdl8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0904 20:27:08.370535 21 builder.go:146] stderr: "+ + ncecho -v hostName\n -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0904 20:27:08.370598 21 builder.go:147] stdout: "externalname-service-mcsc5"
  I0904 20:27:08.370834 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-1120 exec execpodrdl8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.29.186 80'
  I0904 20:27:08.516017 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.29.186 80\nConnection to 10.43.29.186 80 port [tcp/http] succeeded!\n"
  I0904 20:27:08.516072 21 builder.go:147] stdout: ""
  E0904 20:27:08.722465      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:27:09.371073 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-1120 exec execpodrdl8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.29.186 80'
  I0904 20:27:09.508339 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.29.186 80\nConnection to 10.43.29.186 80 port [tcp/http] succeeded!\n"
  I0904 20:27:09.508749 21 builder.go:147] stdout: "externalname-service-mcsc5"
  I0904 20:27:09.508857 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-1120 exec execpodrdl8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.15 32259'
  I0904 20:27:09.671079 21 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.8.15 32259\n+ echo hostName\nConnection to 172.31.8.15 32259 port [tcp/*] succeeded!\n"
  I0904 20:27:09.671135 21 builder.go:147] stdout: "externalname-service-mcsc5"
  I0904 20:27:09.671228 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-1120 exec execpodrdl8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.231 32259'
  E0904 20:27:09.722590      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:27:09.801598 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.5.231 32259\nConnection to 172.31.5.231 32259 port [tcp/*] succeeded!\n"
  I0904 20:27:09.801664 21 builder.go:147] stdout: "externalname-service-mcsc5"
  I0904 20:27:09.801750 21 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0904 20:27:09.888512 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1120" for this suite. @ 09/04/24 20:27:09.896
â€¢ [7.938 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/04/24 20:27:09.909
  I0904 20:27:09.909596 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename podtemplate @ 09/04/24 20:27:09.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:10.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:10.069
  I0904 20:27:10.233052 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3961" for this suite. @ 09/04/24 20:27:10.237
â€¢ [0.343 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 09/04/24 20:27:10.253
  I0904 20:27:10.253103 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:27:10.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:10.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:10.383
  STEP: Creating a pod to test downward api env vars @ 09/04/24 20:27:10.386
  E0904 20:27:10.722856      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:11.723673      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:12.724163      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:13.724277      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:14.724578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:27:15.232
  I0904 20:27:15.235929 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod downward-api-6b6af6e1-9ab2-492c-a255-4fe9d2550202 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 20:27:15.247
  I0904 20:27:15.277234 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6944" for this suite. @ 09/04/24 20:27:15.484
â€¢ [5.251 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 09/04/24 20:27:15.505
  I0904 20:27:15.505441 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:27:15.506
  E0904 20:27:15.725165      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:15.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:15.795
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:27:15.799
  E0904 20:27:16.725366      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:17.725861      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:18.725987      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:19.726244      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:27:19.843
  I0904 20:27:19.846652 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod downwardapi-volume-eb393adc-c204-4d01-ae76-913db4f7e156 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:27:19.852
  I0904 20:27:19.880923 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9210" for this suite. @ 09/04/24 20:27:19.886
â€¢ [4.396 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/04/24 20:27:19.901
  I0904 20:27:19.901968 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename endpointslice @ 09/04/24 20:27:19.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:19.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:19.942
  E0904 20:27:20.726604      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:21.726736      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/04/24 20:27:22.441
  STEP: referencing matching pods with named port @ 09/04/24 20:27:22.555
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/04/24 20:27:22.565
  STEP: recreating EndpointSlices after they've been deleted @ 09/04/24 20:27:22.573
  I0904 20:27:22.613476 21 endpointslice.go:938] EndpointSlice for Service endpointslice-6789/example-named-port not found
  E0904 20:27:22.727821      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:23.727990      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:27:24.619627 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6789" for this suite. @ 09/04/24 20:27:24.627
â€¢ [4.744 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/04/24 20:27:24.646
  I0904 20:27:24.646882 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:27:24.647
  E0904 20:27:24.728407      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:24.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:24.786
  STEP: Creating projection with secret that has name projected-secret-test-map-0b4c93d2-bda0-461c-81df-90c0136ed3de @ 09/04/24 20:27:24.789
  STEP: Creating a pod to test consume secrets @ 09/04/24 20:27:24.81
  E0904 20:27:25.728529      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:26.728648      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:27.729343      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:28.729488      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:27:28.855
  I0904 20:27:28.859461 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-secrets-dee08350-d1cc-4ed3-ae09-885c7abdf299 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 20:27:28.866
  I0904 20:27:28.911327 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-724" for this suite. @ 09/04/24 20:27:28.92
â€¢ [4.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 09/04/24 20:27:28.942
  I0904 20:27:28.942614 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 20:27:28.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:28.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:28.992
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/04/24 20:27:28.995
  E0904 20:27:29.730426      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:30.730731      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:31.731542      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:32.732366      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:27:33.668
  I0904 20:27:33.673577 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-db1183c8-4c26-42a2-aa0c-5070bc76eeee container test-container: <nil>
  STEP: delete the pod @ 09/04/24 20:27:33.68
  I0904 20:27:33.721191 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6136" for this suite. @ 09/04/24 20:27:33.728
  E0904 20:27:33.733104      21 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [4.799 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/04/24 20:27:33.742
  I0904 20:27:33.742774 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pods @ 09/04/24 20:27:33.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:33.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:33.797
  E0904 20:27:34.733501      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:35.733879      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:36.734018      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:37.734163      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:38.734275      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:39.734427      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:27:40.056
  I0904 20:27:40.060348 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod client-envvars-965b7491-fee8-4ca3-a7d1-25d59307e9a5 container env3cont: <nil>
  STEP: delete the pod @ 09/04/24 20:27:40.068
  I0904 20:27:40.107094 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-838" for this suite. @ 09/04/24 20:27:40.212
â€¢ [6.481 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/04/24 20:27:40.223
  I0904 20:27:40.223799 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:27:40.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:40.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:40.271
  STEP: Setting up server cert @ 09/04/24 20:27:40.471
  E0904 20:27:40.734586      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:27:40.833
  STEP: Deploying the webhook pod @ 09/04/24 20:27:40.852
  STEP: Wait for the deployment to be ready @ 09/04/24 20:27:40.881
  I0904 20:27:40.906122 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:27:41.734732      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:42.735078      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:27:43.322
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:27:43.362
  E0904 20:27:43.735370      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:27:44.363123 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0904 20:27:44.385977 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:27:44.736407      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/04/24 20:27:44.911
  STEP: Creating a custom resource that should be denied by the webhook @ 09/04/24 20:27:44.941
  E0904 20:27:45.737105      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:46.737516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/04/24 20:27:46.959
  STEP: Updating the custom resource with disallowed data should be denied @ 09/04/24 20:27:46.971
  STEP: Deleting the custom resource should be denied @ 09/04/24 20:27:46.981
  STEP: Remove the offending key and value from the custom resource data @ 09/04/24 20:27:46.991
  STEP: Deleting the updated custom resource should be successful @ 09/04/24 20:27:47.007
  E0904 20:27:47.738127      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:27:47.805305 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1333" for this suite. @ 09/04/24 20:27:47.809
  STEP: Destroying namespace "webhook-markers-2191" for this suite. @ 09/04/24 20:27:47.82
â€¢ [7.610 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/04/24 20:27:47.834
  I0904 20:27:47.834514 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/04/24 20:27:47.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:48.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:48.277
  STEP: creating @ 09/04/24 20:27:48.28
  STEP: getting @ 09/04/24 20:27:48.63
  STEP: listing in namespace @ 09/04/24 20:27:48.638
  STEP: patching @ 09/04/24 20:27:48.659
  STEP: deleting @ 09/04/24 20:27:48.676
  I0904 20:27:48.715160 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5563" for this suite. @ 09/04/24 20:27:48.723
â€¢ [0.900 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 09/04/24 20:27:48.735
  I0904 20:27:48.736017 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/24 20:27:48.736
  E0904 20:27:48.738282      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:48.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:48.772
  STEP: creating a ServiceAccount @ 09/04/24 20:27:48.775
  STEP: watching for the ServiceAccount to be added @ 09/04/24 20:27:48.823
  STEP: patching the ServiceAccount @ 09/04/24 20:27:48.824
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/04/24 20:27:48.836
  STEP: deleting the ServiceAccount @ 09/04/24 20:27:48.839
  I0904 20:27:48.869626 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8698" for this suite. @ 09/04/24 20:27:48.873
â€¢ [0.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 09/04/24 20:27:48.886
  I0904 20:27:48.886597 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 20:27:48.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:48.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:48.935
  STEP: Creating a ResourceQuota @ 09/04/24 20:27:48.94
  STEP: Getting a ResourceQuota @ 09/04/24 20:27:48.951
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/04/24 20:27:48.963
  STEP: Patching the ResourceQuota @ 09/04/24 20:27:48.966
  STEP: Deleting a Collection of ResourceQuotas @ 09/04/24 20:27:48.987
  STEP: Verifying the deleted ResourceQuota @ 09/04/24 20:27:49.006
  I0904 20:27:49.009308 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5957" for this suite. @ 09/04/24 20:27:49.013
â€¢ [0.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 09/04/24 20:27:49.035
  I0904 20:27:49.035215 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:27:49.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:49.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:49.075
  STEP: Creating the pod @ 09/04/24 20:27:49.078
  E0904 20:27:49.739424      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:50.739828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:27:51.738116 21 pod_client.go:173] Successfully updated pod "annotationupdate74af1250-3f73-4f65-a790-cc4376794b18"
  E0904 20:27:51.740210      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:52.740606      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:53.740716      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:27:53.757466 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7977" for this suite. @ 09/04/24 20:27:53.762
â€¢ [4.739 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 09/04/24 20:27:53.775
  I0904 20:27:53.775277 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 20:27:53.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:27:54.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:27:54.019
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/24 20:27:54.023
  I0904 20:27:54.023762 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8503 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0904 20:27:54.542049 21 builder.go:146] stderr: ""
  I0904 20:27:54.542098 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/04/24 20:27:54.542
  E0904 20:27:54.741181      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:55.741280      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:56.741420      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:57.741546      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:27:58.741623      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/04/24 20:27:59.593
  I0904 20:27:59.593822 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8503 get pod e2e-test-httpd-pod -o json'
  I0904 20:27:59.671776 21 builder.go:146] stderr: ""
  I0904 20:27:59.671942 21 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-09-04T20:27:54Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8503\",\n        \"resourceVersion\": \"229927\",\n        \"uid\": \"120f5979-eddd-45c6-8a73-32ae17086a06\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-czpn4\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-15-190.us-east-2.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-czpn4\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-04T20:27:55Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-04T20:27:54Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-04T20:27:55Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-04T20:27:55Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-04T20:27:54Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://2326f8d4d9691540292c79d6d6c173d84f3701d1539dad879804c37d5be326b4\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-09-04T20:27:55Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-czpn4\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.15.190\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.15.190\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.3.223\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.3.223\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-09-04T20:27:54Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/04/24 20:27:59.671
  I0904 20:27:59.672062 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8503 replace -f -'
  E0904 20:27:59.741934      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:27:59.847104 21 builder.go:146] stderr: ""
  I0904 20:27:59.847172 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/04/24 20:27:59.847
  I0904 20:27:59.858996 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8503 delete pods e2e-test-httpd-pod'
  E0904 20:28:00.742945      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:01.743211      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:28:01.864432 21 builder.go:146] stderr: ""
  I0904 20:28:01.864477 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0904 20:28:01.864625 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8503" for this suite. @ 09/04/24 20:28:01.892
â€¢ [8.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/04/24 20:28:01.913
  I0904 20:28:01.913112 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pods @ 09/04/24 20:28:01.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:02.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:02.05
  STEP: creating pod @ 09/04/24 20:28:02.053
  E0904 20:28:02.744171      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:03.744452      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:28:04.106927 21 pods.go:83] Pod pod-hostip-bfca2e62-3480-4b94-bc7e-22252c803436 has hostIP: 172.31.15.190
  I0904 20:28:04.107077 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8389" for this suite. @ 09/04/24 20:28:04.111
â€¢ [2.210 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 09/04/24 20:28:04.123
  I0904 20:28:04.123051 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 20:28:04.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:04.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:04.166
  STEP: create deployment with httpd image @ 09/04/24 20:28:04.171
  I0904 20:28:04.171288 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-794 create -f -'
  I0904 20:28:04.514484 21 builder.go:146] stderr: ""
  I0904 20:28:04.514544 21 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/04/24 20:28:04.514
  I0904 20:28:04.514999 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-794 diff -f -'
  I0904 20:28:04.680673 21 builder.go:135] rc: 1
  I0904 20:28:04.680774 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-794 delete -f -'
  E0904 20:28:04.745368      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:28:04.830890 21 builder.go:146] stderr: ""
  I0904 20:28:04.830967 21 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0904 20:28:04.831088 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-794" for this suite. @ 09/04/24 20:28:04.839
â€¢ [0.735 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/04/24 20:28:04.858
  I0904 20:28:04.858693 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/24 20:28:04.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:04.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:04.928
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/24 20:28:04.939
  E0904 20:28:05.745421      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:06.745483      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/04/24 20:28:07.083
  E0904 20:28:07.745927      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:08.746049      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/04/24 20:28:09.119
  STEP: delete the pod with lifecycle hook @ 09/04/24 20:28:09.135
  E0904 20:28:09.746813      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:10.747321      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:28:11.162783 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4880" for this suite. @ 09/04/24 20:28:11.178
â€¢ [6.341 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 09/04/24 20:28:11.199
  I0904 20:28:11.199835 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:28:11.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:11.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:11.352
  STEP: Creating configMap with name projected-configmap-test-volume-3601f323-470d-489f-b546-a64a88e1a9ed @ 09/04/24 20:28:11.377
  STEP: Creating a pod to test consume configMaps @ 09/04/24 20:28:11.4
  E0904 20:28:11.747605      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:12.748042      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:13.748191      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:14.748470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:28:15.669
  I0904 20:28:15.673336 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-configmaps-50d17e4a-7004-4505-9013-5a1e615e0eea container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 20:28:15.682
  I0904 20:28:15.727174 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4753" for this suite. @ 09/04/24 20:28:15.731
â€¢ [4.547 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  E0904 20:28:15.748441      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a kubernetes client @ 09/04/24 20:28:15.748
  I0904 20:28:15.748623 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:28:15.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:15.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:15.8
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:28:15.804
  E0904 20:28:16.748962      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:17.749093      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:18.750019      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:19.750765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:28:20.143
  I0904 20:28:20.147464 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-358325c5-b8b0-45c5-9121-d9337973e3bf container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:28:20.156
  I0904 20:28:20.193828 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4916" for this suite. @ 09/04/24 20:28:20.306
â€¢ [4.571 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/04/24 20:28:20.319
  I0904 20:28:20.319909 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename events @ 09/04/24 20:28:20.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:20.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:20.414
  STEP: creating a test event @ 09/04/24 20:28:20.417
  STEP: listing events in all namespaces @ 09/04/24 20:28:20.434
  STEP: listing events in test namespace @ 09/04/24 20:28:20.44
  STEP: listing events with field selection filtering on source @ 09/04/24 20:28:20.443
  STEP: listing events with field selection filtering on reportingController @ 09/04/24 20:28:20.446
  STEP: getting the test event @ 09/04/24 20:28:20.45
  STEP: patching the test event @ 09/04/24 20:28:20.454
  STEP: getting the test event @ 09/04/24 20:28:20.478
  STEP: updating the test event @ 09/04/24 20:28:20.483
  STEP: getting the test event @ 09/04/24 20:28:20.5
  STEP: deleting the test event @ 09/04/24 20:28:20.508
  STEP: listing events in all namespaces @ 09/04/24 20:28:20.526
  STEP: listing events in test namespace @ 09/04/24 20:28:20.53
  I0904 20:28:20.532963 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4939" for this suite. @ 09/04/24 20:28:20.539
â€¢ [0.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/04/24 20:28:20.553
  I0904 20:28:20.553534 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:28:20.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:20.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:20.617
  STEP: Creating a pod to test downward api env vars @ 09/04/24 20:28:20.62
  E0904 20:28:20.750897      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:21.751783      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:22.751958      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:23.752572      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:24.752711      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:28:25.308
  I0904 20:28:25.313989 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downward-api-f37155cb-983a-494b-af56-290f15929b17 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/24 20:28:25.327
  I0904 20:28:25.376441 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9199" for this suite. @ 09/04/24 20:28:25.383
â€¢ [4.877 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/04/24 20:28:25.431
  I0904 20:28:25.431374 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/24 20:28:25.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:25.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:25.48
  I0904 20:28:25.497899 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9130" for this suite. @ 09/04/24 20:28:25.704
â€¢ [0.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 09/04/24 20:28:25.716
  I0904 20:28:25.716932 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 20:28:25.717
  E0904 20:28:25.752745      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:25.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:25.809
  STEP: Creating a ResourceQuota @ 09/04/24 20:28:25.812
  STEP: Getting a ResourceQuota @ 09/04/24 20:28:25.825
  STEP: Updating a ResourceQuota @ 09/04/24 20:28:25.832
  STEP: Verifying a ResourceQuota was modified @ 09/04/24 20:28:25.855
  STEP: Deleting a ResourceQuota @ 09/04/24 20:28:25.86
  STEP: Verifying the deleted ResourceQuota @ 09/04/24 20:28:25.889
  I0904 20:28:25.897052 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2282" for this suite. @ 09/04/24 20:28:25.901
â€¢ [0.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/04/24 20:28:25.924
  I0904 20:28:25.924048 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename disruption @ 09/04/24 20:28:25.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:25.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:25.984
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/04/24 20:28:25.99
  STEP: Waiting for the pdb to be processed @ 09/04/24 20:28:26.01
  E0904 20:28:26.753126      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:27.753266      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/04/24 20:28:28.024
  STEP: Waiting for all pods to be running @ 09/04/24 20:28:28.024
  I0904 20:28:28.054887 21 disruption.go:680] pods: 1 < 3
  E0904 20:28:28.753377      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:29.753886      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/04/24 20:28:30.633
  STEP: Updating the pdb to allow a pod to be evicted @ 09/04/24 20:28:30.644
  STEP: Waiting for the pdb to be processed @ 09/04/24 20:28:30.658
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/04/24 20:28:30.67
  STEP: Waiting for all pods to be running @ 09/04/24 20:28:30.67
  E0904 20:28:30.753890      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to observed all healthy pods @ 09/04/24 20:28:30.834
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/04/24 20:28:30.902
  STEP: Waiting for the pdb to be processed @ 09/04/24 20:28:30.987
  E0904 20:28:31.754146      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:32.754306      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/04/24 20:28:32.997
  STEP: locating a running pod @ 09/04/24 20:28:33.211
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/04/24 20:28:33.229
  STEP: Waiting for the pdb to be deleted @ 09/04/24 20:28:33.24
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/04/24 20:28:33.243
  STEP: Waiting for all pods to be running @ 09/04/24 20:28:33.243
  I0904 20:28:33.544575 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8187" for this suite. @ 09/04/24 20:28:33.575
â€¢ [7.703 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/04/24 20:28:33.627
  I0904 20:28:33.627771 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename init-container @ 09/04/24 20:28:33.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:33.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:33.682
  STEP: creating the pod @ 09/04/24 20:28:33.686
  I0904 20:28:33.686208 21 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0904 20:28:33.754699      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:34.755264      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:35.755962      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:36.756074      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:28:37.099735 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2922" for this suite. @ 09/04/24 20:28:37.104
â€¢ [3.490 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/04/24 20:28:37.117
  I0904 20:28:37.117972 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sched-pred @ 09/04/24 20:28:37.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:37.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:37.162
  I0904 20:28:37.167001 21 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0904 20:28:37.209044 21 util.go:393] Waiting for terminating namespaces to be deleted...
  I0904 20:28:37.314937 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-11-100.us-east-2.compute.internal before test
  I0904 20:28:37.521921 21 predicates.go:957] coredns-5dd589bf46-5s5rv from kube-system started at 2024-09-04 03:31:12 +0000 UTC (1 container statuses recorded)
  I0904 20:28:37.522123 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0904 20:28:37.522236 21 predicates.go:957] helm-install-traefik-crd-b7qfb from kube-system started at 2024-09-04 03:31:13 +0000 UTC (1 container statuses recorded)
  I0904 20:28:37.522369 21 predicates.go:959] 	Container helm ready: false, restart count 0
  I0904 20:28:37.522522 21 predicates.go:957] helm-install-traefik-jps75 from kube-system started at 2024-09-04 03:31:13 +0000 UTC (1 container statuses recorded)
  I0904 20:28:37.522648 21 predicates.go:959] 	Container helm ready: false, restart count 1
  I0904 20:28:37.522748 21 predicates.go:957] local-path-provisioner-846b9dcb6c-qlwlf from kube-system started at 2024-09-04 03:31:12 +0000 UTC (1 container statuses recorded)
  I0904 20:28:37.522765 21 predicates.go:959] 	Container local-path-provisioner ready: true, restart count 0
  I0904 20:28:37.522780 21 predicates.go:957] metrics-server-5dc58b587c-blxn9 from kube-system started at 2024-09-04 03:31:12 +0000 UTC (1 container statuses recorded)
  I0904 20:28:37.522835 21 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0904 20:28:37.522883 21 predicates.go:957] svclb-traefik-b676ce4a-bthjx from kube-system started at 2024-09-04 03:31:27 +0000 UTC (2 container statuses recorded)
  I0904 20:28:37.523010 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:28:37.523098 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:28:37.523204 21 predicates.go:957] traefik-7f4b44bf74-jvxjf from kube-system started at 2024-09-04 03:31:27 +0000 UTC (1 container statuses recorded)
  I0904 20:28:37.523313 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0904 20:28:37.523419 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-lldsg from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:28:37.523523 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:28:37.523623 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 20:28:37.523712 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-15-190.us-east-2.compute.internal before test
  I0904 20:28:37.527756 21 predicates.go:957] rs-2nk5m from disruption-8187 started at 2024-09-04 20:28:33 +0000 UTC (1 container statuses recorded)
  I0904 20:28:37.527912 21 predicates.go:959] 	Container donothing ready: false, restart count 0
  I0904 20:28:37.528061 21 predicates.go:957] pod-init-41274c53-4cd0-45da-8df0-b8b73e1afcdf from init-container-2922 started at 2024-09-04 20:28:33 +0000 UTC (1 container statuses recorded)
  I0904 20:28:37.528200 21 predicates.go:959] 	Container run1 ready: false, restart count 0
  I0904 20:28:37.528334 21 predicates.go:957] svclb-traefik-b676ce4a-gv84c from kube-system started at 2024-09-04 20:10:33 +0000 UTC (2 container statuses recorded)
  I0904 20:28:37.528464 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:28:37.528604 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:28:37.528741 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-hp2kg from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:28:37.528878 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:28:37.529026 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 20:28:37.529165 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-5-231.us-east-2.compute.internal before test
  I0904 20:28:37.533041 21 predicates.go:957] rs-zw97h from disruption-8187 started at 2024-09-04 20:28:28 +0000 UTC (1 container statuses recorded)
  I0904 20:28:37.533237 21 predicates.go:959] 	Container donothing ready: true, restart count 0
  I0904 20:28:37.533351 21 predicates.go:957] svclb-traefik-b676ce4a-hhvc9 from kube-system started at 2024-09-04 03:34:46 +0000 UTC (2 container statuses recorded)
  I0904 20:28:37.533490 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:28:37.533597 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:28:37.533618 21 predicates.go:957] sonobuoy from sonobuoy started at 2024-09-04 19:17:22 +0000 UTC (1 container statuses recorded)
  I0904 20:28:37.533703 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0904 20:28:37.533725 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-jhfrj from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:28:37.533738 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:28:37.533749 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0904 20:28:37.533763 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-15.us-east-2.compute.internal before test
  I0904 20:28:37.537030 21 predicates.go:957] rs-zkvp2 from disruption-8187 started at 2024-09-04 20:28:30 +0000 UTC (1 container statuses recorded)
  I0904 20:28:37.537067 21 predicates.go:959] 	Container donothing ready: true, restart count 0
  I0904 20:28:37.537086 21 predicates.go:957] svclb-traefik-b676ce4a-w8mwb from kube-system started at 2024-09-04 03:34:28 +0000 UTC (2 container statuses recorded)
  I0904 20:28:37.537098 21 predicates.go:959] 	Container lb-tcp-443 ready: true, restart count 0
  I0904 20:28:37.537110 21 predicates.go:959] 	Container lb-tcp-80 ready: true, restart count 0
  I0904 20:28:37.537124 21 predicates.go:957] sonobuoy-e2e-job-ae616c3caee949dd from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:28:37.537136 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0904 20:28:37.537147 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:28:37.537161 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-xn4qz from sonobuoy started at 2024-09-04 19:17:27 +0000 UTC (2 container statuses recorded)
  I0904 20:28:37.537174 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 20:28:37.537185 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-11-100.us-east-2.compute.internal @ 09/04/24 20:28:37.562
  STEP: verifying the node has the label node ip-172-31-15-190.us-east-2.compute.internal @ 09/04/24 20:28:37.615
  STEP: verifying the node has the label node ip-172-31-5-231.us-east-2.compute.internal @ 09/04/24 20:28:37.653
  STEP: verifying the node has the label node ip-172-31-8-15.us-east-2.compute.internal @ 09/04/24 20:28:37.679
  E0904 20:28:37.757083      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:28:38.198008 21 predicates.go:372] Pod rs-2nk5m requesting resource cpu=0m on Node ip-172-31-15-190.us-east-2.compute.internal
  I0904 20:28:38.198218 21 predicates.go:372] Pod rs-zkvp2 requesting resource cpu=0m on Node ip-172-31-8-15.us-east-2.compute.internal
  I0904 20:28:38.198310 21 predicates.go:372] Pod rs-zw97h requesting resource cpu=0m on Node ip-172-31-5-231.us-east-2.compute.internal
  I0904 20:28:38.198423 21 predicates.go:372] Pod coredns-5dd589bf46-5s5rv requesting resource cpu=100m on Node ip-172-31-11-100.us-east-2.compute.internal
  I0904 20:28:38.198532 21 predicates.go:372] Pod local-path-provisioner-846b9dcb6c-qlwlf requesting resource cpu=0m on Node ip-172-31-11-100.us-east-2.compute.internal
  I0904 20:28:38.198627 21 predicates.go:372] Pod metrics-server-5dc58b587c-blxn9 requesting resource cpu=100m on Node ip-172-31-11-100.us-east-2.compute.internal
  I0904 20:28:38.198720 21 predicates.go:372] Pod svclb-traefik-b676ce4a-bthjx requesting resource cpu=0m on Node ip-172-31-11-100.us-east-2.compute.internal
  I0904 20:28:38.198821 21 predicates.go:372] Pod svclb-traefik-b676ce4a-gv84c requesting resource cpu=0m on Node ip-172-31-15-190.us-east-2.compute.internal
  I0904 20:28:38.198945 21 predicates.go:372] Pod svclb-traefik-b676ce4a-hhvc9 requesting resource cpu=0m on Node ip-172-31-5-231.us-east-2.compute.internal
  I0904 20:28:38.199044 21 predicates.go:372] Pod svclb-traefik-b676ce4a-w8mwb requesting resource cpu=0m on Node ip-172-31-8-15.us-east-2.compute.internal
  I0904 20:28:38.199136 21 predicates.go:372] Pod traefik-7f4b44bf74-jvxjf requesting resource cpu=0m on Node ip-172-31-11-100.us-east-2.compute.internal
  I0904 20:28:38.199231 21 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-5-231.us-east-2.compute.internal
  I0904 20:28:38.199325 21 predicates.go:372] Pod sonobuoy-e2e-job-ae616c3caee949dd requesting resource cpu=0m on Node ip-172-31-8-15.us-east-2.compute.internal
  I0904 20:28:38.199419 21 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-hp2kg requesting resource cpu=0m on Node ip-172-31-15-190.us-east-2.compute.internal
  I0904 20:28:38.199510 21 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-jhfrj requesting resource cpu=0m on Node ip-172-31-5-231.us-east-2.compute.internal
  I0904 20:28:38.199605 21 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-lldsg requesting resource cpu=0m on Node ip-172-31-11-100.us-east-2.compute.internal
  I0904 20:28:38.199701 21 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-f7bbda21d65f4ea0-xn4qz requesting resource cpu=0m on Node ip-172-31-8-15.us-east-2.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/04/24 20:28:38.199
  I0904 20:28:38.199883 21 predicates.go:382] Creating a pod which consumes cpu=1260m on Node ip-172-31-11-100.us-east-2.compute.internal
  I0904 20:28:38.420296 21 predicates.go:382] Creating a pod which consumes cpu=1400m on Node ip-172-31-15-190.us-east-2.compute.internal
  I0904 20:28:38.451124 21 predicates.go:382] Creating a pod which consumes cpu=1400m on Node ip-172-31-5-231.us-east-2.compute.internal
  I0904 20:28:38.481979 21 predicates.go:382] Creating a pod which consumes cpu=1400m on Node ip-172-31-8-15.us-east-2.compute.internal
  E0904 20:28:38.757539      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:39.757664      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/04/24 20:28:40.631
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3fc21992-25c7-44f5-8845-b5cdd24efb9d.17f2247b21678f2a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7224/filler-pod-3fc21992-25c7-44f5-8845-b5cdd24efb9d to ip-172-31-5-231.us-east-2.compute.internal] @ 09/04/24 20:28:40.636
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3fc21992-25c7-44f5-8845-b5cdd24efb9d.17f2247b43faaf19], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/04/24 20:28:40.636
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3fc21992-25c7-44f5-8845-b5cdd24efb9d.17f2247b476b33f3], Reason = [Created], Message = [Created container filler-pod-3fc21992-25c7-44f5-8845-b5cdd24efb9d] @ 09/04/24 20:28:40.636
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3fc21992-25c7-44f5-8845-b5cdd24efb9d.17f2247b4e95cb3e], Reason = [Started], Message = [Started container filler-pod-3fc21992-25c7-44f5-8845-b5cdd24efb9d] @ 09/04/24 20:28:40.636
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-95f3b5b8-4a59-448e-bbd9-02f644be021a.17f2247b1ea3a399], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7224/filler-pod-95f3b5b8-4a59-448e-bbd9-02f644be021a to ip-172-31-15-190.us-east-2.compute.internal] @ 09/04/24 20:28:40.636
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-95f3b5b8-4a59-448e-bbd9-02f644be021a.17f2247b4332c9c6], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/04/24 20:28:40.636
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-95f3b5b8-4a59-448e-bbd9-02f644be021a.17f2247b4807d100], Reason = [Created], Message = [Created container filler-pod-95f3b5b8-4a59-448e-bbd9-02f644be021a] @ 09/04/24 20:28:40.636
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-95f3b5b8-4a59-448e-bbd9-02f644be021a.17f2247b4e658f27], Reason = [Started], Message = [Started container filler-pod-95f3b5b8-4a59-448e-bbd9-02f644be021a] @ 09/04/24 20:28:40.636
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d35466a2-42d1-4ef0-a5f1-b06f281a1acc.17f2247b24181857], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7224/filler-pod-d35466a2-42d1-4ef0-a5f1-b06f281a1acc to ip-172-31-8-15.us-east-2.compute.internal] @ 09/04/24 20:28:40.636
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d35466a2-42d1-4ef0-a5f1-b06f281a1acc.17f2247b47f2a3e0], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/04/24 20:28:40.637
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d35466a2-42d1-4ef0-a5f1-b06f281a1acc.17f2247b4cb4c1a0], Reason = [Created], Message = [Created container filler-pod-d35466a2-42d1-4ef0-a5f1-b06f281a1acc] @ 09/04/24 20:28:40.637
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d35466a2-42d1-4ef0-a5f1-b06f281a1acc.17f2247b5369ec59], Reason = [Started], Message = [Started container filler-pod-d35466a2-42d1-4ef0-a5f1-b06f281a1acc] @ 09/04/24 20:28:40.637
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ec5d790e-d4a9-4666-9930-7ad744599623.17f2247b1d28ef19], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7224/filler-pod-ec5d790e-d4a9-4666-9930-7ad744599623 to ip-172-31-11-100.us-east-2.compute.internal] @ 09/04/24 20:28:40.637
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ec5d790e-d4a9-4666-9930-7ad744599623.17f2247b46d3ac3f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/04/24 20:28:40.637
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ec5d790e-d4a9-4666-9930-7ad744599623.17f2247b4bad2478], Reason = [Created], Message = [Created container filler-pod-ec5d790e-d4a9-4666-9930-7ad744599623] @ 09/04/24 20:28:40.637
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ec5d790e-d4a9-4666-9930-7ad744599623.17f2247b549961cd], Reason = [Started], Message = [Started container filler-pod-ec5d790e-d4a9-4666-9930-7ad744599623] @ 09/04/24 20:28:40.637
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17f2247ba232eff5], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod.] @ 09/04/24 20:28:40.683
  E0904 20:28:40.758116      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:41.758271      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-8-15.us-east-2.compute.internal @ 09/04/24 20:28:41.977
  STEP: verifying the node doesn't have the label node @ 09/04/24 20:28:42.011
  STEP: removing the label node off the node ip-172-31-11-100.us-east-2.compute.internal @ 09/04/24 20:28:42.04
  STEP: verifying the node doesn't have the label node @ 09/04/24 20:28:42.068
  STEP: removing the label node off the node ip-172-31-15-190.us-east-2.compute.internal @ 09/04/24 20:28:42.082
  STEP: verifying the node doesn't have the label node @ 09/04/24 20:28:42.12
  STEP: removing the label node off the node ip-172-31-5-231.us-east-2.compute.internal @ 09/04/24 20:28:42.131
  STEP: verifying the node doesn't have the label node @ 09/04/24 20:28:42.176
  I0904 20:28:42.185068 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7224" for this suite. @ 09/04/24 20:28:42.298
â€¢ [5.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 09/04/24 20:28:42.31
  I0904 20:28:42.310818 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:28:42.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:42.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:42.354
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:28:42.358
  E0904 20:28:42.758582      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:43.758668      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:44.758749      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:45.759828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:46.760196      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:28:46.991
  I0904 20:28:46.995032 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-430c890c-03a4-4f2d-ab52-a74117e6aedc container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:28:47.001
  I0904 20:28:47.052291 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3071" for this suite. @ 09/04/24 20:28:47.064
â€¢ [4.769 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/04/24 20:28:47.081
  I0904 20:28:47.081576 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/24 20:28:47.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:28:47.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:28:47.126
  STEP: Performing setup for networking test in namespace pod-network-test-1629 @ 09/04/24 20:28:47.129
  STEP: creating a selector @ 09/04/24 20:28:47.129
  STEP: Creating the service pods in kubernetes @ 09/04/24 20:28:47.13
  I0904 20:28:47.130178 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0904 20:28:47.761285      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:48.761447      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:49.761948      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:50.762199      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:51.763379      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:52.764182      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:53.764746      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:54.765087      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:55.765447      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:56.765876      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:57.766362      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:58.766499      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:28:59.766608      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:00.766732      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:01.766877      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:02.767094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:03.767995      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:04.768095      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:05.768865      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:06.769030      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:07.769768      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:08.769899      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/04/24 20:29:09.704
  E0904 20:29:09.770883      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:10.771095      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:11.746966 21 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0904 20:29:11.747023 21 networking.go:42] Breadth first check of 10.42.0.72 on host 172.31.11.100...
  I0904 20:29:11.750208 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.233:9080/dial?request=hostname&protocol=udp&host=10.42.0.72&port=8081&tries=1'] Namespace:pod-network-test-1629 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:29:11.750262 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:29:11.750979 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:29:11.751065 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1629/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.233%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.72%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0904 20:29:11.771372      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:11.826445 21 utils.go:356] Waiting for responses: map[]
  I0904 20:29:11.826692 21 utils.go:360] reached 10.42.0.72 after 0/1 tries
  I0904 20:29:11.826815 21 networking.go:42] Breadth first check of 10.42.3.232 on host 172.31.15.190...
  I0904 20:29:11.830738 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.233:9080/dial?request=hostname&protocol=udp&host=10.42.3.232&port=8081&tries=1'] Namespace:pod-network-test-1629 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:29:11.830781 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:29:11.831606 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:29:11.831704 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1629/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.233%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.3.232%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0904 20:29:11.904044 21 utils.go:356] Waiting for responses: map[]
  I0904 20:29:11.904146 21 utils.go:360] reached 10.42.3.232 after 0/1 tries
  I0904 20:29:11.904167 21 networking.go:42] Breadth first check of 10.42.2.128 on host 172.31.5.231...
  I0904 20:29:11.908791 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.233:9080/dial?request=hostname&protocol=udp&host=10.42.2.128&port=8081&tries=1'] Namespace:pod-network-test-1629 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:29:11.908874 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:29:11.909871 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:29:11.909960 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1629/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.233%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.128%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0904 20:29:11.975656 21 utils.go:356] Waiting for responses: map[]
  I0904 20:29:11.975741 21 utils.go:360] reached 10.42.2.128 after 0/1 tries
  I0904 20:29:11.975916 21 networking.go:42] Breadth first check of 10.42.1.90 on host 172.31.8.15...
  I0904 20:29:11.980599 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.233:9080/dial?request=hostname&protocol=udp&host=10.42.1.90&port=8081&tries=1'] Namespace:pod-network-test-1629 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:29:11.980649 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:29:11.981356 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:29:11.981446 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1629/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.233%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.90%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0904 20:29:12.046148 21 utils.go:356] Waiting for responses: map[]
  I0904 20:29:12.046203 21 utils.go:360] reached 10.42.1.90 after 0/1 tries
  I0904 20:29:12.046223 21 networking.go:53] Going to retry 0 out of 4 pods....
  I0904 20:29:12.046542 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1629" for this suite. @ 09/04/24 20:29:12.052
â€¢ [24.994 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/04/24 20:29:12.077
  I0904 20:29:12.077532 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename hostport @ 09/04/24 20:29:12.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:29:12.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:29:12.118
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/04/24 20:29:12.152
  E0904 20:29:12.772443      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:13.772608      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.11.100 on the node which pod1 resides and expect scheduled @ 09/04/24 20:29:14.586
  E0904 20:29:14.773160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:15.773670      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.11.100 but use UDP protocol on the node which pod2 resides @ 09/04/24 20:29:16.613
  E0904 20:29:16.774627      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:17.775099      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:18.775440      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:19.775619      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/04/24 20:29:20.673
  I0904 20:29:20.674107 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.11.100 http://127.0.0.1:54323/hostname] Namespace:hostport-9510 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:29:20.674260 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:29:20.675212 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:29:20.675464 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-9510/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.11.100+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.11.100, port: 54323 @ 09/04/24 20:29:20.761
  I0904 20:29:20.762132 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.11.100:54323/hostname] Namespace:hostport-9510 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:29:20.762261 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:29:20.763084 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:29:20.763196 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-9510/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.11.100%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0904 20:29:20.776017      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.11.100, port: 54323 UDP @ 09/04/24 20:29:20.82
  I0904 20:29:20.820554 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.11.100 54323] Namespace:hostport-9510 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:29:20.820667 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:29:20.821582 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:29:20.821673 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-9510/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.11.100+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0904 20:29:21.776158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:22.776710      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:23.776846      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:24.777251      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:25.777624      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:25.881969 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9510" for this suite. @ 09/04/24 20:29:25.887
â€¢ [13.824 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/04/24 20:29:25.901
  I0904 20:29:25.901882 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename proxy @ 09/04/24 20:29:25.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:29:25.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:29:25.968
  I0904 20:29:25.972346 21 proxy.go:387] Creating pod...
  E0904 20:29:26.777671      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:27.778557      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:28.025792 21 proxy.go:411] Creating service...
  I0904 20:29:28.082640 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/pods/agnhost/proxy?method=DELETE
  I0904 20:29:28.097447 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0904 20:29:28.097513 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/pods/agnhost/proxy?method=OPTIONS
  I0904 20:29:28.118588 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0904 20:29:28.118800 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/pods/agnhost/proxy?method=PATCH
  I0904 20:29:28.143970 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0904 20:29:28.144051 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/pods/agnhost/proxy?method=POST
  I0904 20:29:28.148151 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0904 20:29:28.148294 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/pods/agnhost/proxy?method=PUT
  I0904 20:29:28.154046 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0904 20:29:28.154100 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/services/e2e-proxy-test-service/proxy?method=DELETE
  I0904 20:29:28.164514 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0904 20:29:28.164575 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0904 20:29:28.170160 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0904 20:29:28.170395 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/services/e2e-proxy-test-service/proxy?method=PATCH
  I0904 20:29:28.175132 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0904 20:29:28.175181 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/services/e2e-proxy-test-service/proxy?method=POST
  I0904 20:29:28.179710 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0904 20:29:28.179742 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/services/e2e-proxy-test-service/proxy?method=PUT
  I0904 20:29:28.190808 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0904 20:29:28.190864 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/pods/agnhost/proxy?method=GET
  I0904 20:29:28.194161 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0904 20:29:28.194277 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/services/e2e-proxy-test-service/proxy?method=GET
  I0904 20:29:28.198727 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0904 20:29:28.198771 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/pods/agnhost/proxy?method=HEAD
  I0904 20:29:28.201542 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0904 20:29:28.201580 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6414/services/e2e-proxy-test-service/proxy?method=HEAD
  I0904 20:29:28.205218 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0904 20:29:28.205442 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6414" for this suite. @ 09/04/24 20:29:28.209
â€¢ [2.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 09/04/24 20:29:28.227
  I0904 20:29:28.227102 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:29:28.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:29:28.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:29:28.281
  STEP: Creating configMap with name projected-configmap-test-volume-map-23774f2a-3b71-4c78-821b-325b7e7e34e0 @ 09/04/24 20:29:28.286
  STEP: Creating a pod to test consume configMaps @ 09/04/24 20:29:28.307
  E0904 20:29:28.778641      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:29.778784      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:30.778797      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:31.779502      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:29:32.492
  I0904 20:29:32.499372 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-configmaps-55ca9ad0-c6b5-4c6f-afe7-ffc49cf80dc9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 20:29:32.573
  I0904 20:29:32.643758 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-331" for this suite. @ 09/04/24 20:29:32.759
  E0904 20:29:32.779777      21 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [4.563 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 09/04/24 20:29:32.79
  I0904 20:29:32.790717 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 20:29:32.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:29:32.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:29:32.842
  STEP: creating service endpoint-test2 in namespace services-173 @ 09/04/24 20:29:32.848
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-173 to expose endpoints map[] @ 09/04/24 20:29:32.889
  I0904 20:29:32.904614 21 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0904 20:29:33.780050      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:33.927335 21 service.go:4299] successfully validated that service endpoint-test2 in namespace services-173 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-173 @ 09/04/24 20:29:33.927
  E0904 20:29:34.780083      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:35.780215      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-173 to expose endpoints map[pod1:[80]] @ 09/04/24 20:29:35.965
  I0904 20:29:35.975263 21 service.go:4299] successfully validated that service endpoint-test2 in namespace services-173 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/04/24 20:29:35.975
  I0904 20:29:35.975377 21 resource.go:361] Creating new exec pod
  E0904 20:29:36.780440      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:37.780794      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:38.781755      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:39.009173 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-173 exec execpodvb2xs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0904 20:29:39.154289 21 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0904 20:29:39.154361 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 20:29:39.154525 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-173 exec execpodvb2xs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.10.83 80'
  I0904 20:29:39.292533 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.10.83 80\nConnection to 10.43.10.83 80 port [tcp/http] succeeded!\n"
  I0904 20:29:39.292595 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-173 @ 09/04/24 20:29:39.292
  E0904 20:29:39.781817      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:40.781974      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-173 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/04/24 20:29:41.342
  I0904 20:29:41.370423 21 service.go:4299] successfully validated that service endpoint-test2 in namespace services-173 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/04/24 20:29:41.37
  E0904 20:29:41.782968      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:42.371576 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-173 exec execpodvb2xs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0904 20:29:42.520667 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0904 20:29:42.520729 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 20:29:42.520824 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-173 exec execpodvb2xs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.10.83 80'
  I0904 20:29:42.741993 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.10.83 80\nConnection to 10.43.10.83 80 port [tcp/http] succeeded!\n"
  I0904 20:29:42.742072 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-173 @ 09/04/24 20:29:42.742
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-173 to expose endpoints map[pod2:[80]] @ 09/04/24 20:29:42.781
  E0904 20:29:42.783323      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:42.858838 21 service.go:4299] successfully validated that service endpoint-test2 in namespace services-173 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/04/24 20:29:42.858
  E0904 20:29:43.783527      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:43.859270 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-173 exec execpodvb2xs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0904 20:29:43.989946 21 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0904 20:29:43.990009 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 20:29:43.990099 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-173 exec execpodvb2xs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.10.83 80'
  I0904 20:29:44.127553 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.10.83 80\nConnection to 10.43.10.83 80 port [tcp/http] succeeded!\n"
  I0904 20:29:44.127635 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-173 @ 09/04/24 20:29:44.127
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-173 to expose endpoints map[] @ 09/04/24 20:29:44.178
  I0904 20:29:44.220612 21 service.go:4299] successfully validated that service endpoint-test2 in namespace services-173 exposes endpoints map[]
  I0904 20:29:44.288982 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-173" for this suite. @ 09/04/24 20:29:44.316
â€¢ [11.543 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/04/24 20:29:44.334
  I0904 20:29:44.334237 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pv @ 09/04/24 20:29:44.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:29:44.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:29:44.39
  STEP: Creating initial PV and PVC @ 09/04/24 20:29:44.394
  I0904 20:29:44.394632 21 pv.go:394] Creating a PV followed by a PVC
  E0904 20:29:44.784259      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7918" @ 09/04/24 20:29:45.039
  STEP: Listing PVCs in namespace "pv-7918" @ 09/04/24 20:29:45.057
  STEP: Reading "pvc-4bsqn" Status @ 09/04/24 20:29:45.068
  STEP: Reading "pv-7918-ntrq6" Status @ 09/04/24 20:29:45.073
  STEP: Patching "pvc-4bsqn" Status @ 09/04/24 20:29:45.088
  STEP: Patching "pv-7918-ntrq6" Status @ 09/04/24 20:29:45.138
  STEP: Updating "pvc-4bsqn" Status @ 09/04/24 20:29:45.154
  STEP: Updating "pv-7918-ntrq6" Status @ 09/04/24 20:29:45.178
  I0904 20:29:45.198144 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0904 20:29:45.198194 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-4bsqn"
  I0904 20:29:45.213739 21 pv.go:193] Deleting PersistentVolume "pv-7918-ntrq6"
  I0904 20:29:45.230516 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7918" for this suite. @ 09/04/24 20:29:45.334
â€¢ [1.011 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 09/04/24 20:29:45.345
  I0904 20:29:45.345929 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 20:29:45.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:29:45.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:29:45.392
  STEP: creating service nodeport-test with type=NodePort in namespace services-9780 @ 09/04/24 20:29:45.395
  STEP: creating replication controller nodeport-test in namespace services-9780 @ 09/04/24 20:29:45.433
  I0904 20:29:45.450169      21 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-9780, replica count: 2
  E0904 20:29:45.785135      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:46.785930      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:47.786807      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:48.501837      21 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 20:29:48.501885 21 resource.go:361] Creating new exec pod
  E0904 20:29:48.786829      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:49.787180      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:50.788080      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:51.552135 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-9780 exec execpodt96xv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0904 20:29:51.680500 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0904 20:29:51.680571 21 builder.go:147] stdout: ""
  E0904 20:29:51.788792      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:52.552965 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-9780 exec execpodt96xv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0904 20:29:52.686012 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0904 20:29:52.686090 21 builder.go:147] stdout: "nodeport-test-pdsqq"
  I0904 20:29:52.686181 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-9780 exec execpodt96xv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.99.18 80'
  E0904 20:29:52.788854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:52.825443 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.99.18 80\nConnection to 10.43.99.18 80 port [tcp/http] succeeded!\n"
  I0904 20:29:52.825509 21 builder.go:147] stdout: ""
  I0904 20:29:53.687286 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-9780 exec execpodt96xv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.99.18 80'
  E0904 20:29:53.789933      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:53.822354 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.99.18 80\nConnection to 10.43.99.18 80 port [tcp/http] succeeded!\n"
  I0904 20:29:53.822431 21 builder.go:147] stdout: "nodeport-test-pdsqq"
  I0904 20:29:53.822635 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-9780 exec execpodt96xv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.190 31654'
  I0904 20:29:53.957506 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.15.190 31654\nConnection to 172.31.15.190 31654 port [tcp/*] succeeded!\n"
  I0904 20:29:53.957570 21 builder.go:147] stdout: ""
  E0904 20:29:54.789986      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:54.823357 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-9780 exec execpodt96xv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.190 31654'
  I0904 20:29:54.960680 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.15.190 31654\nConnection to 172.31.15.190 31654 port [tcp/*] succeeded!\n"
  I0904 20:29:54.960734 21 builder.go:147] stdout: "nodeport-test-pdsqq"
  I0904 20:29:54.960823 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-9780 exec execpodt96xv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.231 31654'
  I0904 20:29:55.115116 21 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.5.231 31654\n+ echo hostName\nConnection to 172.31.5.231 31654 port [tcp/*] succeeded!\n"
  I0904 20:29:55.115170 21 builder.go:147] stdout: ""
  E0904 20:29:55.791127      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:55.961430 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-9780 exec execpodt96xv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.231 31654'
  I0904 20:29:56.092581 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.5.231 31654\nConnection to 172.31.5.231 31654 port [tcp/*] succeeded!\n"
  I0904 20:29:56.092767 21 builder.go:147] stdout: "nodeport-test-pdsqq"
  I0904 20:29:56.092917 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9780" for this suite. @ 09/04/24 20:29:56.099
â€¢ [10.764 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/04/24 20:29:56.11
  I0904 20:29:56.110795 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:29:56.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:29:56.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:29:56.157
  STEP: Setting up server cert @ 09/04/24 20:29:56.358
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:29:56.699
  STEP: Deploying the webhook pod @ 09/04/24 20:29:56.715
  STEP: Wait for the deployment to be ready @ 09/04/24 20:29:56.749
  I0904 20:29:56.765139 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:29:56.792093      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:57.792681      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:29:58.792746      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:29:59.080854 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 4, 20, 29, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 29, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 4, 20, 29, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 4, 20, 29, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 20:29:59.793494      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:00.793623      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:30:01.085
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:30:01.128
  E0904 20:30:01.793817      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:30:02.129520 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/04/24 20:30:02.141
  STEP: create a pod that should be denied by the webhook @ 09/04/24 20:30:02.178
  STEP: create a pod that causes the webhook to hang @ 09/04/24 20:30:02.197
  E0904 20:30:02.793983      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:03.794076      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:04.794217      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:05.794379      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:06.794521      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:07.794990      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:08.795136      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:09.796149      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:10.796311      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:11.796431      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/04/24 20:30:12.21
  STEP: create a configmap that should be admitted by the webhook @ 09/04/24 20:30:12.228
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/04/24 20:30:12.25
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/04/24 20:30:12.26
  STEP: create a namespace that bypass the webhook @ 09/04/24 20:30:12.275
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/04/24 20:30:12.309
  I0904 20:30:12.522469 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8178" for this suite. @ 09/04/24 20:30:12.53
  STEP: Destroying namespace "webhook-markers-7630" for this suite. @ 09/04/24 20:30:12.55
  STEP: Destroying namespace "exempted-namespace-7202" for this suite. @ 09/04/24 20:30:12.574
â€¢ [16.490 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 09/04/24 20:30:12.602
  I0904 20:30:12.602121 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/04/24 20:30:12.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:12.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:12.711
  STEP: getting /apis @ 09/04/24 20:30:12.726
  STEP: getting /apis/admissionregistration.k8s.io @ 09/04/24 20:30:12.732
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/04/24 20:30:12.733
  STEP: creating @ 09/04/24 20:30:12.735
  STEP: getting @ 09/04/24 20:30:12.793
  E0904 20:30:12.796864      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: listing @ 09/04/24 20:30:12.797
  STEP: watching @ 09/04/24 20:30:13.102
  I0904 20:30:13.102725 21 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 09/04/24 20:30:13.104
  STEP: updating @ 09/04/24 20:30:13.114
  I0904 20:30:13.132902 21 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 09/04/24 20:30:13.133
  STEP: deleting a collection @ 09/04/24 20:30:13.166
  I0904 20:30:13.195659 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9935" for this suite. @ 09/04/24 20:30:13.199
â€¢ [0.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/04/24 20:30:13.214
  I0904 20:30:13.214360 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename lease-test @ 09/04/24 20:30:13.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:13.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:13.266
  I0904 20:30:13.379015 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8032" for this suite. @ 09/04/24 20:30:13.383
â€¢ [0.181 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/04/24 20:30:13.395
  I0904 20:30:13.395476 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/04/24 20:30:13.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:13.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:13.487
  I0904 20:30:13.496244 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9383" for this suite. @ 09/04/24 20:30:13.502
â€¢ [0.123 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/04/24 20:30:13.518
  I0904 20:30:13.518435 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename tables @ 09/04/24 20:30:13.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:13.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:13.547
  I0904 20:30:13.557164 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-6813" for this suite. @ 09/04/24 20:30:13.603
â€¢ [0.096 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/04/24 20:30:13.615
  I0904 20:30:13.616027 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename replicaset @ 09/04/24 20:30:13.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:13.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:13.665
  E0904 20:30:13.797558      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:30:13.905064 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/24 20:30:13.905
  E0904 20:30:14.797675      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:15.798057      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up "test-rs" replicaset @ 09/04/24 20:30:15.957
  I0904 20:30:15.985143 21 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/04/24 20:30:15.985
  I0904 20:30:16.017965 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6588 with ReadyReplicas 1, AvailableReplicas 1
  I0904 20:30:16.069041 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6588 with ReadyReplicas 1, AvailableReplicas 1
  I0904 20:30:16.126263 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6588 with ReadyReplicas 1, AvailableReplicas 1
  I0904 20:30:16.142744 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6588 with ReadyReplicas 1, AvailableReplicas 1
  E0904 20:30:16.798988      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:30:17.684903 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6588 with ReadyReplicas 2, AvailableReplicas 2
  I0904 20:30:17.765072 21 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-6588 with ReadyReplicas 3 found true
  I0904 20:30:17.765425 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6588" for this suite. @ 09/04/24 20:30:17.769
â€¢ [4.179 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 09/04/24 20:30:17.795
  I0904 20:30:17.795534 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename cronjob @ 09/04/24 20:30:17.796
  E0904 20:30:17.799156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:17.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:17.856
  STEP: Creating a cronjob @ 09/04/24 20:30:17.859
  STEP: creating @ 09/04/24 20:30:17.859
  STEP: getting @ 09/04/24 20:30:17.882
  STEP: listing @ 09/04/24 20:30:17.886
  STEP: watching @ 09/04/24 20:30:17.89
  I0904 20:30:17.890233 21 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 09/04/24 20:30:17.891
  STEP: cluster-wide watching @ 09/04/24 20:30:17.901
  I0904 20:30:17.901952 21 cronjob.go:382] starting watch
  STEP: patching @ 09/04/24 20:30:17.903
  STEP: updating @ 09/04/24 20:30:17.931
  I0904 20:30:17.963404 21 cronjob.go:406] waiting for watch events with expected annotations
  I0904 20:30:17.963496 21 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 09/04/24 20:30:17.963
  STEP: updating /status @ 09/04/24 20:30:17.98
  STEP: get /status @ 09/04/24 20:30:17.989
  STEP: deleting @ 09/04/24 20:30:17.993
  STEP: deleting a collection @ 09/04/24 20:30:18.024
  I0904 20:30:18.041567 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3446" for this suite. @ 09/04/24 20:30:18.045
â€¢ [0.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 09/04/24 20:30:18.058
  I0904 20:30:18.058128 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:30:18.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:18.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:18.164
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:30:18.169
  E0904 20:30:18.800175      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:19.800297      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:20.800655      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:21.800806      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:22.800900      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:30:22.878
  I0904 20:30:22.887852 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-914b699b-150d-4e52-ba4c-1eadfe1843ea container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:30:22.899
  I0904 20:30:22.942282 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9073" for this suite. @ 09/04/24 20:30:22.947
â€¢ [4.942 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 09/04/24 20:30:23
  I0904 20:30:23.000717 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:30:23.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:23.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:23.088
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:30:23.095
  E0904 20:30:23.801238      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:24.801250      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:25.801326      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:26.801461      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:30:27.567
  I0904 20:30:27.571149 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-e79d51f6-e75e-4258-b6cf-85b3ae2bfd0a container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:30:27.585
  I0904 20:30:27.632811 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3399" for this suite. @ 09/04/24 20:30:27.638
â€¢ [4.651 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 09/04/24 20:30:27.652
  I0904 20:30:27.652654 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename dns @ 09/04/24 20:30:27.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:27.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:27.696
  STEP: Creating a test headless service @ 09/04/24 20:30:27.701
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8914.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8914.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8914.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8914.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8914.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8914.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8914.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8914.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 180.255.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.255.180_udp@PTR;check="$$(dig +tcp +noall +answer +search 180.255.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.255.180_tcp@PTR;sleep 1; done
   @ 09/04/24 20:30:27.776
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8914.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8914.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8914.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8914.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8914.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8914.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8914.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8914.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 180.255.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.255.180_udp@PTR;check="$$(dig +tcp +noall +answer +search 180.255.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.255.180_tcp@PTR;sleep 1; done
   @ 09/04/24 20:30:27.776
  STEP: creating a pod to probe DNS @ 09/04/24 20:30:27.776
  STEP: submitting the pod to kubernetes @ 09/04/24 20:30:27.776
  E0904 20:30:27.802461      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:28.802739      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:29.803240      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/24 20:30:30.294
  STEP: looking for the results for each expected name from probers @ 09/04/24 20:30:30.316
  I0904 20:30:30.329105 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8914.svc.cluster.local from pod dns-8914/dns-test-d7f4b772-277e-478f-8270-c8f964892e77: the server could not find the requested resource (get pods dns-test-d7f4b772-277e-478f-8270-c8f964892e77)
  I0904 20:30:30.333632 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8914.svc.cluster.local from pod dns-8914/dns-test-d7f4b772-277e-478f-8270-c8f964892e77: the server could not find the requested resource (get pods dns-test-d7f4b772-277e-478f-8270-c8f964892e77)
  I0904 20:30:30.338244 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8914.svc.cluster.local from pod dns-8914/dns-test-d7f4b772-277e-478f-8270-c8f964892e77: the server could not find the requested resource (get pods dns-test-d7f4b772-277e-478f-8270-c8f964892e77)
  I0904 20:30:30.343177 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8914.svc.cluster.local from pod dns-8914/dns-test-d7f4b772-277e-478f-8270-c8f964892e77: the server could not find the requested resource (get pods dns-test-d7f4b772-277e-478f-8270-c8f964892e77)
  I0904 20:30:30.368045 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8914.svc.cluster.local from pod dns-8914/dns-test-d7f4b772-277e-478f-8270-c8f964892e77: the server could not find the requested resource (get pods dns-test-d7f4b772-277e-478f-8270-c8f964892e77)
  I0904 20:30:30.373094 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8914.svc.cluster.local from pod dns-8914/dns-test-d7f4b772-277e-478f-8270-c8f964892e77: the server could not find the requested resource (get pods dns-test-d7f4b772-277e-478f-8270-c8f964892e77)
  I0904 20:30:30.377748 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8914.svc.cluster.local from pod dns-8914/dns-test-d7f4b772-277e-478f-8270-c8f964892e77: the server could not find the requested resource (get pods dns-test-d7f4b772-277e-478f-8270-c8f964892e77)
  I0904 20:30:30.382810 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8914.svc.cluster.local from pod dns-8914/dns-test-d7f4b772-277e-478f-8270-c8f964892e77: the server could not find the requested resource (get pods dns-test-d7f4b772-277e-478f-8270-c8f964892e77)
  I0904 20:30:30.408339 21 dns_common.go:489] Lookups using dns-8914/dns-test-d7f4b772-277e-478f-8270-c8f964892e77 failed for: [wheezy_udp@dns-test-service.dns-8914.svc.cluster.local wheezy_tcp@dns-test-service.dns-8914.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8914.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8914.svc.cluster.local jessie_udp@dns-test-service.dns-8914.svc.cluster.local jessie_tcp@dns-test-service.dns-8914.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8914.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8914.svc.cluster.local]

  I0904 20:30:30.417025 21 dns_common.go:495] Pod client logs for webserver: 
  I0904 20:30:30.426347 21 dns_common.go:495] Pod client logs for querier: 
  I0904 20:30:30.433484 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0904 20:30:30.804109      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:31.804381      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:32.804612      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:33.805188      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:34.805592      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:30:35.396843 21 dns_common.go:527] DNS probes using dns-8914/dns-test-d7f4b772-277e-478f-8270-c8f964892e77 succeeded

  STEP: deleting the pod @ 09/04/24 20:30:35.396
  STEP: deleting the test service @ 09/04/24 20:30:35.428
  STEP: deleting the test headless service @ 09/04/24 20:30:35.537
  I0904 20:30:35.565605 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8914" for this suite. @ 09/04/24 20:30:35.579
â€¢ [7.950 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 09/04/24 20:30:35.602
  I0904 20:30:35.602980 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/24 20:30:35.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:35.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:35.693
  STEP: getting /apis @ 09/04/24 20:30:35.697
  STEP: getting /apis/node.k8s.io @ 09/04/24 20:30:35.702
  STEP: getting /apis/node.k8s.io/v1 @ 09/04/24 20:30:35.703
  STEP: creating @ 09/04/24 20:30:35.704
  STEP: watching @ 09/04/24 20:30:35.751
  I0904 20:30:35.751927 21 runtimeclass.go:275] starting watch
  STEP: getting @ 09/04/24 20:30:35.771
  STEP: listing @ 09/04/24 20:30:35.774
  STEP: patching @ 09/04/24 20:30:35.777
  STEP: updating @ 09/04/24 20:30:35.788
  I0904 20:30:35.803435 21 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 09/04/24 20:30:35.803
  E0904 20:30:35.806595      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 09/04/24 20:30:35.852
  I0904 20:30:35.881576 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-655" for this suite. @ 09/04/24 20:30:35.885
â€¢ [0.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/04/24 20:30:35.899
  I0904 20:30:35.899400 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 20:30:35.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:36.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:36.051
  STEP: Creating secret with name secret-test-9d4cb842-554f-4128-a130-1fdd123c6a6e @ 09/04/24 20:30:36.054
  STEP: Creating a pod to test consume secrets @ 09/04/24 20:30:36.074
  E0904 20:30:36.807049      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:37.807226      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:38.808170      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:39.808597      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:30:40.21
  I0904 20:30:40.214340 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-secrets-6788fa20-a0a9-4b9f-8fc1-f386735d16cf container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 20:30:40.223
  I0904 20:30:40.251765 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6206" for this suite. @ 09/04/24 20:30:40.256
â€¢ [4.387 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 09/04/24 20:30:40.288
  I0904 20:30:40.288044 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/24 20:30:40.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:40.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:40.557
  STEP: Creating ServiceAccount "e2e-sa-5rkfd"  @ 09/04/24 20:30:40.562
  I0904 20:30:40.573150 21 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-5rkfd"  @ 09/04/24 20:30:40.573
  I0904 20:30:40.585824 21 service_accounts.go:839] AutomountServiceAccountToken: true
  I0904 20:30:40.585975 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8412" for this suite. @ 09/04/24 20:30:40.691
â€¢ [0.414 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 09/04/24 20:30:40.702
  I0904 20:30:40.702487 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/24 20:30:40.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:40.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:40.76
  E0904 20:30:40.808970      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:30:40.902748 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9275" for this suite. @ 09/04/24 20:30:40.912
â€¢ [0.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 09/04/24 20:30:40.936
  I0904 20:30:40.936794 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename dns @ 09/04/24 20:30:40.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:41.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:41.096
  STEP: Creating a test headless service @ 09/04/24 20:30:41.099
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4125 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4125;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4125 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4125;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4125.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4125.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4125.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4125.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4125.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4125.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4125.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4125.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4125.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4125.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4125.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4125.svc;check="$$(dig +notcp +noall +answer +search 114.116.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.116.114_udp@PTR;check="$$(dig +tcp +noall +answer +search 114.116.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.116.114_tcp@PTR;sleep 1; done
   @ 09/04/24 20:30:41.168
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4125 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4125;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4125 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4125;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4125.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4125.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4125.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4125.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4125.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4125.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4125.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4125.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4125.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4125.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4125.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4125.svc;check="$$(dig +notcp +noall +answer +search 114.116.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.116.114_udp@PTR;check="$$(dig +tcp +noall +answer +search 114.116.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.116.114_tcp@PTR;sleep 1; done
   @ 09/04/24 20:30:41.168
  STEP: creating a pod to probe DNS @ 09/04/24 20:30:41.168
  STEP: submitting the pod to kubernetes @ 09/04/24 20:30:41.168
  E0904 20:30:41.809821      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:42.809942      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:43.810481      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:44.810835      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/24 20:30:45.559
  STEP: looking for the results for each expected name from probers @ 09/04/24 20:30:45.564
  I0904 20:30:45.576494 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.580392 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.588510 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4125 from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.592281 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4125 from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.597886 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4125.svc from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.602066 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4125.svc from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.605832 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4125.svc from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.609500 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4125.svc from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.632002 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.635523 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.649959 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4125 from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.660351 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4125 from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.664235 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4125.svc from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.668188 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4125.svc from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.672639 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4125.svc from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.676748 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4125.svc from pod dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe: the server could not find the requested resource (get pods dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe)
  I0904 20:30:45.694357 21 dns_common.go:489] Lookups using dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4125 wheezy_tcp@dns-test-service.dns-4125 wheezy_udp@dns-test-service.dns-4125.svc wheezy_tcp@dns-test-service.dns-4125.svc wheezy_udp@_http._tcp.dns-test-service.dns-4125.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4125.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4125 jessie_tcp@dns-test-service.dns-4125 jessie_udp@dns-test-service.dns-4125.svc jessie_tcp@dns-test-service.dns-4125.svc jessie_udp@_http._tcp.dns-test-service.dns-4125.svc jessie_tcp@_http._tcp.dns-test-service.dns-4125.svc]

  I0904 20:30:45.708217 21 dns_common.go:495] Pod client logs for webserver: 
  I0904 20:30:45.716676 21 dns_common.go:495] Pod client logs for querier: 
  I0904 20:30:45.723823 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0904 20:30:45.811249      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:46.811371      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:47.811626      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:48.812027      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:49.812706      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:30:50.692511 21 dns_common.go:527] DNS probes using dns-4125/dns-test-376c3829-0f00-4de8-8a23-e84db3992ebe succeeded

  STEP: deleting the pod @ 09/04/24 20:30:50.692
  STEP: deleting the test service @ 09/04/24 20:30:50.741
  E0904 20:30:50.813260      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the test headless service @ 09/04/24 20:30:50.873
  I0904 20:30:50.934591 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4125" for this suite. @ 09/04/24 20:30:50.94
â€¢ [10.027 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 09/04/24 20:30:50.963
  I0904 20:30:50.963879 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/24 20:30:50.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:50.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:50.999
  I0904 20:30:51.133446 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7075" for this suite. @ 09/04/24 20:30:51.138
â€¢ [0.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 09/04/24 20:30:51.173
  I0904 20:30:51.173869 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename replication-controller @ 09/04/24 20:30:51.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:51.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:51.235
  STEP: Creating replication controller my-hostname-basic-686c9c97-8bad-429c-87ee-ec7ebdb809d8 @ 09/04/24 20:30:51.239
  I0904 20:30:51.274793 21 resource.go:87] Pod name my-hostname-basic-686c9c97-8bad-429c-87ee-ec7ebdb809d8: Found 1 pods out of 1
  I0904 20:30:51.275041 21 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-686c9c97-8bad-429c-87ee-ec7ebdb809d8" are running
  E0904 20:30:51.813679      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:52.813854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:30:53.332175 21 rc.go:523] Pod "my-hostname-basic-686c9c97-8bad-429c-87ee-ec7ebdb809d8-jk8c4" is running and ready(conditions: [])
  I0904 20:30:53.332263 21 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/04/24 20:30:53.332
  E0904 20:30:53.814806      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:30:54.125400 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1636" for this suite. @ 09/04/24 20:30:54.13
â€¢ [2.968 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/04/24 20:30:54.142
  I0904 20:30:54.142896 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-runtime @ 09/04/24 20:30:54.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:54.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:54.203
  STEP: create the container @ 09/04/24 20:30:54.207
  W0904 20:30:54.528283      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/04/24 20:30:54.528
  E0904 20:30:54.815819      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:55.816160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:56.816941      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/04/24 20:30:57.558
  STEP: the container should be terminated @ 09/04/24 20:30:57.562
  STEP: the termination message should be set @ 09/04/24 20:30:57.562
  I0904 20:30:57.562634 21 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/04/24 20:30:57.562
  I0904 20:30:57.609704 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7773" for this suite. @ 09/04/24 20:30:57.614
â€¢ [3.488 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 09/04/24 20:30:57.632
  I0904 20:30:57.632509 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 20:30:57.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:57.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:57.698
  I0904 20:30:57.793574 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-596" for this suite. @ 09/04/24 20:30:57.797
  E0904 20:30:57.817320      21 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [0.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 09/04/24 20:30:57.822
  I0904 20:30:57.822861 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 20:30:57.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:30:57.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:30:57.862
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/04/24 20:30:57.866
  E0904 20:30:58.817808      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:30:59.817912      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:00.818100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:01.818381      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:02.819305      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:31:02.832
  I0904 20:31:02.835856 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-8966c5e1-d195-458a-89f2-7823aa1c9f44 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 20:31:02.843
  I0904 20:31:02.882904 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7254" for this suite. @ 09/04/24 20:31:03.1
â€¢ [5.294 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/04/24 20:31:03.118
  I0904 20:31:03.118430 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename cronjob @ 09/04/24 20:31:03.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:31:03.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:31:03.184
  STEP: Creating a cronjob @ 09/04/24 20:31:03.194
  STEP: Ensuring more than one job is running at a time @ 09/04/24 20:31:03.212
  E0904 20:31:03.819455      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:04.820162      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:05.820964      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:06.826149      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:07.826380      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:08.826525      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:09.826757      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:10.827149      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:11.827214      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:12.827750      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:13.830516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:14.831301      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:15.831474      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:16.831608      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:17.831904      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:18.832028      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:19.832206      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:20.832615      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:21.832762      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:22.833779      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:23.834684      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:24.835406      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:25.836095      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:26.837104      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:27.838055      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:28.838761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:29.839436      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:30.840349      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:31.841147      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:32.841397      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:33.842532      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:34.842726      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:35.846075      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:36.846646      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:37.846667      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:38.847017      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:39.847403      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:40.847387      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:41.847611      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:42.848399      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:43.848574      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:44.848762      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:45.848864      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:46.849061      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:47.849190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:48.849661      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:49.850460      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:50.850792      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:51.851123      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:52.851770      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:53.851908      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:54.852079      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:55.852459      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:56.853193      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:57.853510      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:58.853619      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:31:59.853879      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:00.854464      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:01.854712      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:02.855153      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:03.855395      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:04.856250      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:05.856605      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:06.856837      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:07.857902      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:08.858414      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:09.859455      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:10.860211      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:11.861191      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:12.862213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:13.862437      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:14.862564      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:15.863385      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:16.864191      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:17.864324      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:18.864453      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:19.864593      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:20.865253      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:21.866355      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:22.866792      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:23.867846      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:24.868271      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:25.868447      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:26.868562      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:27.868732      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:28.868842      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:29.869866      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:30.869971      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:31.870803      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:32.871509      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:33.872028      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:34.872470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:35.873315      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:36.873627      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:37.873763      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:38.873906      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:39.874979      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:40.875099      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:41.875270      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:42.875408      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:43.876263      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:44.876499      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:45.877351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:46.877763      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:47.877981      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:48.878425      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:49.878489      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:50.878621      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:51.879626      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:52.880099      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:53.881133      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:54.881282      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:55.881469      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:56.882094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:57.882525      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:58.882699      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:32:59.883173      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:00.883318      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/04/24 20:33:01.217
  STEP: Removing cronjob @ 09/04/24 20:33:01.222
  I0904 20:33:01.267987 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3845" for this suite. @ 09/04/24 20:33:01.272
â€¢ [118.170 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 09/04/24 20:33:01.289
  I0904 20:33:01.289071 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 20:33:01.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:33:01.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:33:01.396
  STEP: Counting existing ResourceQuota @ 09/04/24 20:33:01.406
  E0904 20:33:01.883610      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:02.884186      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:03.884981      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:04.885261      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:05.885486      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/24 20:33:06.412
  STEP: Ensuring resource quota status is calculated @ 09/04/24 20:33:06.429
  E0904 20:33:06.885895      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:07.886831      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 09/04/24 20:33:08.432
  STEP: Creating a NodePort Service @ 09/04/24 20:33:08.472
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/04/24 20:33:08.534
  STEP: Ensuring resource quota status captures service creation @ 09/04/24 20:33:08.589
  E0904 20:33:08.887853      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:09.887977      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 09/04/24 20:33:10.594
  STEP: Ensuring resource quota status released usage @ 09/04/24 20:33:10.707
  E0904 20:33:10.888399      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:11.888514      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:33:12.710820 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4103" for this suite. @ 09/04/24 20:33:12.815
â€¢ [11.543 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 09/04/24 20:33:12.832
  I0904 20:33:12.832522 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/24 20:33:12.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:33:12.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:33:12.878
  E0904 20:33:12.888936      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:33:13.030887 21 service_accounts.go:618] created pod
  E0904 20:33:13.889372      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:14.889631      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:15.890517      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:16.890888      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:33:17.054
  E0904 20:33:17.891458      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:18.892169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:19.892325      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:20.892484      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:21.892945      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:22.893436      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:23.893548      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:24.893692      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:25.893931      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:26.894246      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:27.894653      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:28.895106      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:29.895418      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:30.895597      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:31.895804      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:32.895947      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:33.896152      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:34.896367      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:35.896743      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:36.896929      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:37.897497      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:38.898595      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:39.898795      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:40.899703      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:41.899891      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:42.900398      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:43.900981      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:44.901334      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:45.902173      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:46.902629      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:33:47.054520 21 service_accounts.go:624] polling logs
  I0904 20:33:47.068486 21 service_accounts.go:634] Pod logs: 
  I0904 20:33:13.836718       1 log.go:245] OK: Got token
  I0904 20:33:13.836819       1 log.go:245] validating with in-cluster discovery
  I0904 20:33:13.837232       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0904 20:33:13.837648       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-129:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001c5a30), NotBefore:(*jwt.NumericDate)(0xc0001c5c40), IssuedAt:(*jwt.NumericDate)(0xc0001c5a40), ID:"d4b90f1b-26a6-4ce9-bb83-8bda0a21a852"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-129", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"87d27891-2282-48d9-a5b1-5fdfd5d78582"}}}
  I0904 20:33:13.848838       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0904 20:33:13.854658       1 log.go:245] OK: Validated signature on JWT
  I0904 20:33:13.854983       1 log.go:245] OK: Got valid claims from token!
  I0904 20:33:13.855023       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-129:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002a3b90), NotBefore:(*jwt.NumericDate)(0xc0002a3bb8), IssuedAt:(*jwt.NumericDate)(0xc0002a3b98), ID:"d4b90f1b-26a6-4ce9-bb83-8bda0a21a852"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-129", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"87d27891-2282-48d9-a5b1-5fdfd5d78582"}}}

  I0904 20:33:47.068607 21 service_accounts.go:638] completed pod
  I0904 20:33:47.079999 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-129" for this suite. @ 09/04/24 20:33:47.088
â€¢ [34.267 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 09/04/24 20:33:47.099
  I0904 20:33:47.099683 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 20:33:47.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:33:47.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:33:47.136
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/04/24 20:33:47.141
  E0904 20:33:47.903660      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:48.903851      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:49.904382      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:50.904224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:33:51.292
  I0904 20:33:51.298058 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-beee08ee-4ce7-4274-82d9-fed8712a1aa5 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 20:33:51.306
  I0904 20:33:51.337138 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1757" for this suite. @ 09/04/24 20:33:51.344
â€¢ [4.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/04/24 20:33:51.363
  I0904 20:33:51.363510 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 20:33:51.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:33:51.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:33:51.417
  STEP: apply creating a deployment @ 09/04/24 20:33:51.423
  I0904 20:33:51.450680 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5741" for this suite. @ 09/04/24 20:33:51.454
â€¢ [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 09/04/24 20:33:51.476
  I0904 20:33:51.476590 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename security-context-test @ 09/04/24 20:33:51.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:33:51.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:33:51.515
  E0904 20:33:51.906228      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:52.906709      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:53.907734      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:54.908409      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:33:55.860686 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6448" for this suite. @ 09/04/24 20:33:55.865
â€¢ [4.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 09/04/24 20:33:55.879
  I0904 20:33:55.879491 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/24 20:33:55.88
  E0904 20:33:55.908698      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:33:55.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:33:55.929
  I0904 20:33:55.963976 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0904 20:33:56.908937      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:57.909067      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:58.909189      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:33:59.909341      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:00.910018      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:01.910197      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:02.911096      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:03.911494      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:04.911542      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:05.911934      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:06.912127      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:07.912161      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:08.912659      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:09.912773      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:10.913378      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:11.913529      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:12.914516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:13.914799      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:14.914940      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:15.915168      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:16.916292      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:17.916423      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:18.917181      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:19.917381      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:20.918130      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:21.918610      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:22.919698      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:23.919931      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:24.920272      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:25.920576      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:26.921025      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:27.921432      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:28.922169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:29.922505      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:30.923125      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:31.923542      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:32.923734      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:33.923893      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:34.924113      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:35.924870      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:36.925950      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:37.926176      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:38.927526      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:39.927794      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:40.927922      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:41.928534      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:42.928999      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:43.929163      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:44.929252      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:45.929505      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:46.930033      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:47.930239      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:48.930722      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:49.931088      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:50.931188      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:51.931774      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:52.932300      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:53.932474      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:54.932840      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:55.932869      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:34:55.982824 21 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/04/24 20:34:55.987
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/04/24 20:34:56.016
  I0904 20:34:56.338106 21 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/04/24 20:34:56.338
  E0904 20:34:56.933722      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:57.934533      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/04/24 20:34:58.356
  I0904 20:34:58.366300 21 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/04/24 20:34:58.366
  E0904 20:34:58.935094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:34:59.935634      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 09/04/24 20:35:00.388
  I0904 20:35:00.392516 21 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0904 20:35:00.927310 21 pod_client.go:173] Successfully updated pod "victim-pod"
  E0904 20:35:00.936348      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:35:01.124983 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2475" for this suite. @ 09/04/24 20:35:01.129
â€¢ [65.264 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 09/04/24 20:35:01.143
  I0904 20:35:01.143240 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 20:35:01.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:35:01.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:35:01.207
  STEP: Creating Pod @ 09/04/24 20:35:01.214
  E0904 20:35:01.937091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:02.938589      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/04/24 20:35:03.552
  I0904 20:35:03.552400 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-368 PodName:pod-sharedvolume-b236fb38-77f0-4405-9a64-607d4e5a1628 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:35:03.552429 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:35:03.553212 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:35:03.553308 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-368/pods/pod-sharedvolume-b236fb38-77f0-4405-9a64-607d4e5a1628/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0904 20:35:03.612834 21 exec_util.go:111] Exec stderr: ""
  I0904 20:35:03.613401 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-368" for this suite. @ 09/04/24 20:35:03.62
â€¢ [2.493 seconds]
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/04/24 20:35:03.637
  I0904 20:35:03.637047 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename ingressclass @ 09/04/24 20:35:03.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:35:03.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:35:03.686
  STEP: getting /apis @ 09/04/24 20:35:03.703
  STEP: getting /apis/networking.k8s.io @ 09/04/24 20:35:03.71
  STEP: getting /apis/networking.k8s.iov1 @ 09/04/24 20:35:03.713
  STEP: creating @ 09/04/24 20:35:03.715
  STEP: getting @ 09/04/24 20:35:03.764
  STEP: listing @ 09/04/24 20:35:03.768
  STEP: watching @ 09/04/24 20:35:03.774
  I0904 20:35:03.774366 21 ingressclass.go:348] starting watch
  STEP: patching @ 09/04/24 20:35:03.776
  STEP: updating @ 09/04/24 20:35:03.789
  I0904 20:35:03.803107 21 ingressclass.go:364] waiting for watch events with expected annotations
  I0904 20:35:03.803513 21 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/04/24 20:35:03.803
  STEP: deleting a collection @ 09/04/24 20:35:03.833
  I0904 20:35:03.868674 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5182" for this suite. @ 09/04/24 20:35:03.875
â€¢ [0.259 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/04/24 20:35:03.903
  I0904 20:35:03.903850 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pods @ 09/04/24 20:35:03.92
  E0904 20:35:03.939677      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:35:04.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:35:04.122
  STEP: creating the pod @ 09/04/24 20:35:04.125
  STEP: setting up watch @ 09/04/24 20:35:04.125
  STEP: submitting the pod to kubernetes @ 09/04/24 20:35:04.752
  E0904 20:35:04.940532      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/04/24 20:35:05.076
  STEP: verifying pod creation was observed @ 09/04/24 20:35:05.095
  E0904 20:35:05.940854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:06.941295      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/04/24 20:35:07.122
  STEP: verifying pod deletion was observed @ 09/04/24 20:35:07.14
  E0904 20:35:07.942169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:35:08.345382 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5977" for this suite. @ 09/04/24 20:35:08.35
â€¢ [4.467 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 09/04/24 20:35:08.366
  I0904 20:35:08.367036 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 20:35:08.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:35:08.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:35:08.418
  STEP: Creating service test in namespace statefulset-6137 @ 09/04/24 20:35:08.426
  I0904 20:35:08.780008 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0904 20:35:08.942328      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:09.942511      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:10.942748      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:11.943671      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:12.943850      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:13.944387      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:14.944756      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:15.944977      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:16.945643      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:17.946031      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:35:18.772694 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/04/24 20:35:18.779
  I0904 20:35:18.833169 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 20:35:18.833233 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0904 20:35:18.946798      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:19.947307      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:20.948292      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:21.948837      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:22.949207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:23.949352      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:24.949562      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:25.949893      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:26.950497      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:27.950804      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:28.951437      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:35:29.423502 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 20:35:29.423561 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/04/24 20:35:29.431
  STEP: Delete all of the StatefulSets @ 09/04/24 20:35:29.437
  STEP: Verify that StatefulSets have been deleted @ 09/04/24 20:35:29.454
  I0904 20:35:29.458014 21 statefulset.go:138] Deleting all statefulset in ns statefulset-6137
  I0904 20:35:29.574185 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6137" for this suite. @ 09/04/24 20:35:29.585
â€¢ [21.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 09/04/24 20:35:29.605
  I0904 20:35:29.606008 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 20:35:29.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:35:29.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:35:29.645
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/04/24 20:35:29.65
  E0904 20:35:29.952200      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:30.952328      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:31.952393      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:32.952624      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:33.953069      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:35:34.06
  I0904 20:35:34.064360 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-def6ebcd-918d-4bdb-aeb9-6732ad1725cb container test-container: <nil>
  STEP: delete the pod @ 09/04/24 20:35:34.082
  I0904 20:35:34.118697 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2770" for this suite. @ 09/04/24 20:35:34.127
â€¢ [4.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/04/24 20:35:34.145
  I0904 20:35:34.145790 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/04/24 20:35:34.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:35:34.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:35:34.215
  I0904 20:35:34.220674 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0904 20:35:34.953475      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:35.953612      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:36.953861      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:37.953980      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:38.955038      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:39.955300      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:40.956164      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:41.956547      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:42.956791      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:43.957796      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:44.957979      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:45.958268      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:46.959065      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:47.959184      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:48.959372      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:49.959591      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:50.960544      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:51.960623      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:52.960832      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:53.961144      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:54.961280      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:55.961531      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:56.962111      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:57.962302      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:58.962334      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:35:59.962655      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:00.962801      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:01.963363      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:02.963829      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:03.964272      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:04.964316      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:05.964938      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:06.965217      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:07.965392      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:08.966023      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:09.966193      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:10.966317      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:11.967142      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:12.968186      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:13.968374      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:14.969315      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:15.969489      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:16.969585      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:17.970460      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:18.970793      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:19.971553      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:20.971697      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:21.972316      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:22.972982      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:23.973198      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:24.973824      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:25.974087      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:26.974574      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:27.974868      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:28.975131      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:29.975350      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:30.976203      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:31.977361      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:32.977824      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:33.978026      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:36:34.221849 21 util.go:393] Waiting for terminating namespaces to be deleted...
  I0904 20:36:34.226696 21 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/04/24 20:36:34.226
  I0904 20:36:34.663973 21 taints.go:463] Pod1 is running on ip-172-31-15-190.us-east-2.compute.internal. Tainting Node
  E0904 20:36:34.979207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:35.980235      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:36:36.895718 21 taints.go:471] Pod2 is running on ip-172-31-15-190.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/04/24 20:36:36.895
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/24 20:36:36.918
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/04/24 20:36:36.924
  E0904 20:36:36.980548      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:37.980771      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:38.980817      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:39.981143      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:40.981549      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:41.982143      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:42.982311      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:36:43.087880 21 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0904 20:36:43.983098      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:44.983679      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:45.983870      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:46.984385      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:47.984654      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:48.984977      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:49.985951      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:50.986146      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:51.986742      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:52.987063      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:53.987152      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:54.988246      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:55.988479      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:56.989174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:57.989476      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:58.989730      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:36:59.990007      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:00.990316      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:01.991035      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:02.991090      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:37:03.115385 21 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/24 20:37:03.142
  I0904 20:37:03.163337 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-7413" for this suite. @ 09/04/24 20:37:03.169
â€¢ [89.092 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/04/24 20:37:03.239
  I0904 20:37:03.239551 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:37:03.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:03.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:03.321
  STEP: Setting up server cert @ 09/04/24 20:37:03.511
  E0904 20:37:03.991141      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:37:04.174
  STEP: Deploying the webhook pod @ 09/04/24 20:37:04.194
  STEP: Wait for the deployment to be ready @ 09/04/24 20:37:04.228
  I0904 20:37:04.479227 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:37:04.991721      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:05.991860      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:37:06.591
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:37:06.62
  E0904 20:37:06.992760      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:37:07.621666 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/04/24 20:37:07.634
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/24 20:37:07.634
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/04/24 20:37:07.663
  E0904 20:37:07.992763      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/04/24 20:37:08.677
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/24 20:37:08.677
  E0904 20:37:08.993447      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/04/24 20:37:09.745
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/24 20:37:09.745
  E0904 20:37:09.993593      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:10.993922      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:11.994582      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:12.995000      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:13.995121      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/04/24 20:37:14.813
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/24 20:37:14.814
  E0904 20:37:14.995828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:15.995976      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:16.996666      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:17.996825      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:18.997320      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:19.998096      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:37:20.125238 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5461" for this suite. @ 09/04/24 20:37:20.133
  STEP: Destroying namespace "webhook-markers-2272" for this suite. @ 09/04/24 20:37:20.147
â€¢ [16.929 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 09/04/24 20:37:20.169
  I0904 20:37:20.169406 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 20:37:20.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:20.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:20.209
  STEP: creating a replication controller @ 09/04/24 20:37:20.218
  I0904 20:37:20.218231 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8928 create -f -'
  I0904 20:37:20.427826 21 builder.go:146] stderr: ""
  I0904 20:37:20.427894 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/24 20:37:20.427
  I0904 20:37:20.428392 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8928 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 20:37:20.537452 21 builder.go:146] stderr: ""
  I0904 20:37:20.537513 21 builder.go:147] stdout: "update-demo-nautilus-47m9z update-demo-nautilus-zx2vg "
  I0904 20:37:20.537584 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8928 get pods update-demo-nautilus-47m9z -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 20:37:20.655044 21 builder.go:146] stderr: ""
  I0904 20:37:20.655090 21 builder.go:147] stdout: ""
  I0904 20:37:20.655105 21 kubectl.go:2502] update-demo-nautilus-47m9z is created but not running
  E0904 20:37:20.999185      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:21.999838      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:23.000142      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:24.000153      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:25.000560      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:37:25.655709 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8928 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 20:37:25.752469 21 builder.go:146] stderr: ""
  I0904 20:37:25.752533 21 builder.go:147] stdout: "update-demo-nautilus-47m9z update-demo-nautilus-zx2vg "
  I0904 20:37:25.752606 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8928 get pods update-demo-nautilus-47m9z -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 20:37:25.839697 21 builder.go:146] stderr: ""
  I0904 20:37:25.840055 21 builder.go:147] stdout: "true"
  I0904 20:37:25.840153 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8928 get pods update-demo-nautilus-47m9z -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 20:37:25.925787 21 builder.go:146] stderr: ""
  I0904 20:37:25.926156 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 20:37:25.926185 21 kubectl.go:2393] validating pod update-demo-nautilus-47m9z
  I0904 20:37:25.934525 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 20:37:25.934634 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 20:37:25.934655 21 kubectl.go:2520] update-demo-nautilus-47m9z is verified up and running
  I0904 20:37:25.934723 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8928 get pods update-demo-nautilus-zx2vg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0904 20:37:26.001504      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:37:26.018034 21 builder.go:146] stderr: ""
  I0904 20:37:26.018188 21 builder.go:147] stdout: "true"
  I0904 20:37:26.018259 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8928 get pods update-demo-nautilus-zx2vg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 20:37:26.098824 21 builder.go:146] stderr: ""
  I0904 20:37:26.098871 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 20:37:26.098893 21 kubectl.go:2393] validating pod update-demo-nautilus-zx2vg
  I0904 20:37:26.108745 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0904 20:37:26.108828 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 20:37:26.108847 21 kubectl.go:2520] update-demo-nautilus-zx2vg is verified up and running
  STEP: using delete to clean up resources @ 09/04/24 20:37:26.108
  I0904 20:37:26.108941 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8928 delete --grace-period=0 --force -f -'
  I0904 20:37:26.194814 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 20:37:26.194874 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0904 20:37:26.195144 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8928 get rc,svc -l name=update-demo --no-headers'
  I0904 20:37:26.399317 21 builder.go:146] stderr: "No resources found in kubectl-8928 namespace.\n"
  I0904 20:37:26.399391 21 builder.go:147] stdout: ""
  I0904 20:37:26.399461 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-8928 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0904 20:37:26.613269 21 builder.go:146] stderr: ""
  I0904 20:37:26.613326 21 builder.go:147] stdout: ""
  I0904 20:37:26.613477 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8928" for this suite. @ 09/04/24 20:37:26.619
â€¢ [6.463 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 09/04/24 20:37:26.632
  I0904 20:37:26.632302 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename volumeattachment @ 09/04/24 20:37:26.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:26.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:26.671
  STEP: Create VolumeAttachment "va-e2e-2vbpb" on node "ip-172-31-15-190.us-east-2.compute.internal" @ 09/04/24 20:37:26.731
  STEP: Get VolumeAttachment "va-e2e-2vbpb" on node "ip-172-31-15-190.us-east-2.compute.internal" @ 09/04/24 20:37:26.753
  STEP: Patch VolumeAttachment "va-e2e-2vbpb" on node "ip-172-31-15-190.us-east-2.compute.internal" @ 09/04/24 20:37:26.757
  STEP: List VolumeAttachments with "va-e2e-2vbpb=patched" label @ 09/04/24 20:37:26.782
  STEP: Delete VolumeAttachment "va-e2e-2vbpb" on node "ip-172-31-15-190.us-east-2.compute.internal" @ 09/04/24 20:37:26.788
  STEP: Confirm deletion of VolumeAttachment "va-e2e-2vbpb" on node "ip-172-31-15-190.us-east-2.compute.internal" @ 09/04/24 20:37:26.8
  STEP: Create VolumeAttachment "va-e2e-55nqn" on node "ip-172-31-8-15.us-east-2.compute.internal" @ 09/04/24 20:37:26.92
  STEP: Update the VolumeAttachment "va-e2e-55nqn" on node "ip-172-31-8-15.us-east-2.compute.internal" with label "va-e2e=updated" @ 09/04/24 20:37:26.932
  E0904 20:37:27.001920      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create VolumeAttachment "va-e2e-88tw9" on node "ip-172-31-8-15.us-east-2.compute.internal" @ 09/04/24 20:37:27.02
  STEP: Update the VolumeAttachment "va-e2e-88tw9" on node "ip-172-31-8-15.us-east-2.compute.internal" with label "va-e2e=updated" @ 09/04/24 20:37:27.03
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/04/24 20:37:27.042
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/04/24 20:37:27.072
  I0904 20:37:27.076449 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-7918" for this suite. @ 09/04/24 20:37:27.122
â€¢ [0.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/04/24 20:37:27.135
  I0904 20:37:27.135798 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/04/24 20:37:27.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:27.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:27.378
  STEP: creating the policy @ 09/04/24 20:37:27.393
  STEP: waiting until the marker is denied @ 09/04/24 20:37:27.441
  STEP: testing a replicated Deployment to be allowed @ 09/04/24 20:37:27.83
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/04/24 20:37:27.87
  I0904 20:37:27.940309 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8856" for this suite. @ 09/04/24 20:37:27.944
â€¢ [0.825 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/04/24 20:37:27.961
  I0904 20:37:27.961712 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename replicaset @ 09/04/24 20:37:27.963
  E0904 20:37:28.002289      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:28.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:28.104
  STEP: Create a ReplicaSet @ 09/04/24 20:37:28.11
  STEP: Verify that the required pods have come up @ 09/04/24 20:37:28.129
  I0904 20:37:28.169298 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0904 20:37:29.003355      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:30.003540      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:31.003679      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:32.004698      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:33.005097      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:37:33.375584 21 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/04/24 20:37:33.375
  I0904 20:37:33.380452 21 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/04/24 20:37:33.381
  STEP: DeleteCollection of the ReplicaSets @ 09/04/24 20:37:33.919
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/04/24 20:37:33.939
  I0904 20:37:33.944630 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 20:37:34.005634      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replicaset-5100" for this suite. @ 09/04/24 20:37:34.153
â€¢ [6.215 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 09/04/24 20:37:34.176
  I0904 20:37:34.176963 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:37:34.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:34.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:34.366
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:37:34.37
  E0904 20:37:35.006469      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:36.006667      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:37.007743      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:38.007867      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:37:38.442
  I0904 20:37:38.446831 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-7e9bf8e5-af9b-4450-b81a-e4d865f5fe88 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:37:38.459
  I0904 20:37:38.505407 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5906" for this suite. @ 09/04/24 20:37:38.722
â€¢ [4.556 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 09/04/24 20:37:38.733
  I0904 20:37:38.733602 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/04/24 20:37:38.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:38.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:38.798
  STEP: getting /apis @ 09/04/24 20:37:38.812
  STEP: getting /apis/admissionregistration.k8s.io @ 09/04/24 20:37:38.817
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/04/24 20:37:38.819
  STEP: creating @ 09/04/24 20:37:38.82
  STEP: getting @ 09/04/24 20:37:38.863
  STEP: listing @ 09/04/24 20:37:38.877
  STEP: watching @ 09/04/24 20:37:38.881
  I0904 20:37:38.881287 21 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 09/04/24 20:37:38.882
  STEP: updating @ 09/04/24 20:37:38.909
  I0904 20:37:38.992565 21 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 09/04/24 20:37:38.993
  STEP: patching /status @ 09/04/24 20:37:39
  E0904 20:37:39.008901      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating /status @ 09/04/24 20:37:39.019
  STEP: deleting @ 09/04/24 20:37:39.082
  STEP: deleting a collection @ 09/04/24 20:37:39.099
  I0904 20:37:39.136958 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5009" for this suite. @ 09/04/24 20:37:39.141
â€¢ [0.420 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 09/04/24 20:37:39.153
  I0904 20:37:39.153360 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename dns @ 09/04/24 20:37:39.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:39.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:39.201
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/04/24 20:37:39.209
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/04/24 20:37:39.209
  STEP: creating a pod to probe DNS @ 09/04/24 20:37:39.209
  STEP: submitting the pod to kubernetes @ 09/04/24 20:37:39.209
  E0904 20:37:40.009137      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:41.009191      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:42.009619      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/24 20:37:42.098
  STEP: looking for the results for each expected name from probers @ 09/04/24 20:37:42.106
  I0904 20:37:42.125838 21 dns_common.go:527] DNS probes using dns-6033/dns-test-1af92b4e-ed33-47b0-844f-1816ecac0814 succeeded

  STEP: deleting the pod @ 09/04/24 20:37:42.125
  I0904 20:37:42.165030 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6033" for this suite. @ 09/04/24 20:37:42.171
â€¢ [3.039 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/04/24 20:37:42.192
  I0904 20:37:42.192577 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pods @ 09/04/24 20:37:42.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:42.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:42.307
  STEP: creating the pod @ 09/04/24 20:37:42.31
  STEP: submitting the pod to kubernetes @ 09/04/24 20:37:42.31
  STEP: verifying QOS class is set on the pod @ 09/04/24 20:37:42.425
  I0904 20:37:42.440167 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6635" for this suite. @ 09/04/24 20:37:42.446
â€¢ [0.267 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/04/24 20:37:42.46
  I0904 20:37:42.460847 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pods @ 09/04/24 20:37:42.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:42.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:42.535
  I0904 20:37:42.538483 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: creating the pod @ 09/04/24 20:37:42.539
  STEP: submitting the pod to kubernetes @ 09/04/24 20:37:42.539
  E0904 20:37:43.009761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:44.010636      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:45.011765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:37:45.456939 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2484" for this suite. @ 09/04/24 20:37:45.461
â€¢ [3.016 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/04/24 20:37:45.477
  I0904 20:37:45.478074 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename server-version @ 09/04/24 20:37:45.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:45.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:45.622
  STEP: Request ServerVersion @ 09/04/24 20:37:45.626
  STEP: Confirm major version @ 09/04/24 20:37:45.627
  I0904 20:37:45.627693 21 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/04/24 20:37:45.627
  I0904 20:37:45.627899 21 server_version.go:58] cleanMinorVersion: 31
  I0904 20:37:45.628002 21 server_version.go:62] Minor version: 31
  I0904 20:37:45.628308 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-73" for this suite. @ 09/04/24 20:37:45.633
â€¢ [0.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 09/04/24 20:37:45.646
  I0904 20:37:45.646186 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:37:45.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:45.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:45.722
  STEP: Creating configMap with name projected-configmap-test-volume-d748840b-d110-4fd0-9c53-8033d1bfdad7 @ 09/04/24 20:37:45.725
  STEP: Creating a pod to test consume configMaps @ 09/04/24 20:37:45.74
  E0904 20:37:46.012616      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:47.012730      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:48.012910      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:49.013303      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:50.013596      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:37:50.883
  I0904 20:37:50.886713 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-configmaps-a16e59bd-6f97-4716-9f5c-5f7f47d14bb8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 20:37:50.894
  I0904 20:37:50.921748 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3809" for this suite. @ 09/04/24 20:37:50.926
â€¢ [5.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 09/04/24 20:37:50.94
  I0904 20:37:50.940884 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename namespaces @ 09/04/24 20:37:50.941
  E0904 20:37:51.014468      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:51.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:51.105
  STEP: Read namespace status @ 09/04/24 20:37:51.108
  I0904 20:37:51.112265 21 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/04/24 20:37:51.112
  I0904 20:37:51.124688 21 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/04/24 20:37:51.124
  I0904 20:37:51.144214 21 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0904 20:37:51.144673 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7771" for this suite. @ 09/04/24 20:37:51.149
â€¢ [0.225 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 09/04/24 20:37:51.166
  I0904 20:37:51.166653 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 20:37:51.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:51.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:51.201
  STEP: Creating configMap with name configmap-test-volume-map-79f7a632-a513-4999-8fd9-852a0442414c @ 09/04/24 20:37:51.204
  STEP: Creating a pod to test consume configMaps @ 09/04/24 20:37:51.22
  E0904 20:37:52.015637      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:53.016237      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:54.016386      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:55.016560      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:37:55.352
  I0904 20:37:55.360208 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-configmaps-a99aed66-15c3-4cae-ac69-07f555927dab container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 20:37:55.379
  I0904 20:37:55.419353 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-620" for this suite. @ 09/04/24 20:37:55.43
â€¢ [4.283 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 09/04/24 20:37:55.45
  I0904 20:37:55.450038 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 20:37:55.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:37:55.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:37:55.524
  STEP: creating service in namespace services-2608 @ 09/04/24 20:37:55.531
  STEP: creating service affinity-clusterip-transition in namespace services-2608 @ 09/04/24 20:37:55.531
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2608 @ 09/04/24 20:37:55.588
  I0904 20:37:55.626853      21 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-2608, replica count: 3
  E0904 20:37:56.017174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:57.018031      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:37:58.018692      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:37:58.678711      21 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 20:37:58.685662 21 resource.go:361] Creating new exec pod
  E0904 20:37:59.018875      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:00.019364      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:01.020166      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:38:01.717282 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-2608 exec execpod-affinitywhtfc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0904 20:38:01.866972 21 builder.go:146] stderr: "+ + ncecho hostName\n -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0904 20:38:01.867037 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 20:38:01.867158 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-2608 exec execpod-affinitywhtfc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.91.166 80'
  E0904 20:38:02.020982      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:38:02.049244 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.91.166 80\nConnection to 10.43.91.166 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0904 20:38:02.049416 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 20:38:02.068746 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-2608 exec execpod-affinitywhtfc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.91.166:80/ ; done'
  I0904 20:38:02.308665 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n"
  I0904 20:38:02.308738 21 builder.go:147] stdout: "\naffinity-clusterip-transition-fnbzf\naffinity-clusterip-transition-fnbzf\naffinity-clusterip-transition-tg7gn\naffinity-clusterip-transition-fnbzf\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-fnbzf\naffinity-clusterip-transition-fnbzf\naffinity-clusterip-transition-fnbzf\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-fnbzf\naffinity-clusterip-transition-fnbzf\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-tg7gn\naffinity-clusterip-transition-tg7gn\naffinity-clusterip-transition-fnbzf\naffinity-clusterip-transition-tg7gn"
  I0904 20:38:02.308764 21 service.go:242] Received response from host: affinity-clusterip-transition-fnbzf
  I0904 20:38:02.308781 21 service.go:242] Received response from host: affinity-clusterip-transition-fnbzf
  I0904 20:38:02.308796 21 service.go:242] Received response from host: affinity-clusterip-transition-tg7gn
  I0904 20:38:02.308811 21 service.go:242] Received response from host: affinity-clusterip-transition-fnbzf
  I0904 20:38:02.308826 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.308840 21 service.go:242] Received response from host: affinity-clusterip-transition-fnbzf
  I0904 20:38:02.308854 21 service.go:242] Received response from host: affinity-clusterip-transition-fnbzf
  I0904 20:38:02.308867 21 service.go:242] Received response from host: affinity-clusterip-transition-fnbzf
  I0904 20:38:02.308902 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.308916 21 service.go:242] Received response from host: affinity-clusterip-transition-fnbzf
  I0904 20:38:02.308928 21 service.go:242] Received response from host: affinity-clusterip-transition-fnbzf
  I0904 20:38:02.308941 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.308954 21 service.go:242] Received response from host: affinity-clusterip-transition-tg7gn
  I0904 20:38:02.308968 21 service.go:242] Received response from host: affinity-clusterip-transition-tg7gn
  I0904 20:38:02.308982 21 service.go:242] Received response from host: affinity-clusterip-transition-fnbzf
  I0904 20:38:02.308995 21 service.go:242] Received response from host: affinity-clusterip-transition-tg7gn
  I0904 20:38:02.328802 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-2608 exec execpod-affinitywhtfc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.91.166:80/ ; done'
  I0904 20:38:02.581698 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.91.166:80/\n"
  I0904 20:38:02.581908 21 builder.go:147] stdout: "\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb\naffinity-clusterip-transition-h7zzb"
  I0904 20:38:02.581955 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.581976 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.581992 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582006 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582019 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582032 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582045 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582059 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582072 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582085 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582097 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582114 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582127 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582141 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582154 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582170 21 service.go:242] Received response from host: affinity-clusterip-transition-h7zzb
  I0904 20:38:02.582246 21 service.go:4061] Cleaning up the exec pod
  E0904 20:38:03.021471      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2608, will wait for the garbage collector to delete the pods @ 09/04/24 20:38:03.447
  I0904 20:38:03.532803 21 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 12.73644ms
  I0904 20:38:03.633744 21 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.9405ms
  E0904 20:38:04.022313      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:05.022391      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:06.022954      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:38:06.996139 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 20:38:07.023121      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-2608" for this suite. @ 09/04/24 20:38:07.101
â€¢ [11.663 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 09/04/24 20:38:07.113
  I0904 20:38:07.113978 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 20:38:07.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:38:07.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:38:07.16
  STEP: Creating configMap with name configmap-test-volume-98184802-16a2-4e64-92b8-e0707d048c97 @ 09/04/24 20:38:07.163
  STEP: Creating a pod to test consume configMaps @ 09/04/24 20:38:07.173
  E0904 20:38:08.023793      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:09.024207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:10.024416      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:11.024835      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:38:11.72
  I0904 20:38:11.724554 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-configmaps-ce603009-067b-4d9c-95d8-61102da83222 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 20:38:11.731
  I0904 20:38:11.766129 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7397" for this suite. @ 09/04/24 20:38:11.771
â€¢ [4.671 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/04/24 20:38:11.784
  I0904 20:38:11.784909 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pods @ 09/04/24 20:38:11.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:38:11.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:38:11.847
  STEP: creating the pod @ 09/04/24 20:38:11.857
  STEP: submitting the pod to kubernetes @ 09/04/24 20:38:11.857
  E0904 20:38:12.025354      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:13.025750      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:14.026304      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/04/24 20:38:14.607
  STEP: updating the pod @ 09/04/24 20:38:14.712
  E0904 20:38:15.026694      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:38:15.234794 21 pod_client.go:173] Successfully updated pod "pod-update-fb5a1faf-f124-46aa-bbaf-6302803504da"
  STEP: verifying the updated pod is in kubernetes @ 09/04/24 20:38:15.239
  I0904 20:38:15.242836 21 pods.go:391] Pod update OK
  I0904 20:38:15.243062 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6614" for this suite. @ 09/04/24 20:38:15.247
â€¢ [3.475 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 09/04/24 20:38:15.261
  I0904 20:38:15.261512 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 20:38:15.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:38:15.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:38:15.317
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/04/24 20:38:15.321
  E0904 20:38:16.027132      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:17.027706      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:18.027883      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:19.028402      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:38:19.367
  I0904 20:38:19.371787 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-b1423b66-2415-4669-8a01-fa79fe5c7732 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 20:38:19.38
  I0904 20:38:19.410958 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7604" for this suite. @ 09/04/24 20:38:19.416
â€¢ [4.182 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/04/24 20:38:19.445
  I0904 20:38:19.445047 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/04/24 20:38:19.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:38:19.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:38:19.562
  STEP: creating a target pod @ 09/04/24 20:38:19.567
  E0904 20:38:20.028862      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:21.029318      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/04/24 20:38:21.633
  E0904 20:38:22.030438      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:23.030550      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:24.030689      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:25.030821      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/04/24 20:38:25.667
  I0904 20:38:25.667605 21 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1206 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:38:25.667631 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:38:25.668315 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:38:25.668401 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-1206/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0904 20:38:25.723557 21 exec_util.go:111] Exec stderr: ""
  I0904 20:38:25.737926 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1206" for this suite. @ 09/04/24 20:38:25.748
â€¢ [6.316 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/04/24 20:38:25.762
  I0904 20:38:25.762358 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/04/24 20:38:25.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:38:25.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:38:25.821
  STEP: getting /apis @ 09/04/24 20:38:25.826
  STEP: getting /apis/storage.k8s.io @ 09/04/24 20:38:25.833
  STEP: getting /apis/storage.k8s.io/v1 @ 09/04/24 20:38:25.837
  STEP: creating @ 09/04/24 20:38:25.839
  STEP: watching @ 09/04/24 20:38:25.898
  I0904 20:38:25.898482 21 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/04/24 20:38:25.915
  STEP: listing in namespace @ 09/04/24 20:38:25.918
  STEP: listing across namespaces @ 09/04/24 20:38:25.923
  STEP: patching @ 09/04/24 20:38:25.927
  STEP: updating @ 09/04/24 20:38:25.938
  I0904 20:38:25.948277 21 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0904 20:38:25.948419 21 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/04/24 20:38:25.948
  STEP: deleting a collection @ 09/04/24 20:38:25.968
  I0904 20:38:26.007285 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 20:38:26.031367      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "csistoragecapacity-1970" for this suite. @ 09/04/24 20:38:26.114
â€¢ [0.367 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 09/04/24 20:38:26.129
  I0904 20:38:26.129913 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 20:38:26.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:38:26.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:38:26.224
  STEP: Counting existing ResourceQuota @ 09/04/24 20:38:26.227
  E0904 20:38:27.031874      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:28.032204      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:29.032436      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:30.032662      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:31.032940      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/24 20:38:31.232
  STEP: Ensuring resource quota status is calculated @ 09/04/24 20:38:31.243
  E0904 20:38:32.033141      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:33.033396      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/04/24 20:38:33.248
  STEP: Ensuring resource quota status captures replication controller creation @ 09/04/24 20:38:33.274
  E0904 20:38:34.033547      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:35.033864      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/04/24 20:38:35.278
  STEP: Ensuring resource quota status released usage @ 09/04/24 20:38:35.289
  E0904 20:38:36.034350      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:37.034931      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:38:37.294107 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7931" for this suite. @ 09/04/24 20:38:37.398
â€¢ [11.286 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 09/04/24 20:38:37.416
  I0904 20:38:37.417123 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename dns @ 09/04/24 20:38:37.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:38:37.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:38:37.452
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9172.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9172.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/04/24 20:38:37.455
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9172.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9172.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/04/24 20:38:37.456
  STEP: creating a pod to probe /etc/hosts @ 09/04/24 20:38:37.456
  STEP: submitting the pod to kubernetes @ 09/04/24 20:38:37.456
  E0904 20:38:38.035056      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:39.035453      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/24 20:38:39.896
  STEP: looking for the results for each expected name from probers @ 09/04/24 20:38:39.899
  I0904 20:38:39.922867 21 dns_common.go:527] DNS probes using dns-9172/dns-test-03285a1a-1894-4680-9490-03a4bbe6fc3b succeeded

  STEP: deleting the pod @ 09/04/24 20:38:39.923
  I0904 20:38:39.948870 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9172" for this suite. @ 09/04/24 20:38:39.953
â€¢ [2.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/04/24 20:38:39.997
  I0904 20:38:39.997885 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pods @ 09/04/24 20:38:39.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:38:40.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:38:40.029
  STEP: Create a pod @ 09/04/24 20:38:40.033
  E0904 20:38:40.036003      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:41.036101      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:42.036761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/04/24 20:38:42.18
  I0904 20:38:42.199539 21 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0904 20:38:42.199901 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6069" for this suite. @ 09/04/24 20:38:42.204
â€¢ [2.224 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 09/04/24 20:38:42.221
  I0904 20:38:42.221833 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename job @ 09/04/24 20:38:42.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:38:42.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:38:42.372
  STEP: Creating a job @ 09/04/24 20:38:42.375
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/04/24 20:38:42.402
  E0904 20:38:43.039202      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:44.040417      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:45.040440      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/04/24 20:38:45.213
  STEP: updating /status @ 09/04/24 20:38:45.229
  STEP: get /status @ 09/04/24 20:38:45.239
  I0904 20:38:45.244714 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8796" for this suite. @ 09/04/24 20:38:45.249
â€¢ [3.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/04/24 20:38:45.269
  I0904 20:38:45.269419 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename var-expansion @ 09/04/24 20:38:45.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:38:45.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:38:45.325
  STEP: creating the pod with failed condition @ 09/04/24 20:38:45.329
  E0904 20:38:46.040487      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:47.040529      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:48.040667      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:49.040787      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:50.041252      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:51.041513      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:52.042059      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:53.042279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:54.042425      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:55.042666      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:56.042941      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:57.043838      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:58.044235      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:38:59.044631      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:00.045666      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:01.045966      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:02.047086      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:03.047271      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:04.048466      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:05.048385      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:06.048517      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:07.049264      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:08.050519      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:09.051173      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:10.051327      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:11.051466      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:12.052176      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:13.052679      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:14.052819      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:15.052966      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:16.053833      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:17.054232      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:18.054295      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:19.054607      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:20.055104      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:21.055397      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:22.055624      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:23.055948      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:24.056051      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:25.056198      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:26.056922      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:27.057579      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:28.058245      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:29.058443      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:30.059375      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:31.059518      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:32.059629      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:33.059805      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:34.059904      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:35.060076      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:36.060241      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:37.060693      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:38.060880      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:39.061038      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:40.061148      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:41.061302      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:42.061520      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:43.061840      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:44.062863      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:45.063105      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:46.063685      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:47.064752      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:48.064816      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:49.064985      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:50.065108      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:51.065484      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:52.066437      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:53.066713      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:54.067013      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:55.067111      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:56.068187      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:57.068341      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:58.069089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:39:59.069827      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:00.070233      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:01.070424      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:02.071146      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:03.072217      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:04.072469      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:05.072657      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:06.073481      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:07.073798      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:08.074888      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:09.075491      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:10.076267      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:11.076500      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:12.076991      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:13.077250      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:14.078277      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:15.078495      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:16.079525      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:17.079661      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:18.080190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:19.080348      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:20.081328      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:21.081480      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:22.081527      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:23.081832      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:24.081944      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:25.082749      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:26.083301      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:27.083725      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:28.084243      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:29.084662      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:30.084770      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:31.085676      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:32.086547      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:33.086726      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:34.086795      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:35.087126      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:36.087313      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:37.087449      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:38.088064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:39.088224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:40.088417      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:41.088673      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:42.089489      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:43.089613      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:44.090480      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:45.090618      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/04/24 20:40:45.451
  I0904 20:40:45.975995 21 pod_client.go:173] Successfully updated pod "var-expansion-fe99181b-fb98-47cc-a9a4-867a034a84b7"
  STEP: waiting for pod running @ 09/04/24 20:40:45.976
  E0904 20:40:46.090767      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:47.090996      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/04/24 20:40:47.995
  I0904 20:40:47.995168 21 delete.go:62] Deleting pod "var-expansion-fe99181b-fb98-47cc-a9a4-867a034a84b7" in namespace "var-expansion-9277"
  I0904 20:40:48.011891 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-fe99181b-fb98-47cc-a9a4-867a034a84b7" to be fully deleted
  E0904 20:40:48.091679      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:49.092169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:50.092869      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:51.092915      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:52.093277      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:53.096477      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:54.097299      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:55.097734      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:56.098497      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:57.098710      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:58.098791      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:40:59.099090      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:00.099719      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:01.100224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:02.100555      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:03.100657      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:04.100797      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:05.100920      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:06.101883      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:07.102671      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:08.103204      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:09.104248      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:10.105252      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:11.105399      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:12.105851      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:13.105988      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:14.106536      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:15.106837      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:16.106845      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:17.107665      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:18.108350      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:19.108465      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:41:20.099816 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9277" for this suite. @ 09/04/24 20:41:20.104
  E0904 20:41:20.108928      21 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [154.851 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/04/24 20:41:20.12
  I0904 20:41:20.120560 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename containers @ 09/04/24 20:41:20.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:41:20.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:41:20.173
  STEP: Creating a pod to test override command @ 09/04/24 20:41:20.176
  E0904 20:41:21.109194      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:22.109772      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:23.110097      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:24.110156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:41:24.223
  I0904 20:41:24.227338 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod client-containers-e36ca7a3-3306-4e52-91e6-3da4d607f475 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 20:41:24.245
  I0904 20:41:24.282743 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7000" for this suite. @ 09/04/24 20:41:24.391
â€¢ [4.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/04/24 20:41:24.403
  I0904 20:41:24.403571 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename cronjob @ 09/04/24 20:41:24.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:41:24.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:41:24.546
  STEP: Creating a suspended cronjob @ 09/04/24 20:41:24.56
  STEP: Ensuring no jobs are scheduled @ 09/04/24 20:41:24.579
  E0904 20:41:25.110400      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:26.110515      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:27.111255      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:28.112273      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:29.112391      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:30.112578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:31.112795      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:32.113125      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:33.115221      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:34.115251      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:35.116204      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:36.116501      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:37.116577      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:38.117416      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:39.117309      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:40.117421      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:41.118399      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:42.118657      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:43.118716      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:44.118980      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:45.119151      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:46.119352      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:47.120343      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:48.120507      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:49.120844      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:50.120941      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:51.121165      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:52.121731      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:53.121905      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:54.122317      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:55.122413      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:56.122834      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:57.123835      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:58.124731      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:41:59.124892      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:00.125023      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:01.125173      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:02.125696      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:03.125936      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:04.126063      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:05.126989      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:06.127109      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:07.127658      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:08.127822      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:09.127962      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:10.128516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:11.128858      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:12.129879      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:13.130110      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:14.130393      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:15.130456      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:16.130609      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:17.131243      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:18.132434      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:19.132603      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:20.132762      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:21.133692      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:22.134730      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:23.134862      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:24.135236      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:25.135852      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:26.135992      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:27.136123      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:28.136283      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:29.136884      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:30.137058      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:31.138216      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:32.138821      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:33.139593      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:34.139789      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:35.143034      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:36.143104      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:37.143574      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:38.144011      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:39.145107      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:40.145387      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:41.145838      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:42.146450      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:43.147204      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:44.148175      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:45.149008      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:46.149851      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:47.154497      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:48.154896      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:49.154967      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:50.155121      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:51.155329      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:52.156161      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:53.156325      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:54.156759      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:55.157301      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:56.157593      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:57.157682      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:58.157979      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:42:59.158727      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:00.159024      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:01.159619      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:02.160345      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:03.160477      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:04.160594      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:05.161527      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:06.161941      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:07.162568      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:08.162726      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:09.163026      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:10.163101      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:11.164212      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:12.165249      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:13.165376      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:14.165514      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:15.166492      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:16.167074      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:17.167476      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:18.167614      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:19.168024      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:20.168474      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:21.168637      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:22.168841      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:23.169800      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:24.170314      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:25.171201      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:26.171328      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:27.171395      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:28.172175      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:29.173241      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:30.173537      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:31.173936      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:32.174617      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:33.174715      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:34.174866      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:35.175616      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:36.175751      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:37.176603      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:38.176691      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:39.177285      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:40.177938      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:41.178870      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:42.179584      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:43.180501      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:44.180826      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:45.180958      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:46.181205      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:47.181765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:48.181939      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:49.182466      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:50.182643      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:51.183289      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:52.183754      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:53.184589      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:54.184727      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:55.185158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:56.185363      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:57.185483      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:58.185649      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:43:59.186106      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:00.186536      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:01.187013      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:02.187084      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:03.187895      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:04.188167      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:05.188475      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:06.188621      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:07.189360      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:08.189640      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:09.189702      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:10.189881      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:11.190151      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:12.190663      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:13.190786      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:14.191118      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:15.191375      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:16.191618      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:17.192460      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:18.192615      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:19.192765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:20.192908      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:21.193374      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:22.193854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:23.193981      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:24.194136      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:25.194672      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:26.195190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:27.195924      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:28.196632      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:29.196808      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:30.197520      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:31.197636      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:32.198710      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:33.199006      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:34.199072      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:35.200154      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:36.200240      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:37.200713      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:38.200503      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:39.200600      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:40.201014      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:41.201851      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:42.202688      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:43.202821      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:44.203194      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:45.203412      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:46.203563      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:47.203676      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:48.203852      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:49.204146      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:50.204263      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:51.204396      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:52.204558      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:53.204695      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:54.205076      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:55.205243      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:56.205454      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:57.205734      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:58.205883      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:44:59.206532      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:00.206865      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:01.207121      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:02.207761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:03.208179      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:04.208686      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:05.208941      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:06.210054      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:07.210200      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:08.211106      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:09.211274      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:10.211335      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:11.212181      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:12.212826      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:13.213242      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:14.213662      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:15.213801      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:16.214594      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:17.215085      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:18.215358      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:19.216182      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:20.216352      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:21.216466      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:22.216728      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:23.216878      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:24.217876      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:25.218023      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:26.218058      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:27.218662      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:28.219192      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:29.220170      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:30.220293      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:31.220628      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:32.220726      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:33.220864      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:34.220871      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:35.221004      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:36.221158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:37.221893      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:38.223034      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:39.223120      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:40.223253      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:41.223565      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:42.224153      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:43.224301      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:44.224430      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:45.224576      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:46.224714      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:47.224787      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:48.225725      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:49.225865      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:50.226819      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:51.227097      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:52.227756      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:53.227993      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:54.228993      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:55.229259      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:56.229417      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:57.229937      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:58.230089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:45:59.230382      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:00.230534      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:01.230635      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:02.231720      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:03.231896      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:04.232018      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:05.232138      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:06.232235      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:07.232733      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:08.232870      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:09.233066      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:10.233164      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:11.233807      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:12.234734      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:13.235007      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:14.235112      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:15.235273      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:16.236207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:17.236716      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:18.236891      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:19.237208      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:20.237950      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:21.239079      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:22.239205      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:23.239389      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:24.240198      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/04/24 20:46:24.58
  STEP: Removing cronjob @ 09/04/24 20:46:24.584
  I0904 20:46:24.596807 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1308" for this suite. @ 09/04/24 20:46:24.601
â€¢ [300.215 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/04/24 20:46:24.619
  I0904 20:46:24.619111 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pods @ 09/04/24 20:46:24.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:46:24.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:46:24.667
  STEP: Create set of pods @ 09/04/24 20:46:24.67
  I0904 20:46:24.690735 21 pods.go:871] created test-pod-1
  I0904 20:46:24.713395 21 pods.go:871] created test-pod-2
  I0904 20:46:24.747771 21 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/04/24 20:46:24.747
  E0904 20:46:25.240807      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:26.241470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/04/24 20:46:26.832
  I0904 20:46:26.838500 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0904 20:46:27.242168      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:46:27.837968 21 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  E0904 20:46:28.242350      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:46:29.039414 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6130" for this suite. @ 09/04/24 20:46:29.044
â€¢ [4.445 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 09/04/24 20:46:29.064
  I0904 20:46:29.064738 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:46:29.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:46:29.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:46:29.105
  E0904 20:46:29.243302      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 09/04/24 20:46:29.317
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:46:29.663
  STEP: Deploying the webhook pod @ 09/04/24 20:46:29.676
  STEP: Wait for the deployment to be ready @ 09/04/24 20:46:29.709
  I0904 20:46:29.725859 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:46:30.244295      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:31.244548      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:46:31.838
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:46:31.867
  E0904 20:46:32.245155      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:46:32.867872 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/04/24 20:46:33.144
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/24 20:46:33.205
  E0904 20:46:33.246224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the collection of validation webhooks @ 09/04/24 20:46:33.266
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/24 20:46:33.368
  I0904 20:46:33.502859 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3431" for this suite. @ 09/04/24 20:46:33.507
  STEP: Destroying namespace "webhook-markers-5690" for this suite. @ 09/04/24 20:46:33.537
â€¢ [4.509 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/04/24 20:46:33.575
  I0904 20:46:33.575486 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/24 20:46:33.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:46:33.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:46:33.624
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/24 20:46:33.636
  E0904 20:46:34.247284      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:35.247390      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/04/24 20:46:35.697
  E0904 20:46:36.247524      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:37.247894      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/04/24 20:46:37.732
  STEP: delete the pod with lifecycle hook @ 09/04/24 20:46:37.748
  E0904 20:46:38.248583      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:39.249138      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:46:39.774265 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1452" for this suite. @ 09/04/24 20:46:39.888
â€¢ [6.325 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 09/04/24 20:46:39.9
  I0904 20:46:39.900435 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename gc @ 09/04/24 20:46:39.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:46:39.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:46:39.941
  STEP: create the rc @ 09/04/24 20:46:40.083
  W0904 20:46:40.099341      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0904 20:46:40.249869      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:41.249949      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:42.250996      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:43.251117      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:44.252724      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:45.253964      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:46.254159      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/04/24 20:46:46.421
  STEP: wait for the rc to be deleted @ 09/04/24 20:46:46.871
  E0904 20:46:47.254278      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:48.255181      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:46:49.155362 21 garbage_collector.go:670] 87 pods remaining
  I0904 20:46:49.155565 21 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0904 20:46:49.155679 21 garbage_collector.go:678] 
  E0904 20:46:49.256489      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:46:50.140101 21 garbage_collector.go:670] 80 pods remaining
  I0904 20:46:50.140278 21 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0904 20:46:50.140381 21 garbage_collector.go:678] 
  E0904 20:46:50.257018      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:46:50.851469 21 garbage_collector.go:670] 79 pods remaining
  I0904 20:46:50.851543 21 garbage_collector.go:677] 67 pods has nil DeletionTimestamp
  I0904 20:46:50.851607 21 garbage_collector.go:678] 
  E0904 20:46:51.257630      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:46:51.729395 21 garbage_collector.go:670] 60 pods remaining
  I0904 20:46:51.729450 21 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0904 20:46:51.729464 21 garbage_collector.go:678] 
  E0904 20:46:52.257803      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:46:52.556026 21 garbage_collector.go:670] 59 pods remaining
  I0904 20:46:52.556195 21 garbage_collector.go:677] 49 pods has nil DeletionTimestamp
  I0904 20:46:52.556283 21 garbage_collector.go:678] 
  E0904 20:46:53.258362      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:46:53.374689 21 garbage_collector.go:670] 39 pods remaining
  I0904 20:46:53.374731 21 garbage_collector.go:677] 39 pods has nil DeletionTimestamp
  I0904 20:46:53.374745 21 garbage_collector.go:678] 
  E0904 20:46:54.258751      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:46:54.887233 21 garbage_collector.go:670] 36 pods remaining
  I0904 20:46:54.887287 21 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0904 20:46:54.887303 21 garbage_collector.go:678] 
  I0904 20:46:55.175539 21 garbage_collector.go:670] 20 pods remaining
  I0904 20:46:55.175577 21 garbage_collector.go:677] 18 pods has nil DeletionTimestamp
  I0904 20:46:55.175590 21 garbage_collector.go:678] 
  E0904 20:46:55.258864      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:56.259426      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:46:56.268348 21 garbage_collector.go:670] 0 pods remaining
  I0904 20:46:56.268394 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0904 20:46:56.268409 21 garbage_collector.go:678] 
  E0904 20:46:57.262480      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/04/24 20:46:57.532
  W0904 20:46:57.641405      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0904 20:46:57.641454 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 20:46:57.642190 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4825" for this suite. @ 09/04/24 20:46:57.761
â€¢ [17.922 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/04/24 20:46:57.823
  I0904 20:46:57.823435 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/04/24 20:46:57.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:46:57.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:46:57.971
  I0904 20:46:57.980222 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-67" for this suite. @ 09/04/24 20:46:57.984
â€¢ [0.182 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/04/24 20:46:58.005
  I0904 20:46:58.005621 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename field-validation @ 09/04/24 20:46:58.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:46:58.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:46:58.077
  STEP: apply creating a deployment @ 09/04/24 20:46:58.084
  I0904 20:46:58.099939 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-755" for this suite. @ 09/04/24 20:46:58.109
â€¢ [0.140 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/04/24 20:46:58.145
  I0904 20:46:58.145869 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename deployment @ 09/04/24 20:46:58.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:46:58.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:46:58.189
  I0904 20:46:58.236824 21 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/24 20:46:58.237
  E0904 20:46:58.263270      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:46:59.263377      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:00.264196      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:00.279622 21 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/04/24 20:47:00.294
  E0904 20:47:01.264714      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:02.265810      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:02.835464 21 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f11a811a-977e-43f4-a485-f29d373b636b",
      ResourceVersion: (string) (len=6) "238113",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861079620,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079620,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079620,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079620,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079620,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=75) "ReplicaSet \"test-cleanup-deployment-898f8f847\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 20:47:03.046008 21 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b28ff247-16c6-41af-862e-d37d175aedaa",
      ResourceVersion: (string) (len=6) "238103",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861079620,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "f11a811a-977e-43f4-a485-f29d373b636b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079620,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 31 31 61 38 31  31 61 2d 39 37 37 65 2d  |\"f11a811a-977e-|
              00000120  34 33 66 34 2d 61 34 38  35 2d 66 32 39 64 33 37  |43f4-a485-f29d37|
              00000130  33 62 36 33 36 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3b636b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 20:47:03.168858 21 deployment.go:67] Pod "test-cleanup-deployment-898f8f847-jvnbf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-jvnbf",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=14) "deployment-550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81139c80-490f-4864-b59a-dc9ef7ac924d",
      ResourceVersion: (string) (len=6) "238102",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861079620,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "b28ff247-16c6-41af-862e-d37d175aedaa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079620,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  38 66 66 32 34 37 2d 31  |d\":\"b28ff247-1|
              00000090  36 63 36 2d 34 31 61 66  2d 38 36 32 65 2d 64 33  |6c6-41af-862e-d3|
              000000a0  37 64 31 37 35 61 65 64  61 61 5c 22 7d 22 3a 7b  |7d175aedaa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 37  33 5c 22 7d 22 3a 7b 22  |.42.2.173\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2gfgf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2gfgf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-5-231.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079620,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861079620,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.231",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.231"
        }
      },
      PodIP: (string) (len=11) "10.42.2.173",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.173"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861079620,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861079621,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://19192e23f9292a40950f5b2255c68ae1fadd5ae0081772c3588e2a1bd7f1f4e5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2gfgf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0904 20:47:03.171757 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 20:47:03.266348      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-550" for this suite. @ 09/04/24 20:47:03.277
â€¢ [5.143 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 09/04/24 20:47:03.289
  I0904 20:47:03.289106 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:47:03.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:47:03.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:47:03.322
  STEP: Creating configMap with name projected-configmap-test-volume-map-85df1896-8d16-4fda-92d0-c70a05ffa6ce @ 09/04/24 20:47:03.327
  STEP: Creating a pod to test consume configMaps @ 09/04/24 20:47:03.356
  E0904 20:47:04.267287      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:05.268183      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:06.268788      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:07.269498      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:47:07.707
  I0904 20:47:07.711033 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-configmaps-592ca75a-cfe7-4ad2-8078-92aba07fc993 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 20:47:07.73
  I0904 20:47:07.773777 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5232" for this suite. @ 09/04/24 20:47:07.879
â€¢ [4.607 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/04/24 20:47:07.896
  I0904 20:47:07.896634 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 20:47:07.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:47:07.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:47:07.966
  STEP: Creating secret with name secret-test-88d76c7c-a323-4a2f-8550-81a1da829b84 @ 09/04/24 20:47:07.976
  STEP: Creating a pod to test consume secrets @ 09/04/24 20:47:07.988
  E0904 20:47:08.269813      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:09.270710      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:10.271004      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:11.271100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:12.271479      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:47:13.055
  I0904 20:47:13.060305 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-secrets-b2305ff4-4f64-44cd-a064-dec858890be7 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 20:47:13.07
  I0904 20:47:13.105667 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 20:47:13.272223      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "secrets-3362" for this suite. @ 09/04/24 20:47:13.599
â€¢ [5.714 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/04/24 20:47:13.61
  I0904 20:47:13.611061 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 20:47:13.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:47:13.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:47:13.666
  STEP: Creating configMap configmap-4253/configmap-test-e63320bd-d830-4b21-be0e-e32e7b2d9075 @ 09/04/24 20:47:13.669
  STEP: Creating a pod to test consume configMaps @ 09/04/24 20:47:13.68
  E0904 20:47:14.272715      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:15.272835      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:16.273396      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:17.273768      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:47:17.831
  I0904 20:47:17.834717 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-configmaps-8eb0db81-7048-4ed8-a06f-e2d616a715b7 container env-test: <nil>
  STEP: delete the pod @ 09/04/24 20:47:17.866
  I0904 20:47:17.902765 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4253" for this suite. @ 09/04/24 20:47:17.906
â€¢ [4.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 09/04/24 20:47:17.926
  I0904 20:47:17.926591 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:47:17.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:47:17.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:47:17.992
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:47:17.995
  E0904 20:47:18.273859      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:19.274096      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:20.274576      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:21.275193      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:47:22.129
  I0904 20:47:22.132956 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-0faae018-58aa-4864-90e4-4dc20e83bf5d container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:47:22.14
  I0904 20:47:22.182673 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5682" for this suite. @ 09/04/24 20:47:22.188
â€¢ [4.274 seconds]
------------------------------
SS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/04/24 20:47:22.201
  I0904 20:47:22.201449 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/04/24 20:47:22.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:47:22.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:47:22.259
  STEP: Setting up the test @ 09/04/24 20:47:22.261
  STEP: Creating hostNetwork=false pod @ 09/04/24 20:47:22.261
  E0904 20:47:22.275578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:23.275708      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:24.276145      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:25.276901      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:26.277200      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/04/24 20:47:26.906
  E0904 20:47:27.278319      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:28.278828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/04/24 20:47:28.944
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/04/24 20:47:28.945
  I0904 20:47:28.945179 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4754 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:47:28.945316 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:47:28.946191 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:47:28.946430 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4754/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0904 20:47:29.023011 21 exec_util.go:111] Exec stderr: ""
  I0904 20:47:29.023221 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4754 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:47:29.023243 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:47:29.023896 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:47:29.023984 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4754/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0904 20:47:29.075128 21 exec_util.go:111] Exec stderr: ""
  I0904 20:47:29.075359 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4754 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:47:29.075530 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:47:29.076369 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:47:29.076848 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4754/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0904 20:47:29.129054 21 exec_util.go:111] Exec stderr: ""
  I0904 20:47:29.129629 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4754 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:47:29.129760 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:47:29.130493 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:47:29.130570 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4754/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0904 20:47:29.189269 21 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/04/24 20:47:29.189
  I0904 20:47:29.189384 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4754 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:47:29.189403 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:47:29.190070 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:47:29.190154 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4754/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0904 20:47:29.245110 21 exec_util.go:111] Exec stderr: ""
  I0904 20:47:29.245185 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4754 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:47:29.245204 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:47:29.245896 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:47:29.245985 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4754/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  E0904 20:47:29.279550      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:29.292862 21 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/04/24 20:47:29.293
  I0904 20:47:29.293237 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4754 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:47:29.293446 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:47:29.294272 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:47:29.294393 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4754/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0904 20:47:29.347387 21 exec_util.go:111] Exec stderr: ""
  I0904 20:47:29.347461 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4754 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:47:29.347480 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:47:29.348118 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:47:29.348200 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4754/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0904 20:47:29.434101 21 exec_util.go:111] Exec stderr: ""
  I0904 20:47:29.434156 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4754 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:47:29.434172 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:47:29.434868 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:47:29.434983 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4754/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0904 20:47:29.488826 21 exec_util.go:111] Exec stderr: ""
  I0904 20:47:29.488960 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4754 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:47:29.488982 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:47:29.489616 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:47:29.489695 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4754/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0904 20:47:29.538883 21 exec_util.go:111] Exec stderr: ""
  I0904 20:47:29.539266 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4754" for this suite. @ 09/04/24 20:47:29.543
â€¢ [7.353 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/04/24 20:47:29.554
  I0904 20:47:29.554378 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/04/24 20:47:29.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:47:29.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:47:29.799
  STEP: creating a policy with variables @ 09/04/24 20:47:29.813
  STEP: waiting until the marker is denied @ 09/04/24 20:47:29.865
  STEP: testing a replicated Deployment to be allowed @ 09/04/24 20:47:30.179
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/04/24 20:47:30.217
  E0904 20:47:30.280355      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:30.425955 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2507" for this suite. @ 09/04/24 20:47:30.461
â€¢ [0.982 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/04/24 20:47:30.536
  I0904 20:47:30.536789 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 20:47:30.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:47:30.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:47:30.647
  STEP: Creating pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408 @ 09/04/24 20:47:30.651
  E0904 20:47:31.280930      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:32.281638      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 20:47:33.02
  I0904 20:47:33.023698 21 container_probe.go:1749] Initial restart count of pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df is 0
  I0904 20:47:33.026877 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:33.282323      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:34.282766      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:35.031316 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:35.283694      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:36.284027      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:37.039514 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:37.284881      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:38.284995      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:39.044297 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:39.285764      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:40.285896      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:41.048246 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:41.286595      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:42.286862      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:43.052705 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:43.287066      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:44.287390      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:45.057703 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:45.288100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:46.288244      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:47.063161 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:47.288379      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:48.288675      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:49.068530 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:49.289063      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:50.289155      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:51.073545 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:51.290096      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:52.290761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:53.077577 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:53.291851      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:54.291984      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:55.081945 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:55.292224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:56.292654      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:57.086464 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:57.293655      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:47:58.293998      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:47:59.091925 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:47:59.294612      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:00.295076      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:01.097183 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:01.295518      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:02.295769      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:03.101311 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:03.296594      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:04.296762      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:05.105513 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:05.297847      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:06.298303      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:07.110388 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:07.298721      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:08.298830      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:09.114756 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:09.298952      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:10.299091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:11.118968 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:11.300141      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:12.300730      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:13.124106 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:13.301663      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:14.301927      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:15.128141 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:15.302414      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:16.302935      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:17.133133 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:17.303503      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:18.304139      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:19.140632 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:19.304786      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:20.304914      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:21.144686 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:21.305906      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:22.306951      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:23.149423 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:23.307706      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:24.308192      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:25.154115 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:25.308317      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:26.308591      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:27.158323 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:27.309640      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:28.310347      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:29.163396 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:29.310559      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:30.310717      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:31.167899 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:31.311243      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:32.311803      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:33.172072 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:33.312431      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:34.312572      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:35.176440 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:35.313611      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:36.313884      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:37.181221 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  E0904 20:48:37.314399      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:38.315046      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:39.187656 21 container_probe.go:1759] Get pod test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df in namespace container-probe-4408
  I0904 20:48:39.187845 21 container_probe.go:1763] Restart count of pod container-probe-4408/test-grpc-3cc77804-489c-4a28-bc05-fd800004b0df is now 1 (1m6.164103008s elapsed)
  STEP: deleting the pod @ 09/04/24 20:48:39.188
  I0904 20:48:39.227746 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4408" for this suite. @ 09/04/24 20:48:39.232
â€¢ [68.711 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 09/04/24 20:48:39.252
  I0904 20:48:39.252603 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 20:48:39.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:48:39.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:48:39.294
  STEP: Counting existing ResourceQuota @ 09/04/24 20:48:39.297
  E0904 20:48:39.316021      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:40.316831      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:41.317882      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:42.318893      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:43.319622      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/24 20:48:44.302
  STEP: Ensuring resource quota status is calculated @ 09/04/24 20:48:44.311
  E0904 20:48:44.320700      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:45.320867      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 09/04/24 20:48:46.32
  E0904 20:48:46.320879      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures replicaset creation @ 09/04/24 20:48:46.355
  E0904 20:48:47.321799      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:48.322207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 09/04/24 20:48:48.36
  STEP: Ensuring resource quota status released usage @ 09/04/24 20:48:48.371
  E0904 20:48:49.322386      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:50.323015      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:50.376522 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-120" for this suite. @ 09/04/24 20:48:50.481
â€¢ [11.241 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/04/24 20:48:50.493
  I0904 20:48:50.493660 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename init-container @ 09/04/24 20:48:50.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:48:50.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:48:50.649
  STEP: creating the pod @ 09/04/24 20:48:50.653
  I0904 20:48:50.653507 21 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0904 20:48:51.323908      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:52.324203      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:53.324309      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:54.324477      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:55.324576      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:55.578572 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2650" for this suite. @ 09/04/24 20:48:55.584
â€¢ [5.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/04/24 20:48:55.596
  I0904 20:48:55.596712 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:48:55.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:48:55.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:48:55.651
  STEP: Setting up server cert @ 09/04/24 20:48:55.738
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:48:56.159
  STEP: Deploying the webhook pod @ 09/04/24 20:48:56.173
  STEP: Wait for the deployment to be ready @ 09/04/24 20:48:56.203
  I0904 20:48:56.223809 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:48:56.324941      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:57.326007      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:48:58.326763      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:48:58.512
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:48:58.545
  E0904 20:48:59.327100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:48:59.545755 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/04/24 20:48:59.556
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/04/24 20:48:59.557
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/04/24 20:48:59.557
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/04/24 20:48:59.557
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/04/24 20:48:59.558
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/04/24 20:48:59.558
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/04/24 20:48:59.56
  I0904 20:48:59.688273 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7801" for this suite. @ 09/04/24 20:48:59.71
  STEP: Destroying namespace "webhook-markers-7923" for this suite. @ 09/04/24 20:48:59.738
â€¢ [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 09/04/24 20:48:59.751
  I0904 20:48:59.751973 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 20:48:59.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:48:59.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:48:59.818
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/04/24 20:48:59.821
  E0904 20:49:00.327856      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:01.328228      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:02.328336      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:03.328499      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:49:03.962
  I0904 20:49:03.966350 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-da2a96a8-c957-4119-bbf8-2b56072b2d78 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 20:49:03.981
  I0904 20:49:04.024303 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9772" for this suite. @ 09/04/24 20:49:04.23
â€¢ [4.489 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 09/04/24 20:49:04.243
  I0904 20:49:04.243722 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename replication-controller @ 09/04/24 20:49:04.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:49:04.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:49:04.283
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/04/24 20:49:04.287
  E0904 20:49:04.329164      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:05.329333      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:06.329471      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/04/24 20:49:06.51
  STEP: Then the orphan pod is adopted @ 09/04/24 20:49:06.519
  E0904 20:49:07.329860      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:49:07.528531 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-210" for this suite. @ 09/04/24 20:49:07.533
â€¢ [3.305 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 09/04/24 20:49:07.549
  I0904 20:49:07.549956 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:49:07.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:49:07.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:49:07.603
  STEP: Creating the pod @ 09/04/24 20:49:07.607
  E0904 20:49:08.329997      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:09.330391      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:49:10.209074 21 pod_client.go:173] Successfully updated pod "labelsupdate66b8ec5b-4052-4e1c-8e08-8723d1af5652"
  E0904 20:49:10.330720      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:11.330856      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:49:12.245760 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 20:49:12.331924      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-8835" for this suite. @ 09/04/24 20:49:12.451
â€¢ [4.922 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/04/24 20:49:12.472
  I0904 20:49:12.472048 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename daemonsets @ 09/04/24 20:49:12.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:49:12.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:49:12.521
  STEP: Creating simple DaemonSet "daemon-set" @ 09/04/24 20:49:13.123
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/24 20:49:13.141
  I0904 20:49:13.324473 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 20:49:13.324733 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0904 20:49:13.332897      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:49:14.315479 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 20:49:14.315536 21 fixtures.go:130] Node ip-172-31-11-100.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0904 20:49:14.333835      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:15.334174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:49:15.552771 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0904 20:49:15.552829 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 09/04/24 20:49:15.555
  I0904 20:49:15.560067 21 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/04/24 20:49:15.56
  I0904 20:49:15.578289 21 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/04/24 20:49:15.578
  I0904 20:49:15.580520 21 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0904 20:49:15.580684 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.580837 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.581149 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.581280 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.581509 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.581751 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.581805 21 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-5727 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0904 20:49:15.581825 21 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/04/24 20:49:15.581
  STEP: watching for the daemon set status to be patched @ 09/04/24 20:49:15.592
  I0904 20:49:15.594775 21 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0904 20:49:15.594961 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.595283 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.595574 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.595860 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.596132 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.596467 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.596640 21 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-5727 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0904 20:49:15.596909 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0904 20:49:15.597094 21 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-5727 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0904 20:49:15.597248 21 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/24 20:49:15.609
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5727, will wait for the garbage collector to delete the pods @ 09/04/24 20:49:15.61
  I0904 20:49:15.673576 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.728311ms
  I0904 20:49:15.773887 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.309209ms
  E0904 20:49:16.335211      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:49:17.278288 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 20:49:17.278513 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  E0904 20:49:17.335736      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:18.336771      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:49:18.593171 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"239624"},"items":null}

  I0904 20:49:18.899947 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"239625"},"items":null}

  I0904 20:49:18.917066 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5727" for this suite. @ 09/04/24 20:49:18.92
â€¢ [6.459 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 09/04/24 20:49:18.932
  I0904 20:49:18.932329 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:49:18.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:49:18.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:49:18.981
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:49:18.985
  E0904 20:49:19.337437      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:20.337710      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:21.338735      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:22.338785      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:49:23.046
  I0904 20:49:23.049888 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-db9511be-0b07-4455-9c90-9358378f241b container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:49:23.056
  I0904 20:49:23.095553 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5135" for this suite. @ 09/04/24 20:49:23.1
â€¢ [4.185 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 09/04/24 20:49:23.118
  I0904 20:49:23.119002 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:49:23.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:49:23.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:49:23.166
  STEP: Creating the pod @ 09/04/24 20:49:23.169
  E0904 20:49:23.339279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:24.339810      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:25.340508      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:49:25.846209 21 pod_client.go:173] Successfully updated pod "labelsupdatecd4c0a88-2680-4a35-bc77-bb5b36345117"
  E0904 20:49:26.340901      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:27.340988      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:49:27.867511 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-91" for this suite. @ 09/04/24 20:49:27.872
â€¢ [4.764 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/04/24 20:49:27.883
  I0904 20:49:27.883959 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:49:27.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:49:27.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:49:27.912
  STEP: Setting up server cert @ 09/04/24 20:49:28.016
  E0904 20:49:28.341568      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:49:28.566
  STEP: Deploying the webhook pod @ 09/04/24 20:49:28.579
  STEP: Wait for the deployment to be ready @ 09/04/24 20:49:28.613
  I0904 20:49:28.626649 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 20:49:29.341696      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:30.342006      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:49:30.639
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:49:30.67
  E0904 20:49:31.342123      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:49:31.671677 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/04/24 20:49:31.679
  STEP: create a pod that should be updated by the webhook @ 09/04/24 20:49:31.717
  I0904 20:49:31.968350 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-104" for this suite. @ 09/04/24 20:49:32.005
  STEP: Destroying namespace "webhook-markers-833" for this suite. @ 09/04/24 20:49:32.057
â€¢ [4.208 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/04/24 20:49:32.091
  I0904 20:49:32.091788 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename subpath @ 09/04/24 20:49:32.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:49:32.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:49:32.301
  STEP: Setting up data @ 09/04/24 20:49:32.306
  E0904 20:49:32.343071      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating pod pod-subpath-test-projected-6vqc @ 09/04/24 20:49:32.363
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/24 20:49:32.363
  E0904 20:49:33.344168      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:34.344561      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:35.344721      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:36.344821      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:37.344931      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:38.345196      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:39.345331      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:40.345432      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:41.345572      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:42.345869      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:43.345969      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:44.346143      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:45.346609      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:46.346771      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:47.346978      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:48.347140      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:49.348023      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:50.348857      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:51.348859      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:52.348858      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:53.349052      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:54.349346      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:55.349437      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:56.349587      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:49:56.672
  I0904 20:49:56.676039 21 output.go:196] Trying to get logs from node ip-172-31-5-231.us-east-2.compute.internal pod pod-subpath-test-projected-6vqc container test-container-subpath-projected-6vqc: <nil>
  STEP: delete the pod @ 09/04/24 20:49:56.689
  STEP: Deleting pod pod-subpath-test-projected-6vqc @ 09/04/24 20:49:56.72
  I0904 20:49:56.720856 21 delete.go:62] Deleting pod "pod-subpath-test-projected-6vqc" in namespace "subpath-7992"
  I0904 20:49:56.725622 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7992" for this suite. @ 09/04/24 20:49:56.831
â€¢ [24.752 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/04/24 20:49:56.844
  I0904 20:49:56.844096 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:49:56.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:49:56.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:49:56.884
  STEP: Creating projection with secret that has name projected-secret-test-0561d797-95c6-440b-8652-d1da935cb4e9 @ 09/04/24 20:49:56.898
  STEP: Creating a pod to test consume secrets @ 09/04/24 20:49:56.916
  E0904 20:49:57.350403      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:58.350588      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:49:59.351045      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:00.351301      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:50:01.061
  I0904 20:50:01.065475 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-secrets-8603e1b8-64e1-424c-9dbb-ad7e239c8d51 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 20:50:01.074
  I0904 20:50:01.118768 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6800" for this suite. @ 09/04/24 20:50:01.242
â€¢ [4.416 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/04/24 20:50:01.26
  I0904 20:50:01.260376 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-runtime @ 09/04/24 20:50:01.261
  E0904 20:50:01.352162      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:50:01.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:50:01.396
  STEP: create the container @ 09/04/24 20:50:01.399
  W0904 20:50:01.715542      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/04/24 20:50:01.715
  E0904 20:50:02.352323      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:03.352725      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/04/24 20:50:04.072
  STEP: the container should be terminated @ 09/04/24 20:50:04.077
  STEP: the termination message should be set @ 09/04/24 20:50:04.077
  I0904 20:50:04.077751 21 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/04/24 20:50:04.077
  I0904 20:50:04.116510 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8573" for this suite. @ 09/04/24 20:50:04.324
â€¢ [3.077 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/04/24 20:50:04.337
  I0904 20:50:04.337462 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 20:50:04.338
  E0904 20:50:04.352998      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:50:04.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:50:04.44
  I0904 20:50:04.534046 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5878" for this suite. @ 09/04/24 20:50:04.841
â€¢ [0.522 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/04/24 20:50:04.859
  I0904 20:50:04.859501 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename watch @ 09/04/24 20:50:04.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:50:04.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:50:04.894
  STEP: creating a new configmap @ 09/04/24 20:50:04.898
  STEP: modifying the configmap once @ 09/04/24 20:50:04.908
  STEP: modifying the configmap a second time @ 09/04/24 20:50:04.921
  STEP: deleting the configmap @ 09/04/24 20:50:04.944
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/04/24 20:50:04.954
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/04/24 20:50:04.956
  I0904 20:50:04.957030 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8029  11be3c0b-fef4-4cb9-8856-f161bd0565c6 240020 0 2024-09-04 20:50:04 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-04 20:50:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:50:04.957331 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8029  11be3c0b-fef4-4cb9-8856-f161bd0565c6 240021 0 2024-09-04 20:50:04 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-04 20:50:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 20:50:04.957538 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8029" for this suite. @ 09/04/24 20:50:04.961
â€¢ [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 09/04/24 20:50:04.98
  I0904 20:50:04.980497 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 20:50:04.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:50:05.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:50:05.017
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/04/24 20:50:05.02
  E0904 20:50:05.353167      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:06.353634      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:07.354684      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:08.355082      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:50:09.076
  I0904 20:50:09.079251 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-6599816f-1808-4edf-9bd7-63f52c7b3c35 container test-container: <nil>
  STEP: delete the pod @ 09/04/24 20:50:09.085
  I0904 20:50:09.153495 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7660" for this suite. @ 09/04/24 20:50:09.158
â€¢ [4.192 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 09/04/24 20:50:09.173
  I0904 20:50:09.173169 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename emptydir @ 09/04/24 20:50:09.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:50:09.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:50:09.214
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/04/24 20:50:09.217
  E0904 20:50:09.355607      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:10.356204      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:11.356901      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:12.357192      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:50:13.284
  I0904 20:50:13.289781 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-4e79ca60-4dd3-42b9-b8aa-caa4c7f46b1e container test-container: <nil>
  STEP: delete the pod @ 09/04/24 20:50:13.297
  I0904 20:50:13.343831 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5943" for this suite. @ 09/04/24 20:50:13.348
  E0904 20:50:13.357471      21 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [4.193 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 09/04/24 20:50:13.365
  I0904 20:50:13.365793 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 20:50:13.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:50:13.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:50:13.516
  STEP: Counting existing ResourceQuota @ 09/04/24 20:50:13.519
  E0904 20:50:14.357622      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:15.357760      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:16.357880      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:17.358094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:18.358233      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/24 20:50:18.524
  STEP: Ensuring resource quota status is calculated @ 09/04/24 20:50:18.547
  E0904 20:50:19.358376      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:20.358518      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 09/04/24 20:50:20.55
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/04/24 20:50:20.887
  E0904 20:50:21.359544      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:22.359625      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/04/24 20:50:22.892
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/04/24 20:50:22.894
  STEP: Ensuring a pod cannot update its resource requirements @ 09/04/24 20:50:22.897
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/04/24 20:50:22.902
  E0904 20:50:23.360780      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:24.360932      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/04/24 20:50:24.909
  STEP: Ensuring resource quota status released the pod usage @ 09/04/24 20:50:24.962
  E0904 20:50:25.361068      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:26.361199      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:50:26.967291 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7094" for this suite. @ 09/04/24 20:50:26.971
â€¢ [13.617 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/04/24 20:50:26.983
  I0904 20:50:26.983563 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl-logs @ 09/04/24 20:50:26.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:50:27.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:50:27.136
  STEP: creating a pod @ 09/04/24 20:50:27.139
  I0904 20:50:27.139908 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-logs-3389 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0904 20:50:27.352903 21 builder.go:146] stderr: ""
  I0904 20:50:27.352961 21 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/04/24 20:50:27.353
  I0904 20:50:27.353086 21 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0904 20:50:27.361547      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:28.361834      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:29.362309      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:50:29.363738 21 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/04/24 20:50:29.363
  I0904 20:50:29.363851 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-logs-3389 logs logs-generator logs-generator'
  I0904 20:50:29.463480 21 builder.go:146] stderr: ""
  I0904 20:50:29.463551 21 builder.go:147] stdout: "I0904 20:50:28.145316       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/84v 215\nI0904 20:50:28.345429       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/5kw 540\nI0904 20:50:28.546038       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/zm6 309\nI0904 20:50:28.746249       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/2xm 465\nI0904 20:50:28.945578       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/v6jx 355\nI0904 20:50:29.145993       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/zvsp 489\nI0904 20:50:29.345364       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/kprv 599\n"
  STEP: limiting log lines @ 09/04/24 20:50:29.463
  I0904 20:50:29.463663 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-logs-3389 logs logs-generator logs-generator --tail=1'
  I0904 20:50:29.551230 21 builder.go:146] stderr: ""
  I0904 20:50:29.551290 21 builder.go:147] stdout: "I0904 20:50:29.546048       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/rxb 463\n"
  I0904 20:50:29.551311 21 logs.go:180] got output "I0904 20:50:29.546048       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/rxb 463\n"
  STEP: limiting log bytes @ 09/04/24 20:50:29.551
  I0904 20:50:29.551413 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-logs-3389 logs logs-generator logs-generator --limit-bytes=1'
  I0904 20:50:29.641493 21 builder.go:146] stderr: ""
  I0904 20:50:29.641541 21 builder.go:147] stdout: "I"
  I0904 20:50:29.641560 21 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/04/24 20:50:29.641
  I0904 20:50:29.641673 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-logs-3389 logs logs-generator logs-generator --tail=1 --timestamps'
  I0904 20:50:29.732021 21 builder.go:146] stderr: ""
  I0904 20:50:29.732095 21 builder.go:147] stdout: "2024-09-04T20:50:29.546230828Z I0904 20:50:29.546048       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/rxb 463\n"
  I0904 20:50:29.732417 21 logs.go:192] got output "2024-09-04T20:50:29.546230828Z I0904 20:50:29.546048       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/rxb 463\n"
  STEP: restricting to a time range @ 09/04/24 20:50:29.732
  E0904 20:50:30.362464      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:31.362901      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:50:32.232651 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-logs-3389 logs logs-generator logs-generator --since=1s'
  I0904 20:50:32.319150 21 builder.go:146] stderr: ""
  I0904 20:50:32.319217 21 builder.go:147] stdout: "I0904 20:50:31.345959       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/dnzx 212\nI0904 20:50:31.545393       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/bx8 449\nI0904 20:50:31.745776       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/9b2 202\nI0904 20:50:31.946172       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/vdn9 252\nI0904 20:50:32.145402       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/rcd 328\n"
  I0904 20:50:32.319516 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-logs-3389 logs logs-generator logs-generator --since=24h'
  E0904 20:50:32.363091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:50:32.411962 21 builder.go:146] stderr: ""
  I0904 20:50:32.412077 21 builder.go:147] stdout: "I0904 20:50:28.145316       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/84v 215\nI0904 20:50:28.345429       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/5kw 540\nI0904 20:50:28.546038       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/zm6 309\nI0904 20:50:28.746249       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/2xm 465\nI0904 20:50:28.945578       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/v6jx 355\nI0904 20:50:29.145993       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/zvsp 489\nI0904 20:50:29.345364       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/kprv 599\nI0904 20:50:29.546048       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/rxb 463\nI0904 20:50:29.745412       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/nsp 334\nI0904 20:50:29.947129       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/tg9 548\nI0904 20:50:30.145430       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/5hq 265\nI0904 20:50:30.345852       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/447h 511\nI0904 20:50:30.546293       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/rxz 321\nI0904 20:50:30.745725       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/rsh 561\nI0904 20:50:30.946200       1 logs_generator.go:76] 14 GET /api/v1/namespaces/kube-system/pods/zs2b 221\nI0904 20:50:31.145462       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/lg8 274\nI0904 20:50:31.345959       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/dnzx 212\nI0904 20:50:31.545393       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/bx8 449\nI0904 20:50:31.745776       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/9b2 202\nI0904 20:50:31.946172       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/vdn9 252\nI0904 20:50:32.145402       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/rcd 328\nI0904 20:50:32.347386       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/6xpz 429\n"
  I0904 20:50:32.412189 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-logs-3389 delete pod logs-generator'
  E0904 20:50:33.364136      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:50:33.714881 21 builder.go:146] stderr: ""
  I0904 20:50:33.715013 21 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0904 20:50:33.715143 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-3389" for this suite. @ 09/04/24 20:50:33.921
â€¢ [6.957 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 09/04/24 20:50:33.94
  I0904 20:50:33.940989 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 20:50:33.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:50:34.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:50:34.234
  I0904 20:50:34.238509 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-7053 version'
  I0904 20:50:34.308056 21 builder.go:146] stderr: ""
  I0904 20:50:34.308131 21 builder.go:147] stdout: "Client Version: v1.31.0\nKustomize Version: v5.4.2\nServer Version: v1.31.0+k3s1\n"
  I0904 20:50:34.308521 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7053" for this suite. @ 09/04/24 20:50:34.313
â€¢ [0.386 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/04/24 20:50:34.326
  I0904 20:50:34.327061 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename disruption @ 09/04/24 20:50:34.328
  E0904 20:50:34.364740      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:50:34.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:50:34.367
  STEP: creating the pdb @ 09/04/24 20:50:34.377
  STEP: Waiting for the pdb to be processed @ 09/04/24 20:50:34.397
  E0904 20:50:35.364853      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:36.364957      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/04/24 20:50:36.402
  STEP: Waiting for the pdb to be processed @ 09/04/24 20:50:36.415
  E0904 20:50:37.365391      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:38.365201      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 09/04/24 20:50:38.42
  STEP: Waiting for the pdb to be processed @ 09/04/24 20:50:38.438
  E0904 20:50:39.365721      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:40.365980      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 09/04/24 20:50:40.453
  I0904 20:50:40.457063 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5245" for this suite. @ 09/04/24 20:50:40.46
â€¢ [6.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 09/04/24 20:50:40.483
  I0904 20:50:40.483312 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename statefulset @ 09/04/24 20:50:40.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:50:40.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:50:40.54
  STEP: Creating service test in namespace statefulset-9560 @ 09/04/24 20:50:40.542
  STEP: Creating statefulset ss in namespace statefulset-9560 @ 09/04/24 20:50:40.572
  I0904 20:50:40.849342 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0904 20:50:41.367034      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:42.367080      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:43.367214      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:44.368183      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:45.368443      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:46.368690      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:47.368828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:48.368975      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:49.369039      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:50.369127      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:50:50.607934 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/04/24 20:50:50.616
  STEP: updating a scale subresource @ 09/04/24 20:50:50.619
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/04/24 20:50:50.643
  STEP: Patch a scale subresource @ 09/04/24 20:50:50.647
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/04/24 20:50:50.675
  I0904 20:50:50.702963 21 statefulset.go:138] Deleting all statefulset in ns statefulset-9560
  I0904 20:50:50.718713 21 rest.go:150] Scaling statefulset ss to 0
  E0904 20:50:51.369290      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:52.369749      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:53.370116      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:54.370442      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:55.370559      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:56.370692      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:57.370825      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:58.371154      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:50:59.371282      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:00.371395      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:51:01.012941 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0904 20:51:01.017161 21 rest.go:88] Deleting statefulset ss
  E0904 20:51:01.371454      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:51:01.545050 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9560" for this suite. @ 09/04/24 20:51:01.549
â€¢ [21.082 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/04/24 20:51:01.565
  I0904 20:51:01.565157 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 20:51:01.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:51:01.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:51:01.614
  STEP: creating a ConfigMap @ 09/04/24 20:51:01.659
  STEP: fetching the ConfigMap @ 09/04/24 20:51:01.675
  STEP: patching the ConfigMap @ 09/04/24 20:51:01.679
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/04/24 20:51:01.691
  STEP: deleting the ConfigMap by collection with a label selector @ 09/04/24 20:51:01.704
  STEP: listing all ConfigMaps in test namespace @ 09/04/24 20:51:01.717
  I0904 20:51:01.720428 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8212" for this suite. @ 09/04/24 20:51:01.724
â€¢ [0.171 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 09/04/24 20:51:01.736
  I0904 20:51:01.736481 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename gc @ 09/04/24 20:51:01.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:51:01.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:51:01.98
  STEP: create the deployment @ 09/04/24 20:51:01.986
  W0904 20:51:02.000578      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/04/24 20:51:02
  STEP: delete the deployment @ 09/04/24 20:51:02.324
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/04/24 20:51:02.344
  E0904 20:51:02.372164      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:03.372548      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/04/24 20:51:03.849
  W0904 20:51:04.055048      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0904 20:51:04.055178 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 20:51:04.055393 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6875" for this suite. @ 09/04/24 20:51:04.068
â€¢ [2.344 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/04/24 20:51:04.08
  I0904 20:51:04.080651 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename chunking @ 09/04/24 20:51:04.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:51:04.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:51:04.187
  STEP: creating a large number of resources @ 09/04/24 20:51:04.19
  E0904 20:51:04.372686      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:05.372811      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:06.373500      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:07.374386      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:08.374843      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:09.375145      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:10.375641      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:11.375719      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:12.376245      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:13.376794      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:14.377123      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:15.377746      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:16.378642      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:17.378736      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:18.379636      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:19.380007      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:20.380440      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:21.381470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/04/24 20:51:21.798
  I0904 20:51:21.836918 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0904 20:51:21.887778 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0904 20:51:21.942642 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0904 20:51:21.994473 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0904 20:51:22.038087 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0904 20:51:22.086591 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0904 20:51:22.136300 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0904 20:51:22.187640 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0904 20:51:22.244407 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0904 20:51:22.287592 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0904 20:51:22.336748 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  E0904 20:51:22.381988      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:51:22.386251 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0904 20:51:22.436829 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0904 20:51:22.486984 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0904 20:51:22.536767 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0904 20:51:22.586380 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0904 20:51:22.637385 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0904 20:51:22.686408 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0904 20:51:22.736984 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0904 20:51:22.787189 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0904 20:51:22.837922 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0904 20:51:22.886789 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0904 20:51:22.936241 21 chunking.go:98] Retrieved 17/17 results with rv 240998 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQwOTk4LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0904 20:51:22.986868 21 chunking.go:98] Retrieved 9/17 results with rv 240998 and continue 
  I0904 20:51:23.138233 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0904 20:51:23.145028 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0904 20:51:23.149537 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0904 20:51:23.188424 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0904 20:51:23.237146 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0904 20:51:23.288652 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0904 20:51:23.336791 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  E0904 20:51:23.382643      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:51:23.390632 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0904 20:51:23.436953 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0904 20:51:23.487141 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0904 20:51:23.538111 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0904 20:51:23.585995 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0904 20:51:23.638169 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0904 20:51:23.687155 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0904 20:51:23.745544 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0904 20:51:23.786377 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0904 20:51:23.836334 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0904 20:51:23.887298 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0904 20:51:23.936900 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0904 20:51:23.987271 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0904 20:51:24.037499 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0904 20:51:24.086683 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0904 20:51:24.136488 21 chunking.go:98] Retrieved 17/17 results with rv 241004 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA0LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0904 20:51:24.188102 21 chunking.go:98] Retrieved 9/17 results with rv 241004 and continue 
  I0904 20:51:24.338511 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0904 20:51:24.344920 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0904 20:51:24.358867 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  E0904 20:51:24.382753      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:51:24.387833 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0904 20:51:24.437266 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0904 20:51:24.487986 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0904 20:51:24.537203 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0904 20:51:24.586050 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0904 20:51:24.637290 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0904 20:51:24.687355 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0904 20:51:24.736256 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0904 20:51:24.786757 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0904 20:51:24.841955 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0904 20:51:24.886829 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0904 20:51:24.937145 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0904 20:51:24.995557 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0904 20:51:25.039058 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0904 20:51:25.089306 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0904 20:51:25.136977 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0904 20:51:25.187085 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0904 20:51:25.236704 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0904 20:51:25.286833 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0904 20:51:25.338515 21 chunking.go:98] Retrieved 17/17 results with rv 241008 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQxMDA4LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  E0904 20:51:25.383361      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:51:25.394400 21 chunking.go:98] Retrieved 9/17 results with rv 241008 and continue 
  STEP: retrieving those results all at once @ 09/04/24 20:51:25.394
  I0904 20:51:25.442142 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2212" for this suite. @ 09/04/24 20:51:25.588
â€¢ [21.519 seconds]
------------------------------
S
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 09/04/24 20:51:25.599
  I0904 20:51:25.599955 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 20:51:25.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:51:25.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:51:25.652
  STEP: creating an Endpoint @ 09/04/24 20:51:25.736
  STEP: waiting for available Endpoint @ 09/04/24 20:51:25.75
  STEP: listing all Endpoints @ 09/04/24 20:51:25.753
  STEP: updating the Endpoint @ 09/04/24 20:51:25.768
  STEP: fetching the Endpoint @ 09/04/24 20:51:25.786
  STEP: patching the Endpoint @ 09/04/24 20:51:25.791
  STEP: fetching the Endpoint @ 09/04/24 20:51:25.811
  STEP: deleting the Endpoint by Collection @ 09/04/24 20:51:25.814
  STEP: waiting for Endpoint deletion @ 09/04/24 20:51:25.825
  STEP: fetching the Endpoint @ 09/04/24 20:51:25.827
  I0904 20:51:25.843702 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2010" for this suite. @ 09/04/24 20:51:25.853
â€¢ [0.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 09/04/24 20:51:25.87
  I0904 20:51:25.870768 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename gc @ 09/04/24 20:51:25.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:51:26.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:51:26.028
  STEP: create the rc @ 09/04/24 20:51:26.035
  W0904 20:51:26.066679      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0904 20:51:26.384199      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:27.385279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:28.385837      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:29.386279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:30.386782      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:31.391150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/04/24 20:51:32.281
  E0904 20:51:32.398043      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 09/04/24 20:51:32.699
  E0904 20:51:33.398171      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:34.399446      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:35.399476      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:36.400216      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:37.400262      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/04/24 20:51:37.786
  E0904 20:51:38.401235      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:39.401468      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:40.402456      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:41.402737      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:42.402879      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:43.403142      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:44.403324      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:45.404174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:46.404284      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:47.405172      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:48.405273      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:49.405430      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:50.405548      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:51.405843      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:52.406536      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:53.406865      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:54.407169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:55.408194      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:56.408340      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:57.408808      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:58.409142      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:51:59.409448      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:00.409754      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:01.410061      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:02.410338      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:03.410763      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:04.411092      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:05.412148      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:06.412410      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:07.412496      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/04/24 20:52:07.797
  W0904 20:52:07.802619      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0904 20:52:07.802713 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 20:52:07.802859 21 delete.go:95] Deleting pod "simpletest.rc-28c5h" in namespace "gc-7216"
  I0904 20:52:07.840926 21 delete.go:95] Deleting pod "simpletest.rc-4c4fz" in namespace "gc-7216"
  I0904 20:52:07.903348 21 delete.go:95] Deleting pod "simpletest.rc-4hlml" in namespace "gc-7216"
  I0904 20:52:07.980452 21 delete.go:95] Deleting pod "simpletest.rc-4pdl6" in namespace "gc-7216"
  I0904 20:52:08.032993 21 delete.go:95] Deleting pod "simpletest.rc-4zknp" in namespace "gc-7216"
  I0904 20:52:08.076307 21 delete.go:95] Deleting pod "simpletest.rc-54hrk" in namespace "gc-7216"
  I0904 20:52:08.122677 21 delete.go:95] Deleting pod "simpletest.rc-5586c" in namespace "gc-7216"
  I0904 20:52:08.208667 21 delete.go:95] Deleting pod "simpletest.rc-56984" in namespace "gc-7216"
  I0904 20:52:08.315956 21 delete.go:95] Deleting pod "simpletest.rc-595bs" in namespace "gc-7216"
  I0904 20:52:08.396901 21 delete.go:95] Deleting pod "simpletest.rc-5g25k" in namespace "gc-7216"
  E0904 20:52:08.413119      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:08.462030 21 delete.go:95] Deleting pod "simpletest.rc-5mvwx" in namespace "gc-7216"
  I0904 20:52:08.574078 21 delete.go:95] Deleting pod "simpletest.rc-5tj45" in namespace "gc-7216"
  I0904 20:52:08.661302 21 delete.go:95] Deleting pod "simpletest.rc-64n8l" in namespace "gc-7216"
  I0904 20:52:08.749953 21 delete.go:95] Deleting pod "simpletest.rc-6tn66" in namespace "gc-7216"
  I0904 20:52:08.807888 21 delete.go:95] Deleting pod "simpletest.rc-6w4xz" in namespace "gc-7216"
  I0904 20:52:08.871572 21 delete.go:95] Deleting pod "simpletest.rc-799bp" in namespace "gc-7216"
  I0904 20:52:09.045105 21 delete.go:95] Deleting pod "simpletest.rc-8d7x4" in namespace "gc-7216"
  I0904 20:52:09.173387 21 delete.go:95] Deleting pod "simpletest.rc-9rsfj" in namespace "gc-7216"
  I0904 20:52:09.318900 21 delete.go:95] Deleting pod "simpletest.rc-blkl4" in namespace "gc-7216"
  I0904 20:52:09.398064 21 delete.go:95] Deleting pod "simpletest.rc-c25hf" in namespace "gc-7216"
  E0904 20:52:09.413379      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:09.499295 21 delete.go:95] Deleting pod "simpletest.rc-c2grn" in namespace "gc-7216"
  I0904 20:52:09.558162 21 delete.go:95] Deleting pod "simpletest.rc-crwk4" in namespace "gc-7216"
  I0904 20:52:09.695287 21 delete.go:95] Deleting pod "simpletest.rc-cwfm4" in namespace "gc-7216"
  I0904 20:52:09.803508 21 delete.go:95] Deleting pod "simpletest.rc-d4dhj" in namespace "gc-7216"
  I0904 20:52:09.895799 21 delete.go:95] Deleting pod "simpletest.rc-dr7k5" in namespace "gc-7216"
  I0904 20:52:10.041127 21 delete.go:95] Deleting pod "simpletest.rc-fb65j" in namespace "gc-7216"
  I0904 20:52:10.121930 21 delete.go:95] Deleting pod "simpletest.rc-fjj9c" in namespace "gc-7216"
  I0904 20:52:10.288445 21 delete.go:95] Deleting pod "simpletest.rc-fpvjl" in namespace "gc-7216"
  E0904 20:52:10.414267      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:10.432335 21 delete.go:95] Deleting pod "simpletest.rc-g74pm" in namespace "gc-7216"
  I0904 20:52:10.500043 21 delete.go:95] Deleting pod "simpletest.rc-hkj99" in namespace "gc-7216"
  I0904 20:52:10.566369 21 delete.go:95] Deleting pod "simpletest.rc-hkntn" in namespace "gc-7216"
  I0904 20:52:10.692529 21 delete.go:95] Deleting pod "simpletest.rc-hr5bw" in namespace "gc-7216"
  I0904 20:52:10.854337 21 delete.go:95] Deleting pod "simpletest.rc-ht96j" in namespace "gc-7216"
  I0904 20:52:10.987915 21 delete.go:95] Deleting pod "simpletest.rc-j7bcn" in namespace "gc-7216"
  I0904 20:52:11.077397 21 delete.go:95] Deleting pod "simpletest.rc-jd95n" in namespace "gc-7216"
  I0904 20:52:11.176425 21 delete.go:95] Deleting pod "simpletest.rc-jmlmv" in namespace "gc-7216"
  I0904 20:52:11.292456 21 delete.go:95] Deleting pod "simpletest.rc-jpv68" in namespace "gc-7216"
  I0904 20:52:11.387489 21 delete.go:95] Deleting pod "simpletest.rc-jsslh" in namespace "gc-7216"
  E0904 20:52:11.414853      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:11.503271 21 delete.go:95] Deleting pod "simpletest.rc-k75hd" in namespace "gc-7216"
  I0904 20:52:11.595704 21 delete.go:95] Deleting pod "simpletest.rc-kg6qd" in namespace "gc-7216"
  I0904 20:52:11.678769 21 delete.go:95] Deleting pod "simpletest.rc-kw8xg" in namespace "gc-7216"
  I0904 20:52:11.763165 21 delete.go:95] Deleting pod "simpletest.rc-l44pn" in namespace "gc-7216"
  I0904 20:52:11.939546 21 delete.go:95] Deleting pod "simpletest.rc-lcjcj" in namespace "gc-7216"
  I0904 20:52:12.065522 21 delete.go:95] Deleting pod "simpletest.rc-ldg56" in namespace "gc-7216"
  I0904 20:52:12.118896 21 delete.go:95] Deleting pod "simpletest.rc-lnm7q" in namespace "gc-7216"
  I0904 20:52:12.271699 21 delete.go:95] Deleting pod "simpletest.rc-mn9cz" in namespace "gc-7216"
  E0904 20:52:12.415207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:12.445447 21 delete.go:95] Deleting pod "simpletest.rc-mrdw5" in namespace "gc-7216"
  I0904 20:52:12.557700 21 delete.go:95] Deleting pod "simpletest.rc-mw92t" in namespace "gc-7216"
  I0904 20:52:12.657930 21 delete.go:95] Deleting pod "simpletest.rc-n4k5v" in namespace "gc-7216"
  I0904 20:52:12.741333 21 delete.go:95] Deleting pod "simpletest.rc-n8l92" in namespace "gc-7216"
  I0904 20:52:12.823172 21 delete.go:95] Deleting pod "simpletest.rc-nlpxl" in namespace "gc-7216"
  I0904 20:52:12.885109 21 delete.go:95] Deleting pod "simpletest.rc-nm7p4" in namespace "gc-7216"
  I0904 20:52:13.019050 21 delete.go:95] Deleting pod "simpletest.rc-nwn8h" in namespace "gc-7216"
  I0904 20:52:13.120878 21 delete.go:95] Deleting pod "simpletest.rc-p22sc" in namespace "gc-7216"
  I0904 20:52:13.213844 21 delete.go:95] Deleting pod "simpletest.rc-p47jl" in namespace "gc-7216"
  I0904 20:52:13.292627 21 delete.go:95] Deleting pod "simpletest.rc-p659s" in namespace "gc-7216"
  I0904 20:52:13.343637 21 delete.go:95] Deleting pod "simpletest.rc-p9n9s" in namespace "gc-7216"
  I0904 20:52:13.402630 21 delete.go:95] Deleting pod "simpletest.rc-pbhqz" in namespace "gc-7216"
  E0904 20:52:13.416300      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:13.469946 21 delete.go:95] Deleting pod "simpletest.rc-pgp2s" in namespace "gc-7216"
  I0904 20:52:13.528288 21 delete.go:95] Deleting pod "simpletest.rc-pwd7g" in namespace "gc-7216"
  I0904 20:52:13.569720 21 delete.go:95] Deleting pod "simpletest.rc-q27hq" in namespace "gc-7216"
  I0904 20:52:13.647429 21 delete.go:95] Deleting pod "simpletest.rc-q455w" in namespace "gc-7216"
  I0904 20:52:13.682682 21 delete.go:95] Deleting pod "simpletest.rc-q6wb7" in namespace "gc-7216"
  I0904 20:52:13.736599 21 delete.go:95] Deleting pod "simpletest.rc-qc8mb" in namespace "gc-7216"
  I0904 20:52:13.791980 21 delete.go:95] Deleting pod "simpletest.rc-qcb4x" in namespace "gc-7216"
  I0904 20:52:13.867880 21 delete.go:95] Deleting pod "simpletest.rc-r9685" in namespace "gc-7216"
  I0904 20:52:13.939684 21 delete.go:95] Deleting pod "simpletest.rc-rj52s" in namespace "gc-7216"
  I0904 20:52:14.025812 21 delete.go:95] Deleting pod "simpletest.rc-rj5sq" in namespace "gc-7216"
  I0904 20:52:14.139715 21 delete.go:95] Deleting pod "simpletest.rc-rpq6s" in namespace "gc-7216"
  I0904 20:52:14.226033 21 delete.go:95] Deleting pod "simpletest.rc-rprw6" in namespace "gc-7216"
  I0904 20:52:14.257300 21 delete.go:95] Deleting pod "simpletest.rc-rs4p9" in namespace "gc-7216"
  I0904 20:52:14.348663 21 delete.go:95] Deleting pod "simpletest.rc-rv9d6" in namespace "gc-7216"
  E0904 20:52:14.417140      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:14.503594 21 delete.go:95] Deleting pod "simpletest.rc-shdkt" in namespace "gc-7216"
  I0904 20:52:14.633058 21 delete.go:95] Deleting pod "simpletest.rc-skvwf" in namespace "gc-7216"
  I0904 20:52:14.756581 21 delete.go:95] Deleting pod "simpletest.rc-sns66" in namespace "gc-7216"
  I0904 20:52:14.843337 21 delete.go:95] Deleting pod "simpletest.rc-stl2b" in namespace "gc-7216"
  I0904 20:52:14.911651 21 delete.go:95] Deleting pod "simpletest.rc-sv684" in namespace "gc-7216"
  I0904 20:52:14.982043 21 delete.go:95] Deleting pod "simpletest.rc-sx9g9" in namespace "gc-7216"
  I0904 20:52:15.087598 21 delete.go:95] Deleting pod "simpletest.rc-t8kcx" in namespace "gc-7216"
  I0904 20:52:15.160090 21 delete.go:95] Deleting pod "simpletest.rc-tmmz7" in namespace "gc-7216"
  I0904 20:52:15.214882 21 delete.go:95] Deleting pod "simpletest.rc-tth28" in namespace "gc-7216"
  I0904 20:52:15.278225 21 delete.go:95] Deleting pod "simpletest.rc-twh9c" in namespace "gc-7216"
  I0904 20:52:15.337730 21 delete.go:95] Deleting pod "simpletest.rc-v5f9d" in namespace "gc-7216"
  E0904 20:52:15.418192      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:15.447482 21 delete.go:95] Deleting pod "simpletest.rc-v5g6z" in namespace "gc-7216"
  I0904 20:52:15.507967 21 delete.go:95] Deleting pod "simpletest.rc-vkvtv" in namespace "gc-7216"
  I0904 20:52:15.601650 21 delete.go:95] Deleting pod "simpletest.rc-w5kb9" in namespace "gc-7216"
  I0904 20:52:15.716106 21 delete.go:95] Deleting pod "simpletest.rc-wfvbd" in namespace "gc-7216"
  I0904 20:52:15.791773 21 delete.go:95] Deleting pod "simpletest.rc-wg6jj" in namespace "gc-7216"
  I0904 20:52:15.851282 21 delete.go:95] Deleting pod "simpletest.rc-whrbx" in namespace "gc-7216"
  I0904 20:52:15.933978 21 delete.go:95] Deleting pod "simpletest.rc-wnhfd" in namespace "gc-7216"
  I0904 20:52:16.073121 21 delete.go:95] Deleting pod "simpletest.rc-wtlhl" in namespace "gc-7216"
  I0904 20:52:16.141538 21 delete.go:95] Deleting pod "simpletest.rc-x4pl7" in namespace "gc-7216"
  I0904 20:52:16.219655 21 delete.go:95] Deleting pod "simpletest.rc-x7nq2" in namespace "gc-7216"
  I0904 20:52:16.291383 21 delete.go:95] Deleting pod "simpletest.rc-xmpv5" in namespace "gc-7216"
  I0904 20:52:16.338201 21 delete.go:95] Deleting pod "simpletest.rc-xndhf" in namespace "gc-7216"
  E0904 20:52:16.418878      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:16.444300 21 delete.go:95] Deleting pod "simpletest.rc-xs4zf" in namespace "gc-7216"
  I0904 20:52:16.513463 21 delete.go:95] Deleting pod "simpletest.rc-z4mx7" in namespace "gc-7216"
  I0904 20:52:16.653016 21 delete.go:95] Deleting pod "simpletest.rc-zflq4" in namespace "gc-7216"
  I0904 20:52:16.758606 21 delete.go:95] Deleting pod "simpletest.rc-zl77j" in namespace "gc-7216"
  I0904 20:52:16.856839 21 delete.go:95] Deleting pod "simpletest.rc-zrq8q" in namespace "gc-7216"
  I0904 20:52:16.945638 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7216" for this suite. @ 09/04/24 20:52:16.96
â€¢ [51.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 09/04/24 20:52:16.996
  I0904 20:52:16.996631 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename job @ 09/04/24 20:52:16.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:52:17.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:52:17.166
  STEP: Creating a job @ 09/04/24 20:52:17.169
  STEP: Ensuring active pods == parallelism @ 09/04/24 20:52:17.193
  E0904 20:52:17.419431      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:18.419623      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:19.419786      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:20.419901      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 09/04/24 20:52:21.4
  E0904 20:52:21.420934      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:21.928003 21 pod_client.go:173] Successfully updated pod "adopt-release-djwsz"
  STEP: Checking that the Job readopts the Pod @ 09/04/24 20:52:21.928
  E0904 20:52:22.421018      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:23.421162      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 09/04/24 20:52:23.95
  E0904 20:52:24.421879      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:24.478828 21 pod_client.go:173] Successfully updated pod "adopt-release-djwsz"
  STEP: Checking that the Job releases the Pod @ 09/04/24 20:52:24.479
  E0904 20:52:25.422778      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:26.423091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:26.497025 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7494" for this suite. @ 09/04/24 20:52:26.502
â€¢ [9.536 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/04/24 20:52:26.533
  I0904 20:52:26.533668 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/24 20:52:26.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:52:26.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:52:26.634
  STEP: fetching the /apis discovery document @ 09/04/24 20:52:26.636
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/04/24 20:52:26.639
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/04/24 20:52:26.639
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/04/24 20:52:26.639
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/04/24 20:52:26.64
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/04/24 20:52:26.64
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/04/24 20:52:26.643
  I0904 20:52:26.643326 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1427" for this suite. @ 09/04/24 20:52:26.649
â€¢ [0.131 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/04/24 20:52:26.664
  I0904 20:52:26.665038 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename replicaset @ 09/04/24 20:52:26.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:52:26.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:52:26.872
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/04/24 20:52:26.875
  E0904 20:52:27.423396      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:28.423527      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/04/24 20:52:29.348
  STEP: Then the orphan pod is adopted @ 09/04/24 20:52:29.363
  E0904 20:52:29.424102      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/04/24 20:52:30.374
  I0904 20:52:30.378893 21 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/04/24 20:52:30.4
  E0904 20:52:30.424722      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:30.429421 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9014" for this suite. @ 09/04/24 20:52:30.467
â€¢ [3.830 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 09/04/24 20:52:30.495
  I0904 20:52:30.495252 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 20:52:30.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:52:30.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:52:30.556
  STEP: creating service in namespace services-5144 @ 09/04/24 20:52:30.56
  STEP: creating service affinity-clusterip in namespace services-5144 @ 09/04/24 20:52:30.56
  STEP: creating replication controller affinity-clusterip in namespace services-5144 @ 09/04/24 20:52:30.615
  I0904 20:52:30.634805      21 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-5144, replica count: 3
  E0904 20:52:31.424850      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:32.425344      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:33.426219      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:33.685699      21 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 20:52:33.698688 21 resource.go:361] Creating new exec pod
  E0904 20:52:34.427279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:35.427392      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:36.428375      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:36.737206 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5144 exec execpod-affinityhc4wj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0904 20:52:36.896392 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0904 20:52:36.896463 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 20:52:36.896549 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5144 exec execpod-affinityhc4wj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.199.231 80'
  I0904 20:52:37.049105 21 builder.go:146] stderr: "+ + echonc hostName -v\n -t -w 2 10.43.199.231 80\nConnection to 10.43.199.231 80 port [tcp/http] succeeded!\n"
  I0904 20:52:37.049162 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 20:52:37.049242 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-5144 exec execpod-affinityhc4wj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.199.231:80/ ; done'
  I0904 20:52:37.292328 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.199.231:80/\n"
  I0904 20:52:37.292403 21 builder.go:147] stdout: "\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm\naffinity-clusterip-b4xfm"
  I0904 20:52:37.292607 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292631 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292647 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292703 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292727 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292742 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292756 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292770 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292785 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292799 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292826 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292871 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292919 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.292968 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.293037 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.293056 21 service.go:242] Received response from host: affinity-clusterip-b4xfm
  I0904 20:52:37.293214 21 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5144, will wait for the garbage collector to delete the pods @ 09/04/24 20:52:37.352
  I0904 20:52:37.430780 21 resources.go:139] Deleting ReplicationController affinity-clusterip took: 17.729932ms
  E0904 20:52:37.431060      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:37.531389 21 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.619245ms
  E0904 20:52:38.432118      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:39.433142      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:40.433929      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:40.702200 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5144" for this suite. @ 09/04/24 20:52:40.908
â€¢ [10.429 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/04/24 20:52:40.924
  I0904 20:52:40.924594 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename podtemplate @ 09/04/24 20:52:40.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:52:41.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:52:41.01
  STEP: Create set of pod templates @ 09/04/24 20:52:41.015
  I0904 20:52:41.028609 21 podtemplates.go:143] created test-podtemplate-1
  I0904 20:52:41.043398 21 podtemplates.go:143] created test-podtemplate-2
  I0904 20:52:41.054455 21 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/04/24 20:52:41.054
  STEP: delete collection of pod templates @ 09/04/24 20:52:41.057
  I0904 20:52:41.057702 21 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/04/24 20:52:41.089
  I0904 20:52:41.089636 21 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0904 20:52:41.092620 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7041" for this suite. @ 09/04/24 20:52:41.096
â€¢ [0.191 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 09/04/24 20:52:41.115
  I0904 20:52:41.115707 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 20:52:41.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:52:41.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:52:41.179
  I0904 20:52:41.183213 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:52:41.434816      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:42.434938      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/04/24 20:52:42.949
  I0904 20:52:42.949621 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-3002 --namespace=crd-publish-openapi-3002 create -f -'
  I0904 20:52:43.065000 21 builder.go:146] stderr: ""
  I0904 20:52:43.065057 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4855-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0904 20:52:43.065119 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-3002 --namespace=crd-publish-openapi-3002 delete e2e-test-crd-publish-openapi-4855-crds test-cr'
  I0904 20:52:43.166737 21 builder.go:146] stderr: ""
  I0904 20:52:43.166807 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4855-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0904 20:52:43.167095 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-3002 --namespace=crd-publish-openapi-3002 apply -f -'
  I0904 20:52:43.271642 21 builder.go:146] stderr: ""
  I0904 20:52:43.271703 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4855-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0904 20:52:43.271941 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-3002 --namespace=crd-publish-openapi-3002 delete e2e-test-crd-publish-openapi-4855-crds test-cr'
  I0904 20:52:43.363438 21 builder.go:146] stderr: ""
  I0904 20:52:43.363494 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4855-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/04/24 20:52:43.363
  I0904 20:52:43.363584 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-3002 explain e2e-test-crd-publish-openapi-4855-crds'
  E0904 20:52:43.435279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:43.445952 21 builder.go:146] stderr: ""
  I0904 20:52:43.446123 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-4855-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0904 20:52:44.436175      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:45.363713 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3002" for this suite. @ 09/04/24 20:52:45.37
â€¢ [4.272 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 09/04/24 20:52:45.388
  I0904 20:52:45.388602 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename kubectl @ 09/04/24 20:52:45.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:52:45.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:52:45.431
  STEP: starting the proxy server @ 09/04/24 20:52:45.435
  I0904 20:52:45.435564 21 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=kubectl-4994 proxy -p 0 --disable-filter'
  E0904 20:52:45.436925      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: curling proxy /api/ output @ 09/04/24 20:52:45.51
  I0904 20:52:45.521912 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4994" for this suite. @ 09/04/24 20:52:45.525
  I0904 20:52:45.528113 21 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:41315

  I0904 20:52:45.528259 21 kubectl.go:2229] kubectl proxy stderr: W0904 20:52:45.509928     947 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

â€¢ [0.157 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 09/04/24 20:52:45.546
  I0904 20:52:45.546067 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename services @ 09/04/24 20:52:45.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:52:45.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:52:45.691
  STEP: creating service multiprotocol-test in namespace services-8268 @ 09/04/24 20:52:45.695
  STEP: creating pod pod1 in namespace services-8268 @ 09/04/24 20:52:45.723
  STEP: Creating pod pod1 in namespace services-8268 @ 09/04/24 20:52:45.723
  E0904 20:52:46.437335      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:47.438104      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-8268 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/04/24 20:52:47.778
  I0904 20:52:47.999742 21 service.go:4392] successfully validated that service multiprotocol-test in namespace services-8268 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/04/24 20:52:47.999
  I0904 20:52:47.999847 21 resource.go:361] Creating new exec pod
  E0904 20:52:48.438106      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:49.438443      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:50.050358 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-8268 exec execpodjgw6v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.33.161 80'
  I0904 20:52:50.191433 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.33.161 80\nConnection to 10.43.33.161 80 port [tcp/http] succeeded!\n"
  I0904 20:52:50.191505 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 20:52:50.191607 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-8268 exec execpodjgw6v -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.33.161 80'
  E0904 20:52:50.439257      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:51.439393      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:52.439586      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:53.440147      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:54.339902 21 builder.go:146] stderr: "+ + echonc -v hostName -u\n -w 2 10.43.33.161 80\nConnection to 10.43.33.161 80 port [udp/*] succeeded!\n"
  I0904 20:52:54.339962 21 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/04/24 20:52:54.339
  I0904 20:52:54.353668 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-8268 exec execpodjgw6v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.33.161 80'
  E0904 20:52:54.441399      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:54.516893 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.33.161 80\nConnection to 10.43.33.161 80 port [tcp/http] succeeded!\n"
  I0904 20:52:54.516953 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 20:52:54.517372 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-8268 exec execpodjgw6v -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.33.161 80'
  E0904 20:52:55.441416      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:56.442046      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:57.442211      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:52:58.442351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:52:58.666012 21 builder.go:146] stderr: "+ + ncecho -v hostName -u\n -w 2 10.43.33.161 80\nConnection to 10.43.33.161 80 port [udp/*] succeeded!\n"
  I0904 20:52:58.666086 21 builder.go:147] stdout: ""
  I0904 20:52:58.666152 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-8268 exec execpodjgw6v -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.33.161 80'
  E0904 20:52:59.442567      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:00.442848      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:01.443063      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:02.444053      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:53:02.801180 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.33.161 80\nConnection to 10.43.33.161 80 port [udp/*] succeeded!\n"
  I0904 20:53:02.801409 21 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/04/24 20:53:02.801
  I0904 20:53:02.826645 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-8268 exec execpodjgw6v -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.33.161 80'
  E0904 20:53:03.444355      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:04.444578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:05.444758      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:06.445011      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:53:06.979628 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.33.161 80\nConnection to 10.43.33.161 80 port [udp/*] succeeded!\n"
  I0904 20:53:06.979705 21 builder.go:147] stdout: "pod1"
  I0904 20:53:06.979814 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-8268 exec execpodjgw6v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.33.161 80'
  E0904 20:53:07.446070      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:08.446219      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:53:09.113477 21 builder.go:135] rc: 1
  I0904 20:53:09.113685 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-8268 exec execpodjgw6v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.33.161 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.33.161 80
  nc: connect to 10.43.33.161 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0904 20:53:09.113829 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-8268 exec execpodjgw6v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.33.161 80'
  E0904 20:53:09.446810      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:10.446833      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:53:11.246151 21 builder.go:135] rc: 1
  I0904 20:53:11.246227 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-8268 exec execpodjgw6v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.33.161 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.33.161 80
  nc: connect to 10.43.33.161 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0904 20:53:11.246339 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-8268 exec execpodjgw6v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.33.161 80'
  E0904 20:53:11.447695      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:12.450064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:53:13.418094 21 builder.go:135] rc: 1
  I0904 20:53:13.418173 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=services-8268 exec execpodjgw6v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.33.161 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.33.161 80
  nc: connect to 10.43.33.161 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0904 20:53:13.418432 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8268" for this suite. @ 09/04/24 20:53:13.423
â€¢ [27.888 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 09/04/24 20:53:13.434
  I0904 20:53:13.434313 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename dns @ 09/04/24 20:53:13.435
  E0904 20:53:13.450173      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:53:13.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:53:13.478
  STEP: Creating a test headless service @ 09/04/24 20:53:13.481
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4047.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4047.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4047.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4047.svc.cluster.local;sleep 1; done
   @ 09/04/24 20:53:13.493
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4047.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4047.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4047.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4047.svc.cluster.local;sleep 1; done
   @ 09/04/24 20:53:13.493
  STEP: creating a pod to probe DNS @ 09/04/24 20:53:13.493
  STEP: submitting the pod to kubernetes @ 09/04/24 20:53:13.493
  E0904 20:53:14.450312      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:15.450448      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:16.450693      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:17.450796      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/24 20:53:17.571
  STEP: looking for the results for each expected name from probers @ 09/04/24 20:53:17.574
  I0904 20:53:17.580441 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local from pod dns-4047/dns-test-07908fe4-28a9-431b-9e28-49e406f627ce: the server could not find the requested resource (get pods dns-test-07908fe4-28a9-431b-9e28-49e406f627ce)
  I0904 20:53:17.584102 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local from pod dns-4047/dns-test-07908fe4-28a9-431b-9e28-49e406f627ce: the server could not find the requested resource (get pods dns-test-07908fe4-28a9-431b-9e28-49e406f627ce)
  I0904 20:53:17.587401 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-4047.svc.cluster.local from pod dns-4047/dns-test-07908fe4-28a9-431b-9e28-49e406f627ce: the server could not find the requested resource (get pods dns-test-07908fe4-28a9-431b-9e28-49e406f627ce)
  I0904 20:53:17.591158 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-4047.svc.cluster.local from pod dns-4047/dns-test-07908fe4-28a9-431b-9e28-49e406f627ce: the server could not find the requested resource (get pods dns-test-07908fe4-28a9-431b-9e28-49e406f627ce)
  I0904 20:53:17.595244 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local from pod dns-4047/dns-test-07908fe4-28a9-431b-9e28-49e406f627ce: the server could not find the requested resource (get pods dns-test-07908fe4-28a9-431b-9e28-49e406f627ce)
  I0904 20:53:17.599582 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local from pod dns-4047/dns-test-07908fe4-28a9-431b-9e28-49e406f627ce: the server could not find the requested resource (get pods dns-test-07908fe4-28a9-431b-9e28-49e406f627ce)
  I0904 20:53:17.602846 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-4047.svc.cluster.local from pod dns-4047/dns-test-07908fe4-28a9-431b-9e28-49e406f627ce: the server could not find the requested resource (get pods dns-test-07908fe4-28a9-431b-9e28-49e406f627ce)
  I0904 20:53:17.606171 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-4047.svc.cluster.local from pod dns-4047/dns-test-07908fe4-28a9-431b-9e28-49e406f627ce: the server could not find the requested resource (get pods dns-test-07908fe4-28a9-431b-9e28-49e406f627ce)
  I0904 20:53:17.606221 21 dns_common.go:489] Lookups using dns-4047/dns-test-07908fe4-28a9-431b-9e28-49e406f627ce failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4047.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4047.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4047.svc.cluster.local jessie_udp@dns-test-service-2.dns-4047.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4047.svc.cluster.local]

  I0904 20:53:17.625124 21 dns_common.go:495] Pod client logs for webserver: 
  I0904 20:53:17.631245 21 dns_common.go:495] Pod client logs for querier: 
  I0904 20:53:17.637505 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0904 20:53:18.451097      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:19.451217      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:20.451457      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:21.451603      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:22.451728      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:53:22.604725 21 dns_common.go:527] DNS probes using dns-4047/dns-test-07908fe4-28a9-431b-9e28-49e406f627ce succeeded

  STEP: deleting the pod @ 09/04/24 20:53:22.605
  STEP: deleting the test headless service @ 09/04/24 20:53:22.661
  I0904 20:53:22.719762 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4047" for this suite. @ 09/04/24 20:53:22.724
â€¢ [9.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 09/04/24 20:53:22.743
  I0904 20:53:22.743243 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename job @ 09/04/24 20:53:22.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:53:22.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:53:22.78
  STEP: Creating a job @ 09/04/24 20:53:22.783
  STEP: Ensuring job reaches completions @ 09/04/24 20:53:22.801
  E0904 20:53:23.451837      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:24.451915      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:25.452048      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:26.452157      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:27.452967      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:28.453098      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:29.453315      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:30.453665      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:31.454248      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:32.455003      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:33.455833      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:34.456142      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:53:34.811590 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2210" for this suite. @ 09/04/24 20:53:34.815
â€¢ [12.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/04/24 20:53:34.826
  I0904 20:53:34.826581 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename disruption @ 09/04/24 20:53:34.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:53:34.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:53:34.877
  STEP: Waiting for the pdb to be processed @ 09/04/24 20:53:34.897
  STEP: Waiting for all pods to be running @ 09/04/24 20:53:34.979
  I0904 20:53:35.008285 21 disruption.go:691] running pods: 0 < 3
  E0904 20:53:35.456584      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:36.456729      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:53:36.988902 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2362" for this suite. @ 09/04/24 20:53:36.993
â€¢ [2.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 09/04/24 20:53:37.005
  I0904 20:53:37.005896 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename namespaces @ 09/04/24 20:53:37.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:53:37.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:53:37.153
  STEP: Creating a test namespace @ 09/04/24 20:53:37.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:53:37.244
  STEP: Creating a pod in the namespace @ 09/04/24 20:53:37.247
  STEP: Waiting for the pod to have running status @ 09/04/24 20:53:37.292
  E0904 20:53:37.457431      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:38.457974      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/04/24 20:53:39.301
  STEP: Waiting for the namespace to be removed. @ 09/04/24 20:53:39.316
  E0904 20:53:39.458350      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:40.458528      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:41.459523      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:42.460139      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:43.461087      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:44.461586      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:45.462280      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:46.462451      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:47.462843      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:48.463831      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:49.464793      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:50.465727      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:51.466496      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:52.467487      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:53.468102      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:54.468149      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:55.468742      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/04/24 20:53:56.319
  STEP: Verifying there are no pods in the namespace @ 09/04/24 20:53:56.364
  I0904 20:53:56.367482 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4546" for this suite. @ 09/04/24 20:53:56.372
  STEP: Destroying namespace "nsdeletetest-2765" for this suite. @ 09/04/24 20:53:56.385
  I0904 20:53:56.388204 21 framework.go:370] Namespace nsdeletetest-2765 was already deleted
  STEP: Destroying namespace "nsdeletetest-2980" for this suite. @ 09/04/24 20:53:56.388
â€¢ [19.408 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/04/24 20:53:56.414
  I0904 20:53:56.414080 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:53:56.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:53:56.465
  E0904 20:53:56.469115      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:53:56.47
  STEP: Creating secret with name projected-secret-test-82f1e6fc-bc66-4f14-b019-7af2c64f74db @ 09/04/24 20:53:56.473
  STEP: Creating a pod to test consume secrets @ 09/04/24 20:53:56.484
  E0904 20:53:57.469502      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:58.470068      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:53:59.469989      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:00.470276      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:54:00.625
  I0904 20:54:00.628364 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-secrets-27606d03-2ffd-492f-9d2b-daf3c9d80319 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/24 20:54:00.634
  I0904 20:54:00.667281 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6781" for this suite. @ 09/04/24 20:54:00.672
â€¢ [4.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/04/24 20:54:00.707
  I0904 20:54:00.707810 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename certificates @ 09/04/24 20:54:00.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:54:00.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:54:00.749
  STEP: getting /apis @ 09/04/24 20:54:01.451
  STEP: getting /apis/certificates.k8s.io @ 09/04/24 20:54:01.456
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/04/24 20:54:01.458
  STEP: creating @ 09/04/24 20:54:01.459
  E0904 20:54:01.470422      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting @ 09/04/24 20:54:01.655
  STEP: listing @ 09/04/24 20:54:01.658
  STEP: watching @ 09/04/24 20:54:01.661
  I0904 20:54:01.661661 21 certificates.go:316] starting watch
  STEP: patching @ 09/04/24 20:54:01.662
  STEP: updating @ 09/04/24 20:54:01.672
  I0904 20:54:01.687042 21 certificates.go:332] waiting for watch events with expected annotations
  I0904 20:54:01.687104 21 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/04/24 20:54:01.687
  STEP: patching /approval @ 09/04/24 20:54:01.69
  STEP: updating /approval @ 09/04/24 20:54:01.7
  STEP: getting /status @ 09/04/24 20:54:01.715
  STEP: patching /status @ 09/04/24 20:54:01.718
  STEP: updating /status @ 09/04/24 20:54:01.733
  STEP: deleting @ 09/04/24 20:54:01.759
  STEP: deleting a collection @ 09/04/24 20:54:01.774
  I0904 20:54:01.797503 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5991" for this suite. @ 09/04/24 20:54:01.801
â€¢ [1.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/04/24 20:54:01.812
  I0904 20:54:01.812055 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename svc-latency @ 09/04/24 20:54:01.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:54:01.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:54:01.88
  I0904 20:54:01.883206 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-4776 @ 09/04/24 20:54:01.884
  I0904 20:54:01.896347      21 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4776, replica count: 1
  E0904 20:54:02.471320      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:02.947425      21 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0904 20:54:03.075880 21 service_latency.go:356] Created: latency-svc-mtf78
  I0904 20:54:03.102682 21 service_latency.go:363] Got endpoints: latency-svc-mtf78 [54.559607ms]
  I0904 20:54:03.131973 21 service_latency.go:356] Created: latency-svc-mtxhn
  I0904 20:54:03.151372 21 service_latency.go:356] Created: latency-svc-q2lkz
  I0904 20:54:03.174390 21 service_latency.go:363] Got endpoints: latency-svc-mtxhn [71.579034ms]
  I0904 20:54:03.189643 21 service_latency.go:363] Got endpoints: latency-svc-q2lkz [86.536069ms]
  I0904 20:54:03.190388 21 service_latency.go:356] Created: latency-svc-5mbst
  I0904 20:54:03.220465 21 service_latency.go:363] Got endpoints: latency-svc-5mbst [116.810855ms]
  I0904 20:54:03.229395 21 service_latency.go:356] Created: latency-svc-mrp8p
  I0904 20:54:03.248020 21 service_latency.go:356] Created: latency-svc-k84m2
  I0904 20:54:03.275778 21 service_latency.go:363] Got endpoints: latency-svc-mrp8p [172.301646ms]
  I0904 20:54:03.292130 21 service_latency.go:363] Got endpoints: latency-svc-k84m2 [188.312718ms]
  I0904 20:54:03.293111 21 service_latency.go:356] Created: latency-svc-ndkv5
  I0904 20:54:03.339149 21 service_latency.go:363] Got endpoints: latency-svc-ndkv5 [235.861025ms]
  I0904 20:54:03.339954 21 service_latency.go:356] Created: latency-svc-dh6gg
  I0904 20:54:03.370646 21 service_latency.go:363] Got endpoints: latency-svc-dh6gg [265.360148ms]
  I0904 20:54:03.373072 21 service_latency.go:356] Created: latency-svc-24r8s
  I0904 20:54:03.393779 21 service_latency.go:356] Created: latency-svc-slfpn
  I0904 20:54:03.403732 21 service_latency.go:363] Got endpoints: latency-svc-24r8s [299.092967ms]
  I0904 20:54:03.425772 21 service_latency.go:363] Got endpoints: latency-svc-slfpn [321.793825ms]
  I0904 20:54:03.457394 21 service_latency.go:356] Created: latency-svc-r855x
  I0904 20:54:03.464217 21 service_latency.go:356] Created: latency-svc-st768
  E0904 20:54:03.471592      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:03.490045 21 service_latency.go:363] Got endpoints: latency-svc-r855x [385.246681ms]
  I0904 20:54:03.500631 21 service_latency.go:363] Got endpoints: latency-svc-st768 [396.485168ms]
  I0904 20:54:03.512351 21 service_latency.go:356] Created: latency-svc-j4mxw
  I0904 20:54:03.531394 21 service_latency.go:356] Created: latency-svc-cgrwq
  I0904 20:54:03.575470 21 service_latency.go:363] Got endpoints: latency-svc-cgrwq [471.156801ms]
  I0904 20:54:03.575892 21 service_latency.go:363] Got endpoints: latency-svc-j4mxw [470.932777ms]
  I0904 20:54:03.576510 21 service_latency.go:356] Created: latency-svc-d7tfv
  I0904 20:54:03.594233 21 service_latency.go:356] Created: latency-svc-qv6q8
  I0904 20:54:03.630659 21 service_latency.go:363] Got endpoints: latency-svc-qv6q8 [526.182535ms]
  I0904 20:54:03.630775 21 service_latency.go:363] Got endpoints: latency-svc-d7tfv [525.652687ms]
  I0904 20:54:03.634090 21 service_latency.go:356] Created: latency-svc-n8gf6
  I0904 20:54:03.661751 21 service_latency.go:363] Got endpoints: latency-svc-n8gf6 [487.314924ms]
  I0904 20:54:03.664469 21 service_latency.go:356] Created: latency-svc-q2qnh
  I0904 20:54:03.696811 21 service_latency.go:363] Got endpoints: latency-svc-q2qnh [506.909862ms]
  I0904 20:54:03.704211 21 service_latency.go:356] Created: latency-svc-5fwr6
  I0904 20:54:03.744005 21 service_latency.go:363] Got endpoints: latency-svc-5fwr6 [523.478693ms]
  I0904 20:54:03.746505 21 service_latency.go:356] Created: latency-svc-pqwsk
  I0904 20:54:03.773942 21 service_latency.go:363] Got endpoints: latency-svc-pqwsk [497.990083ms]
  I0904 20:54:03.776488 21 service_latency.go:356] Created: latency-svc-7bstd
  I0904 20:54:03.809315 21 service_latency.go:363] Got endpoints: latency-svc-7bstd [516.9806ms]
  I0904 20:54:03.810052 21 service_latency.go:356] Created: latency-svc-6p9rc
  I0904 20:54:03.834086 21 service_latency.go:356] Created: latency-svc-zqlh7
  I0904 20:54:03.849410 21 service_latency.go:363] Got endpoints: latency-svc-6p9rc [510.044052ms]
  I0904 20:54:03.857575 21 service_latency.go:356] Created: latency-svc-f5ldl
  I0904 20:54:03.885857 21 service_latency.go:363] Got endpoints: latency-svc-zqlh7 [515.02604ms]
  I0904 20:54:03.891124 21 service_latency.go:363] Got endpoints: latency-svc-f5ldl [487.237273ms]
  I0904 20:54:03.908410 21 service_latency.go:356] Created: latency-svc-92dg7
  I0904 20:54:03.932800 21 service_latency.go:363] Got endpoints: latency-svc-92dg7 [506.854061ms]
  I0904 20:54:03.945058 21 service_latency.go:356] Created: latency-svc-8fgp6
  I0904 20:54:03.969962 21 service_latency.go:363] Got endpoints: latency-svc-8fgp6 [479.725996ms]
  I0904 20:54:03.976761 21 service_latency.go:356] Created: latency-svc-gnw6j
  I0904 20:54:04.002349 21 service_latency.go:356] Created: latency-svc-bhhmc
  I0904 20:54:04.007123 21 service_latency.go:363] Got endpoints: latency-svc-gnw6j [506.422455ms]
  I0904 20:54:04.047932 21 service_latency.go:356] Created: latency-svc-7hbsx
  I0904 20:54:04.047924 21 service_latency.go:363] Got endpoints: latency-svc-bhhmc [472.278098ms]
  I0904 20:54:04.072180 21 service_latency.go:363] Got endpoints: latency-svc-7hbsx [496.044541ms]
  I0904 20:54:04.089933 21 service_latency.go:356] Created: latency-svc-b7f8h
  I0904 20:54:04.121725 21 service_latency.go:363] Got endpoints: latency-svc-b7f8h [490.839879ms]
  I0904 20:54:04.138459 21 service_latency.go:356] Created: latency-svc-sfqzv
  I0904 20:54:04.164624 21 service_latency.go:363] Got endpoints: latency-svc-sfqzv [533.330367ms]
  I0904 20:54:04.166284 21 service_latency.go:356] Created: latency-svc-srf2w
  I0904 20:54:04.194367 21 service_latency.go:363] Got endpoints: latency-svc-srf2w [532.412193ms]
  I0904 20:54:04.202057 21 service_latency.go:356] Created: latency-svc-pv66n
  I0904 20:54:04.225756 21 service_latency.go:363] Got endpoints: latency-svc-pv66n [528.869528ms]
  I0904 20:54:04.237699 21 service_latency.go:356] Created: latency-svc-f66fv
  I0904 20:54:04.262176 21 service_latency.go:356] Created: latency-svc-dfvq6
  I0904 20:54:04.287586 21 service_latency.go:363] Got endpoints: latency-svc-f66fv [543.334295ms]
  I0904 20:54:04.293731 21 service_latency.go:356] Created: latency-svc-j6dzw
  I0904 20:54:04.324866 21 service_latency.go:356] Created: latency-svc-cnbwq
  I0904 20:54:04.326900 21 service_latency.go:363] Got endpoints: latency-svc-dfvq6 [552.715952ms]
  I0904 20:54:04.327008 21 service_latency.go:363] Got endpoints: latency-svc-j6dzw [516.833638ms]
  I0904 20:54:04.346144 21 service_latency.go:356] Created: latency-svc-sdcmt
  I0904 20:54:04.368325 21 service_latency.go:363] Got endpoints: latency-svc-cnbwq [518.85368ms]
  I0904 20:54:04.398741 21 service_latency.go:363] Got endpoints: latency-svc-sdcmt [512.801235ms]
  I0904 20:54:04.400091 21 service_latency.go:356] Created: latency-svc-bftzp
  I0904 20:54:04.420178 21 service_latency.go:356] Created: latency-svc-scmwc
  I0904 20:54:04.448047 21 service_latency.go:363] Got endpoints: latency-svc-bftzp [556.859597ms]
  I0904 20:54:04.453950 21 service_latency.go:363] Got endpoints: latency-svc-scmwc [521.021284ms]
  I0904 20:54:04.461475 21 service_latency.go:356] Created: latency-svc-2cprn
  E0904 20:54:04.471951      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:04.485911 21 service_latency.go:356] Created: latency-svc-kbcrm
  I0904 20:54:04.496246 21 service_latency.go:363] Got endpoints: latency-svc-2cprn [526.098713ms]
  I0904 20:54:04.515656 21 service_latency.go:363] Got endpoints: latency-svc-kbcrm [508.319124ms]
  I0904 20:54:04.527607 21 service_latency.go:356] Created: latency-svc-vvfvf
  I0904 20:54:04.556782 21 service_latency.go:363] Got endpoints: latency-svc-vvfvf [508.458457ms]
  I0904 20:54:04.559509 21 service_latency.go:356] Created: latency-svc-kkvms
  I0904 20:54:04.584769 21 service_latency.go:363] Got endpoints: latency-svc-kkvms [512.46956ms]
  I0904 20:54:04.597892 21 service_latency.go:356] Created: latency-svc-dxn2b
  I0904 20:54:04.634039 21 service_latency.go:356] Created: latency-svc-6wgvt
  I0904 20:54:04.636705 21 service_latency.go:363] Got endpoints: latency-svc-dxn2b [514.920929ms]
  I0904 20:54:04.665963 21 service_latency.go:356] Created: latency-svc-42d99
  I0904 20:54:04.671479 21 service_latency.go:363] Got endpoints: latency-svc-6wgvt [506.693359ms]
  I0904 20:54:04.694283 21 service_latency.go:363] Got endpoints: latency-svc-42d99 [499.860012ms]
  I0904 20:54:04.703091 21 service_latency.go:356] Created: latency-svc-nvzf7
  I0904 20:54:04.722319 21 service_latency.go:356] Created: latency-svc-6jb47
  I0904 20:54:04.750323 21 service_latency.go:363] Got endpoints: latency-svc-nvzf7 [524.414407ms]
  I0904 20:54:04.752960 21 service_latency.go:363] Got endpoints: latency-svc-6jb47 [465.307199ms]
  I0904 20:54:04.765299 21 service_latency.go:356] Created: latency-svc-bhxm8
  I0904 20:54:04.792136 21 service_latency.go:356] Created: latency-svc-d8pps
  I0904 20:54:04.807758 21 service_latency.go:363] Got endpoints: latency-svc-bhxm8 [480.697721ms]
  I0904 20:54:04.821796 21 service_latency.go:356] Created: latency-svc-xcgxf
  I0904 20:54:04.837616 21 service_latency.go:363] Got endpoints: latency-svc-d8pps [510.295555ms]
  I0904 20:54:04.841601 21 service_latency.go:363] Got endpoints: latency-svc-xcgxf [473.218933ms]
  I0904 20:54:04.880231 21 service_latency.go:356] Created: latency-svc-5sh7t
  I0904 20:54:04.898617 21 service_latency.go:356] Created: latency-svc-gpl8g
  I0904 20:54:04.940771 21 service_latency.go:363] Got endpoints: latency-svc-gpl8g [492.540447ms]
  I0904 20:54:04.941001 21 service_latency.go:363] Got endpoints: latency-svc-5sh7t [542.002903ms]
  I0904 20:54:04.946697 21 service_latency.go:356] Created: latency-svc-lwjdb
  I0904 20:54:04.967139 21 service_latency.go:356] Created: latency-svc-l52dj
  I0904 20:54:04.990289 21 service_latency.go:363] Got endpoints: latency-svc-lwjdb [536.141842ms]
  I0904 20:54:05.001578 21 service_latency.go:363] Got endpoints: latency-svc-l52dj [505.159925ms]
  I0904 20:54:05.013197 21 service_latency.go:356] Created: latency-svc-8lmjp
  I0904 20:54:05.038279 21 service_latency.go:356] Created: latency-svc-8snkh
  I0904 20:54:05.050542 21 service_latency.go:363] Got endpoints: latency-svc-8lmjp [534.821511ms]
  I0904 20:54:05.073811 21 service_latency.go:356] Created: latency-svc-qtxks
  I0904 20:54:05.079491 21 service_latency.go:363] Got endpoints: latency-svc-8snkh [522.66158ms]
  I0904 20:54:05.118865 21 service_latency.go:363] Got endpoints: latency-svc-qtxks [534.032758ms]
  I0904 20:54:05.126025 21 service_latency.go:356] Created: latency-svc-5c2hj
  I0904 20:54:05.144190 21 service_latency.go:356] Created: latency-svc-x7v86
  I0904 20:54:05.180666 21 service_latency.go:363] Got endpoints: latency-svc-5c2hj [543.910554ms]
  I0904 20:54:05.181474 21 service_latency.go:356] Created: latency-svc-z4rd7
  I0904 20:54:05.226302 21 service_latency.go:363] Got endpoints: latency-svc-z4rd7 [531.765803ms]
  I0904 20:54:05.226448 21 service_latency.go:363] Got endpoints: latency-svc-x7v86 [554.919376ms]
  I0904 20:54:05.234224 21 service_latency.go:356] Created: latency-svc-qk968
  I0904 20:54:05.261522 21 service_latency.go:363] Got endpoints: latency-svc-qk968 [511.027547ms]
  I0904 20:54:05.271631 21 service_latency.go:356] Created: latency-svc-rkj7z
  I0904 20:54:05.300758 21 service_latency.go:363] Got endpoints: latency-svc-rkj7z [547.54482ms]
  I0904 20:54:05.311459 21 service_latency.go:356] Created: latency-svc-bvptv
  I0904 20:54:05.348750 21 service_latency.go:363] Got endpoints: latency-svc-bvptv [540.837315ms]
  I0904 20:54:05.359516 21 service_latency.go:356] Created: latency-svc-7sxl7
  I0904 20:54:05.391798 21 service_latency.go:363] Got endpoints: latency-svc-7sxl7 [554.081893ms]
  I0904 20:54:05.397571 21 service_latency.go:356] Created: latency-svc-fhfr5
  I0904 20:54:05.432101 21 service_latency.go:356] Created: latency-svc-lrbhv
  I0904 20:54:05.433037 21 service_latency.go:363] Got endpoints: latency-svc-fhfr5 [591.379169ms]
  I0904 20:54:05.457463 21 service_latency.go:363] Got endpoints: latency-svc-lrbhv [516.179128ms]
  I0904 20:54:05.466388 21 service_latency.go:356] Created: latency-svc-brkj2
  E0904 20:54:05.472740      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:05.488478 21 service_latency.go:363] Got endpoints: latency-svc-brkj2 [547.640402ms]
  I0904 20:54:05.500616 21 service_latency.go:356] Created: latency-svc-l5pp2
  I0904 20:54:05.521753 21 service_latency.go:363] Got endpoints: latency-svc-l5pp2 [531.395487ms]
  I0904 20:54:05.536546 21 service_latency.go:356] Created: latency-svc-sqqvq
  I0904 20:54:05.574512 21 service_latency.go:363] Got endpoints: latency-svc-sqqvq [572.885579ms]
  I0904 20:54:05.576422 21 service_latency.go:356] Created: latency-svc-vppkf
  I0904 20:54:05.607932 21 service_latency.go:363] Got endpoints: latency-svc-vppkf [557.314314ms]
  I0904 20:54:05.616497 21 service_latency.go:356] Created: latency-svc-6kshd
  I0904 20:54:05.644933 21 service_latency.go:363] Got endpoints: latency-svc-6kshd [565.232099ms]
  I0904 20:54:05.657014 21 service_latency.go:356] Created: latency-svc-5gq9s
  I0904 20:54:05.693416 21 service_latency.go:363] Got endpoints: latency-svc-5gq9s [574.463613ms]
  I0904 20:54:05.693941 21 service_latency.go:356] Created: latency-svc-c6jgk
  I0904 20:54:05.720123 21 service_latency.go:363] Got endpoints: latency-svc-c6jgk [539.23219ms]
  I0904 20:54:05.729548 21 service_latency.go:356] Created: latency-svc-rhrfj
  I0904 20:54:05.760290 21 service_latency.go:363] Got endpoints: latency-svc-rhrfj [533.386598ms]
  I0904 20:54:05.766347 21 service_latency.go:356] Created: latency-svc-qrpdg
  I0904 20:54:05.811618 21 service_latency.go:363] Got endpoints: latency-svc-qrpdg [584.945159ms]
  I0904 20:54:05.813479 21 service_latency.go:356] Created: latency-svc-klx4n
  I0904 20:54:05.819878 21 service_latency.go:363] Got endpoints: latency-svc-klx4n [558.128806ms]
  I0904 20:54:05.845144 21 service_latency.go:356] Created: latency-svc-zr867
  I0904 20:54:05.874226 21 service_latency.go:363] Got endpoints: latency-svc-zr867 [573.394617ms]
  I0904 20:54:05.881340 21 service_latency.go:356] Created: latency-svc-qlxhm
  I0904 20:54:05.905129 21 service_latency.go:356] Created: latency-svc-t4ps5
  I0904 20:54:05.928374 21 service_latency.go:363] Got endpoints: latency-svc-t4ps5 [536.512338ms]
  I0904 20:54:05.928474 21 service_latency.go:363] Got endpoints: latency-svc-qlxhm [579.654885ms]
  I0904 20:54:05.958447 21 service_latency.go:356] Created: latency-svc-ml2fn
  I0904 20:54:05.976202 21 service_latency.go:356] Created: latency-svc-ldr6j
  I0904 20:54:06.000142 21 service_latency.go:363] Got endpoints: latency-svc-ml2fn [567.003026ms]
  I0904 20:54:06.016716 21 service_latency.go:363] Got endpoints: latency-svc-ldr6j [559.060141ms]
  I0904 20:54:06.020151 21 service_latency.go:356] Created: latency-svc-gcq57
  I0904 20:54:06.059161 21 service_latency.go:363] Got endpoints: latency-svc-gcq57 [570.629453ms]
  I0904 20:54:06.066114 21 service_latency.go:356] Created: latency-svc-bt57q
  I0904 20:54:06.084740 21 service_latency.go:356] Created: latency-svc-mhkr7
  I0904 20:54:06.100673 21 service_latency.go:363] Got endpoints: latency-svc-bt57q [578.866632ms]
  I0904 20:54:06.125957 21 service_latency.go:363] Got endpoints: latency-svc-mhkr7 [551.192978ms]
  I0904 20:54:06.160012 21 service_latency.go:356] Created: latency-svc-xtxrx
  I0904 20:54:06.178165 21 service_latency.go:363] Got endpoints: latency-svc-xtxrx [569.973653ms]
  I0904 20:54:06.191078 21 service_latency.go:356] Created: latency-svc-dstj8
  I0904 20:54:06.219775 21 service_latency.go:356] Created: latency-svc-kpm68
  I0904 20:54:06.224234 21 service_latency.go:363] Got endpoints: latency-svc-dstj8 [579.239168ms]
  I0904 20:54:06.253564 21 service_latency.go:356] Created: latency-svc-gj27j
  I0904 20:54:06.254125 21 service_latency.go:363] Got endpoints: latency-svc-kpm68 [560.648836ms]
  I0904 20:54:06.300355 21 service_latency.go:363] Got endpoints: latency-svc-gj27j [580.131433ms]
  I0904 20:54:06.300697 21 service_latency.go:356] Created: latency-svc-crv8c
  I0904 20:54:06.319171 21 service_latency.go:356] Created: latency-svc-tdlnd
  I0904 20:54:06.342276 21 service_latency.go:363] Got endpoints: latency-svc-crv8c [581.755458ms]
  I0904 20:54:06.364928 21 service_latency.go:363] Got endpoints: latency-svc-tdlnd [553.2466ms]
  I0904 20:54:06.364979 21 service_latency.go:356] Created: latency-svc-l8n8q
  I0904 20:54:06.396893 21 service_latency.go:363] Got endpoints: latency-svc-l8n8q [576.958313ms]
  I0904 20:54:06.405248 21 service_latency.go:356] Created: latency-svc-gdgkv
  I0904 20:54:06.432706 21 service_latency.go:356] Created: latency-svc-8h4r6
  I0904 20:54:06.448778 21 service_latency.go:363] Got endpoints: latency-svc-gdgkv [574.497254ms]
  I0904 20:54:06.459159 21 service_latency.go:363] Got endpoints: latency-svc-8h4r6 [530.585494ms]
  E0904 20:54:06.473709      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:06.477131 21 service_latency.go:356] Created: latency-svc-h88rk
  I0904 20:54:06.510608 21 service_latency.go:363] Got endpoints: latency-svc-h88rk [581.812719ms]
  I0904 20:54:06.510942 21 service_latency.go:356] Created: latency-svc-mj4kp
  I0904 20:54:06.543772 21 service_latency.go:363] Got endpoints: latency-svc-mj4kp [543.559658ms]
  I0904 20:54:06.545363 21 service_latency.go:356] Created: latency-svc-fvh28
  I0904 20:54:06.587888 21 service_latency.go:363] Got endpoints: latency-svc-fvh28 [570.910138ms]
  I0904 20:54:06.588733 21 service_latency.go:356] Created: latency-svc-cv4fn
  I0904 20:54:06.628673 21 service_latency.go:356] Created: latency-svc-xlvc2
  I0904 20:54:06.630075 21 service_latency.go:363] Got endpoints: latency-svc-cv4fn [570.659844ms]
  I0904 20:54:06.638489 21 service_latency.go:363] Got endpoints: latency-svc-xlvc2 [537.605364ms]
  I0904 20:54:06.657057 21 service_latency.go:356] Created: latency-svc-45fkk
  I0904 20:54:06.698352 21 service_latency.go:363] Got endpoints: latency-svc-45fkk [572.140187ms]
  I0904 20:54:06.698390 21 service_latency.go:356] Created: latency-svc-r8hz2
  I0904 20:54:06.728452 21 service_latency.go:363] Got endpoints: latency-svc-r8hz2 [550.05934ms]
  I0904 20:54:06.744681 21 service_latency.go:356] Created: latency-svc-hb6r8
  I0904 20:54:06.757537 21 service_latency.go:363] Got endpoints: latency-svc-hb6r8 [533.240846ms]
  I0904 20:54:06.775974 21 service_latency.go:356] Created: latency-svc-hlrv8
  I0904 20:54:06.797708 21 service_latency.go:356] Created: latency-svc-qrdwh
  I0904 20:54:06.808642 21 service_latency.go:363] Got endpoints: latency-svc-hlrv8 [554.349968ms]
  I0904 20:54:06.828409 21 service_latency.go:356] Created: latency-svc-5ksx8
  I0904 20:54:06.860696 21 service_latency.go:356] Created: latency-svc-6f4rc
  I0904 20:54:06.862853 21 service_latency.go:363] Got endpoints: latency-svc-qrdwh [561.978597ms]
  I0904 20:54:06.882017 21 service_latency.go:356] Created: latency-svc-s77gg
  I0904 20:54:06.906871 21 service_latency.go:356] Created: latency-svc-d8qqk
  I0904 20:54:06.917971 21 service_latency.go:363] Got endpoints: latency-svc-5ksx8 [575.632552ms]
  I0904 20:54:06.937425 21 service_latency.go:356] Created: latency-svc-78bxr
  I0904 20:54:06.982772 21 service_latency.go:363] Got endpoints: latency-svc-6f4rc [617.637422ms]
  I0904 20:54:06.984145 21 service_latency.go:356] Created: latency-svc-hjw6d
  I0904 20:54:07.013438 21 service_latency.go:363] Got endpoints: latency-svc-s77gg [616.479844ms]
  I0904 20:54:07.019905 21 service_latency.go:356] Created: latency-svc-tj2nw
  I0904 20:54:07.045159 21 service_latency.go:356] Created: latency-svc-rvdlr
  I0904 20:54:07.064695 21 service_latency.go:363] Got endpoints: latency-svc-d8qqk [615.747862ms]
  I0904 20:54:07.073654 21 service_latency.go:356] Created: latency-svc-96g9q
  I0904 20:54:07.106591 21 service_latency.go:363] Got endpoints: latency-svc-78bxr [647.374609ms]
  I0904 20:54:07.128264 21 service_latency.go:356] Created: latency-svc-xt4kb
  I0904 20:54:07.163866 21 service_latency.go:356] Created: latency-svc-qkx2w
  I0904 20:54:07.168448 21 service_latency.go:363] Got endpoints: latency-svc-hjw6d [657.387176ms]
  I0904 20:54:07.193037 21 service_latency.go:356] Created: latency-svc-p4jdb
  I0904 20:54:07.219144 21 service_latency.go:363] Got endpoints: latency-svc-tj2nw [675.145185ms]
  I0904 20:54:07.228164 21 service_latency.go:356] Created: latency-svc-zv45w
  I0904 20:54:07.250182 21 service_latency.go:356] Created: latency-svc-cm6cx
  I0904 20:54:07.265406 21 service_latency.go:363] Got endpoints: latency-svc-rvdlr [677.279369ms]
  I0904 20:54:07.284299 21 service_latency.go:356] Created: latency-svc-4hwd9
  I0904 20:54:07.311749 21 service_latency.go:363] Got endpoints: latency-svc-96g9q [681.545705ms]
  I0904 20:54:07.336843 21 service_latency.go:356] Created: latency-svc-rlrmr
  I0904 20:54:07.365007 21 service_latency.go:363] Got endpoints: latency-svc-xt4kb [726.451511ms]
  I0904 20:54:07.376772 21 service_latency.go:356] Created: latency-svc-r97n4
  I0904 20:54:07.408186 21 service_latency.go:363] Got endpoints: latency-svc-qkx2w [709.639067ms]
  I0904 20:54:07.408189 21 service_latency.go:356] Created: latency-svc-rxzv8
  I0904 20:54:07.432564 21 service_latency.go:356] Created: latency-svc-whppg
  I0904 20:54:07.462070 21 service_latency.go:363] Got endpoints: latency-svc-p4jdb [733.559873ms]
  I0904 20:54:07.463342 21 service_latency.go:356] Created: latency-svc-rqzj5
  E0904 20:54:07.474256      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:07.490893 21 service_latency.go:356] Created: latency-svc-qnrpr
  I0904 20:54:07.508321 21 service_latency.go:363] Got endpoints: latency-svc-zv45w [750.735762ms]
  I0904 20:54:07.529215 21 service_latency.go:356] Created: latency-svc-dxnwd
  I0904 20:54:07.569702 21 service_latency.go:363] Got endpoints: latency-svc-cm6cx [760.865861ms]
  I0904 20:54:07.570127 21 service_latency.go:356] Created: latency-svc-48c6r
  I0904 20:54:07.593337 21 service_latency.go:356] Created: latency-svc-ngwnl
  I0904 20:54:07.603729 21 service_latency.go:363] Got endpoints: latency-svc-4hwd9 [740.831887ms]
  I0904 20:54:07.628526 21 service_latency.go:356] Created: latency-svc-8r47d
  I0904 20:54:07.658817 21 service_latency.go:356] Created: latency-svc-dnd6k
  I0904 20:54:07.686000 21 service_latency.go:363] Got endpoints: latency-svc-rlrmr [767.666428ms]
  I0904 20:54:07.699756 21 service_latency.go:356] Created: latency-svc-gff6x
  I0904 20:54:07.714201 21 service_latency.go:363] Got endpoints: latency-svc-r97n4 [731.166885ms]
  I0904 20:54:07.734394 21 service_latency.go:356] Created: latency-svc-d5np6
  I0904 20:54:07.757208 21 service_latency.go:363] Got endpoints: latency-svc-rxzv8 [743.701951ms]
  I0904 20:54:07.780873 21 service_latency.go:356] Created: latency-svc-pcttz
  I0904 20:54:07.803502 21 service_latency.go:356] Created: latency-svc-m7t2g
  I0904 20:54:07.818943 21 service_latency.go:363] Got endpoints: latency-svc-whppg [754.105635ms]
  I0904 20:54:07.831928 21 service_latency.go:356] Created: latency-svc-wp8dw
  I0904 20:54:07.865118 21 service_latency.go:363] Got endpoints: latency-svc-rqzj5 [758.333251ms]
  I0904 20:54:07.865544 21 service_latency.go:356] Created: latency-svc-9xs9f
  I0904 20:54:07.888376 21 service_latency.go:356] Created: latency-svc-xb5mr
  I0904 20:54:07.920349 21 service_latency.go:363] Got endpoints: latency-svc-qnrpr [751.84129ms]
  I0904 20:54:07.929295 21 service_latency.go:356] Created: latency-svc-h9j9g
  I0904 20:54:07.953427 21 service_latency.go:356] Created: latency-svc-lg7ql
  I0904 20:54:07.973608 21 service_latency.go:363] Got endpoints: latency-svc-dxnwd [754.39793ms]
  I0904 20:54:07.982828 21 service_latency.go:356] Created: latency-svc-9fpx4
  I0904 20:54:08.036745 21 service_latency.go:363] Got endpoints: latency-svc-48c6r [771.108432ms]
  I0904 20:54:08.037726 21 service_latency.go:356] Created: latency-svc-t4sxx
  I0904 20:54:08.070074 21 service_latency.go:363] Got endpoints: latency-svc-ngwnl [758.131849ms]
  I0904 20:54:08.082391 21 service_latency.go:356] Created: latency-svc-pgs96
  I0904 20:54:08.119092 21 service_latency.go:363] Got endpoints: latency-svc-8r47d [754.022344ms]
  I0904 20:54:08.120267 21 service_latency.go:356] Created: latency-svc-hzx65
  I0904 20:54:08.156310 21 service_latency.go:363] Got endpoints: latency-svc-dnd6k [748.04238ms]
  I0904 20:54:08.182516 21 service_latency.go:356] Created: latency-svc-xctsd
  I0904 20:54:08.206164 21 service_latency.go:363] Got endpoints: latency-svc-gff6x [743.869424ms]
  I0904 20:54:08.212529 21 service_latency.go:356] Created: latency-svc-7v26x
  I0904 20:54:08.239975 21 service_latency.go:356] Created: latency-svc-j9bp9
  I0904 20:54:08.254041 21 service_latency.go:363] Got endpoints: latency-svc-d5np6 [745.500721ms]
  I0904 20:54:08.300613 21 service_latency.go:356] Created: latency-svc-vtntk
  I0904 20:54:08.315775 21 service_latency.go:363] Got endpoints: latency-svc-pcttz [746.004678ms]
  I0904 20:54:08.346030 21 service_latency.go:356] Created: latency-svc-qcfxq
  I0904 20:54:08.356176 21 service_latency.go:363] Got endpoints: latency-svc-m7t2g [752.331728ms]
  I0904 20:54:08.389610 21 service_latency.go:356] Created: latency-svc-b56m2
  I0904 20:54:08.408625 21 service_latency.go:363] Got endpoints: latency-svc-wp8dw [722.5643ms]
  I0904 20:54:08.432278 21 service_latency.go:356] Created: latency-svc-8pnj5
  I0904 20:54:08.455060 21 service_latency.go:363] Got endpoints: latency-svc-9xs9f [740.656624ms]
  E0904 20:54:08.475179      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:08.487418 21 service_latency.go:356] Created: latency-svc-m5zft
  I0904 20:54:08.513037 21 service_latency.go:363] Got endpoints: latency-svc-xb5mr [755.765542ms]
  I0904 20:54:08.547573 21 service_latency.go:356] Created: latency-svc-k64mn
  I0904 20:54:08.561444 21 service_latency.go:363] Got endpoints: latency-svc-h9j9g [742.454342ms]
  I0904 20:54:08.596033 21 service_latency.go:356] Created: latency-svc-vn7dt
  I0904 20:54:08.612080 21 service_latency.go:363] Got endpoints: latency-svc-lg7ql [746.78732ms]
  I0904 20:54:08.654197 21 service_latency.go:363] Got endpoints: latency-svc-9fpx4 [733.689694ms]
  I0904 20:54:08.666220 21 service_latency.go:356] Created: latency-svc-t6pzl
  I0904 20:54:08.689551 21 service_latency.go:356] Created: latency-svc-fcflm
  I0904 20:54:08.705217 21 service_latency.go:363] Got endpoints: latency-svc-t4sxx [731.533801ms]
  I0904 20:54:08.728557 21 service_latency.go:356] Created: latency-svc-759hs
  I0904 20:54:08.758383 21 service_latency.go:363] Got endpoints: latency-svc-pgs96 [721.571895ms]
  I0904 20:54:08.795738 21 service_latency.go:356] Created: latency-svc-9ffbt
  I0904 20:54:08.812412 21 service_latency.go:363] Got endpoints: latency-svc-hzx65 [742.271219ms]
  I0904 20:54:08.841617 21 service_latency.go:356] Created: latency-svc-wrtss
  I0904 20:54:08.862736 21 service_latency.go:363] Got endpoints: latency-svc-xctsd [743.436368ms]
  I0904 20:54:08.891583 21 service_latency.go:356] Created: latency-svc-xfjtw
  I0904 20:54:08.910376 21 service_latency.go:363] Got endpoints: latency-svc-7v26x [753.995654ms]
  I0904 20:54:08.947467 21 service_latency.go:356] Created: latency-svc-9hg8d
  I0904 20:54:08.957938 21 service_latency.go:363] Got endpoints: latency-svc-j9bp9 [751.624216ms]
  I0904 20:54:09.019495 21 service_latency.go:356] Created: latency-svc-ncxqr
  I0904 20:54:09.021299 21 service_latency.go:363] Got endpoints: latency-svc-vtntk [767.193531ms]
  I0904 20:54:09.058783 21 service_latency.go:356] Created: latency-svc-t2k9x
  I0904 20:54:09.060837 21 service_latency.go:363] Got endpoints: latency-svc-qcfxq [745.004142ms]
  I0904 20:54:09.104194 21 service_latency.go:363] Got endpoints: latency-svc-b56m2 [747.943448ms]
  I0904 20:54:09.118352 21 service_latency.go:356] Created: latency-svc-z4ptv
  I0904 20:54:09.141244 21 service_latency.go:356] Created: latency-svc-wsnjh
  I0904 20:54:09.153865 21 service_latency.go:363] Got endpoints: latency-svc-8pnj5 [745.043683ms]
  I0904 20:54:09.181548 21 service_latency.go:356] Created: latency-svc-qd9nr
  I0904 20:54:09.225554 21 service_latency.go:363] Got endpoints: latency-svc-m5zft [770.436702ms]
  I0904 20:54:09.268631 21 service_latency.go:363] Got endpoints: latency-svc-k64mn [755.539267ms]
  I0904 20:54:09.280128 21 service_latency.go:356] Created: latency-svc-fjq7s
  I0904 20:54:09.315003 21 service_latency.go:363] Got endpoints: latency-svc-vn7dt [753.479245ms]
  I0904 20:54:09.347044 21 service_latency.go:356] Created: latency-svc-bthp7
  I0904 20:54:09.356459 21 service_latency.go:363] Got endpoints: latency-svc-t6pzl [744.310022ms]
  I0904 20:54:09.396756 21 service_latency.go:356] Created: latency-svc-pvw65
  I0904 20:54:09.413978 21 service_latency.go:363] Got endpoints: latency-svc-fcflm [759.714944ms]
  I0904 20:54:09.422237 21 service_latency.go:356] Created: latency-svc-rz2dm
  I0904 20:54:09.463347 21 service_latency.go:363] Got endpoints: latency-svc-759hs [758.088918ms]
  I0904 20:54:09.466378 21 service_latency.go:356] Created: latency-svc-dn557
  E0904 20:54:09.475749      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:09.501006 21 service_latency.go:356] Created: latency-svc-k56ws
  I0904 20:54:09.510960 21 service_latency.go:363] Got endpoints: latency-svc-9ffbt [752.338247ms]
  I0904 20:54:09.534299 21 service_latency.go:356] Created: latency-svc-6d27h
  I0904 20:54:09.566404 21 service_latency.go:363] Got endpoints: latency-svc-wrtss [753.921363ms]
  I0904 20:54:09.590476 21 service_latency.go:356] Created: latency-svc-q4xs7
  I0904 20:54:09.598637 21 service_latency.go:363] Got endpoints: latency-svc-xfjtw [735.849429ms]
  I0904 20:54:09.629565 21 service_latency.go:356] Created: latency-svc-t46tl
  I0904 20:54:09.654445 21 service_latency.go:363] Got endpoints: latency-svc-9hg8d [744.021536ms]
  I0904 20:54:09.695078 21 service_latency.go:356] Created: latency-svc-zffsc
  I0904 20:54:09.709190 21 service_latency.go:363] Got endpoints: latency-svc-ncxqr [751.203149ms]
  I0904 20:54:09.731837 21 service_latency.go:356] Created: latency-svc-r2fdp
  I0904 20:54:09.759012 21 service_latency.go:363] Got endpoints: latency-svc-t2k9x [737.658067ms]
  I0904 20:54:09.802235 21 service_latency.go:356] Created: latency-svc-h27ln
  I0904 20:54:09.804131 21 service_latency.go:363] Got endpoints: latency-svc-z4ptv [743.180494ms]
  I0904 20:54:09.851584 21 service_latency.go:363] Got endpoints: latency-svc-wsnjh [747.135836ms]
  I0904 20:54:09.852307 21 service_latency.go:356] Created: latency-svc-hc4xg
  I0904 20:54:09.877896 21 service_latency.go:356] Created: latency-svc-zwthd
  I0904 20:54:09.914899 21 service_latency.go:363] Got endpoints: latency-svc-qd9nr [760.817751ms]
  I0904 20:54:09.937612 21 service_latency.go:356] Created: latency-svc-j2gvl
  I0904 20:54:09.952412 21 service_latency.go:363] Got endpoints: latency-svc-fjq7s [726.619443ms]
  I0904 20:54:09.988438 21 service_latency.go:356] Created: latency-svc-ld8pv
  I0904 20:54:10.009333 21 service_latency.go:363] Got endpoints: latency-svc-bthp7 [740.502712ms]
  I0904 20:54:10.041826 21 service_latency.go:356] Created: latency-svc-94zs9
  I0904 20:54:10.047936 21 service_latency.go:363] Got endpoints: latency-svc-pvw65 [732.734869ms]
  I0904 20:54:10.079884 21 service_latency.go:356] Created: latency-svc-92r28
  I0904 20:54:10.106115 21 service_latency.go:363] Got endpoints: latency-svc-rz2dm [749.432562ms]
  I0904 20:54:10.151557 21 service_latency.go:356] Created: latency-svc-pvbrx
  I0904 20:54:10.153149 21 service_latency.go:363] Got endpoints: latency-svc-dn557 [738.929717ms]
  I0904 20:54:10.183647 21 service_latency.go:356] Created: latency-svc-ssf4n
  I0904 20:54:10.209899 21 service_latency.go:363] Got endpoints: latency-svc-k56ws [746.333344ms]
  I0904 20:54:10.233936 21 service_latency.go:356] Created: latency-svc-49lg4
  I0904 20:54:10.268137 21 service_latency.go:363] Got endpoints: latency-svc-6d27h [757.066322ms]
  I0904 20:54:10.293705 21 service_latency.go:356] Created: latency-svc-rqh2h
  I0904 20:54:10.305619 21 service_latency.go:363] Got endpoints: latency-svc-q4xs7 [739.16126ms]
  I0904 20:54:10.344723 21 service_latency.go:356] Created: latency-svc-nln8b
  I0904 20:54:10.349216 21 service_latency.go:363] Got endpoints: latency-svc-t46tl [750.481749ms]
  I0904 20:54:10.382994 21 service_latency.go:356] Created: latency-svc-lh8bp
  I0904 20:54:10.404319 21 service_latency.go:363] Got endpoints: latency-svc-zffsc [749.703366ms]
  I0904 20:54:10.430287 21 service_latency.go:356] Created: latency-svc-494fn
  I0904 20:54:10.472709 21 service_latency.go:363] Got endpoints: latency-svc-r2fdp [763.451093ms]
  E0904 20:54:10.475944      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:10.507109 21 service_latency.go:356] Created: latency-svc-25p5r
  I0904 20:54:10.527936 21 service_latency.go:363] Got endpoints: latency-svc-h27ln [768.873697ms]
  I0904 20:54:10.569847 21 service_latency.go:363] Got endpoints: latency-svc-hc4xg [765.559655ms]
  I0904 20:54:10.574665 21 service_latency.go:356] Created: latency-svc-g9wt5
  I0904 20:54:10.599554 21 service_latency.go:356] Created: latency-svc-gh9b9
  I0904 20:54:10.618527 21 service_latency.go:363] Got endpoints: latency-svc-zwthd [766.750124ms]
  I0904 20:54:10.658853 21 service_latency.go:356] Created: latency-svc-h4cnt
  I0904 20:54:10.676310 21 service_latency.go:363] Got endpoints: latency-svc-j2gvl [761.329099ms]
  I0904 20:54:10.699229 21 service_latency.go:356] Created: latency-svc-knvff
  I0904 20:54:10.731952 21 service_latency.go:363] Got endpoints: latency-svc-ld8pv [779.475624ms]
  I0904 20:54:10.758417 21 service_latency.go:363] Got endpoints: latency-svc-94zs9 [749.037105ms]
  I0904 20:54:10.770378 21 service_latency.go:356] Created: latency-svc-czf96
  I0904 20:54:10.791677 21 service_latency.go:356] Created: latency-svc-qk7tm
  I0904 20:54:10.808335 21 service_latency.go:363] Got endpoints: latency-svc-92r28 [760.351434ms]
  I0904 20:54:10.848799 21 service_latency.go:356] Created: latency-svc-kchcq
  I0904 20:54:10.881671 21 service_latency.go:363] Got endpoints: latency-svc-pvbrx [775.314018ms]
  I0904 20:54:10.904016 21 service_latency.go:363] Got endpoints: latency-svc-ssf4n [750.748193ms]
  I0904 20:54:10.913675 21 service_latency.go:356] Created: latency-svc-dh4jm
  I0904 20:54:10.939445 21 service_latency.go:356] Created: latency-svc-b4xr8
  I0904 20:54:10.964996 21 service_latency.go:363] Got endpoints: latency-svc-49lg4 [754.913708ms]
  I0904 20:54:11.009614 21 service_latency.go:363] Got endpoints: latency-svc-rqh2h [741.335474ms]
  I0904 20:54:11.055536 21 service_latency.go:363] Got endpoints: latency-svc-nln8b [749.866269ms]
  I0904 20:54:11.112457 21 service_latency.go:363] Got endpoints: latency-svc-lh8bp [763.090257ms]
  I0904 20:54:11.154009 21 service_latency.go:363] Got endpoints: latency-svc-494fn [749.632686ms]
  I0904 20:54:11.214320 21 service_latency.go:363] Got endpoints: latency-svc-25p5r [741.230883ms]
  I0904 20:54:11.264239 21 service_latency.go:363] Got endpoints: latency-svc-g9wt5 [736.218244ms]
  I0904 20:54:11.314043 21 service_latency.go:363] Got endpoints: latency-svc-gh9b9 [743.983987ms]
  I0904 20:54:11.357574 21 service_latency.go:363] Got endpoints: latency-svc-h4cnt [738.979628ms]
  I0904 20:54:11.401558 21 service_latency.go:363] Got endpoints: latency-svc-knvff [725.08347ms]
  I0904 20:54:11.453628 21 service_latency.go:363] Got endpoints: latency-svc-czf96 [721.460713ms]
  E0904 20:54:11.476840      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:11.501983 21 service_latency.go:363] Got endpoints: latency-svc-qk7tm [743.359747ms]
  I0904 20:54:11.553266 21 service_latency.go:363] Got endpoints: latency-svc-kchcq [744.779109ms]
  I0904 20:54:11.598974 21 service_latency.go:363] Got endpoints: latency-svc-dh4jm [717.094614ms]
  I0904 20:54:11.656753 21 service_latency.go:363] Got endpoints: latency-svc-b4xr8 [752.672803ms]
  I0904 20:54:11.657062 21 service_latency.go:114] Latencies: [71.579034ms 86.536069ms 116.810855ms 172.301646ms 188.312718ms 235.861025ms 265.360148ms 299.092967ms 321.793825ms 385.246681ms 396.485168ms 465.307199ms 470.932777ms 471.156801ms 472.278098ms 473.218933ms 479.725996ms 480.697721ms 487.237273ms 487.314924ms 490.839879ms 492.540447ms 496.044541ms 497.990083ms 499.860012ms 505.159925ms 506.422455ms 506.693359ms 506.854061ms 506.909862ms 508.319124ms 508.458457ms 510.044052ms 510.295555ms 511.027547ms 512.46956ms 512.801235ms 514.920929ms 515.02604ms 516.179128ms 516.833638ms 516.9806ms 518.85368ms 521.021284ms 522.66158ms 523.478693ms 524.414407ms 525.652687ms 526.098713ms 526.182535ms 528.869528ms 530.585494ms 531.395487ms 531.765803ms 532.412193ms 533.240846ms 533.330367ms 533.386598ms 534.032758ms 534.821511ms 536.141842ms 536.512338ms 537.605364ms 539.23219ms 540.837315ms 542.002903ms 543.334295ms 543.559658ms 543.910554ms 547.54482ms 547.640402ms 550.05934ms 551.192978ms 552.715952ms 553.2466ms 554.081893ms 554.349968ms 554.919376ms 556.859597ms 557.314314ms 558.128806ms 559.060141ms 560.648836ms 561.978597ms 565.232099ms 567.003026ms 569.973653ms 570.629453ms 570.659844ms 570.910138ms 572.140187ms 572.885579ms 573.394617ms 574.463613ms 574.497254ms 575.632552ms 576.958313ms 578.866632ms 579.239168ms 579.654885ms 580.131433ms 581.755458ms 581.812719ms 584.945159ms 591.379169ms 615.747862ms 616.479844ms 617.637422ms 647.374609ms 657.387176ms 675.145185ms 677.279369ms 681.545705ms 709.639067ms 717.094614ms 721.460713ms 721.571895ms 722.5643ms 725.08347ms 726.451511ms 726.619443ms 731.166885ms 731.533801ms 732.734869ms 733.559873ms 733.689694ms 735.849429ms 736.218244ms 737.658067ms 738.929717ms 738.979628ms 739.16126ms 740.502712ms 740.656624ms 740.831887ms 741.230883ms 741.335474ms 742.271219ms 742.454342ms 743.180494ms 743.359747ms 743.436368ms 743.701951ms 743.869424ms 743.983987ms 744.021536ms 744.310022ms 744.779109ms 745.004142ms 745.043683ms 745.500721ms 746.004678ms 746.333344ms 746.78732ms 747.135836ms 747.943448ms 748.04238ms 749.037105ms 749.432562ms 749.632686ms 749.703366ms 749.866269ms 750.481749ms 750.735762ms 750.748193ms 751.203149ms 751.624216ms 751.84129ms 752.331728ms 752.338247ms 752.672803ms 753.479245ms 753.921363ms 753.995654ms 754.022344ms 754.105635ms 754.39793ms 754.913708ms 755.539267ms 755.765542ms 757.066322ms 758.088918ms 758.131849ms 758.333251ms 759.714944ms 760.351434ms 760.817751ms 760.865861ms 761.329099ms 763.090257ms 763.451093ms 765.559655ms 766.750124ms 767.193531ms 767.666428ms 768.873697ms 770.436702ms 771.108432ms 775.314018ms 779.475624ms]
  I0904 20:54:11.657331 21 service_latency.go:118] 50 %ile: 580.131433ms
  I0904 20:54:11.657477 21 service_latency.go:119] 90 %ile: 757.066322ms
  I0904 20:54:11.657618 21 service_latency.go:120] 99 %ile: 775.314018ms
  I0904 20:54:11.657772 21 service_latency.go:121] Total sample count: 200
  I0904 20:54:11.658036 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-4776" for this suite. @ 09/04/24 20:54:11.668
â€¢ [9.869 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/04/24 20:54:11.682
  I0904 20:54:11.682492 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename webhook @ 09/04/24 20:54:11.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:54:11.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:54:11.741
  STEP: Setting up server cert @ 09/04/24 20:54:11.837
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/24 20:54:12.388
  STEP: Deploying the webhook pod @ 09/04/24 20:54:12.404
  STEP: Wait for the deployment to be ready @ 09/04/24 20:54:12.445
  I0904 20:54:12.451544 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0904 20:54:12.477800      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:13.477919      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/24 20:54:14.461
  E0904 20:54:14.478394      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 09/04/24 20:54:14.491
  E0904 20:54:15.479292      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:15.491625 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0904 20:54:16.102254 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 20:54:16.480242      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1226-crds.webhook.example.com via the AdmissionRegistration API @ 09/04/24 20:54:16.622
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/04/24 20:54:16.648
  E0904 20:54:17.481327      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:18.481930      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:19.405505 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3826" for this suite. @ 09/04/24 20:54:19.409
  STEP: Destroying namespace "webhook-markers-3175" for this suite. @ 09/04/24 20:54:19.419
â€¢ [7.748 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 09/04/24 20:54:19.43
  I0904 20:54:19.430343 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:54:19.431
  E0904 20:54:19.482231      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:54:19.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:54:19.528
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:54:19.531
  E0904 20:54:20.482427      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:21.482564      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:22.482695      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:23.483481      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:54:23.683
  I0904 20:54:23.691103 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-daa5007a-e372-441b-87dd-5be422063ef4 container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:54:23.699
  I0904 20:54:23.767545 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3600" for this suite. @ 09/04/24 20:54:23.779
â€¢ [4.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/04/24 20:54:23.802
  I0904 20:54:23.802649 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/04/24 20:54:23.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:54:23.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:54:23.962
  STEP: Creating two CSIDrivers @ 09/04/24 20:54:23.965
  STEP: Getting "inline-driver-48157d76-c86d-4332-84d0-dab4b463c448" & "inline-driver-e42e0ad7-a091-47c0-adcb-4bfcbec40916" @ 09/04/24 20:54:24.407
  STEP: Patching the CSIDriver "inline-driver-e42e0ad7-a091-47c0-adcb-4bfcbec40916" @ 09/04/24 20:54:24.443
  STEP: Updating the CSIDriver "inline-driver-e42e0ad7-a091-47c0-adcb-4bfcbec40916" @ 09/04/24 20:54:24.462
  E0904 20:54:24.484047      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-102" @ 09/04/24 20:54:24.942
  STEP: Deleting CSIDriver "inline-driver-48157d76-c86d-4332-84d0-dab4b463c448" @ 09/04/24 20:54:25.28
  STEP: Confirm deletion of CSIDriver "inline-driver-48157d76-c86d-4332-84d0-dab4b463c448" @ 09/04/24 20:54:25.29
  STEP: Deleting CSIDriver "inline-driver-e42e0ad7-a091-47c0-adcb-4bfcbec40916" via DeleteCollection @ 09/04/24 20:54:25.293
  STEP: Confirm deletion of CSIDriver "inline-driver-e42e0ad7-a091-47c0-adcb-4bfcbec40916" @ 09/04/24 20:54:25.303
  I0904 20:54:25.306553 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-102" for this suite. @ 09/04/24 20:54:25.31
â€¢ [1.531 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/04/24 20:54:25.333
  I0904 20:54:25.333951 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/24 20:54:25.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:54:25.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:54:25.472
  STEP: Performing setup for networking test in namespace pod-network-test-8746 @ 09/04/24 20:54:25.475
  STEP: creating a selector @ 09/04/24 20:54:25.475
  STEP: Creating the service pods in kubernetes @ 09/04/24 20:54:25.475
  I0904 20:54:25.475798 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0904 20:54:25.484213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:26.485354      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:27.485549      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:28.485749      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:29.485854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:30.485977      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:31.486567      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:32.487004      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:33.487100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:34.487631      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:35.488155      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:36.488293      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:37.488423      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:38.489202      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:39.489469      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:40.490266      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:41.490564      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:42.491603      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:43.491883      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:44.492026      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:45.492483      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:46.493286      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:47.493712      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/04/24 20:54:47.719
  E0904 20:54:48.494356      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:49.494665      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:49.810138 21 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0904 20:54:49.810314 21 utils.go:496] Going to poll 10.42.0.129 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0904 20:54:49.813434 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.129 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8746 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:54:49.813478 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:54:49.814072 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:54:49.814150 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8746/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.129+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0904 20:54:50.495166      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:50.869820 21 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0904 20:54:50.869895 21 utils.go:496] Going to poll 10.42.3.107 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0904 20:54:50.873908 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.3.107 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8746 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:54:50.873962 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:54:50.874594 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:54:50.874699 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8746/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.3.107+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0904 20:54:51.495515      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:51.925345 21 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0904 20:54:51.925554 21 utils.go:496] Going to poll 10.42.2.212 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0904 20:54:51.928790 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.212 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8746 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:54:51.928835 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:54:51.929379 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:54:51.929459 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8746/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.212+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0904 20:54:52.495834      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:52.986132 21 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0904 20:54:52.986441 21 utils.go:496] Going to poll 10.42.1.149 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0904 20:54:52.991329 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.149 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8746 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 20:54:52.991380 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  I0904 20:54:52.991994 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0904 20:54:52.992072 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8746/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.149+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0904 20:54:53.496726      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:54:54.051191 21 utils.go:513] Found all 1 expected endpoints: [netserver-3]
  I0904 20:54:54.051478 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8746" for this suite. @ 09/04/24 20:54:54.056
â€¢ [28.736 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 09/04/24 20:54:54.07
  I0904 20:54:54.070498 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename resourcequota @ 09/04/24 20:54:54.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:54:54.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:54:54.111
  STEP: Discovering how many secrets are in namespace by default @ 09/04/24 20:54:54.115
  E0904 20:54:54.496901      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:55.497480      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:56.497560      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:57.498039      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:58.498207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:54:59.499411      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/04/24 20:55:00.123
  E0904 20:55:00.499529      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:01.500169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:02.500776      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:03.501091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:04.501209      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/24 20:55:05.127
  STEP: Ensuring resource quota status is calculated @ 09/04/24 20:55:05.139
  E0904 20:55:05.501942      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:06.502443      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 09/04/24 20:55:07.144
  STEP: Ensuring resource quota status captures secret creation @ 09/04/24 20:55:07.169
  E0904 20:55:07.502931      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:08.503059      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 09/04/24 20:55:09.173
  STEP: Ensuring resource quota status released usage @ 09/04/24 20:55:09.183
  E0904 20:55:09.503397      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:10.503604      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:55:11.189591 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9415" for this suite. @ 09/04/24 20:55:11.194
â€¢ [17.139 seconds]
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/04/24 20:55:11.21
  I0904 20:55:11.210503 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 20:55:11.211
  E0904 20:55:11.504587      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:55:11.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:55:11.554
  STEP: Creating secret with name s-test-opt-del-7534a9b0-231a-4ac1-9d44-49de38482152 @ 09/04/24 20:55:11.663
  STEP: Creating secret with name s-test-opt-upd-57eafd4b-5fe3-4a79-b030-b722f4cdfd9d @ 09/04/24 20:55:11.678
  STEP: Creating the pod @ 09/04/24 20:55:11.695
  E0904 20:55:12.504765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:13.504898      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-7534a9b0-231a-4ac1-9d44-49de38482152 @ 09/04/24 20:55:13.766
  STEP: Updating secret s-test-opt-upd-57eafd4b-5fe3-4a79-b030-b722f4cdfd9d @ 09/04/24 20:55:13.776
  STEP: Creating secret with name s-test-opt-create-2b0182a9-da3d-48a0-a78e-cd44139aeb80 @ 09/04/24 20:55:13.786
  STEP: waiting to observe update in volume @ 09/04/24 20:55:13.795
  E0904 20:55:14.505136      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:15.505447      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:16.506499      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:17.507079      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:18.508132      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:19.508415      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:20.509441      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:21.510279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:22.510386      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:23.511159      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:24.511854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:25.512178      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:26.512351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:27.512874      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:28.513001      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:29.513109      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:30.513673      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:31.513819      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:32.514871      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:33.515101      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:34.516110      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:35.516224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:36.516651      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:37.517012      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:38.517106      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:39.517238      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:40.517573      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:41.517933      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:42.518859      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:43.519215      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:44.520019      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:45.520808      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:46.520953      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:47.521101      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:48.522004      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:49.522111      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:50.522891      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:51.523141      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:52.524179      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:53.524291      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:54.525256      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:55.525507      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:56.526278      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:57.526712      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:58.527877      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:55:59.528157      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:00.528928      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:01.529076      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:02.529189      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:03.529329      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:04.529756      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:05.529869      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:06.530856      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:07.531107      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:08.531578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:09.531690      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:10.531823      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:11.531976      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:12.532772      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:13.533172      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:14.533861      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:15.534022      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:16.535064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:17.535238      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:18.535889      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:19.536072      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:20.536188      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:21.536610      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:22.537634      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:23.537721      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:24.538443      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:25.538882      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:26.539117      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:27.539841      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:28.540158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:29.540296      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:30.540410      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:31.540812      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:32.541800      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:33.541910      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:34.542459      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:35.542730      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:36.543318      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:37.544085      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:38.544150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:39.544273      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:56:40.238509 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-531" for this suite. @ 09/04/24 20:56:40.242
â€¢ [89.042 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 09/04/24 20:56:40.253
  I0904 20:56:40.253643 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/24 20:56:40.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:56:40.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:56:40.496
  I0904 20:56:40.533718 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0904 20:56:40.545129      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:41.545313      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:42.545560      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:43.545862      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:44.546325      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:45.546475      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:46.547201      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:47.547388      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:48.548420      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:49.548526      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:50.548986      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:51.549169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:52.549854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:53.550038      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:54.550645      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:55.550848      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:56.551392      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:57.552137      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:58.552825      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:56:59.552994      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:00.553229      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:01.553844      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:02.554079      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:03.554467      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:04.554671      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:05.555115      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:06.556068      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:07.556529      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:08.556805      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:09.557221      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:10.557748      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:11.557896      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:12.558335      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:13.558877      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:14.559611      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:15.560173      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:16.560173      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:17.560747      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:18.560928      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:19.561075      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:20.561408      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:21.561670      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:22.561699      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:23.561982      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:24.563033      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:25.563216      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:26.563720      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:27.564325      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:28.565237      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:29.565386      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:30.566025      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:31.566350      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:32.567118      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:33.567285      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:34.567530      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:35.568166      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:36.568796      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:37.569049      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:38.569680      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:39.569802      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:57:40.538163 21 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/04/24 20:57:40.541
  I0904 20:57:40.541133 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/04/24 20:57:40.542
  E0904 20:57:40.570633      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:57:40.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:57:40.595
  I0904 20:57:40.647758 21 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0904 20:57:40.669748 21 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0904 20:57:40.813969 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6547" for this suite. @ 09/04/24 20:57:40.818
  I0904 20:57:40.837656 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7128" for this suite. @ 09/04/24 20:57:40.919
â€¢ [60.688 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/04/24 20:57:40.942
  I0904 20:57:40.942123 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename container-probe @ 09/04/24 20:57:40.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:57:40.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:57:40.977
  STEP: Creating pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542 @ 09/04/24 20:57:40.981
  E0904 20:57:41.571432      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:42.572161      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/24 20:57:43.02
  I0904 20:57:43.022989 21 container_probe.go:1749] Initial restart count of pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 is 0
  I0904 20:57:43.025870 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:57:43.572323      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:44.572416      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:57:45.029499 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:57:45.572984      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:46.573351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:57:47.034001 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:57:47.573479      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:48.574460      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:57:49.039044 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:57:49.574617      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:50.574744      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:57:51.043240 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:57:51.574788      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:52.575097      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:57:53.047135 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:57:53.575776      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:54.575912      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:57:55.051566 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:57:55.576106      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:56.576227      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:57:57.056419 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:57:57.576914      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:57:58.577032      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:57:59.060374 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:57:59.577206      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:00.577440      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:01.064352 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:01.578380      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:02.579004      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:03.068173 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:03.579830      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:04.580239      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:05.072378 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:05.581284      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:06.581405      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:07.076765 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:07.581540      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:08.582089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:09.081582 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:09.583115      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:10.583391      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:11.085538 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:11.584160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:12.584537      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:13.089381 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:13.585202      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:14.585342      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:15.097174 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:15.585672      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:16.585772      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:17.101270 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:17.585915      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:18.586391      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:19.105342 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:19.586815      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:20.587099      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:21.109277 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:21.587853      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:22.587967      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:23.113296 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:23.588833      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:24.588983      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:25.117285 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:25.589862      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:26.590004      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:27.121871 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:27.590082      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:28.590392      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:29.125397 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:29.591053      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:30.592140      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:31.129115 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  E0904 20:58:31.592307      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:32.592768      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 20:58:33.132805 21 container_probe.go:1759] Get pod busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 in namespace container-probe-2542
  I0904 20:58:33.132863 21 container_probe.go:1763] Restart count of pod container-probe-2542/busybox-6fb910e4-b3ae-4cad-830d-8b2a768af3b3 is now 1 (50.10982849s elapsed)
  STEP: deleting the pod @ 09/04/24 20:58:33.132
  I0904 20:58:33.169958 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2542" for this suite. @ 09/04/24 20:58:33.174
â€¢ [52.248 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 09/04/24 20:58:33.19
  I0904 20:58:33.190820 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename namespaces @ 09/04/24 20:58:33.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:58:33.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:58:33.229
  STEP: Updating Namespace "namespaces-5094" @ 09/04/24 20:58:33.232
  I0904 20:58:33.255098 21 namespace.go:389] Namespace "namespaces-5094" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"13be9ef1-9f48-4b5c-aed9-7fa53ea9d482", "kubernetes.io/metadata.name":"namespaces-5094", "namespaces-5094":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0904 20:58:33.255270 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5094" for this suite. @ 09/04/24 20:58:33.375
â€¢ [0.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/04/24 20:58:33.386
  I0904 20:58:33.386450 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename containers @ 09/04/24 20:58:33.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:58:33.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:58:33.426
  STEP: Creating a pod to test override arguments @ 09/04/24 20:58:33.429
  E0904 20:58:33.593589      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:34.593718      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:35.594674      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:36.594809      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:58:37.469
  I0904 20:58:37.472671 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod client-containers-30f0076c-f690-4b62-ae74-718236be66fa container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 20:58:37.485
  I0904 20:58:37.517506 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7368" for this suite. @ 09/04/24 20:58:37.522
â€¢ [4.152 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 09/04/24 20:58:37.539
  I0904 20:58:37.539928 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename downward-api @ 09/04/24 20:58:37.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:58:37.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:58:37.587
  STEP: Creating a pod to test downward API volume plugin @ 09/04/24 20:58:37.589
  E0904 20:58:37.595829      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:38.596192      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:39.596368      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:40.597319      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:41.598315      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 20:58:41.826
  I0904 20:58:41.830532 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod downwardapi-volume-e9f0ba60-a5ba-401b-bc87-25f35575f8ea container client-container: <nil>
  STEP: delete the pod @ 09/04/24 20:58:41.837
  I0904 20:58:41.870487 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9718" for this suite. @ 09/04/24 20:58:41.874
â€¢ [4.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/04/24 20:58:41.889
  I0904 20:58:41.889520 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename cronjob @ 09/04/24 20:58:41.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 20:58:41.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 20:58:41.928
  STEP: Creating a ReplaceConcurrent cronjob @ 09/04/24 20:58:41.932
  STEP: Ensuring a job is scheduled @ 09/04/24 20:58:41.959
  E0904 20:58:42.598823      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:43.599264      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:44.600178      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:45.600269      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:46.601151      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:47.601612      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:48.602397      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:49.602523      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:50.603536      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:51.604191      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:52.605086      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:53.605198      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:54.605854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:55.605993      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:56.607003      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:57.607082      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:58.607959      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:58:59.608092      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:00.608899      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:01.609378      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/04/24 20:59:01.963
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/04/24 20:59:01.966
  STEP: Ensuring the job is replaced with a new one @ 09/04/24 20:59:02.07
  E0904 20:59:02.609496      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:03.609648      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:04.609702      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:05.609823      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:06.609875      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:07.610194      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:08.610347      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:09.610474      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:10.610641      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:11.610964      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:12.611806      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:13.611903      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:14.612163      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:15.612294      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:16.613335      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:17.613812      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:18.614057      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:19.614158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:20.614319      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:21.614492      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:22.614549      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:23.614648      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:24.614740      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:25.615237      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:26.615615      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:27.616025      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:28.616279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:29.616428      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:30.617614      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:31.617731      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:32.617849      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:33.617982      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:34.618125      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:35.618289      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:36.619247      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:37.620262      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:38.620377      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:39.620683      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:40.620803      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:41.621178      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:42.621309      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:43.621415      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:44.621578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:45.621673      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:46.622526      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:47.623023      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:48.623094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:49.624161      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:50.624253      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:51.624545      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:52.624692      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:53.624981      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:54.625399      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:55.625501      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:56.625744      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:57.626234      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:58.626769      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 20:59:59.626900      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 21:00:00.115604 21 cronjob.go:692] Warning: Found 0 jobs in namespace cronjob-5763
  E0904 21:00:00.627094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:01.627610      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/04/24 21:00:02.078
  I0904 21:00:02.089137 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5763" for this suite. @ 09/04/24 21:00:02.194
â€¢ [80.318 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/04/24 21:00:02.207
  I0904 21:00:02.207856 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename secrets @ 09/04/24 21:00:02.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 21:00:02.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 21:00:02.255
  STEP: Creating projection with secret that has name secret-emptykey-test-5bfcae6c-08e5-462e-9698-8518a3170531 @ 09/04/24 21:00:02.258
  I0904 21:00:02.261424 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7650" for this suite. @ 09/04/24 21:00:02.296
â€¢ [0.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 09/04/24 21:00:02.309
  I0904 21:00:02.309404 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/24 21:00:02.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 21:00:02.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 21:00:02.359
  I0904 21:00:02.363535 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  E0904 21:00:02.628090      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:03.628666      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/04/24 21:00:04.379
  I0904 21:00:04.379389 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-5558 --namespace=crd-publish-openapi-5558 create -f -'
  I0904 21:00:04.491269 21 builder.go:146] stderr: ""
  I0904 21:00:04.491326 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2323-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0904 21:00:04.491385 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-5558 --namespace=crd-publish-openapi-5558 delete e2e-test-crd-publish-openapi-2323-crds test-cr'
  I0904 21:00:04.584500 21 builder.go:146] stderr: ""
  I0904 21:00:04.584553 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2323-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0904 21:00:04.584608 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-5558 --namespace=crd-publish-openapi-5558 apply -f -'
  E0904 21:00:04.629076      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 21:00:04.698596 21 builder.go:146] stderr: ""
  I0904 21:00:04.698659 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2323-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0904 21:00:04.698724 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-5558 --namespace=crd-publish-openapi-5558 delete e2e-test-crd-publish-openapi-2323-crds test-cr'
  I0904 21:00:04.801321 21 builder.go:146] stderr: ""
  I0904 21:00:04.801378 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2323-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/04/24 21:00:04.801
  I0904 21:00:04.801472 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3200332052 --namespace=crd-publish-openapi-5558 explain e2e-test-crd-publish-openapi-2323-crds'
  I0904 21:00:04.883693 21 builder.go:146] stderr: ""
  I0904 21:00:04.883764 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-2323-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0904 21:00:05.629130      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:06.629506      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 21:00:06.833491 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5558" for this suite. @ 09/04/24 21:00:06.841
â€¢ [4.553 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 09/04/24 21:00:06.863
  I0904 21:00:06.863680 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename job @ 09/04/24 21:00:06.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 21:00:06.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 21:00:06.907
  STEP: Creating Indexed job @ 09/04/24 21:00:06.95
  STEP: Ensuring job reaches completions @ 09/04/24 21:00:06.96
  E0904 21:00:07.629665      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:08.630128      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:09.631060      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:10.632232      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:11.633167      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:12.633888      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:13.634050      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:14.634323      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:15.634245      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:16.634769      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/04/24 21:00:16.969
  I0904 21:00:16.972747 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2056" for this suite. @ 09/04/24 21:00:16.977
â€¢ [10.127 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/04/24 21:00:16.991
  I0904 21:00:16.991037 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 21:00:16.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 21:00:17.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 21:00:17.222
  STEP: Creating configMap configmap-8311/configmap-test-a2aabdbb-48d5-4b59-bd4e-257d6b2a5772 @ 09/04/24 21:00:17.225
  STEP: Creating a pod to test consume configMaps @ 09/04/24 21:00:17.239
  E0904 21:00:17.634899      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:18.635988      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:19.636136      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:20.636419      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 21:00:21.268
  I0904 21:00:21.275753 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-configmaps-77347a72-95c7-4ed1-b6da-cfd97be4c1fe container env-test: <nil>
  STEP: delete the pod @ 09/04/24 21:00:21.288
  I0904 21:00:21.320294 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8311" for this suite. @ 09/04/24 21:00:21.324
â€¢ [4.347 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 09/04/24 21:00:21.338
  I0904 21:00:21.338748 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 21:00:21.339
  E0904 21:00:21.636569      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 21:00:21.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 21:00:21.736
  STEP: Creating configMap with name projected-configmap-test-volume-map-3ffabe0d-aff5-4312-b9cc-e08089c54d8b @ 09/04/24 21:00:21.739
  STEP: Creating a pod to test consume configMaps @ 09/04/24 21:00:21.747
  E0904 21:00:22.636666      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:23.636913      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:24.637041      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:25.637180      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 21:00:25.986
  I0904 21:00:25.989181 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-projected-configmaps-8e13e760-1f88-4ac3-9db7-7e9505940cc1 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 21:00:25.994
  I0904 21:00:26.028356 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1809" for this suite. @ 09/04/24 21:00:26.032
â€¢ [4.711 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/04/24 21:00:26.05
  I0904 21:00:26.051046 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename pv @ 09/04/24 21:00:26.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 21:00:26.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 21:00:26.197
  STEP: Creating initial PV and PVC @ 09/04/24 21:00:26.201
  I0904 21:00:26.201925 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1512" @ 09/04/24 21:00:26.238
  STEP: Listing PVCs in namespace "pv-1512" @ 09/04/24 21:00:26.248
  STEP: Patching the PV "pv-1512-zh9jf" @ 09/04/24 21:00:26.353
  STEP: Patching the PVC "pvc-b8brv" @ 09/04/24 21:00:26.38
  STEP: Getting PV "pv-1512-zh9jf" @ 09/04/24 21:00:26.398
  STEP: Getting PVC "pvc-b8brv" @ 09/04/24 21:00:26.401
  STEP: Deleting PVC "pvc-b8brv" @ 09/04/24 21:00:26.403
  STEP: Confirm deletion of PVC "pvc-b8brv" @ 09/04/24 21:00:26.417
  E0904 21:00:26.637894      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:27.638769      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-1512-zh9jf" @ 09/04/24 21:00:28.423
  STEP: Confirm deletion of PV "pv-1512-zh9jf" @ 09/04/24 21:00:28.437
  E0904 21:00:28.639756      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:29.640111      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:30.641093      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 09/04/24 21:00:30.647
  I0904 21:00:30.647188 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-1512-zfplr" @ 09/04/24 21:00:30.671
  STEP: Updating the PVC "pvc-46bkh" @ 09/04/24 21:00:30.704
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-46bkh=updated" @ 09/04/24 21:00:30.716
  STEP: Deleting PVC "pvc-46bkh" via DeleteCollection @ 09/04/24 21:00:30.72
  STEP: Confirm deletion of PVC "pvc-46bkh" @ 09/04/24 21:00:30.741
  E0904 21:00:31.641647      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:32.641743      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-1512-zfplr" via DeleteCollection @ 09/04/24 21:00:32.757
  STEP: Confirm deletion of PV "pv-1512-zfplr" @ 09/04/24 21:00:32.774
  E0904 21:00:33.642840      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:34.643379      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 21:00:34.781357 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0904 21:00:34.781412 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-46bkh"
  I0904 21:00:34.783927 21 pv.go:193] Deleting PersistentVolume "pv-1512-zfplr"
  I0904 21:00:34.786396 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1512" for this suite. @ 09/04/24 21:00:34.79
â€¢ [8.750 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/04/24 21:00:34.801
  I0904 21:00:34.801227 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename sysctl @ 09/04/24 21:00:34.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 21:00:34.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 21:00:34.947
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/04/24 21:00:34.951
  STEP: Watching for error events or started pod @ 09/04/24 21:00:35.064
  E0904 21:00:35.643757      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:36.644116      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/04/24 21:00:37.07
  E0904 21:00:37.645125      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:38.645467      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 09/04/24 21:00:39.081
  STEP: Getting logs from the pod @ 09/04/24 21:00:39.081
  STEP: Checking that the sysctl is actually updated @ 09/04/24 21:00:39.087
  I0904 21:00:39.088215 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7451" for this suite. @ 09/04/24 21:00:39.091
â€¢ [4.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 09/04/24 21:00:39.107
  I0904 21:00:39.107761 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename configmap @ 09/04/24 21:00:39.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 21:00:39.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 21:00:39.458
  STEP: Creating configMap with name configmap-test-volume-c61129f8-9ed2-44ac-8335-958bd2eb9222 @ 09/04/24 21:00:39.461
  STEP: Creating a pod to test consume configMaps @ 09/04/24 21:00:39.47
  E0904 21:00:39.646104      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:40.646955      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:41.648223      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:42.648732      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/24 21:00:43.516
  I0904 21:00:43.519464 21 output.go:196] Trying to get logs from node ip-172-31-15-190.us-east-2.compute.internal pod pod-configmaps-ac5b9d30-ad19-4a2e-842d-3d1f46146202 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/24 21:00:43.525
  I0904 21:00:43.568899 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7017" for this suite. @ 09/04/24 21:00:43.574
â€¢ [4.481 seconds]
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 09/04/24 21:00:43.589
  I0904 21:00:43.589536 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename projected @ 09/04/24 21:00:43.59
  E0904 21:00:43.649546      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 21:00:43.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 21:00:43.891
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-e617a477-62bc-4d55-b41e-60a40f98e35e @ 09/04/24 21:00:43.902
  STEP: Creating the pod @ 09/04/24 21:00:43.915
  E0904 21:00:44.649870      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:45.649972      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-e617a477-62bc-4d55-b41e-60a40f98e35e @ 09/04/24 21:00:45.952
  STEP: waiting to observe update in volume @ 09/04/24 21:00:45.961
  E0904 21:00:46.651070      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0904 21:00:47.651945      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0904 21:00:47.975098 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2908" for this suite. @ 09/04/24 21:00:47.979
â€¢ [4.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/04/24 21:00:47.989
  I0904 21:00:47.989843 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3200332052
  STEP: Building a namespace api object, basename watch @ 09/04/24 21:00:47.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/24 21:00:48.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/24 21:00:48.135
  STEP: creating a watch on configmaps @ 09/04/24 21:00:48.161
  STEP: creating a new configmap @ 09/04/24 21:00:48.174
  STEP: modifying the configmap once @ 09/04/24 21:00:48.188
  STEP: closing the watch once it receives two notifications @ 09/04/24 21:00:48.2
  I0904 21:00:48.200511 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5385  dde7c249-e8ee-4df5-bbf6-6f8f5f524773 248287 0 2024-09-04 21:00:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-04 21:00:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 21:00:48.200740 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5385  dde7c249-e8ee-4df5-bbf6-6f8f5f524773 248288 0 2024-09-04 21:00:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-04 21:00:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/04/24 21:00:48.2
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/04/24 21:00:48.213
  STEP: deleting the configmap @ 09/04/24 21:00:48.215
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/04/24 21:00:48.224
  I0904 21:00:48.225009 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5385  dde7c249-e8ee-4df5-bbf6-6f8f5f524773 248289 0 2024-09-04 21:00:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-04 21:00:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 21:00:48.225262 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5385  dde7c249-e8ee-4df5-bbf6-6f8f5f524773 248290 0 2024-09-04 21:00:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-04 21:00:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 21:00:48.225495 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5385" for this suite. @ 09/04/24 21:00:48.229
â€¢ [0.251 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0904 21:00:48.240963 21 suites.go:34] Running AfterSuite actions on node 1
  I0904 21:00:48.241021 21 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.071 seconds]
------------------------------

Ran 404 of 6603 Specs in 6185.926 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6199 Skipped
PASS

Ginkgo ran 1 suite in 1h43m7.663946244s
Test Suite Passed
