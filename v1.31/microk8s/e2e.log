  I0112 15:37:31.270627      21 e2e.go:109] Starting e2e run "a97af45b-8ee5-4c8a-a844-7910e460e31d" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1736696250 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0112 15:37:31.477209 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 15:37:31.478470 21 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0112 15:37:31.510786 21 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0112 15:37:31.515309 21 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0112 15:37:31.515377 21 e2e.go:245] e2e test version: v1.31.3
  I0112 15:37:31.517106 21 e2e.go:254] kube-apiserver version: v1.31.3
  I0112 15:37:31.517238 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 15:37:31.521238 21 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.044 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 01/12/25 15:37:31.629
  I0112 15:37:31.629460 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pv @ 01/12/25 15:37:31.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:37:31.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:37:31.671
  STEP: Creating initial PV and PVC @ 01/12/25 15:37:31.675
  I0112 15:37:31.675324 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7447" @ 01/12/25 15:37:31.71
  STEP: Listing PVCs in namespace "pv-7447" @ 01/12/25 15:37:31.713
  STEP: Reading "pvc-rddr8" Status @ 01/12/25 15:37:31.717
  STEP: Reading "pv-7447-6dtvg" Status @ 01/12/25 15:37:31.72
  STEP: Patching "pvc-rddr8" Status @ 01/12/25 15:37:31.725
  STEP: Patching "pv-7447-6dtvg" Status @ 01/12/25 15:37:31.741
  STEP: Updating "pvc-rddr8" Status @ 01/12/25 15:37:31.786
  STEP: Updating "pv-7447-6dtvg" Status @ 01/12/25 15:37:31.832
  I0112 15:37:31.847457 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0112 15:37:31.847491 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-rddr8"
  I0112 15:37:31.860158 21 pv.go:193] Deleting PersistentVolume "pv-7447-6dtvg"
  I0112 15:37:31.879147 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7447" for this suite. @ 01/12/25 15:37:31.882
• [0.267 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 01/12/25 15:37:31.896
  I0112 15:37:31.896906 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 15:37:31.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:37:31.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:37:31.928
  STEP: Setting up server cert @ 01/12/25 15:37:31.979
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 15:37:32.224
  STEP: Deploying the webhook pod @ 01/12/25 15:37:32.247
  STEP: Wait for the deployment to be ready @ 01/12/25 15:37:32.296
  I0112 15:37:32.306522 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0112 15:37:34.318257 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 15:37:36.323452 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 15:37:38.322419 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 15:37:40.322973 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 15, 37, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/12/25 15:37:42.323
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 15:37:42.346
  I0112 15:37:43.346381 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/12/25 15:37:44.403
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/12/25 15:37:44.443
  STEP: Deleting the collection of validation webhooks @ 01/12/25 15:37:44.478
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/12/25 15:37:44.92
  I0112 15:37:45.067866 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1074" for this suite. @ 01/12/25 15:37:45.071
  STEP: Destroying namespace "webhook-markers-8177" for this suite. @ 01/12/25 15:37:45.107
• [13.475 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 01/12/25 15:37:45.371
  I0112 15:37:45.371845 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename replicaset @ 01/12/25 15:37:45.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:37:46.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:37:46.496
  STEP: Create a Replicaset @ 01/12/25 15:37:46.51
  STEP: Verify that the required pods have come up. @ 01/12/25 15:37:46.53
  I0112 15:37:46.538587 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0112 15:37:51.542568 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/12/25 15:37:51.542
  STEP: Getting /status @ 01/12/25 15:38:03.58
  I0112 15:38:03.584953 21 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 01/12/25 15:38:03.585
  I0112 15:38:03.600549 21 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 01/12/25 15:38:03.6
  I0112 15:38:03.602443 21 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0112 15:38:03.602580 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0112 15:38:03.602648 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0112 15:38:03.602812 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0112 15:38:03.602865 21 replica_set.go:682] Found replicaset test-rs in namespace replicaset-9097 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0112 15:38:03.602888 21 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 01/12/25 15:38:03.602
  I0112 15:38:03.602920 21 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0112 15:38:03.615253 21 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 01/12/25 15:38:03.615
  I0112 15:38:03.617512 21 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0112 15:38:03.617723 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0112 15:38:03.617853 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0112 15:38:03.618112 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0112 15:38:03.618172 21 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-9097 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0112 15:38:03.618319 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0112 15:38:03.618352 21 replica_set.go:718] Found replicaset test-rs in namespace replicaset-9097 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0112 15:38:03.618373 21 replica_set.go:729] Replicaset test-rs has a patched status
  I0112 15:38:03.618518 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9097" for this suite. @ 01/12/25 15:38:03.622
• [18.264 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 01/12/25 15:38:03.636
  I0112 15:38:03.636288 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 15:38:03.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:38:03.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:38:03.671
  STEP: Creating configMap with name configmap-test-upd-4b6c9e0c-78d5-4452-b22c-397cd1e53325 @ 01/12/25 15:38:03.681
  STEP: Creating the pod @ 01/12/25 15:38:03.7
  STEP: Waiting for pod with text data @ 01/12/25 15:38:07.728
  STEP: Waiting for pod with binary data @ 01/12/25 15:38:07.739
  I0112 15:38:07.745847 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3469" for this suite. @ 01/12/25 15:38:07.749
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 01/12/25 15:38:07.767
  I0112 15:38:07.767990 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 15:38:07.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:38:07.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:38:07.809
  STEP: Creating a pod to test downward api env vars @ 01/12/25 15:38:07.813
  STEP: Saw pod success @ 01/12/25 15:38:13.853
  I0112 15:38:13.862361 21 output.go:196] Trying to get logs from node ubuntu2 pod downward-api-9175476a-681a-4805-9213-33694c875baa container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 15:38:13.878
  I0112 15:38:13.911852 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2727" for this suite. @ 01/12/25 15:38:13.916
• [6.161 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 01/12/25 15:38:13.929
  I0112 15:38:13.929579 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename svc-latency @ 01/12/25 15:38:13.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:38:13.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:38:13.972
  I0112 15:38:13.976028 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-7654 @ 01/12/25 15:38:13.976
  I0112 15:38:13.988544      21 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-7654, replica count: 1
  I0112 15:38:15.040362      21 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 15:38:16.041117      21 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 15:38:17.041919      21 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 15:38:18.042174      21 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 15:38:18.165111 21 service_latency.go:356] Created: latency-svc-7mtfk
  I0112 15:38:18.187100 21 service_latency.go:363] Got endpoints: latency-svc-7mtfk [44.100051ms]
  I0112 15:38:18.214183 21 service_latency.go:356] Created: latency-svc-znz7x
  I0112 15:38:18.233298 21 service_latency.go:363] Got endpoints: latency-svc-znz7x [46.033245ms]
  I0112 15:38:18.250347 21 service_latency.go:356] Created: latency-svc-g426v
  I0112 15:38:18.267689 21 service_latency.go:363] Got endpoints: latency-svc-g426v [80.22723ms]
  I0112 15:38:18.286342 21 service_latency.go:356] Created: latency-svc-szwcn
  I0112 15:38:18.332728 21 service_latency.go:363] Got endpoints: latency-svc-szwcn [145.029812ms]
  I0112 15:38:18.340447 21 service_latency.go:356] Created: latency-svc-mzgz4
  I0112 15:38:18.357671 21 service_latency.go:363] Got endpoints: latency-svc-mzgz4 [169.869428ms]
  I0112 15:38:18.374127 21 service_latency.go:356] Created: latency-svc-mrzgm
  I0112 15:38:18.398539 21 service_latency.go:363] Got endpoints: latency-svc-mrzgm [210.966489ms]
  I0112 15:38:18.418278 21 service_latency.go:356] Created: latency-svc-j4v4t
  I0112 15:38:18.451691 21 service_latency.go:363] Got endpoints: latency-svc-j4v4t [263.960011ms]
  I0112 15:38:18.460041 21 service_latency.go:356] Created: latency-svc-5qzpr
  I0112 15:38:18.478308 21 service_latency.go:363] Got endpoints: latency-svc-5qzpr [290.66992ms]
  I0112 15:38:18.495060 21 service_latency.go:356] Created: latency-svc-bgrrs
  I0112 15:38:18.511893 21 service_latency.go:363] Got endpoints: latency-svc-bgrrs [324.550406ms]
  I0112 15:38:18.528304 21 service_latency.go:356] Created: latency-svc-lkwxt
  I0112 15:38:18.544582 21 service_latency.go:363] Got endpoints: latency-svc-lkwxt [356.693298ms]
  I0112 15:38:18.562529 21 service_latency.go:356] Created: latency-svc-57p69
  I0112 15:38:18.605132 21 service_latency.go:363] Got endpoints: latency-svc-57p69 [417.235794ms]
  I0112 15:38:18.621630 21 service_latency.go:356] Created: latency-svc-5rcg2
  I0112 15:38:18.661335 21 service_latency.go:363] Got endpoints: latency-svc-5rcg2 [473.486104ms]
  I0112 15:38:18.669195 21 service_latency.go:356] Created: latency-svc-t6pq8
  I0112 15:38:18.696473 21 service_latency.go:363] Got endpoints: latency-svc-t6pq8 [508.481887ms]
  I0112 15:38:18.721357 21 service_latency.go:356] Created: latency-svc-jvnfh
  I0112 15:38:18.741592 21 service_latency.go:363] Got endpoints: latency-svc-jvnfh [553.543835ms]
  I0112 15:38:18.758455 21 service_latency.go:356] Created: latency-svc-kr6g4
  I0112 15:38:18.784188 21 service_latency.go:363] Got endpoints: latency-svc-kr6g4 [596.39689ms]
  I0112 15:38:18.801432 21 service_latency.go:356] Created: latency-svc-cnzw9
  I0112 15:38:18.844540 21 service_latency.go:363] Got endpoints: latency-svc-cnzw9 [656.495488ms]
  I0112 15:38:18.888039 21 service_latency.go:356] Created: latency-svc-cgpn2
  I0112 15:38:18.912661 21 service_latency.go:363] Got endpoints: latency-svc-cgpn2 [679.267111ms]
  I0112 15:38:18.952688 21 service_latency.go:356] Created: latency-svc-w7sq4
  I0112 15:38:19.000837 21 service_latency.go:363] Got endpoints: latency-svc-w7sq4 [733.00903ms]
  I0112 15:38:19.028916 21 service_latency.go:356] Created: latency-svc-n24nh
  I0112 15:38:19.068475 21 service_latency.go:363] Got endpoints: latency-svc-n24nh [735.648021ms]
  I0112 15:38:19.083424 21 service_latency.go:356] Created: latency-svc-4b5zf
  I0112 15:38:19.159145 21 service_latency.go:363] Got endpoints: latency-svc-4b5zf [801.385ms]
  I0112 15:38:19.174623 21 service_latency.go:356] Created: latency-svc-6t7qc
  I0112 15:38:19.237258 21 service_latency.go:363] Got endpoints: latency-svc-6t7qc [838.633573ms]
  I0112 15:38:19.252998 21 service_latency.go:356] Created: latency-svc-fxmf4
  I0112 15:38:19.325657 21 service_latency.go:363] Got endpoints: latency-svc-fxmf4 [873.875356ms]
  I0112 15:38:19.354981 21 service_latency.go:356] Created: latency-svc-wgkx4
  I0112 15:38:19.398263 21 service_latency.go:363] Got endpoints: latency-svc-wgkx4 [919.894ms]
  I0112 15:38:19.448318 21 service_latency.go:356] Created: latency-svc-9qlmt
  I0112 15:38:19.472623 21 service_latency.go:363] Got endpoints: latency-svc-9qlmt [960.577163ms]
  I0112 15:38:19.490218 21 service_latency.go:356] Created: latency-svc-v2tmt
  I0112 15:38:19.565572 21 service_latency.go:363] Got endpoints: latency-svc-v2tmt [1.02086986s]
  I0112 15:38:19.574573 21 service_latency.go:356] Created: latency-svc-2rpln
  I0112 15:38:19.615098 21 service_latency.go:363] Got endpoints: latency-svc-2rpln [1.009880897s]
  I0112 15:38:19.636128 21 service_latency.go:356] Created: latency-svc-5gfcl
  I0112 15:38:19.708802 21 service_latency.go:363] Got endpoints: latency-svc-5gfcl [1.047399871s]
  I0112 15:38:19.717070 21 service_latency.go:356] Created: latency-svc-cqgh2
  I0112 15:38:19.764264 21 service_latency.go:363] Got endpoints: latency-svc-cqgh2 [1.067683003s]
  I0112 15:38:19.808252 21 service_latency.go:356] Created: latency-svc-7nc4r
  I0112 15:38:19.838083 21 service_latency.go:363] Got endpoints: latency-svc-7nc4r [1.096413706s]
  I0112 15:38:19.868342 21 service_latency.go:356] Created: latency-svc-lgsdp
  I0112 15:38:19.932839 21 service_latency.go:363] Got endpoints: latency-svc-lgsdp [1.14856843s]
  I0112 15:38:19.947081 21 service_latency.go:356] Created: latency-svc-8pdjl
  I0112 15:38:20.027280 21 service_latency.go:363] Got endpoints: latency-svc-8pdjl [1.182639316s]
  I0112 15:38:20.057020 21 service_latency.go:356] Created: latency-svc-pmfcr
  I0112 15:38:20.094438 21 service_latency.go:363] Got endpoints: latency-svc-pmfcr [1.181655318s]
  I0112 15:38:20.132605 21 service_latency.go:356] Created: latency-svc-r7wwq
  I0112 15:38:20.182365 21 service_latency.go:363] Got endpoints: latency-svc-r7wwq [1.18137122s]
  I0112 15:38:20.209248 21 service_latency.go:356] Created: latency-svc-8q2vp
  I0112 15:38:20.235365 21 service_latency.go:363] Got endpoints: latency-svc-8q2vp [1.166801069s]
  I0112 15:38:20.275215 21 service_latency.go:356] Created: latency-svc-k9pmw
  I0112 15:38:20.328162 21 service_latency.go:363] Got endpoints: latency-svc-k9pmw [1.168905862s]
  I0112 15:38:20.376796 21 service_latency.go:356] Created: latency-svc-hk8l4
  I0112 15:38:20.400718 21 service_latency.go:363] Got endpoints: latency-svc-hk8l4 [1.163370181s]
  I0112 15:38:20.422133 21 service_latency.go:356] Created: latency-svc-g9dqv
  I0112 15:38:20.457899 21 service_latency.go:363] Got endpoints: latency-svc-g9dqv [1.132153686s]
  I0112 15:38:20.467896 21 service_latency.go:356] Created: latency-svc-xbvz5
  I0112 15:38:20.496566 21 service_latency.go:363] Got endpoints: latency-svc-xbvz5 [1.0981915s]
  I0112 15:38:20.504608 21 service_latency.go:356] Created: latency-svc-vccrz
  I0112 15:38:20.522129 21 service_latency.go:363] Got endpoints: latency-svc-vccrz [1.049419865s]
  I0112 15:38:20.543578 21 service_latency.go:356] Created: latency-svc-9p7f7
  I0112 15:38:20.569105 21 service_latency.go:363] Got endpoints: latency-svc-9p7f7 [1.003411219s]
  I0112 15:38:20.584055 21 service_latency.go:356] Created: latency-svc-gczkk
  I0112 15:38:20.621418 21 service_latency.go:363] Got endpoints: latency-svc-gczkk [1.00614141s]
  I0112 15:38:20.628753 21 service_latency.go:356] Created: latency-svc-hl59p
  I0112 15:38:20.648166 21 service_latency.go:363] Got endpoints: latency-svc-hl59p [939.244036ms]
  I0112 15:38:20.664249 21 service_latency.go:356] Created: latency-svc-4lqx4
  I0112 15:38:20.687867 21 service_latency.go:363] Got endpoints: latency-svc-4lqx4 [923.482289ms]
  I0112 15:38:20.695479 21 service_latency.go:356] Created: latency-svc-6smq6
  I0112 15:38:20.712879 21 service_latency.go:363] Got endpoints: latency-svc-6smq6 [874.689753ms]
  I0112 15:38:20.733454 21 service_latency.go:356] Created: latency-svc-v8bdc
  I0112 15:38:20.759426 21 service_latency.go:363] Got endpoints: latency-svc-v8bdc [826.411916ms]
  I0112 15:38:20.775347 21 service_latency.go:356] Created: latency-svc-wjxzv
  I0112 15:38:20.794432 21 service_latency.go:363] Got endpoints: latency-svc-wjxzv [767.024516ms]
  I0112 15:38:20.823323 21 service_latency.go:356] Created: latency-svc-2xhmz
  I0112 15:38:20.861285 21 service_latency.go:363] Got endpoints: latency-svc-2xhmz [766.727417ms]
  I0112 15:38:20.871542 21 service_latency.go:356] Created: latency-svc-mbt8w
  I0112 15:38:20.897162 21 service_latency.go:363] Got endpoints: latency-svc-mbt8w [714.682292ms]
  I0112 15:38:20.913775 21 service_latency.go:356] Created: latency-svc-khx6v
  I0112 15:38:20.952835 21 service_latency.go:363] Got endpoints: latency-svc-khx6v [717.384184ms]
  I0112 15:38:20.961403 21 service_latency.go:356] Created: latency-svc-84nb4
  I0112 15:38:20.990505 21 service_latency.go:363] Got endpoints: latency-svc-84nb4 [662.254069ms]
  I0112 15:38:20.997588 21 service_latency.go:356] Created: latency-svc-l9wcp
  I0112 15:38:21.028550 21 service_latency.go:363] Got endpoints: latency-svc-l9wcp [627.709786ms]
  I0112 15:38:21.043857 21 service_latency.go:356] Created: latency-svc-lmvk9
  I0112 15:38:21.065301 21 service_latency.go:363] Got endpoints: latency-svc-lmvk9 [607.250055ms]
  I0112 15:38:21.082874 21 service_latency.go:356] Created: latency-svc-z6v2j
  I0112 15:38:21.100549 21 service_latency.go:363] Got endpoints: latency-svc-z6v2j [603.877866ms]
  I0112 15:38:21.116152 21 service_latency.go:356] Created: latency-svc-qgsv9
  I0112 15:38:21.148324 21 service_latency.go:363] Got endpoints: latency-svc-qgsv9 [626.127791ms]
  I0112 15:38:21.155885 21 service_latency.go:356] Created: latency-svc-fttrd
  I0112 15:38:21.180497 21 service_latency.go:363] Got endpoints: latency-svc-fttrd [611.281841ms]
  I0112 15:38:21.205992 21 service_latency.go:356] Created: latency-svc-nppbg
  I0112 15:38:21.247620 21 service_latency.go:363] Got endpoints: latency-svc-nppbg [626.066591ms]
  I0112 15:38:21.271738 21 service_latency.go:356] Created: latency-svc-dg7w6
  I0112 15:38:21.294653 21 service_latency.go:363] Got endpoints: latency-svc-dg7w6 [646.389823ms]
  I0112 15:38:21.308745 21 service_latency.go:356] Created: latency-svc-f8f9f
  I0112 15:38:21.325904 21 service_latency.go:363] Got endpoints: latency-svc-f8f9f [637.909651ms]
  I0112 15:38:21.344302 21 service_latency.go:356] Created: latency-svc-d82c6
  I0112 15:38:21.368483 21 service_latency.go:363] Got endpoints: latency-svc-d82c6 [655.494292ms]
  I0112 15:38:21.384404 21 service_latency.go:356] Created: latency-svc-vqm7k
  I0112 15:38:21.402137 21 service_latency.go:363] Got endpoints: latency-svc-vqm7k [642.598536ms]
  I0112 15:38:21.417685 21 service_latency.go:356] Created: latency-svc-xlgml
  I0112 15:38:21.433701 21 service_latency.go:363] Got endpoints: latency-svc-xlgml [639.169647ms]
  I0112 15:38:21.447891 21 service_latency.go:356] Created: latency-svc-7klq9
  I0112 15:38:21.491880 21 service_latency.go:363] Got endpoints: latency-svc-7klq9 [630.491076ms]
  I0112 15:38:21.500318 21 service_latency.go:356] Created: latency-svc-crkzc
  I0112 15:38:21.524889 21 service_latency.go:363] Got endpoints: latency-svc-crkzc [627.632886ms]
  I0112 15:38:21.541163 21 service_latency.go:356] Created: latency-svc-rdxk2
  I0112 15:38:21.580610 21 service_latency.go:363] Got endpoints: latency-svc-rdxk2 [627.642987ms]
  I0112 15:38:21.587316 21 service_latency.go:356] Created: latency-svc-4gcdg
  I0112 15:38:21.605253 21 service_latency.go:363] Got endpoints: latency-svc-4gcdg [614.64453ms]
  I0112 15:38:21.626464 21 service_latency.go:356] Created: latency-svc-vzgd7
  I0112 15:38:21.659043 21 service_latency.go:363] Got endpoints: latency-svc-vzgd7 [630.403277ms]
  I0112 15:38:21.667909 21 service_latency.go:356] Created: latency-svc-lx5g6
  I0112 15:38:21.685476 21 service_latency.go:363] Got endpoints: latency-svc-lx5g6 [620.035012ms]
  I0112 15:38:21.701411 21 service_latency.go:356] Created: latency-svc-lhggw
  I0112 15:38:21.717664 21 service_latency.go:363] Got endpoints: latency-svc-lhggw [617.021522ms]
  I0112 15:38:21.732809 21 service_latency.go:356] Created: latency-svc-r25pm
  I0112 15:38:21.772723 21 service_latency.go:363] Got endpoints: latency-svc-r25pm [624.292498ms]
  I0112 15:38:21.782262 21 service_latency.go:356] Created: latency-svc-b27cz
  I0112 15:38:21.827253 21 service_latency.go:363] Got endpoints: latency-svc-b27cz [646.647622ms]
  I0112 15:38:21.851373 21 service_latency.go:356] Created: latency-svc-hmnj9
  I0112 15:38:21.869810 21 service_latency.go:363] Got endpoints: latency-svc-hmnj9 [622.104005ms]
  I0112 15:38:21.891647 21 service_latency.go:356] Created: latency-svc-kcz57
  I0112 15:38:21.935652 21 service_latency.go:363] Got endpoints: latency-svc-kcz57 [640.891142ms]
  I0112 15:38:21.942788 21 service_latency.go:356] Created: latency-svc-ldszk
  I0112 15:38:21.977032 21 service_latency.go:363] Got endpoints: latency-svc-ldszk [651.022207ms]
  I0112 15:38:22.010191 21 service_latency.go:356] Created: latency-svc-cmwms
  I0112 15:38:22.034949 21 service_latency.go:363] Got endpoints: latency-svc-cmwms [666.350156ms]
  I0112 15:38:22.051013 21 service_latency.go:356] Created: latency-svc-djfc6
  I0112 15:38:22.069417 21 service_latency.go:363] Got endpoints: latency-svc-djfc6 [667.174453ms]
  I0112 15:38:22.085576 21 service_latency.go:356] Created: latency-svc-5vpnc
  I0112 15:38:22.103815 21 service_latency.go:363] Got endpoints: latency-svc-5vpnc [670.032344ms]
  I0112 15:38:22.117652 21 service_latency.go:356] Created: latency-svc-5qxzk
  I0112 15:38:22.157440 21 service_latency.go:363] Got endpoints: latency-svc-5qxzk [665.467559ms]
  I0112 15:38:22.173875 21 service_latency.go:356] Created: latency-svc-qmmxr
  I0112 15:38:22.198274 21 service_latency.go:363] Got endpoints: latency-svc-qmmxr [673.230233ms]
  I0112 15:38:22.231493 21 service_latency.go:356] Created: latency-svc-bw58f
  I0112 15:38:22.273881 21 service_latency.go:363] Got endpoints: latency-svc-bw58f [693.165266ms]
  I0112 15:38:22.288716 21 service_latency.go:356] Created: latency-svc-dc2cs
  I0112 15:38:22.321705 21 service_latency.go:363] Got endpoints: latency-svc-dc2cs [716.267988ms]
  I0112 15:38:22.338798 21 service_latency.go:356] Created: latency-svc-74zst
  I0112 15:38:22.365473 21 service_latency.go:363] Got endpoints: latency-svc-74zst [706.308622ms]
  I0112 15:38:22.373765 21 service_latency.go:356] Created: latency-svc-9m5hz
  I0112 15:38:22.389059 21 service_latency.go:363] Got endpoints: latency-svc-9m5hz [703.472531ms]
  I0112 15:38:22.404368 21 service_latency.go:356] Created: latency-svc-7xq2b
  I0112 15:38:22.430189 21 service_latency.go:363] Got endpoints: latency-svc-7xq2b [712.440301ms]
  I0112 15:38:22.438674 21 service_latency.go:356] Created: latency-svc-ckt67
  I0112 15:38:22.455150 21 service_latency.go:363] Got endpoints: latency-svc-ckt67 [682.289403ms]
  I0112 15:38:22.472649 21 service_latency.go:356] Created: latency-svc-nxxl6
  I0112 15:38:22.505293 21 service_latency.go:363] Got endpoints: latency-svc-nxxl6 [677.858818ms]
  I0112 15:38:22.513688 21 service_latency.go:356] Created: latency-svc-5kqzl
  I0112 15:38:22.552601 21 service_latency.go:363] Got endpoints: latency-svc-5kqzl [682.696601ms]
  I0112 15:38:22.569952 21 service_latency.go:356] Created: latency-svc-74qjz
  I0112 15:38:22.594905 21 service_latency.go:363] Got endpoints: latency-svc-74qjz [659.17388ms]
  I0112 15:38:22.612407 21 service_latency.go:356] Created: latency-svc-m9l5d
  I0112 15:38:22.630531 21 service_latency.go:363] Got endpoints: latency-svc-m9l5d [653.4199ms]
  I0112 15:38:22.646267 21 service_latency.go:356] Created: latency-svc-6nwfr
  I0112 15:38:22.671266 21 service_latency.go:363] Got endpoints: latency-svc-6nwfr [636.200558ms]
  I0112 15:38:22.706435 21 service_latency.go:356] Created: latency-svc-nt2j6
  I0112 15:38:22.730679 21 service_latency.go:363] Got endpoints: latency-svc-nt2j6 [661.166874ms]
  I0112 15:38:22.753891 21 service_latency.go:356] Created: latency-svc-5vl6c
  I0112 15:38:22.780680 21 service_latency.go:363] Got endpoints: latency-svc-5vl6c [676.807022ms]
  I0112 15:38:22.787839 21 service_latency.go:356] Created: latency-svc-v2srq
  I0112 15:38:22.815166 21 service_latency.go:363] Got endpoints: latency-svc-v2srq [657.650185ms]
  I0112 15:38:22.821591 21 service_latency.go:356] Created: latency-svc-qlrrj
  I0112 15:38:22.837886 21 service_latency.go:363] Got endpoints: latency-svc-qlrrj [639.526647ms]
  I0112 15:38:22.855373 21 service_latency.go:356] Created: latency-svc-wwvls
  I0112 15:38:22.873234 21 service_latency.go:363] Got endpoints: latency-svc-wwvls [599.257182ms]
  I0112 15:38:22.889880 21 service_latency.go:356] Created: latency-svc-hlxpd
  I0112 15:38:22.913270 21 service_latency.go:363] Got endpoints: latency-svc-hlxpd [591.502208ms]
  I0112 15:38:22.930250 21 service_latency.go:356] Created: latency-svc-2tgrb
  I0112 15:38:22.958899 21 service_latency.go:363] Got endpoints: latency-svc-2tgrb [593.329002ms]
  I0112 15:38:22.974534 21 service_latency.go:356] Created: latency-svc-l96mb
  I0112 15:38:22.991494 21 service_latency.go:363] Got endpoints: latency-svc-l96mb [602.389872ms]
  I0112 15:38:23.013371 21 service_latency.go:356] Created: latency-svc-zcm7k
  I0112 15:38:23.032378 21 service_latency.go:363] Got endpoints: latency-svc-zcm7k [602.092273ms]
  I0112 15:38:23.055483 21 service_latency.go:356] Created: latency-svc-d72wj
  I0112 15:38:23.079986 21 service_latency.go:363] Got endpoints: latency-svc-d72wj [624.739597ms]
  I0112 15:38:23.097196 21 service_latency.go:356] Created: latency-svc-9whdv
  I0112 15:38:23.127587 21 service_latency.go:363] Got endpoints: latency-svc-9whdv [622.195706ms]
  I0112 15:38:23.164340 21 service_latency.go:356] Created: latency-svc-857v2
  I0112 15:38:23.187422 21 service_latency.go:363] Got endpoints: latency-svc-857v2 [634.722963ms]
  I0112 15:38:23.202984 21 service_latency.go:356] Created: latency-svc-swxg7
  I0112 15:38:23.220127 21 service_latency.go:363] Got endpoints: latency-svc-swxg7 [624.947796ms]
  I0112 15:38:23.234465 21 service_latency.go:356] Created: latency-svc-29s2x
  I0112 15:38:23.249112 21 service_latency.go:363] Got endpoints: latency-svc-29s2x [618.499318ms]
  I0112 15:38:23.262168 21 service_latency.go:356] Created: latency-svc-x2mrb
  I0112 15:38:23.286280 21 service_latency.go:363] Got endpoints: latency-svc-x2mrb [614.945729ms]
  I0112 15:38:23.299840 21 service_latency.go:356] Created: latency-svc-hm6kw
  I0112 15:38:23.316798 21 service_latency.go:363] Got endpoints: latency-svc-hm6kw [586.028427ms]
  I0112 15:38:23.330811 21 service_latency.go:356] Created: latency-svc-sb6gl
  I0112 15:38:23.347304 21 service_latency.go:363] Got endpoints: latency-svc-sb6gl [566.514393ms]
  I0112 15:38:23.368749 21 service_latency.go:356] Created: latency-svc-44j4b
  I0112 15:38:23.393040 21 service_latency.go:363] Got endpoints: latency-svc-44j4b [577.806655ms]
  I0112 15:38:23.400568 21 service_latency.go:356] Created: latency-svc-47n9f
  I0112 15:38:23.418435 21 service_latency.go:363] Got endpoints: latency-svc-47n9f [580.392847ms]
  I0112 15:38:23.432325 21 service_latency.go:356] Created: latency-svc-m55j6
  I0112 15:38:23.456644 21 service_latency.go:363] Got endpoints: latency-svc-m55j6 [583.323436ms]
  I0112 15:38:23.464180 21 service_latency.go:356] Created: latency-svc-87zck
  I0112 15:38:23.481303 21 service_latency.go:363] Got endpoints: latency-svc-87zck [567.944688ms]
  I0112 15:38:23.508461 21 service_latency.go:356] Created: latency-svc-knrd8
  I0112 15:38:23.530831 21 service_latency.go:363] Got endpoints: latency-svc-knrd8 [571.803475ms]
  I0112 15:38:23.568811 21 service_latency.go:356] Created: latency-svc-99fnc
  I0112 15:38:23.605259 21 service_latency.go:363] Got endpoints: latency-svc-99fnc [613.679135ms]
  I0112 15:38:23.636987 21 service_latency.go:356] Created: latency-svc-5n4ck
  I0112 15:38:23.660497 21 service_latency.go:363] Got endpoints: latency-svc-5n4ck [627.998586ms]
  I0112 15:38:23.683333 21 service_latency.go:356] Created: latency-svc-mq48l
  I0112 15:38:23.711971 21 service_latency.go:363] Got endpoints: latency-svc-mq48l [631.877973ms]
  I0112 15:38:23.746289 21 service_latency.go:356] Created: latency-svc-wg9qk
  I0112 15:38:23.765393 21 service_latency.go:363] Got endpoints: latency-svc-wg9qk [637.633954ms]
  I0112 15:38:23.790296 21 service_latency.go:356] Created: latency-svc-dn27v
  I0112 15:38:23.840584 21 service_latency.go:363] Got endpoints: latency-svc-dn27v [652.975602ms]
  I0112 15:38:23.859612 21 service_latency.go:356] Created: latency-svc-hcsvv
  I0112 15:38:23.878537 21 service_latency.go:363] Got endpoints: latency-svc-hcsvv [658.293484ms]
  I0112 15:38:23.894850 21 service_latency.go:356] Created: latency-svc-slrhh
  I0112 15:38:23.916477 21 service_latency.go:363] Got endpoints: latency-svc-slrhh [667.284354ms]
  I0112 15:38:23.933664 21 service_latency.go:356] Created: latency-svc-62m7w
  I0112 15:38:23.951799 21 service_latency.go:363] Got endpoints: latency-svc-62m7w [665.44376ms]
  I0112 15:38:23.972017 21 service_latency.go:356] Created: latency-svc-8ftsp
  I0112 15:38:23.986882 21 service_latency.go:363] Got endpoints: latency-svc-8ftsp [669.979845ms]
  I0112 15:38:24.012246 21 service_latency.go:356] Created: latency-svc-6ftnq
  I0112 15:38:24.029659 21 service_latency.go:363] Got endpoints: latency-svc-6ftnq [682.292403ms]
  I0112 15:38:24.045641 21 service_latency.go:356] Created: latency-svc-pz6sw
  I0112 15:38:24.070050 21 service_latency.go:363] Got endpoints: latency-svc-pz6sw [676.918221ms]
  I0112 15:38:24.091864 21 service_latency.go:356] Created: latency-svc-jwz5m
  I0112 15:38:24.109562 21 service_latency.go:363] Got endpoints: latency-svc-jwz5m [690.979874ms]
  I0112 15:38:24.130635 21 service_latency.go:356] Created: latency-svc-xkj6z
  I0112 15:38:24.152988 21 service_latency.go:363] Got endpoints: latency-svc-xkj6z [696.239856ms]
  I0112 15:38:24.174683 21 service_latency.go:356] Created: latency-svc-kcr62
  I0112 15:38:24.229317 21 service_latency.go:363] Got endpoints: latency-svc-kcr62 [747.929582ms]
  I0112 15:38:24.244822 21 service_latency.go:356] Created: latency-svc-thqcm
  I0112 15:38:24.266442 21 service_latency.go:363] Got endpoints: latency-svc-thqcm [735.513824ms]
  I0112 15:38:24.281229 21 service_latency.go:356] Created: latency-svc-r7vxm
  I0112 15:38:24.303089 21 service_latency.go:363] Got endpoints: latency-svc-r7vxm [697.665252ms]
  I0112 15:38:24.324243 21 service_latency.go:356] Created: latency-svc-wxlbb
  I0112 15:38:24.349083 21 service_latency.go:363] Got endpoints: latency-svc-wxlbb [688.503483ms]
  I0112 15:38:24.356430 21 service_latency.go:356] Created: latency-svc-cljtr
  I0112 15:38:24.379071 21 service_latency.go:363] Got endpoints: latency-svc-cljtr [667.007555ms]
  I0112 15:38:24.395034 21 service_latency.go:356] Created: latency-svc-996zx
  I0112 15:38:24.428291 21 service_latency.go:363] Got endpoints: latency-svc-996zx [662.785169ms]
  I0112 15:38:24.445515 21 service_latency.go:356] Created: latency-svc-qfbsl
  I0112 15:38:24.481192 21 service_latency.go:363] Got endpoints: latency-svc-qfbsl [640.417244ms]
  I0112 15:38:24.488290 21 service_latency.go:356] Created: latency-svc-sfqdx
  I0112 15:38:24.507552 21 service_latency.go:363] Got endpoints: latency-svc-sfqdx [628.900684ms]
  I0112 15:38:24.528155 21 service_latency.go:356] Created: latency-svc-cxqv9
  I0112 15:38:24.554416 21 service_latency.go:363] Got endpoints: latency-svc-cxqv9 [637.798553ms]
  I0112 15:38:24.595454 21 service_latency.go:356] Created: latency-svc-6vgkf
  I0112 15:38:24.632798 21 service_latency.go:363] Got endpoints: latency-svc-6vgkf [680.851108ms]
  I0112 15:38:24.653358 21 service_latency.go:356] Created: latency-svc-qjlg2
  I0112 15:38:24.668629 21 service_latency.go:363] Got endpoints: latency-svc-qjlg2 [681.659206ms]
  I0112 15:38:24.682646 21 service_latency.go:356] Created: latency-svc-m4c7w
  I0112 15:38:24.706499 21 service_latency.go:363] Got endpoints: latency-svc-m4c7w [676.757022ms]
  I0112 15:38:24.718603 21 service_latency.go:356] Created: latency-svc-zxm5p
  I0112 15:38:24.743913 21 service_latency.go:363] Got endpoints: latency-svc-zxm5p [673.728032ms]
  I0112 15:38:24.777437 21 service_latency.go:356] Created: latency-svc-bxrhm
  I0112 15:38:24.810722 21 service_latency.go:363] Got endpoints: latency-svc-bxrhm [701.06954ms]
  I0112 15:38:24.818089 21 service_latency.go:356] Created: latency-svc-27m7h
  I0112 15:38:24.845279 21 service_latency.go:363] Got endpoints: latency-svc-27m7h [692.19507ms]
  I0112 15:38:24.853571 21 service_latency.go:356] Created: latency-svc-mfbg2
  I0112 15:38:24.867747 21 service_latency.go:363] Got endpoints: latency-svc-mfbg2 [638.333852ms]
  I0112 15:38:24.881989 21 service_latency.go:356] Created: latency-svc-ns5qd
  I0112 15:38:24.916047 21 service_latency.go:363] Got endpoints: latency-svc-ns5qd [649.518114ms]
  I0112 15:38:24.938357 21 service_latency.go:356] Created: latency-svc-mzpvr
  I0112 15:38:24.968151 21 service_latency.go:363] Got endpoints: latency-svc-mzpvr [664.983862ms]
  I0112 15:38:24.991317 21 service_latency.go:356] Created: latency-svc-gvvh2
  I0112 15:38:25.022424 21 service_latency.go:363] Got endpoints: latency-svc-gvvh2 [673.243534ms]
  I0112 15:38:25.037209 21 service_latency.go:356] Created: latency-svc-k8ssv
  I0112 15:38:25.055593 21 service_latency.go:363] Got endpoints: latency-svc-k8ssv [676.416223ms]
  I0112 15:38:25.071353 21 service_latency.go:356] Created: latency-svc-9mc8k
  I0112 15:38:25.097853 21 service_latency.go:363] Got endpoints: latency-svc-9mc8k [669.447347ms]
  I0112 15:38:25.136761 21 service_latency.go:356] Created: latency-svc-2k8qp
  I0112 15:38:25.171865 21 service_latency.go:363] Got endpoints: latency-svc-2k8qp [690.547976ms]
  I0112 15:38:25.198134 21 service_latency.go:356] Created: latency-svc-v5xcx
  I0112 15:38:25.219273 21 service_latency.go:363] Got endpoints: latency-svc-v5xcx [711.650805ms]
  I0112 15:38:25.242818 21 service_latency.go:356] Created: latency-svc-wnclj
  I0112 15:38:25.273582 21 service_latency.go:363] Got endpoints: latency-svc-wnclj [719.04978ms]
  I0112 15:38:25.281734 21 service_latency.go:356] Created: latency-svc-jk9bf
  I0112 15:38:25.298688 21 service_latency.go:363] Got endpoints: latency-svc-jk9bf [665.818059ms]
  I0112 15:38:25.313496 21 service_latency.go:356] Created: latency-svc-jxdmc
  I0112 15:38:25.329707 21 service_latency.go:363] Got endpoints: latency-svc-jxdmc [660.947776ms]
  I0112 15:38:25.343869 21 service_latency.go:356] Created: latency-svc-zvs4h
  I0112 15:38:25.360982 21 service_latency.go:363] Got endpoints: latency-svc-zvs4h [654.313198ms]
  I0112 15:38:25.375655 21 service_latency.go:356] Created: latency-svc-dw9tz
  I0112 15:38:25.403669 21 service_latency.go:363] Got endpoints: latency-svc-dw9tz [659.67658ms]
  I0112 15:38:25.410512 21 service_latency.go:356] Created: latency-svc-sgqgc
  I0112 15:38:25.427494 21 service_latency.go:363] Got endpoints: latency-svc-sgqgc [616.637225ms]
  I0112 15:38:25.442777 21 service_latency.go:356] Created: latency-svc-fjb5j
  I0112 15:38:25.466573 21 service_latency.go:363] Got endpoints: latency-svc-fjb5j [621.19791ms]
  I0112 15:38:25.484708 21 service_latency.go:356] Created: latency-svc-rjk47
  I0112 15:38:25.503287 21 service_latency.go:363] Got endpoints: latency-svc-rjk47 [635.432262ms]
  I0112 15:38:25.519272 21 service_latency.go:356] Created: latency-svc-67rpp
  I0112 15:38:25.532787 21 service_latency.go:363] Got endpoints: latency-svc-67rpp [616.682925ms]
  I0112 15:38:25.559558 21 service_latency.go:356] Created: latency-svc-4gqlc
  I0112 15:38:25.576035 21 service_latency.go:363] Got endpoints: latency-svc-4gqlc [607.772955ms]
  I0112 15:38:25.598770 21 service_latency.go:356] Created: latency-svc-n94rq
  I0112 15:38:25.631687 21 service_latency.go:363] Got endpoints: latency-svc-n94rq [609.12055ms]
  I0112 15:38:25.653577 21 service_latency.go:356] Created: latency-svc-gp9rj
  I0112 15:38:25.670665 21 service_latency.go:363] Got endpoints: latency-svc-gp9rj [614.968231ms]
  I0112 15:38:25.702655 21 service_latency.go:356] Created: latency-svc-hcvpz
  I0112 15:38:25.732571 21 service_latency.go:363] Got endpoints: latency-svc-hcvpz [634.584665ms]
  I0112 15:38:25.740016 21 service_latency.go:356] Created: latency-svc-vxjwf
  I0112 15:38:25.763758 21 service_latency.go:363] Got endpoints: latency-svc-vxjwf [591.748209ms]
  I0112 15:38:25.793763 21 service_latency.go:356] Created: latency-svc-9gfcn
  I0112 15:38:25.811237 21 service_latency.go:363] Got endpoints: latency-svc-9gfcn [591.816109ms]
  I0112 15:38:25.838703 21 service_latency.go:356] Created: latency-svc-cz5jv
  I0112 15:38:25.865007 21 service_latency.go:363] Got endpoints: latency-svc-cz5jv [591.33611ms]
  I0112 15:38:25.877024 21 service_latency.go:356] Created: latency-svc-tmw8h
  I0112 15:38:25.904083 21 service_latency.go:363] Got endpoints: latency-svc-tmw8h [605.301163ms]
  I0112 15:38:25.913535 21 service_latency.go:356] Created: latency-svc-qjg7d
  I0112 15:38:25.931136 21 service_latency.go:363] Got endpoints: latency-svc-qjg7d [601.350076ms]
  I0112 15:38:25.948620 21 service_latency.go:356] Created: latency-svc-kzg77
  I0112 15:38:25.964578 21 service_latency.go:363] Got endpoints: latency-svc-kzg77 [603.501869ms]
  I0112 15:38:25.983530 21 service_latency.go:356] Created: latency-svc-22bs7
  I0112 15:38:26.009398 21 service_latency.go:363] Got endpoints: latency-svc-22bs7 [605.663662ms]
  I0112 15:38:26.045727 21 service_latency.go:356] Created: latency-svc-lr56m
  I0112 15:38:26.087039 21 service_latency.go:363] Got endpoints: latency-svc-lr56m [659.448481ms]
  I0112 15:38:26.096412 21 service_latency.go:356] Created: latency-svc-srksb
  I0112 15:38:26.125458 21 service_latency.go:363] Got endpoints: latency-svc-srksb [658.802784ms]
  I0112 15:38:26.149672 21 service_latency.go:356] Created: latency-svc-mh274
  I0112 15:38:26.173276 21 service_latency.go:363] Got endpoints: latency-svc-mh274 [669.905246ms]
  I0112 15:38:26.201737 21 service_latency.go:356] Created: latency-svc-gslr2
  I0112 15:38:26.236454 21 service_latency.go:363] Got endpoints: latency-svc-gslr2 [703.549133ms]
  I0112 15:38:26.244276 21 service_latency.go:356] Created: latency-svc-xthx7
  I0112 15:38:26.262621 21 service_latency.go:363] Got endpoints: latency-svc-xthx7 [686.48759ms]
  I0112 15:38:26.287021 21 service_latency.go:356] Created: latency-svc-tsrm5
  I0112 15:38:26.336598 21 service_latency.go:363] Got endpoints: latency-svc-tsrm5 [704.728129ms]
  I0112 15:38:26.350986 21 service_latency.go:356] Created: latency-svc-hp6v8
  I0112 15:38:26.367061 21 service_latency.go:363] Got endpoints: latency-svc-hp6v8 [696.289757ms]
  I0112 15:38:26.381675 21 service_latency.go:356] Created: latency-svc-bfp5k
  I0112 15:38:26.408770 21 service_latency.go:363] Got endpoints: latency-svc-bfp5k [676.093226ms]
  I0112 15:38:26.424367 21 service_latency.go:356] Created: latency-svc-vwljr
  I0112 15:38:26.447984 21 service_latency.go:363] Got endpoints: latency-svc-vwljr [684.125599ms]
  I0112 15:38:26.454288 21 service_latency.go:356] Created: latency-svc-5987z
  I0112 15:38:26.468258 21 service_latency.go:363] Got endpoints: latency-svc-5987z [656.903191ms]
  I0112 15:38:26.491924 21 service_latency.go:356] Created: latency-svc-rf7rm
  I0112 15:38:26.518922 21 service_latency.go:363] Got endpoints: latency-svc-rf7rm [653.8335ms]
  I0112 15:38:26.535161 21 service_latency.go:356] Created: latency-svc-bs2hv
  I0112 15:38:26.553074 21 service_latency.go:363] Got endpoints: latency-svc-bs2hv [648.816517ms]
  I0112 15:38:26.567759 21 service_latency.go:356] Created: latency-svc-2n7zm
  I0112 15:38:26.585517 21 service_latency.go:363] Got endpoints: latency-svc-2n7zm [654.298999ms]
  I0112 15:38:26.600138 21 service_latency.go:356] Created: latency-svc-zgdk8
  I0112 15:38:26.619472 21 service_latency.go:363] Got endpoints: latency-svc-zgdk8 [654.794297ms]
  I0112 15:38:26.637662 21 service_latency.go:356] Created: latency-svc-wgdqd
  I0112 15:38:26.657837 21 service_latency.go:363] Got endpoints: latency-svc-wgdqd [648.364619ms]
  I0112 15:38:26.678082 21 service_latency.go:356] Created: latency-svc-5l94f
  I0112 15:38:26.706890 21 service_latency.go:363] Got endpoints: latency-svc-5l94f [619.770515ms]
  I0112 15:38:26.715871 21 service_latency.go:356] Created: latency-svc-dcw29
  I0112 15:38:26.734822 21 service_latency.go:363] Got endpoints: latency-svc-dcw29 [609.233451ms]
  I0112 15:38:26.751784 21 service_latency.go:356] Created: latency-svc-j958q
  I0112 15:38:26.778828 21 service_latency.go:363] Got endpoints: latency-svc-j958q [605.463963ms]
  I0112 15:38:26.803362 21 service_latency.go:356] Created: latency-svc-5wzm2
  I0112 15:38:26.839752 21 service_latency.go:363] Got endpoints: latency-svc-5wzm2 [603.183671ms]
  I0112 15:38:26.855596 21 service_latency.go:356] Created: latency-svc-66gth
  I0112 15:38:26.874473 21 service_latency.go:363] Got endpoints: latency-svc-66gth [611.769342ms]
  I0112 15:38:26.891567 21 service_latency.go:356] Created: latency-svc-gttrf
  I0112 15:38:26.912390 21 service_latency.go:363] Got endpoints: latency-svc-gttrf [575.703964ms]
  I0112 15:38:26.929010 21 service_latency.go:356] Created: latency-svc-z8fq8
  I0112 15:38:26.946036 21 service_latency.go:363] Got endpoints: latency-svc-z8fq8 [578.911052ms]
  I0112 15:38:26.981182 21 service_latency.go:356] Created: latency-svc-6qbf9
  I0112 15:38:27.008807 21 service_latency.go:363] Got endpoints: latency-svc-6qbf9 [599.941582ms]
  I0112 15:38:27.025448 21 service_latency.go:356] Created: latency-svc-nr6fv
  I0112 15:38:27.047572 21 service_latency.go:363] Got endpoints: latency-svc-nr6fv [599.505983ms]
  I0112 15:38:27.062859 21 service_latency.go:356] Created: latency-svc-x6zs5
  I0112 15:38:27.080697 21 service_latency.go:363] Got endpoints: latency-svc-x6zs5 [612.36544ms]
  I0112 15:38:27.125310 21 service_latency.go:356] Created: latency-svc-h9c2v
  I0112 15:38:27.188619 21 service_latency.go:363] Got endpoints: latency-svc-h9c2v [669.482149ms]
  I0112 15:38:27.198892 21 service_latency.go:356] Created: latency-svc-z7g62
  I0112 15:38:27.226541 21 service_latency.go:363] Got endpoints: latency-svc-z7g62 [673.395435ms]
  I0112 15:38:27.241102 21 service_latency.go:356] Created: latency-svc-pq8m9
  I0112 15:38:27.257459 21 service_latency.go:363] Got endpoints: latency-svc-pq8m9 [671.87074ms]
  I0112 15:38:27.290042 21 service_latency.go:356] Created: latency-svc-dwhzh
  I0112 15:38:27.317907 21 service_latency.go:363] Got endpoints: latency-svc-dwhzh [698.247052ms]
  I0112 15:38:27.333863 21 service_latency.go:356] Created: latency-svc-nh6r2
  I0112 15:38:27.358497 21 service_latency.go:363] Got endpoints: latency-svc-nh6r2 [700.589443ms]
  I0112 15:38:27.365445 21 service_latency.go:356] Created: latency-svc-vbj4d
  I0112 15:38:27.391319 21 service_latency.go:363] Got endpoints: latency-svc-vbj4d [684.228199ms]
  I0112 15:38:27.427225 21 service_latency.go:356] Created: latency-svc-4djb7
  I0112 15:38:27.444583 21 service_latency.go:363] Got endpoints: latency-svc-4djb7 [709.605014ms]
  I0112 15:38:27.459672 21 service_latency.go:356] Created: latency-svc-c8qzr
  I0112 15:38:27.477821 21 service_latency.go:363] Got endpoints: latency-svc-c8qzr [698.897849ms]
  I0112 15:38:27.501912 21 service_latency.go:356] Created: latency-svc-4qv7h
  I0112 15:38:27.512530 21 service_latency.go:363] Got endpoints: latency-svc-4qv7h [672.651138ms]
  I0112 15:38:27.512696 21 service_latency.go:114] Latencies: [46.033245ms 80.22723ms 145.029812ms 169.869428ms 210.966489ms 263.960011ms 290.66992ms 324.550406ms 356.693298ms 417.235794ms 473.486104ms 508.481887ms 553.543835ms 566.514393ms 567.944688ms 571.803475ms 575.703964ms 577.806655ms 578.911052ms 580.392847ms 583.323436ms 586.028427ms 591.33611ms 591.502208ms 591.748209ms 591.816109ms 593.329002ms 596.39689ms 599.257182ms 599.505983ms 599.941582ms 601.350076ms 602.092273ms 602.389872ms 603.183671ms 603.501869ms 603.877866ms 605.301163ms 605.463963ms 605.663662ms 607.250055ms 607.772955ms 609.12055ms 609.233451ms 611.281841ms 611.769342ms 612.36544ms 613.679135ms 614.64453ms 614.945729ms 614.968231ms 616.637225ms 616.682925ms 617.021522ms 618.499318ms 619.770515ms 620.035012ms 621.19791ms 622.104005ms 622.195706ms 624.292498ms 624.739597ms 624.947796ms 626.066591ms 626.127791ms 627.632886ms 627.642987ms 627.709786ms 627.998586ms 628.900684ms 630.403277ms 630.491076ms 631.877973ms 634.584665ms 634.722963ms 635.432262ms 636.200558ms 637.633954ms 637.798553ms 637.909651ms 638.333852ms 639.169647ms 639.526647ms 640.417244ms 640.891142ms 642.598536ms 646.389823ms 646.647622ms 648.364619ms 648.816517ms 649.518114ms 651.022207ms 652.975602ms 653.4199ms 653.8335ms 654.298999ms 654.313198ms 654.794297ms 655.494292ms 656.495488ms 656.903191ms 657.650185ms 658.293484ms 658.802784ms 659.17388ms 659.448481ms 659.67658ms 660.947776ms 661.166874ms 662.254069ms 662.785169ms 664.983862ms 665.44376ms 665.467559ms 665.818059ms 666.350156ms 667.007555ms 667.174453ms 667.284354ms 669.447347ms 669.482149ms 669.905246ms 669.979845ms 670.032344ms 671.87074ms 672.651138ms 673.230233ms 673.243534ms 673.395435ms 673.728032ms 676.093226ms 676.416223ms 676.757022ms 676.807022ms 676.918221ms 677.858818ms 679.267111ms 680.851108ms 681.659206ms 682.289403ms 682.292403ms 682.696601ms 684.125599ms 684.228199ms 686.48759ms 688.503483ms 690.547976ms 690.979874ms 692.19507ms 693.165266ms 696.239856ms 696.289757ms 697.665252ms 698.247052ms 698.897849ms 700.589443ms 701.06954ms 703.472531ms 703.549133ms 704.728129ms 706.308622ms 709.605014ms 711.650805ms 712.440301ms 714.682292ms 716.267988ms 717.384184ms 719.04978ms 733.00903ms 735.513824ms 735.648021ms 747.929582ms 766.727417ms 767.024516ms 801.385ms 826.411916ms 838.633573ms 873.875356ms 874.689753ms 919.894ms 923.482289ms 939.244036ms 960.577163ms 1.003411219s 1.00614141s 1.009880897s 1.02086986s 1.047399871s 1.049419865s 1.067683003s 1.096413706s 1.0981915s 1.132153686s 1.14856843s 1.163370181s 1.166801069s 1.168905862s 1.18137122s 1.181655318s 1.182639316s]
  I0112 15:38:27.512736 21 service_latency.go:118] 50 %ile: 656.903191ms
  I0112 15:38:27.512824 21 service_latency.go:119] 90 %ile: 923.482289ms
  I0112 15:38:27.512868 21 service_latency.go:120] 99 %ile: 1.181655318s
  I0112 15:38:27.512884 21 service_latency.go:121] Total sample count: 200
  I0112 15:38:27.512996 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7654" for this suite. @ 01/12/25 15:38:27.517
• [13.608 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 01/12/25 15:38:27.537
  I0112 15:38:27.537906 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 15:38:27.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:38:27.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:38:27.59
  STEP: apply creating a deployment @ 01/12/25 15:38:27.593
  I0112 15:38:27.607732 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9875" for this suite. @ 01/12/25 15:38:27.611
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 01/12/25 15:38:27.625
  I0112 15:38:27.625732 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename namespaces @ 01/12/25 15:38:27.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:38:27.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:38:27.664
  STEP: Creating namespace "e2e-ns-bvt99" @ 01/12/25 15:38:27.677
  I0112 15:38:27.740836 21 namespace.go:411] Namespace "e2e-ns-bvt99-809" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-bvt99-809" @ 01/12/25 15:38:27.74
  I0112 15:38:27.758674 21 namespace.go:434] Namespace "e2e-ns-bvt99-809" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-bvt99-809" @ 01/12/25 15:38:27.758
  I0112 15:38:27.777202 21 namespace.go:463] Namespace "e2e-ns-bvt99-809" has []v1.FinalizerName{"kubernetes"}
  I0112 15:38:27.777400 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2873" for this suite. @ 01/12/25 15:38:27.781
  STEP: Destroying namespace "e2e-ns-bvt99-809" for this suite. @ 01/12/25 15:38:27.794
• [0.181 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 01/12/25 15:38:27.807
  I0112 15:38:27.807301 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 15:38:27.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:38:27.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:38:27.837
  STEP: Creating pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964 @ 01/12/25 15:38:27.841
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 15:38:29.865
  I0112 15:38:29.869710 21 container_probe.go:1749] Initial restart count of pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 is 0
  I0112 15:38:29.874462 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:31.878346 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:33.885583 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:35.890107 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:37.894661 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:39.899395 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:41.904224 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:43.908202 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:45.912834 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:47.919021 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:49.926640 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:51.931723 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:53.938540 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:55.946883 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:57.951025 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:38:59.956847 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:01.963230 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:03.968680 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:05.974346 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:07.979742 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:09.988441 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:11.994479 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:14.003791 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:16.009687 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:18.014326 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:20.019269 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:22.024775 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:24.029627 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:26.033983 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:28.039795 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:30.046087 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:32.050233 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:34.055187 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:36.060615 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:38.066204 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:40.071182 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:42.075768 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:44.081454 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:46.085775 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:48.093866 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:50.098628 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:52.104747 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:54.110327 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:56.116002 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:39:58.122499 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:00.127299 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:02.132358 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:04.136428 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:06.141821 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:08.147636 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:10.154442 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:12.160361 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:14.173325 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:16.177184 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:18.184687 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:20.189685 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:22.194698 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:24.201448 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:26.207638 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:28.215532 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:30.221311 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:32.225190 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:34.231106 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:36.238122 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:38.245195 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:40.249687 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:42.254911 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:44.261006 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:46.265239 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:48.274701 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:50.281339 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:52.285625 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:54.291706 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:56.295584 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:40:58.301559 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:00.306864 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:02.311673 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:04.317084 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:06.323415 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:08.331451 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:10.337743 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:12.342649 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:14.349214 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:16.353976 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:18.361217 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:20.366846 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:22.372378 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:24.380884 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:26.386232 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:28.391137 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:30.398331 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:32.405262 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:34.412315 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:36.416912 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:38.422906 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:40.427994 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:42.434559 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:44.443245 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:46.447717 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:48.454159 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:50.459561 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:52.464607 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:54.470120 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:56.475746 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:41:58.481529 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:00.487345 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:02.492560 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:04.500267 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:06.505694 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:08.512224 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:10.518704 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:12.523460 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:14.531698 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:16.536054 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:18.540658 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:20.546370 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:22.553609 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:24.559434 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:26.564381 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  I0112 15:42:28.568336 21 container_probe.go:1759] Get pod test-webserver-800d425d-4556-446e-8411-3f9c60b29270 in namespace container-probe-4964
  STEP: deleting the pod @ 01/12/25 15:42:30.569
  I0112 15:42:30.624616 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4964" for this suite. @ 01/12/25 15:42:30.632
• [242.854 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 01/12/25 15:42:30.661
  I0112 15:42:30.661486 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename security-context @ 01/12/25 15:42:30.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:42:30.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:42:30.723
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/12/25 15:42:30.728
  STEP: Saw pod success @ 01/12/25 15:42:34.794
  I0112 15:42:34.799247 21 output.go:196] Trying to get logs from node ubuntu pod security-context-ff0062d9-59e1-467d-a5bd-5d06057538cc container test-container: <nil>
  STEP: delete the pod @ 01/12/25 15:42:34.814
  I0112 15:42:34.848759 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-381" for this suite. @ 01/12/25 15:42:34.852
• [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 01/12/25 15:42:34.867
  I0112 15:42:34.867867 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 15:42:34.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:42:34.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:42:34.933
  STEP: Creating pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522 @ 01/12/25 15:42:34.956
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 15:42:36.993
  I0112 15:42:36.999815 21 container_probe.go:1749] Initial restart count of pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 is 0
  I0112 15:42:37.005184 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:42:39.009880 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:42:41.014515 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:42:43.021760 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:42:45.029547 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:42:47.040114 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:42:49.047842 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:42:51.056271 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:42:53.065070 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:42:55.069889 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:42:57.077238 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:42:59.084050 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:01.088770 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:03.094151 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:05.102803 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:07.107733 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:09.115112 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:11.121221 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:13.125868 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:15.132892 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:17.138234 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:19.145610 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:21.152019 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:23.156756 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:25.162978 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:27.173401 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:29.180474 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:31.186620 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:33.193296 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:35.199612 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:37.204796 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:39.211488 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:41.216232 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:43.224333 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:45.229734 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:47.236844 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:49.244165 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:51.255331 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:53.260705 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:55.268421 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:57.277360 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:43:59.282628 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:01.289025 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:03.294781 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:05.302518 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:07.308416 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:09.315840 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:11.321266 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:13.328573 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:15.339425 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:17.345030 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:19.350426 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:21.355153 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:23.360155 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:25.368203 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:27.372742 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:29.377665 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:31.384378 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:33.390437 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:35.397736 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:37.404019 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:39.409298 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:41.416099 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:43.423889 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:45.430465 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:47.437167 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:49.442645 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:51.447316 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:53.454626 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:55.460108 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:57.465587 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:44:59.471206 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:01.479410 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:03.485184 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:05.493459 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:07.499208 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:09.505075 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:11.509246 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:13.515477 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:15.523519 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:17.531175 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:19.536908 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:21.541902 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:23.547308 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:25.553734 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:27.560172 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:29.565189 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:31.571221 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:33.579312 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:35.584720 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:37.591756 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:39.597981 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:41.602588 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:43.608831 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:45.614572 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:47.620784 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:49.628439 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:51.633439 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:53.641213 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:55.649062 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:57.657731 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:45:59.665849 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:01.675199 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:03.682042 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:05.692320 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:07.697730 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:09.703399 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:11.711133 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:13.718854 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:15.724644 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:17.730562 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:19.736708 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:21.741806 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:23.747504 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:25.754291 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:27.759809 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:29.769374 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:31.773520 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:33.779704 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  I0112 15:46:35.785529 21 container_probe.go:1759] Get pod liveness-ce1d1186-018c-4122-82f8-d41cb0377223 in namespace container-probe-3522
  STEP: deleting the pod @ 01/12/25 15:46:37.787
  I0112 15:46:37.825107 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3522" for this suite. @ 01/12/25 15:46:37.83
• [242.987 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 01/12/25 15:46:37.855
  I0112 15:46:37.855236 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename lease-test @ 01/12/25 15:46:37.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:46:37.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:46:37.911
  I0112 15:46:38.061456 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7661" for this suite. @ 01/12/25 15:46:38.064
• [0.231 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 01/12/25 15:46:38.086
  I0112 15:46:38.086594 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 15:46:38.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:46:38.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:46:38.134
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 15:46:38.139
  STEP: Saw pod success @ 01/12/25 15:46:42.175
  I0112 15:46:42.179988 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-75f2a7bc-7eae-435c-9353-bc6931f557a4 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 15:46:42.192
  I0112 15:46:42.226846 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6531" for this suite. @ 01/12/25 15:46:42.231
• [4.161 seconds]
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 01/12/25 15:46:42.247
  I0112 15:46:42.247351 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename discovery @ 01/12/25 15:46:42.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:46:42.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:46:42.28
  STEP: Setting up server cert @ 01/12/25 15:46:42.286
  STEP: Requesting APIResourceList from "/api/v1" @ 01/12/25 15:46:42.853
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 01/12/25 15:46:42.855
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 01/12/25 15:46:42.857
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 01/12/25 15:46:42.859
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 01/12/25 15:46:42.86
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 01/12/25 15:46:42.862
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 01/12/25 15:46:42.864
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 01/12/25 15:46:42.866
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 01/12/25 15:46:42.868
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 01/12/25 15:46:42.87
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 01/12/25 15:46:42.872
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 01/12/25 15:46:42.874
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 01/12/25 15:46:42.876
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 01/12/25 15:46:42.878
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 01/12/25 15:46:42.88
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 01/12/25 15:46:42.882
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 01/12/25 15:46:42.884
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 01/12/25 15:46:42.885
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 01/12/25 15:46:42.887
  I0112 15:46:42.890443 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8776" for this suite. @ 01/12/25 15:46:42.895
• [0.671 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 01/12/25 15:46:42.918
  I0112 15:46:42.918465 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename volumeattachment @ 01/12/25 15:46:42.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:46:42.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:46:42.967
  STEP: Create VolumeAttachment "va-e2e-pk9gm" on node "ubuntu" @ 01/12/25 15:46:42.976
  STEP: Get VolumeAttachment "va-e2e-pk9gm" on node "ubuntu" @ 01/12/25 15:46:42.987
  STEP: Patch VolumeAttachment "va-e2e-pk9gm" on node "ubuntu" @ 01/12/25 15:46:42.991
  STEP: List VolumeAttachments with "va-e2e-pk9gm=patched" label @ 01/12/25 15:46:43.017
  STEP: Delete VolumeAttachment "va-e2e-pk9gm" on node "ubuntu" @ 01/12/25 15:46:43.021
  STEP: Confirm deletion of VolumeAttachment "va-e2e-pk9gm" on node "ubuntu" @ 01/12/25 15:46:43.035
  STEP: Create VolumeAttachment "va-e2e-lpq8p" on node "ubuntu2" @ 01/12/25 15:46:43.044
  STEP: Update the VolumeAttachment "va-e2e-lpq8p" on node "ubuntu2" with label "va-e2e=updated" @ 01/12/25 15:46:43.055
  STEP: Create VolumeAttachment "va-e2e-vvlrf" on node "ubuntu2" @ 01/12/25 15:46:43.075
  STEP: Update the VolumeAttachment "va-e2e-vvlrf" on node "ubuntu2" with label "va-e2e=updated" @ 01/12/25 15:46:43.087
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/12/25 15:46:43.102
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/12/25 15:46:43.132
  I0112 15:46:43.137445 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6942" for this suite. @ 01/12/25 15:46:43.141
• [0.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 01/12/25 15:46:43.156
  I0112 15:46:43.156483 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename watch @ 01/12/25 15:46:43.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:46:43.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:46:43.188
  STEP: creating a watch on configmaps @ 01/12/25 15:46:43.199
  STEP: creating a new configmap @ 01/12/25 15:46:43.201
  STEP: modifying the configmap once @ 01/12/25 15:46:43.212
  STEP: closing the watch once it receives two notifications @ 01/12/25 15:46:43.229
  I0112 15:46:43.229995 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5076  822b00d5-af68-4870-b906-7b4843e4db84 3879 0 2025-01-12 15:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-12 15:46:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 15:46:43.230793 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5076  822b00d5-af68-4870-b906-7b4843e4db84 3880 0 2025-01-12 15:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-12 15:46:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 01/12/25 15:46:43.23
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 01/12/25 15:46:43.252
  STEP: deleting the configmap @ 01/12/25 15:46:43.253
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 01/12/25 15:46:43.274
  I0112 15:46:43.274218 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5076  822b00d5-af68-4870-b906-7b4843e4db84 3882 0 2025-01-12 15:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-12 15:46:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 15:46:43.275311 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5076  822b00d5-af68-4870-b906-7b4843e4db84 3883 0 2025-01-12 15:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-12 15:46:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 15:46:43.275517 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5076" for this suite. @ 01/12/25 15:46:43.279
• [0.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 01/12/25 15:46:43.295
  I0112 15:46:43.295353 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/12/25 15:46:43.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:46:43.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:46:43.368
  STEP: create the container to handle the HTTPGet hook request. @ 01/12/25 15:46:43.375
  STEP: create the pod with lifecycle hook @ 01/12/25 15:46:53.421
  STEP: delete the pod with lifecycle hook @ 01/12/25 15:46:55.449
  STEP: check prestop hook @ 01/12/25 15:46:57.483
  I0112 15:46:57.496802 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3054" for this suite. @ 01/12/25 15:46:57.501
• [14.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 01/12/25 15:46:57.516
  I0112 15:46:57.516669 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 15:46:57.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:46:57.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:46:57.554
  STEP: Setting up server cert @ 01/12/25 15:46:57.644
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 15:46:58.202
  STEP: Deploying the webhook pod @ 01/12/25 15:46:58.221
  STEP: Wait for the deployment to be ready @ 01/12/25 15:46:58.261
  I0112 15:46:58.268781 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 15:47:00.286
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 15:47:00.312
  I0112 15:47:01.313078 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0112 15:47:01.326190 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9265-crds.webhook.example.com via the AdmissionRegistration API @ 01/12/25 15:47:01.852
  STEP: Creating a custom resource while v1 is storage version @ 01/12/25 15:47:01.895
  STEP: Patching Custom Resource Definition to set v2 as storage @ 01/12/25 15:47:03.949
  STEP: Patching the custom resource while v2 is storage version @ 01/12/25 15:47:03.967
  I0112 15:47:04.729286 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8063" for this suite. @ 01/12/25 15:47:04.733
  STEP: Destroying namespace "webhook-markers-8050" for this suite. @ 01/12/25 15:47:04.748
• [7.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 01/12/25 15:47:04.762
  I0112 15:47:04.762671 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 15:47:04.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:47:04.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:47:04.795
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/12/25 15:47:04.801
  STEP: Saw pod success @ 01/12/25 15:47:08.832
  I0112 15:47:08.836885 21 output.go:196] Trying to get logs from node ubuntu pod pod-3b18fb9e-a94f-4d7a-88cd-e4eb1ca70cdf container test-container: <nil>
  STEP: delete the pod @ 01/12/25 15:47:08.844
  I0112 15:47:08.887410 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-418" for this suite. @ 01/12/25 15:47:08.891
• [4.144 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 01/12/25 15:47:08.907
  I0112 15:47:08.907118 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 15:47:08.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:47:08.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:47:08.942
  STEP: Creating service test in namespace statefulset-8306 @ 01/12/25 15:47:08.955
  STEP: Looking for a node to schedule stateful set and pod @ 01/12/25 15:47:08.968
  STEP: Creating pod with conflicting port in namespace statefulset-8306 @ 01/12/25 15:47:08.973
  STEP: Waiting until pod test-pod will start running in namespace statefulset-8306 @ 01/12/25 15:47:09.009
  STEP: Creating statefulset with conflicting port in namespace statefulset-8306 @ 01/12/25 15:47:11.017
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-8306 @ 01/12/25 15:47:11.03
  I0112 15:47:11.067173 21 statefulset.go:869] Observed stateful pod in namespace: statefulset-8306, name: ss-0, uid: f553a051-d9d5-4e30-bcea-378c713875b0, status phase: Pending. Waiting for statefulset controller to delete.
  I0112 15:47:11.113839 21 statefulset.go:869] Observed stateful pod in namespace: statefulset-8306, name: ss-0, uid: f553a051-d9d5-4e30-bcea-378c713875b0, status phase: Failed. Waiting for statefulset controller to delete.
  I0112 15:47:11.152096 21 statefulset.go:869] Observed stateful pod in namespace: statefulset-8306, name: ss-0, uid: f553a051-d9d5-4e30-bcea-378c713875b0, status phase: Failed. Waiting for statefulset controller to delete.
  I0112 15:47:11.173115 21 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-8306
  STEP: Removing pod with conflicting port in namespace statefulset-8306 @ 01/12/25 15:47:11.173
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-8306 and will be in running state @ 01/12/25 15:47:11.25
  I0112 15:47:13.264810 21 statefulset.go:138] Deleting all statefulset in ns statefulset-8306
  I0112 15:47:13.269136 21 rest.go:150] Scaling statefulset ss to 0
  I0112 15:47:23.304295 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 15:47:23.308562 21 rest.go:88] Deleting statefulset ss
  I0112 15:47:23.344072 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8306" for this suite. @ 01/12/25 15:47:23.348
• [14.459 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 01/12/25 15:47:23.366
  I0112 15:47:23.366074 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename cronjob @ 01/12/25 15:47:23.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:47:23.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:47:23.402
  STEP: Creating a suspended cronjob @ 01/12/25 15:47:23.406
  STEP: Ensuring no jobs are scheduled @ 01/12/25 15:47:23.42
  STEP: Ensuring no job exists by listing jobs explicitly @ 01/12/25 15:52:23.42
  STEP: Removing cronjob @ 01/12/25 15:52:23.428
  I0112 15:52:23.453467 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7382" for this suite. @ 01/12/25 15:52:23.457
• [300.107 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 01/12/25 15:52:23.472
  I0112 15:52:23.472750 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename gc @ 01/12/25 15:52:23.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:52:23.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:52:23.532
  STEP: create the deployment @ 01/12/25 15:52:23.536
  W0112 15:52:23.549699      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/12/25 15:52:23.549
  STEP: delete the deployment @ 01/12/25 15:52:24.058
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 01/12/25 15:52:24.084
  STEP: Gathering metrics @ 01/12/25 15:52:24.62
  W0112 15:52:24.630540      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0112 15:52:24.630634 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0112 15:52:24.630997 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8107" for this suite. @ 01/12/25 15:52:24.637
• [1.193 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 01/12/25 15:52:24.665
  I0112 15:52:24.665651 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 15:52:24.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:52:24.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:52:24.717
  STEP: Setting up server cert @ 01/12/25 15:52:24.767
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 15:52:25.313
  STEP: Deploying the webhook pod @ 01/12/25 15:52:25.341
  STEP: Wait for the deployment to be ready @ 01/12/25 15:52:25.375
  I0112 15:52:25.382122 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 15:52:27.393
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 15:52:27.414
  I0112 15:52:28.415041 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/12/25 15:52:28.424
  STEP: verifying the mutating webhook match conditions @ 01/12/25 15:52:28.458
  STEP: updating the mutating webhook match conditions @ 01/12/25 15:52:28.462
  STEP: verifying the mutating webhook match conditions @ 01/12/25 15:52:28.477
  I0112 15:52:28.635988 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6682" for this suite. @ 01/12/25 15:52:28.64
  STEP: Destroying namespace "webhook-markers-8719" for this suite. @ 01/12/25 15:52:28.657
• [4.010 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 01/12/25 15:52:28.675
  I0112 15:52:28.675577 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 15:52:28.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:52:28.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:52:28.725
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 15:52:28.729
  STEP: Saw pod success @ 01/12/25 15:52:32.761
  I0112 15:52:32.765015 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-86b746ad-531c-494f-b11d-3274aec5bd12 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 15:52:32.775
  I0112 15:52:32.808888 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9221" for this suite. @ 01/12/25 15:52:32.812
• [4.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 01/12/25 15:52:32.835
  I0112 15:52:32.835853 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename apf @ 01/12/25 15:52:32.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:52:32.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:52:32.87
  STEP: getting /apis @ 01/12/25 15:52:32.875
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/12/25 15:52:32.881
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/12/25 15:52:32.883
  STEP: creating @ 01/12/25 15:52:32.885
  STEP: getting @ 01/12/25 15:52:32.944
  STEP: listing @ 01/12/25 15:52:32.948
  STEP: watching @ 01/12/25 15:52:32.953
  I0112 15:52:32.953374 21 flowcontrol.go:394] starting watch
  STEP: patching @ 01/12/25 15:52:32.955
  STEP: updating @ 01/12/25 15:52:32.985
  I0112 15:52:33.028192 21 flowcontrol.go:422] waiting for watch events with expected annotations
  I0112 15:52:33.028284 21 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 01/12/25 15:52:33.028
  STEP: patching /status @ 01/12/25 15:52:33.036
  STEP: updating /status @ 01/12/25 15:52:33.049
  STEP: deleting @ 01/12/25 15:52:33.091
  STEP: deleting a collection @ 01/12/25 15:52:33.117
  I0112 15:52:33.152237 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-874" for this suite. @ 01/12/25 15:52:33.155
• [0.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 01/12/25 15:52:33.176
  I0112 15:52:33.176276 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename security-context-test @ 01/12/25 15:52:33.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:52:33.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:52:33.215
  I0112 15:52:37.255585 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9679" for this suite. @ 01/12/25 15:52:37.262
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 01/12/25 15:52:37.283
  I0112 15:52:37.283158 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename cronjob @ 01/12/25 15:52:37.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:52:37.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:52:37.361
  STEP: Creating a ForbidConcurrent cronjob @ 01/12/25 15:52:37.366
  STEP: Ensuring a job is scheduled @ 01/12/25 15:52:37.377
  STEP: Ensuring exactly one is scheduled @ 01/12/25 15:53:01.382
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/12/25 15:53:01.385
  STEP: Ensuring no more jobs are scheduled @ 01/12/25 15:53:01.389
  STEP: Removing cronjob @ 01/12/25 15:53:01.392
  I0112 15:53:01.414784 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1447" for this suite. @ 01/12/25 15:53:01.42
• [24.153 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 01/12/25 15:53:01.435
  I0112 15:53:01.436023 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 15:53:01.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:53:01.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:53:01.504
  STEP: Creating secret with name secret-test-651dfecf-91f8-44b9-af96-4d3977fccdaa @ 01/12/25 15:53:01.6
  STEP: Creating a pod to test consume secrets @ 01/12/25 15:53:01.612
  STEP: Saw pod success @ 01/12/25 15:53:05.641
  I0112 15:53:05.645587 21 output.go:196] Trying to get logs from node ubuntu pod pod-secrets-a1a5d91f-7de1-45e9-b572-1aeaeb4a966e container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 15:53:05.651
  I0112 15:53:05.682091 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4490" for this suite. @ 01/12/25 15:53:05.686
  STEP: Destroying namespace "secret-namespace-3568" for this suite. @ 01/12/25 15:53:05.701
• [4.281 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 01/12/25 15:53:05.717
  I0112 15:53:05.717248 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 15:53:05.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:53:05.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:53:05.761
  STEP: Counting existing ResourceQuota @ 01/12/25 15:53:05.765
  STEP: Creating a ResourceQuota @ 01/12/25 15:53:10.772
  STEP: Ensuring resource quota status is calculated @ 01/12/25 15:53:10.784
  STEP: Creating a ReplicaSet @ 01/12/25 15:53:12.79
  STEP: Ensuring resource quota status captures replicaset creation @ 01/12/25 15:53:12.815
  STEP: Deleting a ReplicaSet @ 01/12/25 15:53:14.819
  STEP: Ensuring resource quota status released usage @ 01/12/25 15:53:14.835
  I0112 15:53:16.840508 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4453" for this suite. @ 01/12/25 15:53:16.844
• [11.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 01/12/25 15:53:16.862
  I0112 15:53:16.862338 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 15:53:16.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:53:16.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:53:16.896
  STEP: Creating configMap configmap-9186/configmap-test-38d50bcc-3d34-4907-98aa-096fd1fe3a70 @ 01/12/25 15:53:16.9
  STEP: Creating a pod to test consume configMaps @ 01/12/25 15:53:16.912
  STEP: Saw pod success @ 01/12/25 15:53:20.945
  I0112 15:53:20.948757 21 output.go:196] Trying to get logs from node ubuntu2 pod pod-configmaps-18e74d6a-3619-4fb7-9958-298c2ade3e0c container env-test: <nil>
  STEP: delete the pod @ 01/12/25 15:53:20.962
  I0112 15:53:21.000345 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9186" for this suite. @ 01/12/25 15:53:21.003
• [4.156 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 01/12/25 15:53:21.018
  I0112 15:53:21.018853 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename replication-controller @ 01/12/25 15:53:21.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:53:21.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:53:21.065
  STEP: Creating replication controller my-hostname-basic-8af08ec1-a509-46de-a7e2-07b052561e78 @ 01/12/25 15:53:21.069
  I0112 15:53:21.087788 21 resource.go:87] Pod name my-hostname-basic-8af08ec1-a509-46de-a7e2-07b052561e78: Found 0 pods out of 1
  I0112 15:53:26.096091 21 resource.go:87] Pod name my-hostname-basic-8af08ec1-a509-46de-a7e2-07b052561e78: Found 1 pods out of 1
  I0112 15:53:26.096175 21 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-8af08ec1-a509-46de-a7e2-07b052561e78" are running
  I0112 15:53:26.100749 21 rc.go:523] Pod "my-hostname-basic-8af08ec1-a509-46de-a7e2-07b052561e78-wfz7f" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 15:53:22 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 15:53:21 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 15:53:22 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 15:53:22 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 15:53:21 +0000 UTC Reason: Message:}])
  I0112 15:53:26.100833 21 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/12/25 15:53:26.1
  I0112 15:53:26.113026 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4726" for this suite. @ 01/12/25 15:53:26.117
• [5.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 01/12/25 15:53:26.142
  I0112 15:53:26.142381 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 15:53:26.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:53:26.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:53:26.204
  STEP: Creating service test in namespace statefulset-2676 @ 01/12/25 15:53:26.208
  I0112 15:53:26.272690 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0112 15:53:36.277915 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0112 15:53:46.277609 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 01/12/25 15:53:46.29
  I0112 15:53:46.343746 21 wait.go:40] Found 1 stateful pods, waiting for 2
  I0112 15:53:56.349747 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0112 15:53:56.349865 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 01/12/25 15:53:56.362
  STEP: Delete all of the StatefulSets @ 01/12/25 15:53:56.367
  STEP: Verify that StatefulSets have been deleted @ 01/12/25 15:53:56.393
  I0112 15:53:56.398435 21 statefulset.go:138] Deleting all statefulset in ns statefulset-2676
  I0112 15:53:56.415276 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2676" for this suite. @ 01/12/25 15:53:56.421
• [30.327 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 01/12/25 15:53:56.469
  I0112 15:53:56.469221 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 15:53:56.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:53:56.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:53:56.583
  STEP: Creating secret with name projected-secret-test-a1b4e8a4-9f89-4d49-a3ab-63b4b453ba11 @ 01/12/25 15:53:56.596
  STEP: Creating a pod to test consume secrets @ 01/12/25 15:53:56.608
  STEP: Saw pod success @ 01/12/25 15:54:00.646
  I0112 15:54:00.649411 21 output.go:196] Trying to get logs from node ubuntu pod pod-projected-secrets-b851013b-c625-4101-b751-d8f750c0b5b6 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 15:54:00.655
  I0112 15:54:00.686802 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1505" for this suite. @ 01/12/25 15:54:00.691
• [4.245 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 01/12/25 15:54:00.714
  I0112 15:54:00.714116 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pods @ 01/12/25 15:54:00.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:54:00.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:54:00.753
  STEP: Saw pod success @ 01/12/25 15:54:06.864
  I0112 15:54:06.868866 21 output.go:196] Trying to get logs from node ubuntu pod client-envvars-ed3c6d78-5e15-48cf-9591-3e7670e43816 container env3cont: <nil>
  STEP: delete the pod @ 01/12/25 15:54:06.877
  I0112 15:54:06.909686 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2273" for this suite. @ 01/12/25 15:54:06.914
• [6.223 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 01/12/25 15:54:06.937
  I0112 15:54:06.937536 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename watch @ 01/12/25 15:54:06.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:54:06.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:54:06.969
  STEP: creating a watch on configmaps with label A @ 01/12/25 15:54:06.973
  STEP: creating a watch on configmaps with label B @ 01/12/25 15:54:06.976
  STEP: creating a watch on configmaps with label A or B @ 01/12/25 15:54:06.977
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 01/12/25 15:54:06.979
  I0112 15:54:06.992875 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8623  f5f7375a-1b12-43c1-b97b-c38e2b0cd9b2 5414 0 2025-01-12 15:54:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 15:54:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 15:54:06.993061 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8623  f5f7375a-1b12-43c1-b97b-c38e2b0cd9b2 5414 0 2025-01-12 15:54:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 15:54:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 01/12/25 15:54:06.993
  I0112 15:54:07.009676 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8623  f5f7375a-1b12-43c1-b97b-c38e2b0cd9b2 5415 0 2025-01-12 15:54:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 15:54:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 15:54:07.009879 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8623  f5f7375a-1b12-43c1-b97b-c38e2b0cd9b2 5415 0 2025-01-12 15:54:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 15:54:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 01/12/25 15:54:07.009
  I0112 15:54:07.025296 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8623  f5f7375a-1b12-43c1-b97b-c38e2b0cd9b2 5416 0 2025-01-12 15:54:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 15:54:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 15:54:07.025450 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8623  f5f7375a-1b12-43c1-b97b-c38e2b0cd9b2 5416 0 2025-01-12 15:54:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 15:54:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 01/12/25 15:54:07.025
  I0112 15:54:07.040189 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8623  f5f7375a-1b12-43c1-b97b-c38e2b0cd9b2 5417 0 2025-01-12 15:54:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 15:54:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 15:54:07.040261 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8623  f5f7375a-1b12-43c1-b97b-c38e2b0cd9b2 5417 0 2025-01-12 15:54:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 15:54:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 01/12/25 15:54:07.04
  I0112 15:54:07.052710 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8623  306cb000-1e2f-49a6-9dbd-ea4646e2322e 5418 0 2025-01-12 15:54:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-12 15:54:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 15:54:07.052857 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8623  306cb000-1e2f-49a6-9dbd-ea4646e2322e 5418 0 2025-01-12 15:54:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-12 15:54:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 01/12/25 15:54:17.053
  I0112 15:54:17.068292 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8623  306cb000-1e2f-49a6-9dbd-ea4646e2322e 5459 0 2025-01-12 15:54:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-12 15:54:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 15:54:17.068409 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8623  306cb000-1e2f-49a6-9dbd-ea4646e2322e 5459 0 2025-01-12 15:54:07 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-12 15:54:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 15:54:27.069095 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8623" for this suite. @ 01/12/25 15:54:27.073
• [20.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 01/12/25 15:54:27.087
  I0112 15:54:27.087466 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename job @ 01/12/25 15:54:27.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:54:27.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:54:27.128
  STEP: Creating a suspended job @ 01/12/25 15:54:27.138
  STEP: Patching the Job @ 01/12/25 15:54:27.155
  STEP: Watching for Job to be patched @ 01/12/25 15:54:27.193
  I0112 15:54:27.196598 21 job.go:1330] Event ADDED observed for Job e2e-8jhnn in namespace job-2987 with labels: map[e2e-job-label:e2e-8jhnn] and annotations: map[]
  I0112 15:54:27.196733 21 job.go:1330] Event MODIFIED observed for Job e2e-8jhnn in namespace job-2987 with labels: map[e2e-job-label:e2e-8jhnn] and annotations: map[]
  I0112 15:54:27.196753 21 job.go:1333] Event MODIFIED found for Job e2e-8jhnn in namespace job-2987 with labels: map[e2e-8jhnn:patched e2e-job-label:e2e-8jhnn] and annotations: map[]
  STEP: Updating the job @ 01/12/25 15:54:27.196
  STEP: Watching for Job to be updated @ 01/12/25 15:54:27.221
  I0112 15:54:27.223452 21 job.go:1333] Event MODIFIED found for Job e2e-8jhnn in namespace job-2987 with labels: map[e2e-8jhnn:patched e2e-job-label:e2e-8jhnn] and annotations: map[updated:true]
  I0112 15:54:27.223561 21 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 01/12/25 15:54:27.223
  I0112 15:54:27.226659 21 job.go:1233] Job: e2e-8jhnn as labels: map[e2e-8jhnn:patched e2e-job-label:e2e-8jhnn]
  STEP: Waiting for job to complete @ 01/12/25 15:54:27.226
  STEP: Delete a job collection with a labelselector @ 01/12/25 15:54:37.239
  STEP: Watching for Job to be deleted @ 01/12/25 15:54:37.258
  I0112 15:54:37.260765 21 job.go:1330] Event MODIFIED observed for Job e2e-8jhnn in namespace job-2987 with labels: map[e2e-8jhnn:patched e2e-job-label:e2e-8jhnn] and annotations: map[updated:true]
  I0112 15:54:37.260902 21 job.go:1330] Event MODIFIED observed for Job e2e-8jhnn in namespace job-2987 with labels: map[e2e-8jhnn:patched e2e-job-label:e2e-8jhnn] and annotations: map[updated:true]
  I0112 15:54:37.261059 21 job.go:1330] Event MODIFIED observed for Job e2e-8jhnn in namespace job-2987 with labels: map[e2e-8jhnn:patched e2e-job-label:e2e-8jhnn] and annotations: map[updated:true]
  I0112 15:54:37.261316 21 job.go:1330] Event MODIFIED observed for Job e2e-8jhnn in namespace job-2987 with labels: map[e2e-8jhnn:patched e2e-job-label:e2e-8jhnn] and annotations: map[updated:true]
  I0112 15:54:37.261405 21 job.go:1330] Event MODIFIED observed for Job e2e-8jhnn in namespace job-2987 with labels: map[e2e-8jhnn:patched e2e-job-label:e2e-8jhnn] and annotations: map[updated:true]
  I0112 15:54:37.261454 21 job.go:1333] Event DELETED found for Job e2e-8jhnn in namespace job-2987 with labels: map[e2e-8jhnn:patched e2e-job-label:e2e-8jhnn] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 01/12/25 15:54:37.261
  I0112 15:54:37.266474 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2987" for this suite. @ 01/12/25 15:54:37.272
• [10.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 01/12/25 15:54:37.347
  I0112 15:54:37.347234 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 15:54:37.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:54:37.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:54:37.415
  STEP: Setting up server cert @ 01/12/25 15:54:37.545
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 15:54:38.06
  STEP: Deploying the webhook pod @ 01/12/25 15:54:38.09
  STEP: Wait for the deployment to be ready @ 01/12/25 15:54:38.129
  I0112 15:54:38.137104 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 15:54:40.152
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 15:54:40.179
  I0112 15:54:41.179584 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/12/25 15:54:41.187
  I0112 15:54:41.291632 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9252" for this suite. @ 01/12/25 15:54:41.296
  STEP: Destroying namespace "webhook-markers-3629" for this suite. @ 01/12/25 15:54:41.316
• [3.993 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 01/12/25 15:54:41.34
  I0112 15:54:41.340882 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sched-preemption @ 01/12/25 15:54:41.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:54:41.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:54:41.39
  I0112 15:54:41.440474 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0112 15:55:41.446307 21 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/12/25 15:55:41.449
  I0112 15:55:41.449565 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/12/25 15:55:41.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:55:41.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:55:41.495
  STEP: Finding an available node @ 01/12/25 15:55:41.5
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/12/25 15:55:41.5
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/12/25 15:55:43.531
  I0112 15:55:43.570755 21 preemption.go:585] found a healthy node: ubuntu
  I0112 15:55:49.709696 21 preemption.go:708] pods created so far: [1 1 1]
  I0112 15:55:49.709752 21 preemption.go:709] length of pods created so far: 3
  I0112 15:55:51.737142 21 preemption.go:726] pods created so far: [2 2 1]
  I0112 15:55:58.855035 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7970" for this suite. @ 01/12/25 15:55:58.859
  I0112 15:55:58.875882 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4366" for this suite. @ 01/12/25 15:55:58.88
• [77.555 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 01/12/25 15:55:58.895
  I0112 15:55:58.895996 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 15:55:58.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:55:58.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:55:58.934
  STEP: creating service in namespace services-8249 @ 01/12/25 15:55:58.938
  STEP: creating service affinity-clusterip in namespace services-8249 @ 01/12/25 15:55:58.938
  STEP: creating replication controller affinity-clusterip in namespace services-8249 @ 01/12/25 15:55:58.963
  I0112 15:55:58.988459      21 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-8249, replica count: 3
  I0112 15:56:02.040275      21 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 15:56:02.047853 21 resource.go:361] Creating new exec pod
  I0112 15:56:05.071336 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-8249 exec execpod-affinitytm4pb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0112 15:56:05.244763 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0112 15:56:05.244857 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 15:56:05.245011 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-8249 exec execpod-affinitytm4pb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.92 80'
  I0112 15:56:05.404028 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.92 80\nConnection to 10.152.183.92 80 port [tcp/http] succeeded!\n"
  I0112 15:56:05.404121 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 15:56:05.404190 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-8249 exec execpod-affinitytm4pb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.92:80/ ; done'
  I0112 15:56:05.627027 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.92:80/\n"
  I0112 15:56:05.627121 21 builder.go:147] stdout: "\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk\naffinity-clusterip-rzwkk"
  I0112 15:56:05.627144 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627162 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627176 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627190 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627200 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627210 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627219 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627228 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627237 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627246 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627255 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627266 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627279 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627288 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627297 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627308 21 service.go:242] Received response from host: affinity-clusterip-rzwkk
  I0112 15:56:05.627363 21 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8249, will wait for the garbage collector to delete the pods @ 01/12/25 15:56:05.671
  I0112 15:56:05.738401 21 resources.go:139] Deleting ReplicationController affinity-clusterip took: 11.826989ms
  I0112 15:56:05.838736 21 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.332103ms
  I0112 15:56:09.204655 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8249" for this suite. @ 01/12/25 15:56:09.208
• [10.335 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 01/12/25 15:56:09.231
  I0112 15:56:09.231386 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 15:56:09.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:56:09.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:56:09.278
  STEP: creating a replication controller @ 01/12/25 15:56:09.289
  I0112 15:56:09.289991 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 create -f -'
  I0112 15:56:09.452494 21 builder.go:146] stderr: ""
  I0112 15:56:09.452565 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/12/25 15:56:09.452
  I0112 15:56:09.452681 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 15:56:09.548881 21 builder.go:146] stderr: ""
  I0112 15:56:09.548952 21 builder.go:147] stdout: "update-demo-nautilus-l7b7r update-demo-nautilus-w568t "
  I0112 15:56:09.549022 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get pods update-demo-nautilus-l7b7r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 15:56:09.640059 21 builder.go:146] stderr: ""
  I0112 15:56:09.640128 21 builder.go:147] stdout: ""
  I0112 15:56:09.640167 21 kubectl.go:2502] update-demo-nautilus-l7b7r is created but not running
  I0112 15:56:14.642875 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 15:56:14.760541 21 builder.go:146] stderr: ""
  I0112 15:56:14.760611 21 builder.go:147] stdout: "update-demo-nautilus-l7b7r update-demo-nautilus-w568t "
  I0112 15:56:14.760678 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get pods update-demo-nautilus-l7b7r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 15:56:14.862967 21 builder.go:146] stderr: ""
  I0112 15:56:14.863043 21 builder.go:147] stdout: ""
  I0112 15:56:14.863066 21 kubectl.go:2502] update-demo-nautilus-l7b7r is created but not running
  I0112 15:56:19.864055 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 15:56:19.964668 21 builder.go:146] stderr: ""
  I0112 15:56:19.964718 21 builder.go:147] stdout: "update-demo-nautilus-l7b7r update-demo-nautilus-w568t "
  I0112 15:56:19.964792 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get pods update-demo-nautilus-l7b7r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 15:56:20.059408 21 builder.go:146] stderr: ""
  I0112 15:56:20.059482 21 builder.go:147] stdout: ""
  I0112 15:56:20.059503 21 kubectl.go:2502] update-demo-nautilus-l7b7r is created but not running
  I0112 15:56:25.062029 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 15:56:25.144173 21 builder.go:146] stderr: ""
  I0112 15:56:25.144273 21 builder.go:147] stdout: "update-demo-nautilus-l7b7r update-demo-nautilus-w568t "
  I0112 15:56:25.144327 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get pods update-demo-nautilus-l7b7r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 15:56:25.227260 21 builder.go:146] stderr: ""
  I0112 15:56:25.227316 21 builder.go:147] stdout: "true"
  I0112 15:56:25.227367 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get pods update-demo-nautilus-l7b7r -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 15:56:25.310292 21 builder.go:146] stderr: ""
  I0112 15:56:25.310406 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 15:56:25.310445 21 kubectl.go:2393] validating pod update-demo-nautilus-l7b7r
  I0112 15:56:25.316213 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0112 15:56:25.316454 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 15:56:25.316494 21 kubectl.go:2520] update-demo-nautilus-l7b7r is verified up and running
  I0112 15:56:25.316574 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get pods update-demo-nautilus-w568t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 15:56:25.390781 21 builder.go:146] stderr: ""
  I0112 15:56:25.390881 21 builder.go:147] stdout: "true"
  I0112 15:56:25.390983 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get pods update-demo-nautilus-w568t -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 15:56:25.463005 21 builder.go:146] stderr: ""
  I0112 15:56:25.463060 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 15:56:25.463140 21 kubectl.go:2393] validating pod update-demo-nautilus-w568t
  I0112 15:56:25.468147 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0112 15:56:25.468229 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 15:56:25.468245 21 kubectl.go:2520] update-demo-nautilus-w568t is verified up and running
  STEP: using delete to clean up resources @ 01/12/25 15:56:25.468
  I0112 15:56:25.468321 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 delete --grace-period=0 --force -f -'
  I0112 15:56:25.553749 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 15:56:25.553797 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0112 15:56:25.553872 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get rc,svc -l name=update-demo --no-headers'
  I0112 15:56:25.660645 21 builder.go:146] stderr: "No resources found in kubectl-8501 namespace.\n"
  I0112 15:56:25.660719 21 builder.go:147] stdout: ""
  I0112 15:56:25.660805 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-8501 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0112 15:56:25.749778 21 builder.go:146] stderr: ""
  I0112 15:56:25.749861 21 builder.go:147] stdout: ""
  I0112 15:56:25.750043 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8501" for this suite. @ 01/12/25 15:56:25.753
• [16.721 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 01/12/25 15:56:25.952
  I0112 15:56:25.952947 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 15:56:25.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:56:26.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:56:26.048
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/12/25 15:56:26.052
  STEP: Saw pod success @ 01/12/25 15:56:30.095
  I0112 15:56:30.099225 21 output.go:196] Trying to get logs from node ubuntu pod pod-cdca72be-60bf-412b-901d-70c195b66239 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 15:56:30.114
  I0112 15:56:30.148449 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4868" for this suite. @ 01/12/25 15:56:30.152
• [4.216 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 01/12/25 15:56:30.168
  I0112 15:56:30.168699 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 15:56:30.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:56:30.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:56:30.216
  STEP: Creating a simple DaemonSet "daemon-set" @ 01/12/25 15:56:30.244
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/12/25 15:56:30.254
  I0112 15:56:30.261910 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 15:56:30.261960 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 15:56:31.265945 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 15:56:31.265984 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 15:56:32.262186 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 15:56:32.262254 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 01/12/25 15:56:32.265
  I0112 15:56:32.296397 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 15:56:32.296441 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 01/12/25 15:56:32.296
  STEP: Deleting DaemonSet "daemon-set" @ 01/12/25 15:56:33.307
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7473, will wait for the garbage collector to delete the pods @ 01/12/25 15:56:33.307
  I0112 15:56:33.379228 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.243283ms
  I0112 15:56:33.479747 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.511796ms
  I0112 15:56:35.985364 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 15:56:35.985434 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0112 15:56:35.989356 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6379"},"items":null}

  I0112 15:56:35.994302 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6379"},"items":null}

  I0112 15:56:36.005881 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7473" for this suite. @ 01/12/25 15:56:36.011
• [5.861 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 01/12/25 15:56:36.03
  I0112 15:56:36.030449 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 15:56:36.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:56:36.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:56:36.07
  STEP: Creating the pod @ 01/12/25 15:56:36.075
  I0112 15:56:38.642776 21 pod_client.go:173] Successfully updated pod "annotationupdate448caf19-d329-479b-a1d5-504e97843793"
  I0112 15:56:42.668601 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3699" for this suite. @ 01/12/25 15:56:42.672
• [6.660 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 01/12/25 15:56:42.69
  I0112 15:56:42.690751 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename job @ 01/12/25 15:56:42.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:56:42.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:56:42.74
  STEP: Creating a job @ 01/12/25 15:56:42.743
  STEP: Ensuring job reaches completions @ 01/12/25 15:56:42.755
  I0112 15:56:56.766560 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4230" for this suite. @ 01/12/25 15:56:56.772
• [14.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 01/12/25 15:56:56.789
  I0112 15:56:56.789264 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 15:56:56.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:56:56.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:56:56.834
  STEP: set up a multi version CRD @ 01/12/25 15:56:56.837
  I0112 15:56:56.838280 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: rename a version @ 01/12/25 15:57:00.359
  STEP: check the new version name is served @ 01/12/25 15:57:00.381
  STEP: check the old version name is removed @ 01/12/25 15:57:01.198
  STEP: check the other version is not changed @ 01/12/25 15:57:01.895
  I0112 15:57:04.606005 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3851" for this suite. @ 01/12/25 15:57:04.615
• [7.851 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 01/12/25 15:57:04.641
  I0112 15:57:04.641082 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 15:57:04.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:57:04.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:57:04.674
  STEP: set up a multi version CRD @ 01/12/25 15:57:04.679
  I0112 15:57:04.679565 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: mark a version not serverd @ 01/12/25 15:57:08.095
  STEP: check the unserved version gets removed @ 01/12/25 15:57:08.131
  STEP: check the other version is not changed @ 01/12/25 15:57:08.904
  I0112 15:57:11.579954 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8471" for this suite. @ 01/12/25 15:57:11.59
• [6.964 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 01/12/25 15:57:11.606
  I0112 15:57:11.606423 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 15:57:11.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:57:11.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:57:11.651
  STEP: Setting up server cert @ 01/12/25 15:57:11.694
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 15:57:12.042
  STEP: Deploying the webhook pod @ 01/12/25 15:57:12.068
  STEP: Wait for the deployment to be ready @ 01/12/25 15:57:12.094
  I0112 15:57:12.102986 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 15:57:14.116
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 15:57:14.139
  I0112 15:57:15.139602 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/12/25 15:57:15.147
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/12/25 15:57:15.17
  STEP: Creating a dummy validating-webhook-configuration object @ 01/12/25 15:57:15.193
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 01/12/25 15:57:15.212
  STEP: Creating a dummy mutating-webhook-configuration object @ 01/12/25 15:57:15.229
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 01/12/25 15:57:15.246
  I0112 15:57:15.431810 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6572" for this suite. @ 01/12/25 15:57:15.435
  STEP: Destroying namespace "webhook-markers-7351" for this suite. @ 01/12/25 15:57:15.449
• [3.858 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 01/12/25 15:57:15.464
  I0112 15:57:15.464163 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 15:57:15.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:57:15.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:57:15.492
  STEP: Setting up server cert @ 01/12/25 15:57:15.598
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 15:57:15.754
  STEP: Deploying the webhook pod @ 01/12/25 15:57:15.768
  STEP: Wait for the deployment to be ready @ 01/12/25 15:57:15.798
  I0112 15:57:15.807380 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 15:57:17.822
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 15:57:17.851
  I0112 15:57:18.851580 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/12/25 15:57:19.025
  STEP: Creating a configMap that should be mutated @ 01/12/25 15:57:19.039
  STEP: Deleting the collection of validation webhooks @ 01/12/25 15:57:19.083
  STEP: Creating a configMap that should not be mutated @ 01/12/25 15:57:19.249
  I0112 15:57:19.373635 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3160" for this suite. @ 01/12/25 15:57:19.378
  STEP: Destroying namespace "webhook-markers-8591" for this suite. @ 01/12/25 15:57:19.401
• [3.956 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 01/12/25 15:57:19.42
  I0112 15:57:19.420296 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 15:57:19.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:57:19.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:57:19.462
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 15:57:19.467
  STEP: Saw pod success @ 01/12/25 15:57:23.5
  I0112 15:57:23.506721 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-39d23bf6-d444-43c3-b99f-64f7d5923074 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 15:57:23.516
  I0112 15:57:23.558523 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8906" for this suite. @ 01/12/25 15:57:23.563
• [4.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 01/12/25 15:57:23.579
  I0112 15:57:23.580009 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename proxy @ 01/12/25 15:57:23.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:57:23.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:57:23.614
  I0112 15:57:23.618428 21 proxy.go:293] Creating pod...
  I0112 15:57:25.647666 21 proxy.go:317] Creating service...
  I0112 15:57:25.680847 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/pods/agnhost/proxy/some/path/with/DELETE
  I0112 15:57:25.687534 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0112 15:57:25.687605 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/pods/agnhost/proxy/some/path/with/GET
  I0112 15:57:25.691392 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0112 15:57:25.691452 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/pods/agnhost/proxy/some/path/with/HEAD
  I0112 15:57:25.696405 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0112 15:57:25.696461 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/pods/agnhost/proxy/some/path/with/OPTIONS
  I0112 15:57:25.701558 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0112 15:57:25.701625 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/pods/agnhost/proxy/some/path/with/PATCH
  I0112 15:57:25.706754 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0112 15:57:25.706895 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/pods/agnhost/proxy/some/path/with/POST
  I0112 15:57:25.711840 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0112 15:57:25.712014 21 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/pods/agnhost/proxy/some/path/with/PUT
  I0112 15:57:25.716739 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0112 15:57:25.716850 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/services/test-service/proxy/some/path/with/DELETE
  I0112 15:57:25.722268 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0112 15:57:25.722367 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/services/test-service/proxy/some/path/with/GET
  I0112 15:57:25.728118 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0112 15:57:25.728195 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/services/test-service/proxy/some/path/with/HEAD
  I0112 15:57:25.734093 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0112 15:57:25.734183 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/services/test-service/proxy/some/path/with/OPTIONS
  I0112 15:57:25.740232 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0112 15:57:25.740363 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/services/test-service/proxy/some/path/with/PATCH
  I0112 15:57:25.746159 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0112 15:57:25.746255 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/services/test-service/proxy/some/path/with/POST
  I0112 15:57:25.752273 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0112 15:57:25.752353 21 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9351/services/test-service/proxy/some/path/with/PUT
  I0112 15:57:25.758088 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0112 15:57:25.758243 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9351" for this suite. @ 01/12/25 15:57:25.763
• [2.197 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 01/12/25 15:57:25.777
  I0112 15:57:25.777476 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename watch @ 01/12/25 15:57:25.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:57:25.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:57:25.806
  STEP: getting a starting resourceVersion @ 01/12/25 15:57:25.835
  STEP: starting a background goroutine to produce watch events @ 01/12/25 15:57:25.841
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 01/12/25 15:57:25.841
  I0112 15:57:28.593674 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5486" for this suite. @ 01/12/25 15:57:28.633
• [2.935 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 01/12/25 15:57:28.712
  I0112 15:57:28.713021 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 15:57:28.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:57:28.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:57:28.789
  STEP: Creating service test in namespace statefulset-2621 @ 01/12/25 15:57:28.793
  STEP: Creating stateful set ss in namespace statefulset-2621 @ 01/12/25 15:57:28.812
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2621 @ 01/12/25 15:57:28.833
  I0112 15:57:28.837781 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0112 15:57:38.839366 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 01/12/25 15:57:38.839
  I0112 15:57:38.843874 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-2621 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 15:57:39.005824 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 15:57:39.005910 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 15:57:39.006033 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 15:57:39.010404 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0112 15:57:49.014377 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0112 15:57:49.014497 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0112 15:57:49.043721 21 resource.go:168] POD   NODE     PHASE    GRACE  CONDITIONS
  I0112 15:57:49.043867 21 resource.go:175] ss-0  ubuntu2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:30 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:28 +0000 UTC  }]
  I0112 15:57:49.043882 21 resource.go:178] 
  I0112 15:57:49.043892 21 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  I0112 15:57:50.049251 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.995565429s
  I0112 15:57:51.054816 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.989442462s
  I0112 15:57:52.061472 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.984378396s
  I0112 15:57:53.068172 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.977642934s
  I0112 15:57:54.077033 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.970383575s
  I0112 15:57:55.083347 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.96209222s
  I0112 15:57:56.088821 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.955503665s
  I0112 15:57:57.093755 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.95067051s
  I0112 15:57:58.100039 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 945.516558ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2621 @ 01/12/25 15:57:59.1
  I0112 15:57:59.106040 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-2621 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 15:57:59.258279 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 15:57:59.258355 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 15:57:59.258379 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 15:57:59.258444 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-2621 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 15:57:59.416900 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0112 15:57:59.417002 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 15:57:59.417026 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 15:57:59.417103 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-2621 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 15:57:59.568494 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0112 15:57:59.568575 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 15:57:59.568600 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 15:57:59.572278 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0112 15:57:59.572345 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0112 15:57:59.572371 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 01/12/25 15:57:59.572
  I0112 15:57:59.576129 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-2621 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 15:57:59.733859 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 15:57:59.733922 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 15:57:59.733955 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 15:57:59.734027 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-2621 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 15:57:59.893849 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 15:57:59.893917 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 15:57:59.893962 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 15:57:59.894043 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-2621 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 15:58:00.074421 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 15:58:00.074488 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 15:58:00.074511 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 15:58:00.074528 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0112 15:58:00.078502 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0112 15:58:10.085213 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0112 15:58:10.085262 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0112 15:58:10.085275 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0112 15:58:10.122691 21 resource.go:168] POD   NODE     PHASE    GRACE  CONDITIONS
  I0112 15:58:10.122763 21 resource.go:175] ss-0  ubuntu2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:30 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:28 +0000 UTC  }]
  I0112 15:58:10.122786 21 resource.go:175] ss-1  ubuntu   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:49 +0000 UTC  }]
  I0112 15:58:10.122806 21 resource.go:175] ss-2  ubuntu   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:49 +0000 UTC  }]
  I0112 15:58:10.122814 21 resource.go:178] 
  I0112 15:58:10.122824 21 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I0112 15:58:11.131348 21 resource.go:168] POD   NODE     PHASE      GRACE  CONDITIONS
  I0112 15:58:11.131562 21 resource.go:175] ss-0  ubuntu2  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:28 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:00 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:00 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:28 +0000 UTC  }]
  I0112 15:58:11.131609 21 resource.go:175] ss-1  ubuntu   Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:49 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:00 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:00 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:49 +0000 UTC  }]
  I0112 15:58:11.131645 21 resource.go:175] ss-2  ubuntu   Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:49 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:00 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:58:00 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 15:57:49 +0000 UTC  }]
  I0112 15:58:11.131661 21 resource.go:178] 
  I0112 15:58:11.131678 21 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I0112 15:58:12.139250 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.986705561s
  I0112 15:58:13.145118 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.979773944s
  I0112 15:58:14.150505 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.973914329s
  I0112 15:58:15.155990 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.968458415s
  I0112 15:58:16.164262 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.963025804s
  I0112 15:58:17.173750 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.954105199s
  I0112 15:58:18.179038 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.945176996s
  I0112 15:58:19.189402 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 939.882891ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2621 @ 01/12/25 15:58:20.189
  I0112 15:58:20.196223 21 rest.go:150] Scaling statefulset ss to 0
  I0112 15:58:20.205870 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 15:58:20.209290 21 statefulset.go:138] Deleting all statefulset in ns statefulset-2621
  I0112 15:58:20.213023 21 rest.go:150] Scaling statefulset ss to 0
  I0112 15:58:20.221493 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 15:58:20.225559 21 rest.go:88] Deleting statefulset ss
  I0112 15:58:20.260559 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2621" for this suite. @ 01/12/25 15:58:20.265
• [51.598 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 01/12/25 15:58:20.31
  I0112 15:58:20.310626 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 15:58:20.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:58:20.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:58:20.368
  STEP: creating service in namespace services-9150 @ 01/12/25 15:58:20.371
  STEP: creating service affinity-clusterip-transition in namespace services-9150 @ 01/12/25 15:58:20.371
  STEP: creating replication controller affinity-clusterip-transition in namespace services-9150 @ 01/12/25 15:58:20.401
  I0112 15:58:20.430273      21 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-9150, replica count: 3
  I0112 15:58:23.481199      21 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 15:58:23.490838 21 resource.go:361] Creating new exec pod
  I0112 15:58:26.526780 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9150 exec execpod-affinity6299s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0112 15:58:26.673374 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0112 15:58:26.673440 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 15:58:26.673514 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9150 exec execpod-affinity6299s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.21 80'
  I0112 15:58:26.826842 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.21 80\nConnection to 10.152.183.21 80 port [tcp/http] succeeded!\n"
  I0112 15:58:26.826919 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 15:58:26.857017 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9150 exec execpod-affinity6299s -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.21:80/ ; done'
  I0112 15:58:27.109019 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n"
  I0112 15:58:27.109154 21 builder.go:147] stdout: "\naffinity-clusterip-transition-q4542\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-47b84\naffinity-clusterip-transition-q4542\naffinity-clusterip-transition-q4542\naffinity-clusterip-transition-q4542\naffinity-clusterip-transition-47b84\naffinity-clusterip-transition-q4542\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-q4542\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-q4542\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-47b84"
  I0112 15:58:27.109173 21 service.go:242] Received response from host: affinity-clusterip-transition-q4542
  I0112 15:58:27.109185 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.109194 21 service.go:242] Received response from host: affinity-clusterip-transition-47b84
  I0112 15:58:27.109204 21 service.go:242] Received response from host: affinity-clusterip-transition-q4542
  I0112 15:58:27.109213 21 service.go:242] Received response from host: affinity-clusterip-transition-q4542
  I0112 15:58:27.109222 21 service.go:242] Received response from host: affinity-clusterip-transition-q4542
  I0112 15:58:27.109231 21 service.go:242] Received response from host: affinity-clusterip-transition-47b84
  I0112 15:58:27.109239 21 service.go:242] Received response from host: affinity-clusterip-transition-q4542
  I0112 15:58:27.109248 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.109279 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.109320 21 service.go:242] Received response from host: affinity-clusterip-transition-q4542
  I0112 15:58:27.109338 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.109352 21 service.go:242] Received response from host: affinity-clusterip-transition-q4542
  I0112 15:58:27.109367 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.109387 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.109403 21 service.go:242] Received response from host: affinity-clusterip-transition-47b84
  I0112 15:58:27.126016 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9150 exec execpod-affinity6299s -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.21:80/ ; done'
  I0112 15:58:27.355533 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.21:80/\n"
  I0112 15:58:27.355616 21 builder.go:147] stdout: "\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh\naffinity-clusterip-transition-ccxjh"
  I0112 15:58:27.355665 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.355685 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.355703 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.355719 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.355770 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.355788 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.355802 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.355818 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.355836 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.355851 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.355969 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.355987 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.356003 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.356033 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.356048 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.356069 21 service.go:242] Received response from host: affinity-clusterip-transition-ccxjh
  I0112 15:58:27.356127 21 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9150, will wait for the garbage collector to delete the pods @ 01/12/25 15:58:27.402
  I0112 15:58:27.473608 21 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 13.707382ms
  I0112 15:58:27.574079 21 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.470469ms
  I0112 15:58:30.723225 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9150" for this suite. @ 01/12/25 15:58:30.727
• [10.430 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 01/12/25 15:58:30.74
  I0112 15:58:30.740873 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename crd-webhook @ 01/12/25 15:58:30.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:58:30.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:58:30.783
  STEP: Setting up server cert @ 01/12/25 15:58:30.787
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/12/25 15:58:31.027
  STEP: Deploying the custom resource conversion webhook pod @ 01/12/25 15:58:31.051
  STEP: Wait for the deployment to be ready @ 01/12/25 15:58:31.082
  I0112 15:58:31.089150 21 deployment.go:222] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 15:58:33.102
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 15:58:33.129
  I0112 15:58:34.129997 21 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0112 15:58:34.137562 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Creating a v1 custom resource @ 01/12/25 15:58:36.712
  STEP: v2 custom resource should be converted @ 01/12/25 15:58:36.734
  I0112 15:58:37.366093 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3053" for this suite. @ 01/12/25 15:58:37.371
• [6.647 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 01/12/25 15:58:37.39
  I0112 15:58:37.390444 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/12/25 15:58:37.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:58:37.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:58:37.444
  STEP: creating a target pod @ 01/12/25 15:58:37.453
  STEP: adding an ephemeral container @ 01/12/25 15:58:41.491
  STEP: checking pod container endpoints @ 01/12/25 15:58:43.522
  I0112 15:58:43.522435 21 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6256 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 15:58:43.522484 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 15:58:43.523238 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 15:58:43.523360 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6256/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0112 15:58:43.600434 21 exec_util.go:111] Exec stderr: ""
  I0112 15:58:43.607837 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6256" for this suite. @ 01/12/25 15:58:43.612
• [6.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 01/12/25 15:58:43.63
  I0112 15:58:43.630620 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 15:58:43.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:58:43.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:58:43.683
  STEP: Creating configMap with name projected-configmap-test-volume-0aa952f4-0400-45c0-8d4d-bf31660bf343 @ 01/12/25 15:58:43.686
  STEP: Creating a pod to test consume configMaps @ 01/12/25 15:58:43.706
  STEP: Saw pod success @ 01/12/25 15:58:47.744
  I0112 15:58:47.748847 21 output.go:196] Trying to get logs from node ubuntu pod pod-projected-configmaps-cfbf00e5-b87a-4688-b9ce-08187f29dc1d container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 15:58:47.756
  I0112 15:58:47.786803 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2079" for this suite. @ 01/12/25 15:58:47.79
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 01/12/25 15:58:47.806
  I0112 15:58:47.806613 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 15:58:47.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:58:47.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:58:47.848
  STEP: Creating configMap with name cm-test-opt-del-01918249-ea86-425b-8f0e-8ba614106504 @ 01/12/25 15:58:47.856
  STEP: Creating configMap with name cm-test-opt-upd-96c832a1-cef6-4b6d-b776-79823b949f34 @ 01/12/25 15:58:47.868
  STEP: Creating the pod @ 01/12/25 15:58:47.88
  STEP: Deleting configmap cm-test-opt-del-01918249-ea86-425b-8f0e-8ba614106504 @ 01/12/25 15:58:49.946
  STEP: Updating configmap cm-test-opt-upd-96c832a1-cef6-4b6d-b776-79823b949f34 @ 01/12/25 15:58:49.962
  STEP: Creating configMap with name cm-test-opt-create-aef9cd42-0c3c-4a2b-aa48-4211298842fd @ 01/12/25 15:58:49.975
  STEP: waiting to observe update in volume @ 01/12/25 15:58:49.987
  I0112 15:58:52.014554 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5687" for this suite. @ 01/12/25 15:58:52.019
• [4.228 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 01/12/25 15:58:52.034
  I0112 15:58:52.034414 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 15:58:52.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:58:52.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:58:52.068
  STEP: Setting up server cert @ 01/12/25 15:58:52.128
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 15:58:52.765
  STEP: Deploying the webhook pod @ 01/12/25 15:58:52.779
  STEP: Wait for the deployment to be ready @ 01/12/25 15:58:52.805
  I0112 15:58:52.813289 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 15:58:54.828
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 15:58:54.866
  I0112 15:58:55.866748 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0112 15:58:55.874793 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 01/12/25 15:58:56.394
  STEP: Creating a custom resource that should be denied by the webhook @ 01/12/25 15:58:56.416
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 01/12/25 15:58:58.428
  STEP: Updating the custom resource with disallowed data should be denied @ 01/12/25 15:58:58.448
  STEP: Deleting the custom resource should be denied @ 01/12/25 15:58:58.457
  STEP: Remove the offending key and value from the custom resource data @ 01/12/25 15:58:58.463
  STEP: Deleting the updated custom resource should be successful @ 01/12/25 15:58:58.479
  I0112 15:58:59.179066 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3770" for this suite. @ 01/12/25 15:58:59.182
  STEP: Destroying namespace "webhook-markers-1224" for this suite. @ 01/12/25 15:58:59.196
• [7.175 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 01/12/25 15:58:59.209
  I0112 15:58:59.209897 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename namespaces @ 01/12/25 15:58:59.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:58:59.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:58:59.252
  STEP: Read namespace status @ 01/12/25 15:58:59.255
  I0112 15:58:59.259416 21 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 01/12/25 15:58:59.259
  I0112 15:58:59.274219 21 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 01/12/25 15:58:59.274
  I0112 15:58:59.292319 21 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0112 15:58:59.292569 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3492" for this suite. @ 01/12/25 15:58:59.296
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 01/12/25 15:58:59.309
  I0112 15:58:59.309574 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/12/25 15:58:59.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:58:59.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:58:59.359
  I0112 15:58:59.366169 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2944" for this suite. @ 01/12/25 15:58:59.369
• [0.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 01/12/25 15:58:59.382
  I0112 15:58:59.382683 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 15:58:59.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:58:59.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:58:59.415
  STEP: starting the proxy server @ 01/12/25 15:58:59.419
  I0112 15:58:59.419495 21 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-94 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 01/12/25 15:58:59.475
  I0112 15:58:59.485144 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0112 15:58:59.488021 21 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:43925

  I0112 15:58:59.488021 21 kubectl.go:2229] kubectl proxy stderr: W0112 15:58:59.474520     224 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-94" for this suite. @ 01/12/25 15:58:59.489
• [0.124 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 01/12/25 15:58:59.506
  I0112 15:58:59.506570 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sysctl @ 01/12/25 15:58:59.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:58:59.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:58:59.564
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 01/12/25 15:58:59.579
  STEP: Watching for error events or started pod @ 01/12/25 15:58:59.597
  STEP: Waiting for pod completion @ 01/12/25 15:59:01.602
  STEP: Checking that the pod succeeded @ 01/12/25 15:59:03.614
  STEP: Getting logs from the pod @ 01/12/25 15:59:03.614
  STEP: Checking that the sysctl is actually updated @ 01/12/25 15:59:03.622
  I0112 15:59:03.622558 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7648" for this suite. @ 01/12/25 15:59:03.626
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 01/12/25 15:59:03.659
  I0112 15:59:03.660026 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 15:59:03.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:59:03.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:59:03.71
  STEP: Creating configMap with name projected-configmap-test-volume-769c287f-b7b5-4fb3-9663-a28c97fa9598 @ 01/12/25 15:59:03.716
  STEP: Creating a pod to test consume configMaps @ 01/12/25 15:59:03.729
  STEP: Saw pod success @ 01/12/25 15:59:07.762
  I0112 15:59:07.767218 21 output.go:196] Trying to get logs from node ubuntu2 pod pod-projected-configmaps-c38a1bf8-011a-423a-95fb-3c2d5e39a817 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 15:59:07.775
  I0112 15:59:07.814831 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1691" for this suite. @ 01/12/25 15:59:07.819
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 01/12/25 15:59:07.835
  I0112 15:59:07.835281 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/12/25 15:59:07.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:59:07.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:59:07.881
  STEP: creating a target pod @ 01/12/25 15:59:07.885
  STEP: adding an ephemeral container @ 01/12/25 15:59:09.917
  STEP: checking pod container endpoints @ 01/12/25 15:59:13.952
  I0112 15:59:13.953043 21 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7607 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 15:59:13.953077 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 15:59:13.954072 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 15:59:13.954208 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7607/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0112 15:59:14.034169 21 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 01/12/25 15:59:14.041
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 01/12/25 15:59:14.046
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 01/12/25 15:59:14.067
  I0112 15:59:14.073570 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7607" for this suite. @ 01/12/25 15:59:14.078
• [6.295 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 01/12/25 15:59:14.13
  I0112 15:59:14.130857 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename endpointslicemirroring @ 01/12/25 15:59:14.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:59:14.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:59:14.193
  STEP: mirroring a new custom Endpoint @ 01/12/25 15:59:14.227
  I0112 15:59:14.248176 21 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 01/12/25 15:59:16.255
  I0112 15:59:16.284915 21 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 01/12/25 15:59:18.29
  I0112 15:59:18.311434 21 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I0112 15:59:20.319281 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-798" for this suite. @ 01/12/25 15:59:20.325
• [6.239 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 01/12/25 15:59:20.369
  I0112 15:59:20.369638 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename namespaces @ 01/12/25 15:59:20.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:59:20.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:59:20.401
  STEP: creating a Namespace @ 01/12/25 15:59:20.415
  STEP: patching the Namespace @ 01/12/25 15:59:20.459
  STEP: get the Namespace and ensuring it has the label @ 01/12/25 15:59:20.481
  I0112 15:59:20.485564 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2475" for this suite. @ 01/12/25 15:59:20.489
  STEP: Destroying namespace "nspatchtest-0b188d7b-ff51-4059-b919-3145c1fe3739-2390" for this suite. @ 01/12/25 15:59:20.511
• [0.166 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 01/12/25 15:59:20.535
  I0112 15:59:20.535460 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename dns @ 01/12/25 15:59:20.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:59:20.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:59:20.578
  STEP: Creating a test headless service @ 01/12/25 15:59:20.583
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-49.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-49.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-49.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-49.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-49.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-49.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-49.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-49.svc.cluster.local;sleep 1; done
   @ 01/12/25 15:59:20.595
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-49.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-49.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-49.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-49.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-49.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-49.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-49.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-49.svc.cluster.local;sleep 1; done
   @ 01/12/25 15:59:20.595
  STEP: creating a pod to probe DNS @ 01/12/25 15:59:20.595
  STEP: submitting the pod to kubernetes @ 01/12/25 15:59:20.595
  STEP: retrieving the pod @ 01/12/25 15:59:38.683
  STEP: looking for the results for each expected name from probers @ 01/12/25 15:59:38.688
  I0112 15:59:38.733293 21 dns_common.go:527] DNS probes using dns-49/dns-test-22ae7f2b-64e9-4da5-8b38-fe01ce2cef3f succeeded

  STEP: deleting the pod @ 01/12/25 15:59:38.733
  STEP: deleting the test headless service @ 01/12/25 15:59:38.785
  I0112 15:59:39.546408 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-49" for this suite. @ 01/12/25 15:59:39.55
• [19.041 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 01/12/25 15:59:39.576
  I0112 15:59:39.576494 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename podtemplate @ 01/12/25 15:59:39.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:59:39.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:59:39.615
  STEP: Create set of pod templates @ 01/12/25 15:59:39.62
  I0112 15:59:39.633336 21 podtemplates.go:143] created test-podtemplate-1
  I0112 15:59:39.655676 21 podtemplates.go:143] created test-podtemplate-2
  I0112 15:59:39.667513 21 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 01/12/25 15:59:39.667
  STEP: delete collection of pod templates @ 01/12/25 15:59:39.67
  I0112 15:59:39.670718 21 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 01/12/25 15:59:39.714
  I0112 15:59:39.714996 21 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0112 15:59:39.719161 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3134" for this suite. @ 01/12/25 15:59:39.722
• [0.165 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 01/12/25 15:59:39.741
  I0112 15:59:39.741892 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename events @ 01/12/25 15:59:39.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:59:39.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:59:39.789
  STEP: Create set of events @ 01/12/25 15:59:39.793
  STEP: get a list of Events with a label in the current namespace @ 01/12/25 15:59:39.829
  STEP: delete a list of events @ 01/12/25 15:59:39.834
  I0112 15:59:39.834272 21 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/12/25 15:59:39.881
  I0112 15:59:39.885682 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8920" for this suite. @ 01/12/25 15:59:39.889
• [0.159 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 01/12/25 15:59:39.901
  I0112 15:59:39.901475 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pv @ 01/12/25 15:59:39.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:59:39.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:59:39.952
  STEP: Creating initial PV and PVC @ 01/12/25 15:59:39.956
  I0112 15:59:39.956312 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8782" @ 01/12/25 15:59:39.985
  STEP: Listing PVCs in namespace "pv-8782" @ 01/12/25 15:59:39.989
  STEP: Patching the PV "pv-8782-tq729" @ 01/12/25 15:59:39.992
  STEP: Patching the PVC "pvc-mkmjh" @ 01/12/25 15:59:40.051
  STEP: Getting PV "pv-8782-tq729" @ 01/12/25 15:59:40.093
  STEP: Getting PVC "pvc-mkmjh" @ 01/12/25 15:59:40.098
  STEP: Deleting PVC "pvc-mkmjh" @ 01/12/25 15:59:40.104
  STEP: Confirm deletion of PVC "pvc-mkmjh" @ 01/12/25 15:59:40.127
  STEP: Deleting PV "pv-8782-tq729" @ 01/12/25 15:59:42.143
  STEP: Confirm deletion of PV "pv-8782-tq729" @ 01/12/25 15:59:42.165
  STEP: Recreating another PV & PVC @ 01/12/25 15:59:44.177
  I0112 15:59:44.177660 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8782-bt7bp" @ 01/12/25 15:59:44.209
  STEP: Updating the PVC "pvc-c7hc6" @ 01/12/25 15:59:44.255
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-c7hc6=updated" @ 01/12/25 15:59:44.271
  STEP: Deleting PVC "pvc-c7hc6" via DeleteCollection @ 01/12/25 15:59:44.274
  STEP: Confirm deletion of PVC "pvc-c7hc6" @ 01/12/25 15:59:44.296
  STEP: Deleting PV "pv-8782-bt7bp" via DeleteCollection @ 01/12/25 15:59:46.308
  STEP: Confirm deletion of PV "pv-8782-bt7bp" @ 01/12/25 15:59:46.33
  I0112 15:59:48.343550 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0112 15:59:48.343637 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-c7hc6"
  I0112 15:59:48.348909 21 pv.go:193] Deleting PersistentVolume "pv-8782-bt7bp"
  I0112 15:59:48.353569 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8782" for this suite. @ 01/12/25 15:59:48.358
• [8.473 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 01/12/25 15:59:48.374
  I0112 15:59:48.374690 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 15:59:48.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:59:48.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:59:48.419
  I0112 15:59:50.447619 21 delete.go:62] Deleting pod "var-expansion-6a6bc703-ecf8-47bc-b6f4-da48fec00220" in namespace "var-expansion-8677"
  I0112 15:59:50.481291 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-6a6bc703-ecf8-47bc-b6f4-da48fec00220" to be fully deleted
  I0112 15:59:54.498565 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8677" for this suite. @ 01/12/25 15:59:54.506
• [6.149 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 01/12/25 15:59:54.523
  I0112 15:59:54.523666 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 15:59:54.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:59:54.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:59:54.576
  STEP: Creating configMap with name configmap-projected-all-test-volume-421a5ab0-543f-4b94-87e4-d5ae98216b66 @ 01/12/25 15:59:54.58
  STEP: Creating secret with name secret-projected-all-test-volume-69e7518e-911f-4c62-8e02-f5d1f434beb9 @ 01/12/25 15:59:54.593
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 01/12/25 15:59:54.605
  STEP: Saw pod success @ 01/12/25 15:59:58.637
  I0112 15:59:58.643209 21 output.go:196] Trying to get logs from node ubuntu pod projected-volume-d47e63e4-e98b-4ded-8924-b072087ce673 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 15:59:58.65
  I0112 15:59:58.684612 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-664" for this suite. @ 01/12/25 15:59:58.689
• [4.181 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 01/12/25 15:59:58.704
  I0112 15:59:58.704643 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 15:59:58.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 15:59:58.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 15:59:58.743
  STEP: Creating a pod to test emptydir volume type on node default medium @ 01/12/25 15:59:58.748
  STEP: Saw pod success @ 01/12/25 16:00:02.79
  I0112 16:00:02.797025 21 output.go:196] Trying to get logs from node ubuntu pod pod-a9b87ef0-1747-4661-a9c4-d26deda76154 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 16:00:02.807
  I0112 16:00:02.850693 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-860" for this suite. @ 01/12/25 16:00:02.855
• [4.177 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 01/12/25 16:00:02.882
  I0112 16:00:02.882188 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/12/25 16:00:02.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:00:02.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:00:02.93
  STEP: getting /apis @ 01/12/25 16:00:02.956
  STEP: getting /apis/admissionregistration.k8s.io @ 01/12/25 16:00:02.962
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/12/25 16:00:02.964
  STEP: creating @ 01/12/25 16:00:02.966
  STEP: getting @ 01/12/25 16:00:03.008
  STEP: listing @ 01/12/25 16:00:03.012
  STEP: watching @ 01/12/25 16:00:03.015
  I0112 16:00:03.015489 21 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 01/12/25 16:00:03.017
  STEP: updating @ 01/12/25 16:00:03.037
  I0112 16:00:03.052971 21 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 01/12/25 16:00:03.053
  STEP: deleting a collection @ 01/12/25 16:00:03.073
  I0112 16:00:03.107450 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6858" for this suite. @ 01/12/25 16:00:03.111
• [0.244 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 01/12/25 16:00:03.126
  I0112 16:00:03.126283 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pod-network-test @ 01/12/25 16:00:03.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:00:03.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:00:03.162
  STEP: Performing setup for networking test in namespace pod-network-test-5013 @ 01/12/25 16:00:03.167
  STEP: creating a selector @ 01/12/25 16:00:03.167
  STEP: Creating the service pods in kubernetes @ 01/12/25 16:00:03.167
  I0112 16:00:03.167643 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/12/25 16:00:25.29
  I0112 16:00:27.322843 21 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0112 16:00:27.322896 21 networking.go:42] Breadth first check of 10.1.243.252 on host 172.17.202.11...
  I0112 16:00:27.328126 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.243.253:9080/dial?request=hostname&protocol=udp&host=10.1.243.252&port=8081&tries=1'] Namespace:pod-network-test-5013 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 16:00:27.328212 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:00:27.328878 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 16:00:27.329018 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5013/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.243.253%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.243.252%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0112 16:00:27.405883 21 utils.go:356] Waiting for responses: map[]
  I0112 16:00:27.405983 21 utils.go:360] reached 10.1.243.252 after 0/1 tries
  I0112 16:00:27.406001 21 networking.go:42] Breadth first check of 10.1.152.88 on host 172.17.207.20...
  I0112 16:00:27.409802 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.243.253:9080/dial?request=hostname&protocol=udp&host=10.1.152.88&port=8081&tries=1'] Namespace:pod-network-test-5013 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 16:00:27.409854 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:00:27.410444 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 16:00:27.410551 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5013/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.243.253%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.152.88%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0112 16:00:27.479754 21 utils.go:356] Waiting for responses: map[]
  I0112 16:00:27.479854 21 utils.go:360] reached 10.1.152.88 after 0/1 tries
  I0112 16:00:27.479892 21 networking.go:53] Going to retry 0 out of 2 pods....
  I0112 16:00:27.480109 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5013" for this suite. @ 01/12/25 16:00:27.484
• [24.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 01/12/25 16:00:27.499
  I0112 16:00:27.499524 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 16:00:27.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:00:27.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:00:27.568
  STEP: Creating configMap with name projected-configmap-test-volume-71d8e113-bc6a-4a3f-8d98-b2433df6685b @ 01/12/25 16:00:27.571
  STEP: Creating a pod to test consume configMaps @ 01/12/25 16:00:27.593
  STEP: Saw pod success @ 01/12/25 16:00:31.625
  I0112 16:00:31.629179 21 output.go:196] Trying to get logs from node ubuntu pod pod-projected-configmaps-31644ea5-260b-4d16-a75a-61e4f0e75920 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 16:00:31.635
  I0112 16:00:31.688507 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6998" for this suite. @ 01/12/25 16:00:31.693
• [4.219 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 01/12/25 16:00:31.718
  I0112 16:00:31.718530 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename containers @ 01/12/25 16:00:31.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:00:31.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:00:31.762
  STEP: Creating a pod to test override arguments @ 01/12/25 16:00:31.766
  STEP: Saw pod success @ 01/12/25 16:00:35.806
  I0112 16:00:35.810591 21 output.go:196] Trying to get logs from node ubuntu pod client-containers-7b8b2d83-1383-4702-8c1b-b44467a131af container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 16:00:35.817
  I0112 16:00:35.850649 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7261" for this suite. @ 01/12/25 16:00:35.855
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 01/12/25 16:00:35.869
  I0112 16:00:35.870026 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename namespaces @ 01/12/25 16:00:35.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:00:35.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:00:35.905
  STEP: Creating a test namespace @ 01/12/25 16:00:35.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:00:35.946
  STEP: Creating a pod in the namespace @ 01/12/25 16:00:35.95
  STEP: Waiting for the pod to have running status @ 01/12/25 16:00:35.966
  STEP: Deleting the namespace @ 01/12/25 16:00:37.979
  STEP: Waiting for the namespace to be removed. @ 01/12/25 16:00:38.017
  STEP: Recreating the namespace @ 01/12/25 16:00:49.021
  STEP: Verifying there are no pods in the namespace @ 01/12/25 16:00:49.05
  I0112 16:00:49.055056 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5004" for this suite. @ 01/12/25 16:00:49.06
  STEP: Destroying namespace "nsdeletetest-8690" for this suite. @ 01/12/25 16:00:49.076
  I0112 16:00:49.080494 21 framework.go:370] Namespace nsdeletetest-8690 was already deleted
  STEP: Destroying namespace "nsdeletetest-3088" for this suite. @ 01/12/25 16:00:49.08
• [13.226 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 01/12/25 16:00:49.096
  I0112 16:00:49.096283 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename dns @ 01/12/25 16:00:49.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:00:49.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:00:49.136
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2650.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-2650.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 01/12/25 16:00:49.15
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2650.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2650.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 01/12/25 16:00:49.15
  STEP: creating a pod to probe /etc/hosts @ 01/12/25 16:00:49.15
  STEP: submitting the pod to kubernetes @ 01/12/25 16:00:49.151
  STEP: retrieving the pod @ 01/12/25 16:00:51.18
  STEP: looking for the results for each expected name from probers @ 01/12/25 16:00:51.186
  I0112 16:00:51.204642 21 dns_common.go:527] DNS probes using dns-2650/dns-test-4c4a86df-b375-416a-af7e-8e3c9975f87e succeeded

  STEP: deleting the pod @ 01/12/25 16:00:51.204
  I0112 16:00:51.253918 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2650" for this suite. @ 01/12/25 16:00:51.259
• [2.189 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 01/12/25 16:00:51.285
  I0112 16:00:51.285954 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename watch @ 01/12/25 16:00:51.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:00:51.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:00:51.321
  STEP: creating a new configmap @ 01/12/25 16:00:51.325
  STEP: modifying the configmap once @ 01/12/25 16:00:51.337
  STEP: modifying the configmap a second time @ 01/12/25 16:00:51.352
  STEP: deleting the configmap @ 01/12/25 16:00:51.367
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 01/12/25 16:00:51.381
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 01/12/25 16:00:51.382
  I0112 16:00:51.382683 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3087  3fb44ad0-9a8b-4f38-b638-fd372ecac8f7 8581 0 2025-01-12 16:00:51 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-12 16:00:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 16:00:51.382809 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3087  3fb44ad0-9a8b-4f38-b638-fd372ecac8f7 8582 0 2025-01-12 16:00:51 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-12 16:00:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 16:00:51.382877 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3087" for this suite. @ 01/12/25 16:00:51.386
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 01/12/25 16:00:51.4
  I0112 16:00:51.400788 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 16:00:51.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:00:51.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:00:51.445
  STEP: Creating projection with secret that has name projected-secret-test-map-2a4f0afd-d8b6-46c4-8aaa-ec7c407b9217 @ 01/12/25 16:00:51.448
  STEP: Creating a pod to test consume secrets @ 01/12/25 16:00:51.458
  STEP: Saw pod success @ 01/12/25 16:00:55.486
  I0112 16:00:55.489808 21 output.go:196] Trying to get logs from node ubuntu pod pod-projected-secrets-6fad95e6-efb8-41f3-ac7a-9774b40e682b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 16:00:55.495
  I0112 16:00:55.541190 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7886" for this suite. @ 01/12/25 16:00:55.544
• [4.157 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 01/12/25 16:00:55.557
  I0112 16:00:55.557897 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 16:00:55.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:00:55.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:00:55.609
  STEP: Creating a ResourceQuota with terminating scope @ 01/12/25 16:00:55.621
  STEP: Ensuring ResourceQuota status is calculated @ 01/12/25 16:00:55.633
  STEP: Creating a ResourceQuota with not terminating scope @ 01/12/25 16:00:57.639
  STEP: Ensuring ResourceQuota status is calculated @ 01/12/25 16:00:57.656
  STEP: Creating a long running pod @ 01/12/25 16:00:59.661
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 01/12/25 16:00:59.706
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 01/12/25 16:01:01.711
  STEP: Deleting the pod @ 01/12/25 16:01:03.715
  STEP: Ensuring resource quota status released the pod usage @ 01/12/25 16:01:03.749
  STEP: Creating a terminating pod @ 01/12/25 16:01:05.754
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 01/12/25 16:01:05.799
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 01/12/25 16:01:07.804
  STEP: Deleting the pod @ 01/12/25 16:01:09.809
  STEP: Ensuring resource quota status released the pod usage @ 01/12/25 16:01:09.849
  I0112 16:01:11.854106 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-675" for this suite. @ 01/12/25 16:01:11.859
• [16.318 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 01/12/25 16:01:11.876
  I0112 16:01:11.876359 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/12/25 16:01:11.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:01:11.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:01:11.914
  I0112 16:01:11.919302 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:01:18.412997 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2157" for this suite. @ 01/12/25 16:01:18.417
• [6.566 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 01/12/25 16:01:18.442
  I0112 16:01:18.442313 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/12/25 16:01:18.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:01:18.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:01:18.49
  I0112 16:01:18.494694 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:01:19.083007 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9778" for this suite. @ 01/12/25 16:01:19.087
• [0.671 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 01/12/25 16:01:19.113
  I0112 16:01:19.113727 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 16:01:19.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:01:19.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:01:19.181
  STEP: validating cluster-info @ 01/12/25 16:01:19.195
  I0112 16:01:19.195525 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-5842 cluster-info'
  I0112 16:01:19.271720 21 builder.go:146] stderr: ""
  I0112 16:01:19.271775 21 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0112 16:01:19.271884 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5842" for this suite. @ 01/12/25 16:01:19.276
• [0.195 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 01/12/25 16:01:19.308
  I0112 16:01:19.308891 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 16:01:19.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:01:19.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:01:19.348
  I0112 16:01:19.353041 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 01/12/25 16:01:20.663
  I0112 16:01:20.663812 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 --namespace=crd-publish-openapi-2665 create -f -'
  I0112 16:01:22.783031 21 builder.go:146] stderr: ""
  I0112 16:01:22.783207 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3532-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0112 16:01:22.783327 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 --namespace=crd-publish-openapi-2665 delete e2e-test-crd-publish-openapi-3532-crds test-foo'
  I0112 16:01:22.879219 21 builder.go:146] stderr: ""
  I0112 16:01:22.879292 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3532-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0112 16:01:22.879359 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 --namespace=crd-publish-openapi-2665 apply -f -'
  I0112 16:01:22.986288 21 builder.go:146] stderr: ""
  I0112 16:01:22.986332 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3532-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0112 16:01:22.986379 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 --namespace=crd-publish-openapi-2665 delete e2e-test-crd-publish-openapi-3532-crds test-foo'
  I0112 16:01:23.077963 21 builder.go:146] stderr: ""
  I0112 16:01:23.078018 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3532-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 01/12/25 16:01:23.078
  I0112 16:01:23.078101 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 --namespace=crd-publish-openapi-2665 create -f -'
  I0112 16:01:23.149025 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 01/12/25 16:01:23.149
  I0112 16:01:23.149285 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 --namespace=crd-publish-openapi-2665 create -f -'
  I0112 16:01:23.228110 21 builder.go:135] rc: 1
  I0112 16:01:23.228232 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 --namespace=crd-publish-openapi-2665 apply -f -'
  I0112 16:01:23.309607 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 01/12/25 16:01:23.309
  I0112 16:01:23.309759 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 --namespace=crd-publish-openapi-2665 create -f -'
  I0112 16:01:23.384139 21 builder.go:135] rc: 1
  I0112 16:01:23.384245 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 --namespace=crd-publish-openapi-2665 apply -f -'
  I0112 16:01:23.474646 21 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 01/12/25 16:01:23.474
  I0112 16:01:23.474791 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 explain e2e-test-crd-publish-openapi-3532-crds'
  I0112 16:01:23.564953 21 builder.go:146] stderr: ""
  I0112 16:01:23.565072 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3532-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 01/12/25 16:01:23.565
  I0112 16:01:23.565528 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 explain e2e-test-crd-publish-openapi-3532-crds.metadata'
  I0112 16:01:23.657719 21 builder.go:146] stderr: ""
  I0112 16:01:23.657888 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3532-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0112 16:01:23.658116 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 explain e2e-test-crd-publish-openapi-3532-crds.spec'
  I0112 16:01:23.745966 21 builder.go:146] stderr: ""
  I0112 16:01:23.746046 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3532-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0112 16:01:23.746163 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 explain e2e-test-crd-publish-openapi-3532-crds.spec.bars'
  I0112 16:01:23.825678 21 builder.go:146] stderr: ""
  I0112 16:01:23.825780 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3532-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 01/12/25 16:01:23.825
  I0112 16:01:23.826029 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2665 explain e2e-test-crd-publish-openapi-3532-crds.spec.bars2'
  I0112 16:01:23.889771 21 builder.go:135] rc: 1
  I0112 16:01:25.219995 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2665" for this suite. @ 01/12/25 16:01:25.23
• [5.937 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 01/12/25 16:01:25.246
  I0112 16:01:25.246724 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename runtimeclass @ 01/12/25 16:01:25.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:01:25.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:01:25.296
  I0112 16:01:25.309355 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7980" for this suite. @ 01/12/25 16:01:25.313
• [0.082 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 01/12/25 16:01:25.328
  I0112 16:01:25.328522 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 16:01:25.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:01:25.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:01:25.372
  I0112 16:01:25.404496 21 service_accounts.go:618] created pod
  STEP: Saw pod success @ 01/12/25 16:01:29.42
  I0112 16:01:59.422166 21 service_accounts.go:624] polling logs
  I0112 16:01:59.434197 21 service_accounts.go:634] Pod logs: 
  I0112 16:01:26.292138       1 log.go:245] OK: Got token
  I0112 16:01:26.292222       1 log.go:245] validating with in-cluster discovery
  I0112 16:01:26.292518       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0112 16:01:26.292699       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6340:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012fa0), NotBefore:(*jwt.NumericDate)(0xc000013090), IssuedAt:(*jwt.NumericDate)(0xc000012fb0), ID:"282a7bd1-38d6-4389-ac19-8054802b4e87"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6340", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a09947f1-5eec-402e-b1e5-23ca27e8a48b"}}}
  I0112 16:01:26.302630       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0112 16:01:26.308653       1 log.go:245] OK: Validated signature on JWT
  I0112 16:01:26.308859       1 log.go:245] OK: Got valid claims from token!
  I0112 16:01:26.308940       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6340:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013a18), NotBefore:(*jwt.NumericDate)(0xc000013a40), IssuedAt:(*jwt.NumericDate)(0xc000013a20), ID:"282a7bd1-38d6-4389-ac19-8054802b4e87"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6340", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a09947f1-5eec-402e-b1e5-23ca27e8a48b"}}}

  I0112 16:01:59.434356 21 service_accounts.go:638] completed pod
  I0112 16:01:59.451217 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6340" for this suite. @ 01/12/25 16:01:59.456
• [34.157 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 01/12/25 16:01:59.485
  I0112 16:01:59.485785 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 16:01:59.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:01:59.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:01:59.519
  I0112 16:01:59.525453 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-9883 version'
  I0112 16:01:59.591482 21 builder.go:146] stderr: ""
  I0112 16:01:59.591560 21 builder.go:147] stdout: "Client Version: v1.31.3\nKustomize Version: v5.4.2\nServer Version: v1.31.3\n"
  I0112 16:01:59.591952 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9883" for this suite. @ 01/12/25 16:01:59.596
• [0.126 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 01/12/25 16:01:59.611
  I0112 16:01:59.611767 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 16:01:59.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:01:59.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:01:59.646
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 16:01:59.66
  STEP: Saw pod success @ 01/12/25 16:02:03.702
  I0112 16:02:03.708351 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-df8dc593-3fcd-429d-bc92-032df5ab7555 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 16:02:03.715
  I0112 16:02:03.754832 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5300" for this suite. @ 01/12/25 16:02:03.759
• [4.163 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 01/12/25 16:02:03.774
  I0112 16:02:03.774745 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 16:02:03.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:02:03.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:02:03.823
  STEP: Setting up server cert @ 01/12/25 16:02:03.871
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 16:02:04.428
  STEP: Deploying the webhook pod @ 01/12/25 16:02:04.448
  STEP: Wait for the deployment to be ready @ 01/12/25 16:02:04.473
  I0112 16:02:04.482233 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 16:02:06.5
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 16:02:06.527
  I0112 16:02:07.527693 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/12/25 16:02:07.535
  STEP: create the configmap with a random name @ 01/12/25 16:02:07.561
  STEP: verify the configmap is mutated @ 01/12/25 16:02:07.586
  STEP: create the configmap with 'skip-me' name @ 01/12/25 16:02:07.586
  I0112 16:02:07.776531 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6893" for this suite. @ 01/12/25 16:02:07.781
  STEP: Destroying namespace "webhook-markers-2923" for this suite. @ 01/12/25 16:02:07.801
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 01/12/25 16:02:07.829
  I0112 16:02:07.829227 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename job @ 01/12/25 16:02:07.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:02:07.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:02:07.873
  STEP: Creating Indexed job @ 01/12/25 16:02:07.878
  STEP: Ensuring job reaches completions @ 01/12/25 16:02:07.892
  STEP: Ensuring pods with index for job exist @ 01/12/25 16:02:17.903
  I0112 16:02:17.908879 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7568" for this suite. @ 01/12/25 16:02:17.913
• [10.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 01/12/25 16:02:17.931
  I0112 16:02:17.931399 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename job @ 01/12/25 16:02:17.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:02:17.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:02:17.978
  STEP: Creating a job @ 01/12/25 16:02:17.983
  STEP: Ensuring active pods == parallelism @ 01/12/25 16:02:17.996
  STEP: Orphaning one of the Job's Pods @ 01/12/25 16:02:20
  I0112 16:02:20.526641 21 pod_client.go:173] Successfully updated pod "adopt-release-5rpf7"
  STEP: Checking that the Job readopts the Pod @ 01/12/25 16:02:20.526
  STEP: Removing the labels from the Job's Pod @ 01/12/25 16:02:22.535
  I0112 16:02:23.066700 21 pod_client.go:173] Successfully updated pod "adopt-release-5rpf7"
  STEP: Checking that the Job releases the Pod @ 01/12/25 16:02:23.066
  I0112 16:02:25.076130 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7299" for this suite. @ 01/12/25 16:02:25.081
• [7.179 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 01/12/25 16:02:25.11
  I0112 16:02:25.110434 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 16:02:25.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:02:25.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:02:25.181
  I0112 16:02:25.187650 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  W0112 16:02:27.739054      21 warnings.go:70] unknown field "alpha"
  W0112 16:02:27.739129      21 warnings.go:70] unknown field "beta"
  W0112 16:02:27.739143      21 warnings.go:70] unknown field "delta"
  W0112 16:02:27.739153      21 warnings.go:70] unknown field "epsilon"
  W0112 16:02:27.739165      21 warnings.go:70] unknown field "gamma"
  I0112 16:02:28.327805 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8892" for this suite. @ 01/12/25 16:02:28.332
• [3.238 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 01/12/25 16:02:28.349
  I0112 16:02:28.349166 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 16:02:28.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:02:28.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:02:28.382
  STEP: creating a secret @ 01/12/25 16:02:28.388
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 01/12/25 16:02:28.4
  STEP: patching the secret @ 01/12/25 16:02:28.404
  STEP: deleting the secret using a LabelSelector @ 01/12/25 16:02:28.421
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 01/12/25 16:02:28.445
  I0112 16:02:28.449062 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5989" for this suite. @ 01/12/25 16:02:28.452
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 01/12/25 16:02:28.468
  I0112 16:02:28.468275 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/12/25 16:02:28.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:02:28.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:02:28.508
  STEP: create the container to handle the HTTPGet hook request. @ 01/12/25 16:02:28.515
  STEP: create the pod with lifecycle hook @ 01/12/25 16:02:30.548
  STEP: check poststart hook @ 01/12/25 16:02:32.588
  STEP: delete the pod with lifecycle hook @ 01/12/25 16:02:32.602
  I0112 16:02:36.640769 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5032" for this suite. @ 01/12/25 16:02:36.645
• [8.195 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 01/12/25 16:02:36.663
  I0112 16:02:36.663594 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 16:02:36.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:02:36.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:02:36.71
  STEP: Creating simple DaemonSet "daemon-set" @ 01/12/25 16:02:36.737
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/12/25 16:02:36.75
  I0112 16:02:36.759754 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:02:36.759836 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 16:02:37.763235 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:02:37.763313 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 16:02:38.761026 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 16:02:38.761079 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 01/12/25 16:02:38.764
  I0112 16:02:38.791873 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 16:02:38.792033 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 16:02:39.790814 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 16:02:39.790874 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 16:02:40.791309 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 16:02:40.791361 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 16:02:41.790921 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 16:02:41.790995 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 16:02:42.798309 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 16:02:42.798401 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/12/25 16:02:42.804
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3755, will wait for the garbage collector to delete the pods @ 01/12/25 16:02:42.804
  I0112 16:02:42.880660 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 21.035963ms
  I0112 16:02:42.980966 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.303726ms
  I0112 16:02:45.486383 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:02:45.486417 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0112 16:02:45.490560 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"9471"},"items":null}

  I0112 16:02:45.495294 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"9471"},"items":null}

  I0112 16:02:45.506154 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3755" for this suite. @ 01/12/25 16:02:45.51
• [8.863 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 01/12/25 16:02:45.526
  I0112 16:02:45.526842 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 16:02:45.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:02:45.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:02:45.56
  STEP: Setting up server cert @ 01/12/25 16:02:45.619
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 16:02:46.208
  STEP: Deploying the webhook pod @ 01/12/25 16:02:46.227
  STEP: Wait for the deployment to be ready @ 01/12/25 16:02:46.254
  I0112 16:02:46.261923 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 16:02:48.277
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 16:02:48.302
  I0112 16:02:49.303082 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 01/12/25 16:02:49.311
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 01/12/25 16:02:49.314
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 01/12/25 16:02:49.314
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 01/12/25 16:02:49.314
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 01/12/25 16:02:49.316
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/12/25 16:02:49.316
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/12/25 16:02:49.318
  I0112 16:02:49.443990 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5389" for this suite. @ 01/12/25 16:02:49.447
  STEP: Destroying namespace "webhook-markers-6975" for this suite. @ 01/12/25 16:02:49.466
• [3.976 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 01/12/25 16:02:49.502
  I0112 16:02:49.502712 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 16:02:49.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:02:49.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:02:49.542
  STEP: creating a Service @ 01/12/25 16:02:49.548
  STEP: watching for the Service to be added @ 01/12/25 16:02:49.586
  I0112 16:02:49.590116 21 service.go:3445] Found Service test-service-5mx7z in namespace services-999 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31573}]
  I0112 16:02:49.590250 21 service.go:3452] Service test-service-5mx7z created
  STEP: Getting /status @ 01/12/25 16:02:49.59
  I0112 16:02:49.596475 21 service.go:3463] Service test-service-5mx7z has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 01/12/25 16:02:49.596
  STEP: watching for the Service to be patched @ 01/12/25 16:02:49.614
  I0112 16:02:49.618460 21 service.go:3486] observed Service test-service-5mx7z in namespace services-999 with annotations: map[] & LoadBalancer: {[]}
  I0112 16:02:49.618668 21 service.go:3489] Found Service test-service-5mx7z in namespace services-999 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0010465a0 []}]}
  I0112 16:02:49.618709 21 service.go:3496] Service test-service-5mx7z has service status patched
  STEP: updating the ServiceStatus @ 01/12/25 16:02:49.618
  I0112 16:02:49.642264 21 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 01/12/25 16:02:49.642
  I0112 16:02:49.645524 21 service.go:3527] Observed Service test-service-5mx7z in namespace services-999 with annotations: map[] & Conditions: []
  I0112 16:02:49.645666 21 service.go:3538] Observed Service test-service-5mx7z in namespace services-999 with annotations: map[patchedstatus:true] & Conditions: []
  I0112 16:02:49.645749 21 service.go:3534] Found Service test-service-5mx7z in namespace services-999 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0112 16:02:49.645809 21 service.go:3545] Service test-service-5mx7z has service status updated
  STEP: patching the service @ 01/12/25 16:02:49.645
  STEP: watching for the Service to be patched @ 01/12/25 16:02:49.676
  I0112 16:02:49.679366 21 service.go:3568] observed Service test-service-5mx7z in namespace services-999 with labels: map[test-service-static:true]
  I0112 16:02:49.679548 21 service.go:3568] observed Service test-service-5mx7z in namespace services-999 with labels: map[test-service-static:true]
  I0112 16:02:49.679636 21 service.go:3568] observed Service test-service-5mx7z in namespace services-999 with labels: map[test-service-static:true]
  I0112 16:02:49.679668 21 service.go:3571] Found Service test-service-5mx7z in namespace services-999 with labels: map[test-service:patched test-service-static:true]
  I0112 16:02:49.679685 21 service.go:3578] Service test-service-5mx7z patched
  STEP: deleting the service @ 01/12/25 16:02:49.679
  STEP: watching for the Service to be deleted @ 01/12/25 16:02:49.728
  I0112 16:02:49.730848 21 service.go:3602] Observed event: ADDED
  I0112 16:02:49.730954 21 service.go:3602] Observed event: MODIFIED
  I0112 16:02:49.730981 21 service.go:3602] Observed event: MODIFIED
  I0112 16:02:49.731147 21 service.go:3602] Observed event: MODIFIED
  I0112 16:02:49.731217 21 service.go:3598] Found Service test-service-5mx7z in namespace services-999 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0112 16:02:49.731261 21 service.go:3607] Service test-service-5mx7z deleted
  I0112 16:02:49.731408 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-999" for this suite. @ 01/12/25 16:02:49.736
• [0.248 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 01/12/25 16:02:49.751
  I0112 16:02:49.751246 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename subpath @ 01/12/25 16:02:49.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:02:49.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:02:49.797
  STEP: Setting up data @ 01/12/25 16:02:49.802
  STEP: Creating pod pod-subpath-test-configmap-mns9 @ 01/12/25 16:02:49.83
  STEP: Creating a pod to test atomic-volume-subpath @ 01/12/25 16:02:49.83
  STEP: Saw pod success @ 01/12/25 16:03:13.93
  I0112 16:03:13.934861 21 output.go:196] Trying to get logs from node ubuntu pod pod-subpath-test-configmap-mns9 container test-container-subpath-configmap-mns9: <nil>
  STEP: delete the pod @ 01/12/25 16:03:13.943
  STEP: Deleting pod pod-subpath-test-configmap-mns9 @ 01/12/25 16:03:13.986
  I0112 16:03:13.986767 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-mns9" in namespace "subpath-3031"
  I0112 16:03:13.989838 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3031" for this suite. @ 01/12/25 16:03:13.993
• [24.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 01/12/25 16:03:14.008
  I0112 16:03:14.008998 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 16:03:14.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:03:14.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:03:14.048
  STEP: Setting up server cert @ 01/12/25 16:03:14.098
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 16:03:14.48
  STEP: Deploying the webhook pod @ 01/12/25 16:03:14.496
  STEP: Wait for the deployment to be ready @ 01/12/25 16:03:14.521
  I0112 16:03:14.530583 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 16:03:16.543
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 16:03:16.566
  I0112 16:03:17.567256 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0112 16:03:17.577018 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4554-crds.webhook.example.com via the AdmissionRegistration API @ 01/12/25 16:03:18.097
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/12/25 16:03:18.121
  I0112 16:03:20.876114 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4889" for this suite. @ 01/12/25 16:03:20.881
  STEP: Destroying namespace "webhook-markers-7889" for this suite. @ 01/12/25 16:03:20.9
• [6.906 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 01/12/25 16:03:20.915
  I0112 16:03:20.915213 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename replication-controller @ 01/12/25 16:03:20.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:03:20.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:03:20.951
  STEP: Given a ReplicationController is created @ 01/12/25 16:03:20.972
  STEP: When the matched label of one of its pods change @ 01/12/25 16:03:20.993
  I0112 16:03:20.998141 21 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0112 16:03:26.020292 21 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/12/25 16:03:26.062
  I0112 16:03:27.079677 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1091" for this suite. @ 01/12/25 16:03:27.085
• [6.189 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 01/12/25 16:03:27.104
  I0112 16:03:27.104984 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/12/25 16:03:27.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:03:27.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:03:27.144
  STEP: create the container to handle the HTTPGet hook request. @ 01/12/25 16:03:27.154
  STEP: create the pod with lifecycle hook @ 01/12/25 16:03:29.184
  STEP: delete the pod with lifecycle hook @ 01/12/25 16:03:31.21
  STEP: check prestop hook @ 01/12/25 16:03:35.243
  I0112 16:03:35.250975 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8846" for this suite. @ 01/12/25 16:03:35.254
• [8.166 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 01/12/25 16:03:35.271
  I0112 16:03:35.271059 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 16:03:35.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:03:35.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:03:35.319
  STEP: Creating a pod to test downward api env vars @ 01/12/25 16:03:35.322
  STEP: Saw pod success @ 01/12/25 16:03:39.355
  I0112 16:03:39.359736 21 output.go:196] Trying to get logs from node ubuntu pod downward-api-107687ae-889d-4883-888c-9543620b73e1 container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 16:03:39.367
  I0112 16:03:39.402152 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2266" for this suite. @ 01/12/25 16:03:39.406
• [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 01/12/25 16:03:39.421
  I0112 16:03:39.421677 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 16:03:39.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:03:39.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:03:39.455
  I0112 16:03:39.515731 21 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0112 16:03:39.538169 21 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0112 16:03:39.545570 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:03:39.545636 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 16:03:40.546457 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:03:40.546525 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 16:03:41.546507 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 16:03:41.546559 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 16:03:42.548836 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 16:03:42.548914 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0112 16:03:42.549028 21 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0112 16:03:42.567555 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0112 16:03:44.579993 21 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0112 16:03:44.600415 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0112 16:03:44.600497 21 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0112 16:03:44.605492 21 daemon_set.go:1193] Wrong image for pod: daemon-set-btlhr. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0112 16:03:44.605574 21 daemon_set.go:1198] Pod daemon-set-btlhr is not available
  I0112 16:03:48.606379 21 daemon_set.go:1198] Pod daemon-set-xdkrq is not available
  STEP: Deleting DaemonSet "daemon-set" @ 01/12/25 16:03:48.623
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8272, will wait for the garbage collector to delete the pods @ 01/12/25 16:03:48.623
  I0112 16:03:48.698783 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 19.791364ms
  I0112 16:03:48.799445 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.660017ms
  I0112 16:03:51.706487 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:03:51.706585 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0112 16:03:51.711788 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10043"},"items":null}

  I0112 16:03:51.717155 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10043"},"items":null}

  I0112 16:03:51.730299 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8272" for this suite. @ 01/12/25 16:03:51.735
• [12.337 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 01/12/25 16:03:51.758
  I0112 16:03:51.758447 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 16:03:51.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:03:51.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:03:51.804
  STEP: Counting existing ResourceQuota @ 01/12/25 16:03:51.808
  STEP: Creating a ResourceQuota @ 01/12/25 16:03:56.816
  STEP: Ensuring resource quota status is calculated @ 01/12/25 16:03:56.84
  STEP: Creating a ReplicationController @ 01/12/25 16:03:58.844
  STEP: Ensuring resource quota status captures replication controller creation @ 01/12/25 16:03:58.88
  STEP: Deleting a ReplicationController @ 01/12/25 16:04:00.886
  STEP: Ensuring resource quota status released usage @ 01/12/25 16:04:00.902
  I0112 16:04:02.907152 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-785" for this suite. @ 01/12/25 16:04:02.91
• [11.167 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 01/12/25 16:04:02.925
  I0112 16:04:02.925238 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 16:04:02.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:04:02.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:04:02.957
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 16:04:02.962
  STEP: Saw pod success @ 01/12/25 16:04:06.996
  I0112 16:04:07.001592 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-43f752f2-531f-4b84-ae23-06c0293eb53a container client-container: <nil>
  STEP: delete the pod @ 01/12/25 16:04:07.01
  I0112 16:04:07.064160 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3613" for this suite. @ 01/12/25 16:04:07.068
• [4.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 01/12/25 16:04:07.083
  I0112 16:04:07.084027 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 16:04:07.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:04:07.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:04:07.145
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 16:04:07.149
  STEP: Saw pod success @ 01/12/25 16:04:11.18
  I0112 16:04:11.184345 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-08b30a30-1208-4a98-86fa-07ea198ec0f5 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 16:04:11.19
  I0112 16:04:11.224272 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8380" for this suite. @ 01/12/25 16:04:11.228
• [4.159 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 01/12/25 16:04:11.243
  I0112 16:04:11.243472 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename disruption @ 01/12/25 16:04:11.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:04:11.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:04:11.285
  STEP: Creating a pdb that targets all three pods in a test replica set @ 01/12/25 16:04:11.289
  STEP: Waiting for the pdb to be processed @ 01/12/25 16:04:11.302
  STEP: First trying to evict a pod which shouldn't be evictable @ 01/12/25 16:04:13.322
  STEP: Waiting for all pods to be running @ 01/12/25 16:04:13.322
  I0112 16:04:13.328205 21 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 01/12/25 16:04:15.328
  STEP: Updating the pdb to allow a pod to be evicted @ 01/12/25 16:04:15.339
  STEP: Waiting for the pdb to be processed @ 01/12/25 16:04:15.36
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/12/25 16:04:17.364
  STEP: Waiting for all pods to be running @ 01/12/25 16:04:17.364
  STEP: Waiting for the pdb to observed all healthy pods @ 01/12/25 16:04:17.368
  STEP: Patching the pdb to disallow a pod to be evicted @ 01/12/25 16:04:17.462
  STEP: Waiting for the pdb to be processed @ 01/12/25 16:04:17.595
  STEP: Waiting for all pods to be running @ 01/12/25 16:04:19.602
  STEP: locating a running pod @ 01/12/25 16:04:19.608
  STEP: Deleting the pdb to allow a pod to be evicted @ 01/12/25 16:04:19.62
  STEP: Waiting for the pdb to be deleted @ 01/12/25 16:04:19.643
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/12/25 16:04:19.646
  STEP: Waiting for all pods to be running @ 01/12/25 16:04:19.646
  I0112 16:04:19.711009 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7428" for this suite. @ 01/12/25 16:04:19.716
• [8.512 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 01/12/25 16:04:19.755
  I0112 16:04:19.755872 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-runtime @ 01/12/25 16:04:19.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:04:19.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:04:19.877
  STEP: create the container @ 01/12/25 16:04:19.882
  W0112 16:04:19.899983      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/12/25 16:04:19.9
  STEP: get the container status @ 01/12/25 16:04:23.922
  STEP: the container should be terminated @ 01/12/25 16:04:23.925
  STEP: the termination message should be set @ 01/12/25 16:04:23.925
  I0112 16:04:23.925996 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/12/25 16:04:23.926
  I0112 16:04:23.956043 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9563" for this suite. @ 01/12/25 16:04:23.96
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 01/12/25 16:04:23.976
  I0112 16:04:23.976802 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/12/25 16:04:23.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:04:24.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:04:24.01
  STEP: Creating two CSIDrivers @ 01/12/25 16:04:24.015
  STEP: Getting "inline-driver-b05bfcbc-4058-42da-9251-fc9ad94312b9" & "inline-driver-3f03b5f5-3536-48ba-bdc8-a548df44097d" @ 01/12/25 16:04:24.045
  STEP: Patching the CSIDriver "inline-driver-3f03b5f5-3536-48ba-bdc8-a548df44097d" @ 01/12/25 16:04:24.053
  STEP: Updating the CSIDriver "inline-driver-3f03b5f5-3536-48ba-bdc8-a548df44097d" @ 01/12/25 16:04:24.068
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8504" @ 01/12/25 16:04:24.085
  STEP: Deleting CSIDriver "inline-driver-b05bfcbc-4058-42da-9251-fc9ad94312b9" @ 01/12/25 16:04:24.089
  STEP: Confirm deletion of CSIDriver "inline-driver-b05bfcbc-4058-42da-9251-fc9ad94312b9" @ 01/12/25 16:04:24.116
  STEP: Deleting CSIDriver "inline-driver-3f03b5f5-3536-48ba-bdc8-a548df44097d" via DeleteCollection @ 01/12/25 16:04:24.119
  STEP: Confirm deletion of CSIDriver "inline-driver-3f03b5f5-3536-48ba-bdc8-a548df44097d" @ 01/12/25 16:04:24.154
  I0112 16:04:24.158542 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8504" for this suite. @ 01/12/25 16:04:24.162
• [0.220 seconds]
------------------------------
S
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 01/12/25 16:04:24.196
  I0112 16:04:24.196430 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pods @ 01/12/25 16:04:24.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:04:24.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:04:24.239
  STEP: creating the pod @ 01/12/25 16:04:24.242
  STEP: submitting the pod to kubernetes @ 01/12/25 16:04:24.243
  STEP: verifying QOS class is set on the pod @ 01/12/25 16:04:24.275
  I0112 16:04:24.279127 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-267" for this suite. @ 01/12/25 16:04:24.284
• [0.118 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 01/12/25 16:04:24.314
  I0112 16:04:24.314345 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 16:04:24.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:04:24.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:04:24.354
  STEP: creating service in namespace services-1482 @ 01/12/25 16:04:24.36
  STEP: creating service affinity-nodeport in namespace services-1482 @ 01/12/25 16:04:24.36
  STEP: creating replication controller affinity-nodeport in namespace services-1482 @ 01/12/25 16:04:24.406
  I0112 16:04:24.434155      21 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-1482, replica count: 3
  I0112 16:04:27.485152      21 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 16:04:27.494743 21 resource.go:361] Creating new exec pod
  I0112 16:04:30.519423 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-1482 exec execpod-affinity6xrtv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0112 16:04:30.668633 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0112 16:04:30.668694 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 16:04:30.668793 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-1482 exec execpod-affinity6xrtv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80'
  I0112 16:04:30.814434 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.155 80\nConnection to 10.152.183.155 80 port [tcp/http] succeeded!\n"
  I0112 16:04:30.814507 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 16:04:30.814618 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-1482 exec execpod-affinity6xrtv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 31925'
  I0112 16:04:30.978374 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 31925\nConnection to 172.17.202.11 31925 port [tcp/*] succeeded!\n"
  I0112 16:04:30.978453 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 16:04:30.978544 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-1482 exec execpod-affinity6xrtv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.207.20 31925'
  I0112 16:04:31.107437 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.207.20 31925\nConnection to 172.17.207.20 31925 port [tcp/*] succeeded!\n"
  I0112 16:04:31.107492 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 16:04:31.107572 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-1482 exec execpod-affinity6xrtv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.17.202.11:31925/ ; done'
  I0112 16:04:31.377340 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:31925/\n"
  I0112 16:04:31.377415 21 builder.go:147] stdout: "\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65\naffinity-nodeport-gnf65"
  I0112 16:04:31.377477 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377499 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377516 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377533 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377551 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377565 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377585 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377605 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377631 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377647 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377664 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377682 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377699 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377716 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377746 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377765 21 service.go:242] Received response from host: affinity-nodeport-gnf65
  I0112 16:04:31.377920 21 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1482, will wait for the garbage collector to delete the pods @ 01/12/25 16:04:31.413
  I0112 16:04:31.488805 21 resources.go:139] Deleting ReplicationController affinity-nodeport took: 16.660769ms
  I0112 16:04:31.589856 21 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 101.046412ms
  I0112 16:04:34.957010 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1482" for this suite. @ 01/12/25 16:04:34.961
• [10.660 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 01/12/25 16:04:34.974
  I0112 16:04:34.974321 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename dns @ 01/12/25 16:04:34.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:04:35.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:04:35.01
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/12/25 16:04:35.013
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/12/25 16:04:35.013
  STEP: creating a pod to probe DNS @ 01/12/25 16:04:35.013
  STEP: submitting the pod to kubernetes @ 01/12/25 16:04:35.013
  STEP: retrieving the pod @ 01/12/25 16:04:37.037
  STEP: looking for the results for each expected name from probers @ 01/12/25 16:04:37.042
  I0112 16:04:37.061513 21 dns_common.go:527] DNS probes using dns-2796/dns-test-c6d2c6e9-1992-4527-8234-ee8e6f4615ae succeeded

  STEP: deleting the pod @ 01/12/25 16:04:37.061
  I0112 16:04:37.120656 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2796" for this suite. @ 01/12/25 16:04:37.125
• [2.168 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 01/12/25 16:04:37.142
  I0112 16:04:37.142832 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 16:04:37.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:04:37.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:04:37.176
  STEP: Creating service test in namespace statefulset-4961 @ 01/12/25 16:04:37.181
  STEP: Creating a new StatefulSet @ 01/12/25 16:04:37.194
  I0112 16:04:37.229599 21 wait.go:40] Found 0 stateful pods, waiting for 3
  I0112 16:04:47.234993 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0112 16:04:47.235225 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0112 16:04:47.235285 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/12/25 16:04:47.251
  I0112 16:04:47.276739 21 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 01/12/25 16:04:47.276
  STEP: Not applying an update when the partition is greater than the number of replicas @ 01/12/25 16:04:57.286
  STEP: Performing a canary update @ 01/12/25 16:04:57.286
  I0112 16:04:57.313911 21 statefulset.go:2507] Updating stateful set ss2
  I0112 16:04:57.322415 21 wait.go:74] Waiting for Pod statefulset-4961/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 01/12/25 16:05:07.323
  I0112 16:05:07.670209 21 wait.go:40] Found 2 stateful pods, waiting for 3
  I0112 16:05:17.672309 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0112 16:05:17.672415 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0112 16:05:17.672438 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 01/12/25 16:05:17.683
  I0112 16:05:17.708991 21 statefulset.go:2507] Updating stateful set ss2
  I0112 16:05:17.717776 21 wait.go:74] Waiting for Pod statefulset-4961/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0112 16:05:27.748243 21 statefulset.go:2507] Updating stateful set ss2
  I0112 16:05:27.757225 21 wait.go:56] Waiting for StatefulSet statefulset-4961/ss2 to complete update
  I0112 16:05:27.757328 21 wait.go:63] Waiting for Pod statefulset-4961/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0112 16:05:37.761597 21 statefulset.go:138] Deleting all statefulset in ns statefulset-4961
  I0112 16:05:37.767438 21 rest.go:150] Scaling statefulset ss2 to 0
  I0112 16:05:47.796512 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 16:05:47.800700 21 rest.go:88] Deleting statefulset ss2
  I0112 16:05:47.827413 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4961" for this suite. @ 01/12/25 16:05:47.832
• [70.718 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 01/12/25 16:05:47.864
  I0112 16:05:47.864778 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename ingressclass @ 01/12/25 16:05:47.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:05:47.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:05:47.907
  STEP: getting /apis @ 01/12/25 16:05:47.913
  STEP: getting /apis/networking.k8s.io @ 01/12/25 16:05:47.918
  STEP: getting /apis/networking.k8s.iov1 @ 01/12/25 16:05:47.92
  STEP: creating @ 01/12/25 16:05:47.921
  STEP: getting @ 01/12/25 16:05:47.957
  STEP: listing @ 01/12/25 16:05:47.96
  STEP: watching @ 01/12/25 16:05:47.965
  I0112 16:05:47.965136 21 ingressclass.go:348] starting watch
  STEP: patching @ 01/12/25 16:05:47.966
  STEP: updating @ 01/12/25 16:05:47.979
  I0112 16:05:47.991066 21 ingressclass.go:364] waiting for watch events with expected annotations
  I0112 16:05:47.991157 21 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 01/12/25 16:05:47.991
  STEP: deleting a collection @ 01/12/25 16:05:48.01
  I0112 16:05:48.041736 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4014" for this suite. @ 01/12/25 16:05:48.046
• [0.196 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 01/12/25 16:05:48.06
  I0112 16:05:48.060631 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 16:05:48.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:05:48.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:05:48.134
  STEP: reading a file in the container @ 01/12/25 16:05:50.184
  I0112 16:05:50.184203 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1166 pod-service-account-34694cf4-3a1f-4537-bb92-b82741d25fa9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 01/12/25 16:05:50.329
  I0112 16:05:50.329343 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1166 pod-service-account-34694cf4-3a1f-4537-bb92-b82741d25fa9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 01/12/25 16:05:50.486
  I0112 16:05:50.486872 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1166 pod-service-account-34694cf4-3a1f-4537-bb92-b82741d25fa9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0112 16:05:50.657817 21 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-1166"
  I0112 16:05:50.660105 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1166" for this suite. @ 01/12/25 16:05:50.663
• [2.626 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 01/12/25 16:05:50.686
  I0112 16:05:50.686299 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 16:05:50.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:05:50.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:05:50.735
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/12/25 16:05:50.748
  STEP: Saw pod success @ 01/12/25 16:05:54.788
  I0112 16:05:54.795236 21 output.go:196] Trying to get logs from node ubuntu pod pod-d97add61-e2ea-4fb0-a87e-ecd6397f75d0 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 16:05:54.811
  I0112 16:05:54.844130 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9525" for this suite. @ 01/12/25 16:05:54.848
• [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 01/12/25 16:05:54.862
  I0112 16:05:54.862533 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 16:05:54.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:05:54.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:05:54.896
  STEP: Creating secret with name secret-test-62f2a54e-afcc-4703-9856-bb55e57f1711 @ 01/12/25 16:05:54.901
  STEP: Creating a pod to test consume secrets @ 01/12/25 16:05:54.915
  STEP: Saw pod success @ 01/12/25 16:05:58.95
  I0112 16:05:58.955220 21 output.go:196] Trying to get logs from node ubuntu2 pod pod-secrets-ab4ad05a-ca35-42fb-9418-99d881856bc9 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 16:05:58.969
  I0112 16:05:59.005135 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-396" for this suite. @ 01/12/25 16:05:59.009
• [4.161 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 01/12/25 16:05:59.023
  I0112 16:05:59.023849 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 16:05:59.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:05:59.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:05:59.083
  STEP: Setting up server cert @ 01/12/25 16:05:59.157
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 16:05:59.846
  STEP: Deploying the webhook pod @ 01/12/25 16:05:59.871
  STEP: Wait for the deployment to be ready @ 01/12/25 16:05:59.896
  I0112 16:05:59.905345 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 16:06:01.92
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 16:06:01.947
  I0112 16:06:02.948262 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 01/12/25 16:06:02.954
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/12/25 16:06:02.975
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 01/12/25 16:06:02.982
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/12/25 16:06:03.001
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 01/12/25 16:06:03.027
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/12/25 16:06:03.041
  I0112 16:06:03.195615 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2753" for this suite. @ 01/12/25 16:06:03.2
  STEP: Destroying namespace "webhook-markers-3803" for this suite. @ 01/12/25 16:06:03.232
• [4.226 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 01/12/25 16:06:03.249
  I0112 16:06:03.249861 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 16:06:03.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:03.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:03.292
  I0112 16:06:03.378684 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7025" for this suite. @ 01/12/25 16:06:03.382
• [0.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 01/12/25 16:06:03.397
  I0112 16:06:03.397855 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 16:06:03.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:03.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:03.435
  STEP: Creating secret with name secret-test-ba20b760-60c0-4340-b1d7-1c0212062773 @ 01/12/25 16:06:03.438
  STEP: Creating a pod to test consume secrets @ 01/12/25 16:06:03.455
  STEP: Saw pod success @ 01/12/25 16:06:07.483
  I0112 16:06:07.487716 21 output.go:196] Trying to get logs from node ubuntu pod pod-secrets-da2d68a8-9314-4d96-bc76-c00101b9c51c container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 16:06:07.495
  I0112 16:06:07.530460 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2233" for this suite. @ 01/12/25 16:06:07.535
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 01/12/25 16:06:07.551
  I0112 16:06:07.551251 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename replicaset @ 01/12/25 16:06:07.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:07.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:07.585
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 01/12/25 16:06:07.595
  STEP: When a replicaset with a matching selector is created @ 01/12/25 16:06:09.625
  STEP: Then the orphan pod is adopted @ 01/12/25 16:06:09.648
  STEP: When the matched label of one of its pods change @ 01/12/25 16:06:10.656
  I0112 16:06:10.660629 21 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/12/25 16:06:10.681
  I0112 16:06:11.690631 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2057" for this suite. @ 01/12/25 16:06:11.694
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 01/12/25 16:06:11.717
  I0112 16:06:11.717304 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 16:06:11.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:11.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:11.749
  STEP: creating a collection of services @ 01/12/25 16:06:11.754
  I0112 16:06:11.754797 21 service.go:3655] Creating e2e-svc-a-kv4c7
  I0112 16:06:11.802895 21 service.go:3655] Creating e2e-svc-b-rrhqj
  I0112 16:06:11.835395 21 service.go:3655] Creating e2e-svc-c-4ztks
  STEP: deleting service collection @ 01/12/25 16:06:11.861
  I0112 16:06:11.929020 21 service.go:3690] Collection of services has been deleted
  I0112 16:06:11.929195 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8869" for this suite. @ 01/12/25 16:06:11.933
• [0.229 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 01/12/25 16:06:11.946
  I0112 16:06:11.946820 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename tables @ 01/12/25 16:06:11.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:11.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:11.991
  I0112 16:06:11.997086 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1426" for this suite. @ 01/12/25 16:06:12.001
• [0.073 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 01/12/25 16:06:12.02
  I0112 16:06:12.020194 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 16:06:12.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:12.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:12.052
  I0112 16:06:12.057175 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  W0112 16:06:12.057868      21 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0044edbd0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0112 16:06:14.599417      21 warnings.go:70] unknown field "alpha"
  W0112 16:06:14.599492      21 warnings.go:70] unknown field "beta"
  W0112 16:06:14.599506      21 warnings.go:70] unknown field "delta"
  W0112 16:06:14.599517      21 warnings.go:70] unknown field "epsilon"
  W0112 16:06:14.599528      21 warnings.go:70] unknown field "gamma"
  I0112 16:06:15.168531 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1717" for this suite. @ 01/12/25 16:06:15.172
• [3.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 01/12/25 16:06:15.188
  I0112 16:06:15.189012 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 16:06:15.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:15.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:15.248
  STEP: Creating configMap with name configmap-test-volume-bb9dcbb5-6239-45fe-bfbe-a4ab5622a5ed @ 01/12/25 16:06:15.253
  STEP: Creating a pod to test consume configMaps @ 01/12/25 16:06:15.267
  STEP: Saw pod success @ 01/12/25 16:06:19.299
  I0112 16:06:19.304395 21 output.go:196] Trying to get logs from node ubuntu2 pod pod-configmaps-c33517a8-b168-4574-a51b-4f5dc1e8abf9 container configmap-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 16:06:19.312
  I0112 16:06:19.345578 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6380" for this suite. @ 01/12/25 16:06:19.35
• [4.190 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 01/12/25 16:06:19.378
  I0112 16:06:19.379023 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/12/25 16:06:19.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:19.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:19.429
  I0112 16:06:19.434014 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:06:22.516117 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6522" for this suite. @ 01/12/25 16:06:22.52
• [3.165 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 01/12/25 16:06:22.543
  I0112 16:06:22.543978 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename podtemplate @ 01/12/25 16:06:22.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:22.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:22.585
  I0112 16:06:22.656082 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7881" for this suite. @ 01/12/25 16:06:22.659
• [0.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 01/12/25 16:06:22.674
  I0112 16:06:22.674865 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename discovery @ 01/12/25 16:06:22.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:22.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:22.714
  STEP: Setting up server cert @ 01/12/25 16:06:22.719
  I0112 16:06:23.054384 21 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0112 16:06:23.056152 21 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0112 16:06:23.056243 21 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0112 16:06:23.056255 21 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0112 16:06:23.056264 21 discovery.go:139] Checking APIGroup: apps
  I0112 16:06:23.057692 21 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0112 16:06:23.057763 21 discovery.go:148] Versions found [{apps/v1 v1}]
  I0112 16:06:23.057790 21 discovery.go:154] apps/v1 matches apps/v1
  I0112 16:06:23.057813 21 discovery.go:139] Checking APIGroup: events.k8s.io
  I0112 16:06:23.059299 21 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0112 16:06:23.059371 21 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0112 16:06:23.059399 21 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0112 16:06:23.059408 21 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0112 16:06:23.060725 21 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0112 16:06:23.060770 21 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0112 16:06:23.060779 21 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0112 16:06:23.060789 21 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0112 16:06:23.062163 21 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0112 16:06:23.062232 21 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0112 16:06:23.062263 21 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0112 16:06:23.062273 21 discovery.go:139] Checking APIGroup: autoscaling
  I0112 16:06:23.063631 21 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0112 16:06:23.063685 21 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0112 16:06:23.063696 21 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0112 16:06:23.063706 21 discovery.go:139] Checking APIGroup: batch
  I0112 16:06:23.065021 21 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0112 16:06:23.065084 21 discovery.go:148] Versions found [{batch/v1 v1}]
  I0112 16:06:23.065095 21 discovery.go:154] batch/v1 matches batch/v1
  I0112 16:06:23.065144 21 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0112 16:06:23.066536 21 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0112 16:06:23.066639 21 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0112 16:06:23.066664 21 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0112 16:06:23.066674 21 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0112 16:06:23.067876 21 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0112 16:06:23.068002 21 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0112 16:06:23.068015 21 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0112 16:06:23.068027 21 discovery.go:139] Checking APIGroup: policy
  I0112 16:06:23.069451 21 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0112 16:06:23.069507 21 discovery.go:148] Versions found [{policy/v1 v1}]
  I0112 16:06:23.069532 21 discovery.go:154] policy/v1 matches policy/v1
  I0112 16:06:23.069542 21 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0112 16:06:23.070880 21 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0112 16:06:23.071013 21 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0112 16:06:23.071025 21 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0112 16:06:23.071035 21 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0112 16:06:23.072305 21 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0112 16:06:23.072379 21 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0112 16:06:23.072398 21 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0112 16:06:23.072407 21 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0112 16:06:23.073820 21 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0112 16:06:23.073878 21 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0112 16:06:23.073888 21 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0112 16:06:23.073900 21 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0112 16:06:23.075262 21 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0112 16:06:23.075308 21 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0112 16:06:23.075318 21 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0112 16:06:23.075347 21 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0112 16:06:23.076651 21 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0112 16:06:23.076705 21 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0112 16:06:23.076721 21 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0112 16:06:23.076736 21 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0112 16:06:23.077950 21 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0112 16:06:23.077974 21 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0112 16:06:23.077983 21 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0112 16:06:23.077992 21 discovery.go:139] Checking APIGroup: node.k8s.io
  I0112 16:06:23.079085 21 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0112 16:06:23.079135 21 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0112 16:06:23.079146 21 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0112 16:06:23.079156 21 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0112 16:06:23.080372 21 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0112 16:06:23.080417 21 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0112 16:06:23.080428 21 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0112 16:06:23.080436 21 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0112 16:06:23.081678 21 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0112 16:06:23.081722 21 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0112 16:06:23.081737 21 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0112 16:06:23.081748 21 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0112 16:06:23.082872 21 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0112 16:06:23.082925 21 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0112 16:06:23.082975 21 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0112 16:06:23.083071 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6106" for this suite. @ 01/12/25 16:06:23.086
• [0.426 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 01/12/25 16:06:23.101
  I0112 16:06:23.101246 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubelet-test @ 01/12/25 16:06:23.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:23.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:23.152
  STEP: Waiting for pod completion @ 01/12/25 16:06:23.179
  I0112 16:06:27.208346 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6487" for this suite. @ 01/12/25 16:06:27.215
• [4.134 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 01/12/25 16:06:27.236
  I0112 16:06:27.236257 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename disruption @ 01/12/25 16:06:27.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:27.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:27.283
  STEP: Waiting for the pdb to be processed @ 01/12/25 16:06:27.337
  STEP: Updating PodDisruptionBudget status @ 01/12/25 16:06:29.346
  STEP: Waiting for all pods to be running @ 01/12/25 16:06:29.372
  I0112 16:06:29.376384 21 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 01/12/25 16:06:31.379
  STEP: Waiting for the pdb to be processed @ 01/12/25 16:06:31.406
  STEP: Patching PodDisruptionBudget status @ 01/12/25 16:06:31.414
  STEP: Waiting for the pdb to be processed @ 01/12/25 16:06:31.433
  I0112 16:06:31.437185 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8724" for this suite. @ 01/12/25 16:06:31.442
• [4.226 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 01/12/25 16:06:31.462
  I0112 16:06:31.462285 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename dns @ 01/12/25 16:06:31.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:31.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:31.508
  STEP: Creating a test headless service @ 01/12/25 16:06:31.513
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-299.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-299.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 01/12/25 16:06:31.525
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-299.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-299.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 01/12/25 16:06:31.525
  STEP: creating a pod to probe DNS @ 01/12/25 16:06:31.526
  STEP: submitting the pod to kubernetes @ 01/12/25 16:06:31.526
  STEP: retrieving the pod @ 01/12/25 16:06:33.581
  STEP: looking for the results for each expected name from probers @ 01/12/25 16:06:33.584
  I0112 16:06:33.605188 21 dns_common.go:527] DNS probes using dns-299/dns-test-133fbfeb-98bd-44c0-95a2-47148b86db17 succeeded

  STEP: deleting the pod @ 01/12/25 16:06:33.605
  STEP: deleting the test headless service @ 01/12/25 16:06:33.64
  I0112 16:06:33.726348 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-299" for this suite. @ 01/12/25 16:06:33.731
• [2.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 01/12/25 16:06:33.764
  I0112 16:06:33.764553 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename cronjob @ 01/12/25 16:06:33.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:06:33.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:06:33.819
  STEP: Creating a cronjob @ 01/12/25 16:06:33.832
  STEP: Ensuring more than one job is running at a time @ 01/12/25 16:06:33.844
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 01/12/25 16:08:01.849
  STEP: Removing cronjob @ 01/12/25 16:08:01.855
  I0112 16:08:01.870174 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5222" for this suite. @ 01/12/25 16:08:01.874
• [88.126 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 01/12/25 16:08:01.89
  I0112 16:08:01.890265 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/12/25 16:08:01.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:08:01.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:08:01.971
  I0112 16:08:01.977311 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:08:03.042335 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1393" for this suite. @ 01/12/25 16:08:03.048
• [1.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 01/12/25 16:08:03.065
  I0112 16:08:03.065778 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 16:08:03.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:08:03.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:08:03.1
  I0112 16:08:03.105205 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/12/25 16:08:04.426
  I0112 16:08:04.426364 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2380 --namespace=crd-publish-openapi-2380 create -f -'
  I0112 16:08:06.550495 21 builder.go:146] stderr: ""
  I0112 16:08:06.550594 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-382-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0112 16:08:06.550772 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2380 --namespace=crd-publish-openapi-2380 delete e2e-test-crd-publish-openapi-382-crds test-cr'
  I0112 16:08:06.642752 21 builder.go:146] stderr: ""
  I0112 16:08:06.642843 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-382-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0112 16:08:06.642919 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2380 --namespace=crd-publish-openapi-2380 apply -f -'
  I0112 16:08:06.736247 21 builder.go:146] stderr: ""
  I0112 16:08:06.736306 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-382-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0112 16:08:06.736356 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2380 --namespace=crd-publish-openapi-2380 delete e2e-test-crd-publish-openapi-382-crds test-cr'
  I0112 16:08:06.827077 21 builder.go:146] stderr: ""
  I0112 16:08:06.827146 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-382-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 01/12/25 16:08:06.827
  I0112 16:08:06.827250 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-2380 explain e2e-test-crd-publish-openapi-382-crds'
  I0112 16:08:06.912721 21 builder.go:146] stderr: ""
  I0112 16:08:06.912839 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-382-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0112 16:08:08.282078 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2380" for this suite. @ 01/12/25 16:08:08.29
• [5.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 01/12/25 16:08:08.314
  I0112 16:08:08.314904 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename containers @ 01/12/25 16:08:08.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:08:08.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:08:08.36
  I0112 16:08:10.403329 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2822" for this suite. @ 01/12/25 16:08:10.407
• [2.108 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 01/12/25 16:08:10.423
  I0112 16:08:10.423119 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/12/25 16:08:10.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:08:10.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:08:10.467
  I0112 16:08:10.492882 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-240" for this suite. @ 01/12/25 16:08:10.497
• [0.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 01/12/25 16:08:10.521
  I0112 16:08:10.521438 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename security-context @ 01/12/25 16:08:10.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:08:10.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:08:10.556
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/12/25 16:08:10.561
  STEP: Saw pod success @ 01/12/25 16:08:14.592
  I0112 16:08:14.596126 21 output.go:196] Trying to get logs from node ubuntu pod security-context-3c1b257b-08e4-4de5-9d91-e7c8f6bb4543 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 16:08:14.601
  I0112 16:08:14.644817 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9059" for this suite. @ 01/12/25 16:08:14.648
• [4.141 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 01/12/25 16:08:14.662
  I0112 16:08:14.662518 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename cronjob @ 01/12/25 16:08:14.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:08:14.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:08:14.703
  STEP: Creating a cronjob @ 01/12/25 16:08:14.708
  STEP: creating @ 01/12/25 16:08:14.708
  STEP: getting @ 01/12/25 16:08:14.72
  STEP: listing @ 01/12/25 16:08:14.724
  STEP: watching @ 01/12/25 16:08:14.728
  I0112 16:08:14.728168 21 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 01/12/25 16:08:14.729
  STEP: cluster-wide watching @ 01/12/25 16:08:14.734
  I0112 16:08:14.734098 21 cronjob.go:382] starting watch
  STEP: patching @ 01/12/25 16:08:14.735
  STEP: updating @ 01/12/25 16:08:14.749
  I0112 16:08:14.774851 21 cronjob.go:406] waiting for watch events with expected annotations
  I0112 16:08:14.774988 21 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 01/12/25 16:08:14.775
  STEP: updating /status @ 01/12/25 16:08:14.796
  STEP: get /status @ 01/12/25 16:08:14.806
  STEP: deleting @ 01/12/25 16:08:14.81
  STEP: deleting a collection @ 01/12/25 16:08:14.841
  I0112 16:08:14.862260 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1469" for this suite. @ 01/12/25 16:08:14.865
• [0.225 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 01/12/25 16:08:14.887
  I0112 16:08:14.887862 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename deployment @ 01/12/25 16:08:14.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:08:14.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:08:14.927
  I0112 16:08:14.930776 21 deployment.go:1645] Creating simple deployment test-new-deployment
  I0112 16:08:14.950719 21 deployment.go:222] new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 01/12/25 16:08:16.975
  STEP: updating a scale subresource @ 01/12/25 16:08:16.981
  STEP: verifying the deployment Spec.Replicas was modified @ 01/12/25 16:08:17.002
  STEP: Patch a scale subresource @ 01/12/25 16:08:17.007
  I0112 16:08:17.044447 21 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-10",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2906b906-d9e4-4be5-85d2-84d011dd1946",
      ResourceVersion: (string) (len=5) "12013",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872294894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 16:08:17.054168 21 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-10",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d585c60f-714a-4d7b-a499-632065f60045",
      ResourceVersion: (string) (len=5) "12012",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872294894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "2906b906-d9e4-4be5-85d2-84d011dd1946",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 39 30 36 62 39  30 36 2d 64 39 65 34 2d  |\"2906b906-d9e4-|
              00000120  34 62 65 35 2d 38 35 64  32 2d 38 34 64 30 31 31  |4be5-85d2-84d011|
              00000130  64 64 31 39 34 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |dd1946\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 16:08:17.061193 21 deployment.go:67] Pod "test-new-deployment-64bcfc6446-dpj4s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-dpj4s",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-10",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75758eb7-2925-4c8e-bd34-2081ec289cab",
      ResourceVersion: (string) (len=5) "12015",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872294897,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "d585c60f-714a-4d7b-a499-632065f60045",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  38 35 63 36 30 66 2d 37  |d\":\"d585c60f-7|
              00000090  31 34 61 2d 34 64 37 62  2d 61 34 39 39 2d 36 33  |14a-4d7b-a499-63|
              000000a0  32 30 36 35 66 36 30 30  34 35 5c 22 7d 22 3a 7b  |2065f60045\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n97rb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n97rb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 16:08:17.064187 21 deployment.go:67] Pod "test-new-deployment-64bcfc6446-f4snb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-f4snb",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=13) "deployment-10",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "111c9ca3-6a0a-4274-bff3-ab59cad40459",
      ResourceVersion: (string) (len=5) "12003",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872294894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "29ac9074572d935b0a6acbfdb624a0020ec5b573e3fdd7589e9f8160eefbf19c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.246/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.246/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "d585c60f-714a-4d7b-a499-632065f60045",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  38 35 63 36 30 66 2d 37  |d\":\"d585c60f-7|
              00000090  31 34 61 2d 34 64 37 62  2d 61 34 39 39 2d 36 33  |14a-4d7b-a499-63|
              000000a0  32 30 36 35 66 36 30 30  34 35 5c 22 7d 22 3a 7b  |2065f60045\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  34 36 5c 22 7d 22 3a 7b  |.1.243.246\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bt6g8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bt6g8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872294894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.246",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.246"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872294895,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872294895,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2c3c7e36ea74f287704b51890a1383d8daec347d5530c841b5cd0a75fd245ebc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bt6g8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 16:08:17.069892 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-10" for this suite. @ 01/12/25 16:08:17.075
• [2.224 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 01/12/25 16:08:17.112
  I0112 16:08:17.112484 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 16:08:17.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:08:17.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:08:17.198
  STEP: Setting up server cert @ 01/12/25 16:08:17.248
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 16:08:17.881
  STEP: Deploying the webhook pod @ 01/12/25 16:08:17.898
  STEP: Wait for the deployment to be ready @ 01/12/25 16:08:17.956
  I0112 16:08:17.964217 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 16:08:19.976
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 16:08:20.004
  I0112 16:08:21.005173 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 01/12/25 16:08:21.015
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/12/25 16:08:21.015
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 01/12/25 16:08:21.037
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 01/12/25 16:08:22.065
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/12/25 16:08:22.065
  STEP: Having no error when timeout is longer than webhook latency @ 01/12/25 16:08:23.137
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/12/25 16:08:23.137
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 01/12/25 16:08:28.214
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/12/25 16:08:28.214
  I0112 16:08:33.405599 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3387" for this suite. @ 01/12/25 16:08:33.409
  STEP: Destroying namespace "webhook-markers-7285" for this suite. @ 01/12/25 16:08:33.447
• [16.358 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 01/12/25 16:08:33.471
  I0112 16:08:33.471152 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 16:08:33.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:08:33.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:08:33.518
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/12/25 16:08:33.523
  STEP: Saw pod success @ 01/12/25 16:08:37.555
  I0112 16:08:37.559804 21 output.go:196] Trying to get logs from node ubuntu pod pod-eb0e973f-04a8-41e3-a56f-3c0be87935e1 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 16:08:37.567
  I0112 16:08:37.609678 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8675" for this suite. @ 01/12/25 16:08:37.614
• [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 01/12/25 16:08:37.637
  I0112 16:08:37.637241 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 16:08:37.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:08:37.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:08:37.672
  STEP: Creating service test in namespace statefulset-6951 @ 01/12/25 16:08:37.676
  STEP: Creating statefulset ss in namespace statefulset-6951 @ 01/12/25 16:08:37.69
  I0112 16:08:37.710612 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0112 16:08:47.712476 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 01/12/25 16:08:47.723
  STEP: updating a scale subresource @ 01/12/25 16:08:47.727
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/12/25 16:08:47.742
  STEP: Patch a scale subresource @ 01/12/25 16:08:47.745
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/12/25 16:08:47.763
  I0112 16:08:47.767330 21 statefulset.go:138] Deleting all statefulset in ns statefulset-6951
  I0112 16:08:47.771994 21 rest.go:150] Scaling statefulset ss to 0
  I0112 16:08:57.810890 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 16:08:57.815554 21 rest.go:88] Deleting statefulset ss
  I0112 16:08:57.851100 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6951" for this suite. @ 01/12/25 16:08:57.856
• [20.238 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 01/12/25 16:08:57.875
  I0112 16:08:57.875546 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sched-preemption @ 01/12/25 16:08:57.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:08:57.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:08:57.92
  I0112 16:08:57.961352 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0112 16:09:57.969561 21 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/12/25 16:09:57.975
  I0112 16:09:57.975981 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/12/25 16:09:57.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:09:58.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:09:58.039
  I0112 16:09:58.081146 21 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0112 16:09:58.086857 21 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0112 16:09:58.227484 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4926" for this suite. @ 01/12/25 16:09:58.231
  I0112 16:09:58.245820 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5362" for this suite. @ 01/12/25 16:09:58.25
• [60.387 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 01/12/25 16:09:58.263
  I0112 16:09:58.263273 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/12/25 16:09:58.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:09:58.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:09:58.295
  STEP: creating a policy with variables @ 01/12/25 16:09:58.314
  STEP: waiting until the marker is denied @ 01/12/25 16:09:58.351
  STEP: testing a replicated Deployment to be allowed @ 01/12/25 16:09:58.594
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/12/25 16:09:58.632
  I0112 16:09:59.044181 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6370" for this suite. @ 01/12/25 16:09:59.048
• [0.855 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 01/12/25 16:09:59.119
  I0112 16:09:59.119626 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 16:09:59.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:09:59.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:09:59.165
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 01/12/25 16:09:59.17
  I0112 16:09:59.171147 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 01/12/25 16:10:04.622
  I0112 16:10:04.623129 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:10:05.943421 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:10:11.294147 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3116" for this suite. @ 01/12/25 16:10:11.303
• [12.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 01/12/25 16:10:11.32
  I0112 16:10:11.320265 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename gc @ 01/12/25 16:10:11.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:10:11.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:10:11.351
  STEP: create the rc @ 01/12/25 16:10:11.359
  W0112 16:10:11.371270      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/12/25 16:10:19.407
  STEP: wait for the rc to be deleted @ 01/12/25 16:10:19.634
  I0112 16:10:20.664107 21 garbage_collector.go:670] 96 pods remaining
  I0112 16:10:20.664179 21 garbage_collector.go:677] 85 pods has nil DeletionTimestamp
  I0112 16:10:20.664195 21 garbage_collector.go:678] 
  I0112 16:10:21.670393 21 garbage_collector.go:670] 71 pods remaining
  I0112 16:10:21.670493 21 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0112 16:10:21.670510 21 garbage_collector.go:678] 
  I0112 16:10:22.664329 21 garbage_collector.go:670] 62 pods remaining
  I0112 16:10:22.664400 21 garbage_collector.go:677] 59 pods has nil DeletionTimestamp
  I0112 16:10:22.664412 21 garbage_collector.go:678] 
  I0112 16:10:23.684004 21 garbage_collector.go:670] 45 pods remaining
  I0112 16:10:23.684104 21 garbage_collector.go:677] 44 pods has nil DeletionTimestamp
  I0112 16:10:23.684146 21 garbage_collector.go:678] 
  I0112 16:10:24.652688 21 garbage_collector.go:670] 33 pods remaining
  I0112 16:10:24.652765 21 garbage_collector.go:677] 32 pods has nil DeletionTimestamp
  I0112 16:10:24.652784 21 garbage_collector.go:678] 
  I0112 16:10:25.647341 21 garbage_collector.go:670] 18 pods remaining
  I0112 16:10:25.647409 21 garbage_collector.go:677] 17 pods has nil DeletionTimestamp
  I0112 16:10:25.647439 21 garbage_collector.go:678] 
  I0112 16:10:26.661004 21 garbage_collector.go:670] 4 pods remaining
  I0112 16:10:26.661100 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0112 16:10:26.661118 21 garbage_collector.go:678] 
  STEP: Gathering metrics @ 01/12/25 16:10:27.646
  W0112 16:10:27.661680      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0112 16:10:27.661761 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0112 16:10:27.662100 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6519" for this suite. @ 01/12/25 16:10:27.683
• [16.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 01/12/25 16:10:27.714
  I0112 16:10:27.714041 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 16:10:27.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:10:27.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:10:27.788
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 01/12/25 16:10:27.794
  I0112 16:10:27.795518 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:10:29.379118 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:10:36.240883 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4627" for this suite. @ 01/12/25 16:10:36.254
• [8.570 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 01/12/25 16:10:36.284
  I0112 16:10:36.284784 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename runtimeclass @ 01/12/25 16:10:36.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:10:36.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:10:36.365
  I0112 16:10:38.540355 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5809" for this suite. @ 01/12/25 16:10:38.548
• [2.299 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 01/12/25 16:10:38.584
  I0112 16:10:38.584547 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 16:10:38.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:10:38.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:10:38.658
  STEP: validating api versions @ 01/12/25 16:10:38.669
  I0112 16:10:38.669391 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-3541 api-versions'
  I0112 16:10:38.778518 21 builder.go:146] stderr: ""
  I0112 16:10:38.778577 21 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0112 16:10:38.778721 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3541" for this suite. @ 01/12/25 16:10:38.783
• [0.248 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 01/12/25 16:10:38.832
  I0112 16:10:38.832496 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 16:10:38.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:10:38.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:10:38.885
  STEP: creating a replication controller @ 01/12/25 16:10:38.892
  I0112 16:10:38.892692 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 create -f -'
  I0112 16:10:39.158485 21 builder.go:146] stderr: ""
  I0112 16:10:39.158530 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/12/25 16:10:39.158
  I0112 16:10:39.158633 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 16:10:39.282342 21 builder.go:146] stderr: ""
  I0112 16:10:39.282398 21 builder.go:147] stdout: "update-demo-nautilus-22pmr update-demo-nautilus-7p7ft "
  I0112 16:10:39.282487 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods update-demo-nautilus-22pmr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 16:10:39.397980 21 builder.go:146] stderr: ""
  I0112 16:10:39.398053 21 builder.go:147] stdout: ""
  I0112 16:10:39.398075 21 kubectl.go:2502] update-demo-nautilus-22pmr is created but not running
  I0112 16:10:44.401242 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 16:10:44.491411 21 builder.go:146] stderr: ""
  I0112 16:10:44.491534 21 builder.go:147] stdout: "update-demo-nautilus-22pmr update-demo-nautilus-7p7ft "
  I0112 16:10:44.491617 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods update-demo-nautilus-22pmr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 16:10:44.568385 21 builder.go:146] stderr: ""
  I0112 16:10:44.568485 21 builder.go:147] stdout: "true"
  I0112 16:10:44.568607 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods update-demo-nautilus-22pmr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 16:10:44.656432 21 builder.go:146] stderr: ""
  I0112 16:10:44.656488 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 16:10:44.656531 21 kubectl.go:2393] validating pod update-demo-nautilus-22pmr
  I0112 16:10:44.661837 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0112 16:10:44.662007 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 16:10:44.662027 21 kubectl.go:2520] update-demo-nautilus-22pmr is verified up and running
  I0112 16:10:44.662124 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods update-demo-nautilus-7p7ft -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 16:10:44.733705 21 builder.go:146] stderr: ""
  I0112 16:10:44.733877 21 builder.go:147] stdout: "true"
  I0112 16:10:44.733943 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods update-demo-nautilus-7p7ft -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 16:10:44.809425 21 builder.go:146] stderr: ""
  I0112 16:10:44.809473 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 16:10:44.809505 21 kubectl.go:2393] validating pod update-demo-nautilus-7p7ft
  I0112 16:10:44.823056 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0112 16:10:44.823132 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 16:10:44.823148 21 kubectl.go:2520] update-demo-nautilus-7p7ft is verified up and running
  STEP: scaling down the replication controller @ 01/12/25 16:10:44.823
  I0112 16:10:44.825185 21 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0112 16:10:44.825254 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0112 16:10:45.928347 21 builder.go:146] stderr: ""
  I0112 16:10:45.928428 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/12/25 16:10:45.928
  I0112 16:10:45.928525 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 16:10:46.014082 21 builder.go:146] stderr: ""
  I0112 16:10:46.014149 21 builder.go:147] stdout: "update-demo-nautilus-22pmr update-demo-nautilus-7p7ft "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 01/12/25 16:10:46.014
  I0112 16:10:51.014612 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 16:10:51.093248 21 builder.go:146] stderr: ""
  I0112 16:10:51.093301 21 builder.go:147] stdout: "update-demo-nautilus-22pmr "
  I0112 16:10:51.093351 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods update-demo-nautilus-22pmr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 16:10:51.171701 21 builder.go:146] stderr: ""
  I0112 16:10:51.171831 21 builder.go:147] stdout: "true"
  I0112 16:10:51.171903 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods update-demo-nautilus-22pmr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 16:10:51.248814 21 builder.go:146] stderr: ""
  I0112 16:10:51.248910 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 16:10:51.248928 21 kubectl.go:2393] validating pod update-demo-nautilus-22pmr
  I0112 16:10:51.253845 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0112 16:10:51.254001 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 16:10:51.254023 21 kubectl.go:2520] update-demo-nautilus-22pmr is verified up and running
  STEP: scaling up the replication controller @ 01/12/25 16:10:51.254
  I0112 16:10:51.256032 21 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0112 16:10:51.256182 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0112 16:10:52.359300 21 builder.go:146] stderr: ""
  I0112 16:10:52.359369 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/12/25 16:10:52.359
  I0112 16:10:52.359476 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 16:10:52.443861 21 builder.go:146] stderr: ""
  I0112 16:10:52.443965 21 builder.go:147] stdout: "update-demo-nautilus-22pmr update-demo-nautilus-wnw4n "
  I0112 16:10:52.444027 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods update-demo-nautilus-22pmr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 16:10:52.521517 21 builder.go:146] stderr: ""
  I0112 16:10:52.521557 21 builder.go:147] stdout: "true"
  I0112 16:10:52.521629 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods update-demo-nautilus-22pmr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 16:10:52.592959 21 builder.go:146] stderr: ""
  I0112 16:10:52.593046 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 16:10:52.593071 21 kubectl.go:2393] validating pod update-demo-nautilus-22pmr
  I0112 16:10:52.596865 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0112 16:10:52.596964 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 16:10:52.596980 21 kubectl.go:2520] update-demo-nautilus-22pmr is verified up and running
  I0112 16:10:52.597025 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods update-demo-nautilus-wnw4n -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 16:10:52.672791 21 builder.go:146] stderr: ""
  I0112 16:10:52.672868 21 builder.go:147] stdout: "true"
  I0112 16:10:52.672971 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods update-demo-nautilus-wnw4n -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 16:10:52.747671 21 builder.go:146] stderr: ""
  I0112 16:10:52.747809 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 16:10:52.747831 21 kubectl.go:2393] validating pod update-demo-nautilus-wnw4n
  I0112 16:10:52.755860 21 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0112 16:10:52.756255 21 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 16:10:52.756285 21 kubectl.go:2520] update-demo-nautilus-wnw4n is verified up and running
  STEP: using delete to clean up resources @ 01/12/25 16:10:52.756
  I0112 16:10:52.756373 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 delete --grace-period=0 --force -f -'
  I0112 16:10:52.866484 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 16:10:52.866557 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0112 16:10:52.866624 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get rc,svc -l name=update-demo --no-headers'
  I0112 16:10:52.979600 21 builder.go:146] stderr: "No resources found in kubectl-204 namespace.\n"
  I0112 16:10:52.979638 21 builder.go:147] stdout: ""
  I0112 16:10:52.979788 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-204 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0112 16:10:53.079434 21 builder.go:146] stderr: ""
  I0112 16:10:53.079509 21 builder.go:147] stdout: ""
  I0112 16:10:53.079673 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-204" for this suite. @ 01/12/25 16:10:53.085
• [14.270 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 01/12/25 16:10:53.103
  I0112 16:10:53.103175 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 16:10:53.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:10:53.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:10:53.152
  STEP: Counting existing ResourceQuota @ 01/12/25 16:10:53.159
  STEP: Creating a ResourceQuota @ 01/12/25 16:10:58.165
  STEP: Ensuring resource quota status is calculated @ 01/12/25 16:10:58.187
  STEP: Creating a Service @ 01/12/25 16:11:00.192
  STEP: Creating a NodePort Service @ 01/12/25 16:11:00.235
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 01/12/25 16:11:00.298
  STEP: Ensuring resource quota status captures service creation @ 01/12/25 16:11:00.354
  STEP: Deleting Services @ 01/12/25 16:11:02.36
  STEP: Ensuring resource quota status released usage @ 01/12/25 16:11:02.463
  I0112 16:11:04.468708 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7962" for this suite. @ 01/12/25 16:11:04.472
• [11.394 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 01/12/25 16:11:04.497
  I0112 16:11:04.497160 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 16:11:04.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:11:04.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:11:04.531
  STEP: Counting existing ResourceQuota @ 01/12/25 16:11:04.538
  STEP: Creating a ResourceQuota @ 01/12/25 16:11:09.544
  STEP: Ensuring resource quota status is calculated @ 01/12/25 16:11:09.557
  STEP: Creating a Pod that fits quota @ 01/12/25 16:11:11.562
  STEP: Ensuring ResourceQuota status captures the pod usage @ 01/12/25 16:11:11.6
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 01/12/25 16:11:13.608
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 01/12/25 16:11:13.612
  STEP: Ensuring a pod cannot update its resource requirements @ 01/12/25 16:11:13.617
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 01/12/25 16:11:13.622
  STEP: Deleting the pod @ 01/12/25 16:11:15.629
  STEP: Ensuring resource quota status released the pod usage @ 01/12/25 16:11:15.684
  I0112 16:11:17.691646 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8328" for this suite. @ 01/12/25 16:11:17.697
• [13.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 01/12/25 16:11:17.716
  I0112 16:11:17.716447 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sched-preemption @ 01/12/25 16:11:17.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:11:17.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:11:17.755
  I0112 16:11:17.808844 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0112 16:12:17.815828 21 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/12/25 16:12:17.821
  I0112 16:12:17.898462 21 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I0112 16:12:17.920965 21 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I0112 16:12:18.018435 21 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I0112 16:12:18.066895 21 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/12/25 16:12:18.067
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 01/12/25 16:12:20.085
  I0112 16:12:24.264980 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-497" for this suite. @ 01/12/25 16:12:24.268
• [66.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 01/12/25 16:12:24.293
  I0112 16:12:24.293119 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 16:12:24.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:12:24.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:12:24.345
  STEP: creating a ConfigMap @ 01/12/25 16:12:24.351
  STEP: fetching the ConfigMap @ 01/12/25 16:12:24.367
  STEP: patching the ConfigMap @ 01/12/25 16:12:24.371
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 01/12/25 16:12:24.386
  STEP: deleting the ConfigMap by collection with a label selector @ 01/12/25 16:12:24.39
  STEP: listing all ConfigMaps in test namespace @ 01/12/25 16:12:24.416
  I0112 16:12:24.424033 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8066" for this suite. @ 01/12/25 16:12:24.431
• [0.163 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 01/12/25 16:12:24.456
  I0112 16:12:24.456395 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 16:12:24.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:12:24.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:12:24.497
  STEP: Creating configMap configmap-8685/configmap-test-eb5a3d0a-2063-4b27-bb86-0e8a0bfbb19f @ 01/12/25 16:12:24.501
  STEP: Creating a pod to test consume configMaps @ 01/12/25 16:12:24.513
  STEP: Saw pod success @ 01/12/25 16:12:28.546
  I0112 16:12:28.553031 21 output.go:196] Trying to get logs from node ubuntu pod pod-configmaps-f9847420-46a0-4b60-bcc3-72fa96142266 container env-test: <nil>
  STEP: delete the pod @ 01/12/25 16:12:28.57
  I0112 16:12:28.608409 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8685" for this suite. @ 01/12/25 16:12:28.613
• [4.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 01/12/25 16:12:28.637
  I0112 16:12:28.637259 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 16:12:28.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:12:28.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:12:28.681
  STEP: creating the pod with failed condition @ 01/12/25 16:12:28.685
  STEP: updating the pod @ 01/12/25 16:14:28.706
  I0112 16:14:29.241351 21 pod_client.go:173] Successfully updated pod "var-expansion-b7edb718-ca55-4c2d-a9cb-26ef0055d46c"
  STEP: waiting for pod running @ 01/12/25 16:14:29.241
  STEP: deleting the pod gracefully @ 01/12/25 16:14:31.252
  I0112 16:14:31.252471 21 delete.go:62] Deleting pod "var-expansion-b7edb718-ca55-4c2d-a9cb-26ef0055d46c" in namespace "var-expansion-9867"
  I0112 16:14:31.271912 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-b7edb718-ca55-4c2d-a9cb-26ef0055d46c" to be fully deleted
  I0112 16:15:03.377540 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9867" for this suite. @ 01/12/25 16:15:03.384
• [154.767 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 01/12/25 16:15:03.404
  I0112 16:15:03.404256 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pods @ 01/12/25 16:15:03.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:15:03.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:15:03.442
  STEP: Create set of pods @ 01/12/25 16:15:03.454
  I0112 16:15:03.473857 21 pods.go:871] created test-pod-1
  I0112 16:15:03.487673 21 pods.go:871] created test-pod-2
  I0112 16:15:03.508734 21 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 01/12/25 16:15:03.508
  STEP: waiting for all pods to be deleted @ 01/12/25 16:15:05.589
  I0112 16:15:05.594255 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0112 16:15:06.594131 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0112 16:15:07.597730 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0112 16:15:08.595090 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7855" for this suite. @ 01/12/25 16:15:08.599
• [5.232 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 01/12/25 16:15:08.636
  I0112 16:15:08.636310 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 16:15:08.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:15:08.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:15:08.693
  STEP: Setting up server cert @ 01/12/25 16:15:08.767
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 16:15:09.41
  STEP: Deploying the webhook pod @ 01/12/25 16:15:09.438
  STEP: Wait for the deployment to be ready @ 01/12/25 16:15:09.473
  I0112 16:15:09.483194 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 16:15:11.495
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 16:15:11.526
  I0112 16:15:12.526404 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0112 16:15:12.534408 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1496-crds.webhook.example.com via the AdmissionRegistration API @ 01/12/25 16:15:13.056
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/12/25 16:15:13.09
  I0112 16:15:15.847444 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2280" for this suite. @ 01/12/25 16:15:15.852
  STEP: Destroying namespace "webhook-markers-2508" for this suite. @ 01/12/25 16:15:15.87
• [7.253 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 01/12/25 16:15:15.89
  I0112 16:15:15.890160 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename events @ 01/12/25 16:15:15.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:15:15.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:15:15.943
  STEP: creating a test event @ 01/12/25 16:15:15.948
  STEP: listing all events in all namespaces @ 01/12/25 16:15:15.963
  STEP: patching the test event @ 01/12/25 16:15:15.97
  STEP: fetching the test event @ 01/12/25 16:15:15.99
  STEP: updating the test event @ 01/12/25 16:15:15.997
  STEP: getting the test event @ 01/12/25 16:15:16.019
  STEP: deleting the test event @ 01/12/25 16:15:16.024
  STEP: listing all events in all namespaces @ 01/12/25 16:15:16.05
  I0112 16:15:16.055801 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8595" for this suite. @ 01/12/25 16:15:16.06
• [0.186 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 01/12/25 16:15:16.075
  I0112 16:15:16.075996 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename endpointslice @ 01/12/25 16:15:16.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:15:16.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:15:16.129
  I0112 16:15:16.146646 21 endpointslice.go:1045] Endpoints addresses: [172.17.202.11] , ports: [16443]
  I0112 16:15:16.146718 21 endpointslice.go:1075] EndpointSlices addresses: [172.17.202.11] , ports: [16443]
  I0112 16:15:16.146825 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1765" for this suite. @ 01/12/25 16:15:16.151
• [0.097 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 01/12/25 16:15:16.173
  I0112 16:15:16.173277 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename events @ 01/12/25 16:15:16.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:15:16.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:15:16.213
  STEP: Create set of events @ 01/12/25 16:15:16.218
  I0112 16:15:16.230411 21 core_events.go:198] created test-event-1
  I0112 16:15:16.240588 21 core_events.go:198] created test-event-2
  I0112 16:15:16.251422 21 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 01/12/25 16:15:16.251
  STEP: delete collection of events @ 01/12/25 16:15:16.256
  I0112 16:15:16.256330 21 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/12/25 16:15:16.3
  I0112 16:15:16.300666 21 core_events.go:230] requesting list of events to confirm quantity
  I0112 16:15:16.306693 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1794" for this suite. @ 01/12/25 16:15:16.311
• [0.152 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 01/12/25 16:15:16.325
  I0112 16:15:16.325625 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 16:15:16.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:15:16.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:15:16.359
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/12/25 16:15:16.364
  I0112 16:15:16.364282 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-7673 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0112 16:15:16.470313 21 builder.go:146] stderr: ""
  I0112 16:15:16.470380 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/12/25 16:15:16.47
  I0112 16:15:16.474641 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-7673 delete pods e2e-test-httpd-pod'
  I0112 16:15:18.026042 21 builder.go:146] stderr: ""
  I0112 16:15:18.026104 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0112 16:15:18.026210 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7673" for this suite. @ 01/12/25 16:15:18.03
• [1.729 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 01/12/25 16:15:18.054
  I0112 16:15:18.054705 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sched-pred @ 01/12/25 16:15:18.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:15:18.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:15:18.116
  I0112 16:15:18.119872 21 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0112 16:15:18.127152 21 util.go:393] Waiting for terminating namespaces to be deleted...
  I0112 16:15:18.131528 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu before test
  I0112 16:15:18.138585 21 predicates.go:957] calico-kube-controllers-759cd8b574-955cn from kube-system started at 2025-01-12 15:34:13 +0000 UTC (1 container statuses recorded)
  I0112 16:15:18.138636 21 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0112 16:15:18.138649 21 predicates.go:957] calico-node-mw2qz from kube-system started at 2025-01-12 15:34:15 +0000 UTC (1 container statuses recorded)
  I0112 16:15:18.138657 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 16:15:18.138666 21 predicates.go:957] coredns-7896dbf49-fmbgk from kube-system started at 2025-01-12 15:34:13 +0000 UTC (1 container statuses recorded)
  I0112 16:15:18.138674 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0112 16:15:18.138683 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-844ad7800bd94b40-vgdlw from sonobuoy started at 2025-01-12 15:36:51 +0000 UTC (2 container statuses recorded)
  I0112 16:15:18.138690 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 16:15:18.138702 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0112 16:15:18.138711 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu2 before test
  I0112 16:15:18.145666 21 predicates.go:957] calico-node-crr24 from kube-system started at 2025-01-12 15:34:17 +0000 UTC (1 container statuses recorded)
  I0112 16:15:18.145716 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 16:15:18.145728 21 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-12 15:36:44 +0000 UTC (1 container statuses recorded)
  I0112 16:15:18.145737 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0112 16:15:18.145746 21 predicates.go:957] sonobuoy-e2e-job-68164fd1082c40a9 from sonobuoy started at 2025-01-12 15:36:51 +0000 UTC (2 container statuses recorded)
  I0112 16:15:18.145754 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0112 16:15:18.145762 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 16:15:18.145770 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-844ad7800bd94b40-9xrjt from sonobuoy started at 2025-01-12 15:36:52 +0000 UTC (2 container statuses recorded)
  I0112 16:15:18.145778 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 16:15:18.145794 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/12/25 16:15:18.145
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/12/25 16:15:20.175
  STEP: Trying to apply a random label on the found node. @ 01/12/25 16:15:20.228
  STEP: verifying the node has the label kubernetes.io/e2e-6c6b46a4-5cc1-4e56-ae9b-ec86551555f6 95 @ 01/12/25 16:15:20.257
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 01/12/25 16:15:20.262
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.17.202.11 on the node which pod4 resides and expect not scheduled @ 01/12/25 16:15:22.285
  STEP: removing the label kubernetes.io/e2e-6c6b46a4-5cc1-4e56-ae9b-ec86551555f6 off the node ubuntu @ 01/12/25 16:20:22.301
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-6c6b46a4-5cc1-4e56-ae9b-ec86551555f6 @ 01/12/25 16:20:22.332
  I0112 16:20:22.336833 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3168" for this suite. @ 01/12/25 16:20:22.34
• [304.318 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 01/12/25 16:20:22.372
  I0112 16:20:22.372911 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename runtimeclass @ 01/12/25 16:20:22.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:20:22.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:20:22.457
  STEP: getting /apis @ 01/12/25 16:20:22.462
  STEP: getting /apis/node.k8s.io @ 01/12/25 16:20:22.467
  STEP: getting /apis/node.k8s.io/v1 @ 01/12/25 16:20:22.469
  STEP: creating @ 01/12/25 16:20:22.471
  STEP: watching @ 01/12/25 16:20:22.538
  I0112 16:20:22.538900 21 runtimeclass.go:275] starting watch
  STEP: getting @ 01/12/25 16:20:22.563
  STEP: listing @ 01/12/25 16:20:22.566
  STEP: patching @ 01/12/25 16:20:22.569
  STEP: updating @ 01/12/25 16:20:22.588
  I0112 16:20:22.609829 21 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 01/12/25 16:20:22.61
  STEP: deleting a collection @ 01/12/25 16:20:22.643
  I0112 16:20:22.692127 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5028" for this suite. @ 01/12/25 16:20:22.695
• [0.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 01/12/25 16:20:22.718
  I0112 16:20:22.718240 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sched-pred @ 01/12/25 16:20:22.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:20:22.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:20:22.773
  I0112 16:20:22.785157 21 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0112 16:20:22.792314 21 util.go:393] Waiting for terminating namespaces to be deleted...
  I0112 16:20:22.795698 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu before test
  I0112 16:20:22.802370 21 predicates.go:957] calico-kube-controllers-759cd8b574-955cn from kube-system started at 2025-01-12 15:34:13 +0000 UTC (1 container statuses recorded)
  I0112 16:20:22.802417 21 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0112 16:20:22.802430 21 predicates.go:957] calico-node-mw2qz from kube-system started at 2025-01-12 15:34:15 +0000 UTC (1 container statuses recorded)
  I0112 16:20:22.802438 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 16:20:22.802447 21 predicates.go:957] coredns-7896dbf49-fmbgk from kube-system started at 2025-01-12 15:34:13 +0000 UTC (1 container statuses recorded)
  I0112 16:20:22.802455 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0112 16:20:22.802463 21 predicates.go:957] pod4 from sched-pred-3168 started at 2025-01-12 16:15:20 +0000 UTC (1 container statuses recorded)
  I0112 16:20:22.802470 21 predicates.go:959] 	Container agnhost ready: true, restart count 0
  I0112 16:20:22.802478 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-844ad7800bd94b40-vgdlw from sonobuoy started at 2025-01-12 15:36:51 +0000 UTC (2 container statuses recorded)
  I0112 16:20:22.802500 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 16:20:22.802508 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0112 16:20:22.802517 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu2 before test
  I0112 16:20:22.810043 21 predicates.go:957] calico-node-crr24 from kube-system started at 2025-01-12 15:34:17 +0000 UTC (1 container statuses recorded)
  I0112 16:20:22.810092 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 16:20:22.810106 21 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-12 15:36:44 +0000 UTC (1 container statuses recorded)
  I0112 16:20:22.810115 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0112 16:20:22.810123 21 predicates.go:957] sonobuoy-e2e-job-68164fd1082c40a9 from sonobuoy started at 2025-01-12 15:36:51 +0000 UTC (2 container statuses recorded)
  I0112 16:20:22.810131 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0112 16:20:22.810139 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 16:20:22.810148 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-844ad7800bd94b40-9xrjt from sonobuoy started at 2025-01-12 15:36:52 +0000 UTC (2 container statuses recorded)
  I0112 16:20:22.810155 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 16:20:22.810163 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ubuntu @ 01/12/25 16:20:28.87
  STEP: verifying the node has the label node ubuntu2 @ 01/12/25 16:20:28.891
  I0112 16:20:28.905444 21 predicates.go:372] Pod calico-kube-controllers-759cd8b574-955cn requesting resource cpu=0m on Node ubuntu
  I0112 16:20:28.905528 21 predicates.go:372] Pod calico-node-crr24 requesting resource cpu=250m on Node ubuntu2
  I0112 16:20:28.905548 21 predicates.go:372] Pod calico-node-mw2qz requesting resource cpu=250m on Node ubuntu
  I0112 16:20:28.905563 21 predicates.go:372] Pod coredns-7896dbf49-fmbgk requesting resource cpu=100m on Node ubuntu
  I0112 16:20:28.905579 21 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ubuntu2
  I0112 16:20:28.905596 21 predicates.go:372] Pod sonobuoy-e2e-job-68164fd1082c40a9 requesting resource cpu=0m on Node ubuntu2
  I0112 16:20:28.905610 21 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-844ad7800bd94b40-9xrjt requesting resource cpu=0m on Node ubuntu2
  I0112 16:20:28.905625 21 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-844ad7800bd94b40-vgdlw requesting resource cpu=0m on Node ubuntu
  STEP: Starting Pods to consume most of the cluster CPU. @ 01/12/25 16:20:28.905
  I0112 16:20:28.905688 21 predicates.go:382] Creating a pod which consumes cpu=2555m on Node ubuntu
  I0112 16:20:28.932506 21 predicates.go:382] Creating a pod which consumes cpu=2625m on Node ubuntu2
  STEP: Creating another pod that requires unavailable amount of CPU. @ 01/12/25 16:20:30.959
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6f8d4ad-de73-461f-a258-7219ad2d1557.1819fe622d952475], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5355/filler-pod-a6f8d4ad-de73-461f-a258-7219ad2d1557 to ubuntu] @ 01/12/25 16:20:30.963
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6f8d4ad-de73-461f-a258-7219ad2d1557.1819fe625758abbe], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/12/25 16:20:30.963
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6f8d4ad-de73-461f-a258-7219ad2d1557.1819fe625b5b2529], Reason = [Created], Message = [Created container filler-pod-a6f8d4ad-de73-461f-a258-7219ad2d1557] @ 01/12/25 16:20:30.963
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6f8d4ad-de73-461f-a258-7219ad2d1557.1819fe6262da8e89], Reason = [Started], Message = [Started container filler-pod-a6f8d4ad-de73-461f-a258-7219ad2d1557] @ 01/12/25 16:20:30.963
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d5651ed4-0ec5-47f4-b7b0-efed10aa2bc4.1819fe622e6a372f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5355/filler-pod-d5651ed4-0ec5-47f4-b7b0-efed10aa2bc4 to ubuntu2] @ 01/12/25 16:20:30.963
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d5651ed4-0ec5-47f4-b7b0-efed10aa2bc4.1819fe625ded7377], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/12/25 16:20:30.963
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d5651ed4-0ec5-47f4-b7b0-efed10aa2bc4.1819fe62617edb7a], Reason = [Created], Message = [Created container filler-pod-d5651ed4-0ec5-47f4-b7b0-efed10aa2bc4] @ 01/12/25 16:20:30.963
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d5651ed4-0ec5-47f4-b7b0-efed10aa2bc4.1819fe6268ad0f15], Reason = [Started], Message = [Started container filler-pod-d5651ed4-0ec5-47f4-b7b0-efed10aa2bc4] @ 01/12/25 16:20:30.963
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1819fe62a61ae978], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 01/12/25 16:20:30.993
  STEP: removing the label node off the node ubuntu @ 01/12/25 16:20:31.985
  STEP: verifying the node doesn't have the label node @ 01/12/25 16:20:32.007
  STEP: removing the label node off the node ubuntu2 @ 01/12/25 16:20:32.015
  STEP: verifying the node doesn't have the label node @ 01/12/25 16:20:32.044
  I0112 16:20:32.050167 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5355" for this suite. @ 01/12/25 16:20:32.055
• [9.364 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 01/12/25 16:20:32.082
  I0112 16:20:32.082339 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/12/25 16:20:32.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:20:32.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:20:32.124
  STEP: fetching the /apis discovery document @ 01/12/25 16:20:32.131
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 01/12/25 16:20:32.133
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 01/12/25 16:20:32.133
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 01/12/25 16:20:32.133
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 01/12/25 16:20:32.136
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 01/12/25 16:20:32.136
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 01/12/25 16:20:32.137
  I0112 16:20:32.138238 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9749" for this suite. @ 01/12/25 16:20:32.143
• [0.079 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 01/12/25 16:20:32.161
  I0112 16:20:32.161121 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename deployment @ 01/12/25 16:20:32.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:20:32.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:20:32.199
  I0112 16:20:32.204501 21 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0112 16:20:32.215727 21 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0112 16:20:32.225352 21 deployment.go:222] new replicaset for deployment "test-recreate-deployment" is yet to be created
  I0112 16:20:34.234179 21 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0112 16:20:34.237396 21 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0112 16:20:34.262884 21 deployment.go:313] Updating deployment test-recreate-deployment
  I0112 16:20:34.262974 21 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0112 16:20:34.540310 21 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4828",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af5fbd46-7060-425c-b5c8-458a1ec29286",
      ResourceVersion: (string) (len=5) "15712",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872295632,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295632,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 16:20:34.546361 21 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4828",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69fed502-8772-4443-a1b4-0fdd50be55e0",
      ResourceVersion: (string) (len=5) "15709",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872295634,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "af5fbd46-7060-425c-b5c8-458a1ec29286",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 66 35 66 62 64  34 36 2d 37 30 36 30 2d  |\"af5fbd46-7060-|
              00000120  34 32 35 63 2d 62 35 63  38 2d 34 35 38 61 31 65  |425c-b5c8-458a1e|
              00000130  63 32 39 32 38 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c29286\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 16:20:34.547952 21 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0112 16:20:34.548155 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4828",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "103413f3-5755-40c9-b3d4-1f4c995c308d",
      ResourceVersion: (string) (len=5) "15700",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872295632,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "af5fbd46-7060-425c-b5c8-458a1ec29286",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 66 35 66 62 64  34 36 2d 37 30 36 30 2d  |\"af5fbd46-7060-|
              00000120  34 32 35 63 2d 62 35 63  38 2d 34 35 38 61 31 65  |425c-b5c8-458a1e|
              00000130  63 32 39 32 38 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c29286\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 16:20:34.554008 21 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-qwt88" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-qwt88",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-4828",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91916ab2-717b-4bb1-8ec1-e72582abc442",
      ResourceVersion: (string) (len=5) "15711",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872295634,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "69fed502-8772-4443-a1b4-0fdd50be55e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 39  66 65 64 35 30 32 2d 38  |d\":\"69fed502-8|
              00000090  37 37 32 2d 34 34 34 33  2d 61 31 62 34 2d 30 66  |772-4443-a1b4-0f|
              000000a0  64 64 35 30 62 65 35 35  65 30 5c 22 7d 22 3a 7b  |dd50be55e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-44hxp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-44hxp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872295634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872295634,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-44hxp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 16:20:34.557374 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4828" for this suite. @ 01/12/25 16:20:34.561
• [2.415 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 01/12/25 16:20:34.576
  I0112 16:20:34.576701 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename init-container @ 01/12/25 16:20:34.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:20:34.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:20:34.618
  STEP: creating the pod @ 01/12/25 16:20:34.623
  I0112 16:20:34.623659 21 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0112 16:21:22.008866 21 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ca12bfb7-7518-4cfd-93ae-0bc22dac2b6f", GenerateName:"", Namespace:"init-container-5774", SelfLink:"", UID:"849782b1-00e1-416d-ac7e-0aea5de5455a", ResourceVersion:"15873", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 20, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"623647181"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"fda59ade10de2b703f92940b67fca26e3d8db224ad1a46a1fbc7ca2152ce4d4b", "cni.projectcalico.org/podIP":"10.1.243.251/32", "cni.projectcalico.org/podIPs":"10.1.243.251/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 20, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429a2a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 20, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429a318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 21, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00429a360), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-5hrbj", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004ae01a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5hrbj", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5hrbj", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5hrbj", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0044be708), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ubuntu", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0004be180), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0044be790)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0044be7b0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0044be7b8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0044be7bc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004a5c180), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 12, 16, 20, 35, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 12, 16, 20, 34, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 12, 16, 20, 34, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 12, 16, 20, 34, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 12, 16, 20, 34, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.17.202.11", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.17.202.11"}}, PodIP:"10.1.243.251", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.1.243.251"}}, StartTime:time.Date(2025, time.January, 12, 16, 20, 34, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000036310)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0000363f0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://a45dc178fa701964dfda4b1454b9f90b2bdad1f0de4c59ab212ec92af1d5504b", Started:(*bool)(0xc0044be86a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-5hrbj", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004a5c1f0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004ae0200), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0044be87d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-5hrbj", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004a5c200)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004ae01e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0044be83f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-5hrbj", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004a5c190)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0112 16:21:22.009144 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5774" for this suite. @ 01/12/25 16:21:22.015
• [47.456 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 01/12/25 16:21:22.033
  I0112 16:21:22.033597 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 16:21:22.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:21:22.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:21:22.075
  I0112 16:21:22.160125 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8103" for this suite. @ 01/12/25 16:21:22.163
• [0.144 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 01/12/25 16:21:22.177
  I0112 16:21:22.177472 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 16:21:22.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:21:22.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:21:22.221
  I0112 16:21:44.315392 21 container_probe.go:92] Container started at 2025-01-12 16:21:23 +0000 UTC, pod became ready at 2025-01-12 16:21:42 +0000 UTC
  I0112 16:21:44.315560 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7231" for this suite. @ 01/12/25 16:21:44.319
• [22.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 01/12/25 16:21:44.337
  I0112 16:21:44.337818 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pods @ 01/12/25 16:21:44.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:21:44.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:21:44.384
  STEP: Create a pod @ 01/12/25 16:21:44.39
  STEP: patching /status @ 01/12/25 16:21:46.424
  I0112 16:21:46.440426 21 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0112 16:21:46.440698 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7259" for this suite. @ 01/12/25 16:21:46.444
• [2.125 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 01/12/25 16:21:46.462
  I0112 16:21:46.462523 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/12/25 16:21:46.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:21:46.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:21:46.498
  STEP: create the container to handle the HTTPGet hook request. @ 01/12/25 16:21:46.51
  STEP: create the pod with lifecycle hook @ 01/12/25 16:21:48.541
  STEP: check poststart hook @ 01/12/25 16:21:50.583
  STEP: delete the pod with lifecycle hook @ 01/12/25 16:21:50.6
  I0112 16:21:54.636546 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7999" for this suite. @ 01/12/25 16:21:54.643
• [8.207 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 01/12/25 16:21:54.669
  I0112 16:21:54.669395 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 16:21:54.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:21:54.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:21:54.729
  STEP: Creating the pod @ 01/12/25 16:21:54.732
  I0112 16:21:57.300890 21 pod_client.go:173] Successfully updated pod "annotationupdatecf2b92e8-30dd-4dbf-a336-dafa162c0727"
  I0112 16:22:01.329199 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2582" for this suite. @ 01/12/25 16:22:01.333
• [6.686 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 01/12/25 16:22:01.356
  I0112 16:22:01.356113 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 16:22:01.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:22:01.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:22:01.4
  I0112 16:22:01.404360 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  W0112 16:22:03.957682      21 warnings.go:70] unknown field "alpha"
  W0112 16:22:03.957760      21 warnings.go:70] unknown field "beta"
  W0112 16:22:03.957768      21 warnings.go:70] unknown field "delta"
  W0112 16:22:03.957793      21 warnings.go:70] unknown field "epsilon"
  W0112 16:22:03.957800      21 warnings.go:70] unknown field "gamma"
  I0112 16:22:04.523868 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1714" for this suite. @ 01/12/25 16:22:04.528
• [3.194 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 01/12/25 16:22:04.549
  I0112 16:22:04.549917 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 16:22:04.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:22:04.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:22:04.592
  STEP: Setting up server cert @ 01/12/25 16:22:04.661
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 16:22:04.933
  STEP: Deploying the webhook pod @ 01/12/25 16:22:04.954
  STEP: Wait for the deployment to be ready @ 01/12/25 16:22:04.991
  I0112 16:22:04.998625 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 16:22:07.017
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 16:22:07.072
  I0112 16:22:08.073181 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/12/25 16:22:08.081
  STEP: verifying the validating webhook match conditions @ 01/12/25 16:22:08.105
  STEP: updating the validating webhook match conditions @ 01/12/25 16:22:08.109
  STEP: verifying the validating webhook match conditions @ 01/12/25 16:22:08.124
  I0112 16:22:08.255267 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7725" for this suite. @ 01/12/25 16:22:08.26
  STEP: Destroying namespace "webhook-markers-5175" for this suite. @ 01/12/25 16:22:08.277
• [3.757 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 01/12/25 16:22:08.307
  I0112 16:22:08.307885 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 16:22:08.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:22:08.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:22:08.357
  I0112 16:22:08.363764 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  W0112 16:22:10.918401      21 warnings.go:70] unknown field "alpha"
  W0112 16:22:10.918461      21 warnings.go:70] unknown field "beta"
  W0112 16:22:10.918474      21 warnings.go:70] unknown field "delta"
  W0112 16:22:10.918483      21 warnings.go:70] unknown field "epsilon"
  W0112 16:22:10.918491      21 warnings.go:70] unknown field "gamma"
  I0112 16:22:11.495271 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2010" for this suite. @ 01/12/25 16:22:11.499
• [3.208 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 01/12/25 16:22:11.516
  I0112 16:22:11.516689 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 16:22:11.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:22:11.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:22:11.55
  I0112 16:22:11.589550 21 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/12/25 16:22:11.603
  I0112 16:22:11.612288 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:22:11.612368 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 16:22:12.614805 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:22:12.614869 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  I0112 16:22:13.612229 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 16:22:13.612300 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 01/12/25 16:22:13.628
  STEP: Check that daemon pods images are updated. @ 01/12/25 16:22:13.647
  I0112 16:22:13.651464 21 daemon_set.go:1193] Wrong image for pod: daemon-set-7888p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0112 16:22:13.651556 21 daemon_set.go:1193] Wrong image for pod: daemon-set-rm6qx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0112 16:22:14.653322 21 daemon_set.go:1193] Wrong image for pod: daemon-set-7888p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0112 16:22:15.652618 21 daemon_set.go:1193] Wrong image for pod: daemon-set-7888p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0112 16:22:15.652709 21 daemon_set.go:1198] Pod daemon-set-gc9wj is not available
  I0112 16:22:16.651318 21 daemon_set.go:1193] Wrong image for pod: daemon-set-7888p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0112 16:22:16.651393 21 daemon_set.go:1198] Pod daemon-set-gc9wj is not available
  I0112 16:22:17.652657 21 daemon_set.go:1198] Pod daemon-set-5554d is not available
  I0112 16:22:18.651728 21 daemon_set.go:1198] Pod daemon-set-5554d is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 01/12/25 16:22:18.655
  I0112 16:22:18.662351 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 16:22:18.662402 21 fixtures.go:130] Node ubuntu2 is running 0 daemon pod, expected 1
  I0112 16:22:19.667496 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 16:22:19.667565 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/12/25 16:22:19.69
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4116, will wait for the garbage collector to delete the pods @ 01/12/25 16:22:19.69
  I0112 16:22:19.762122 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 17.217676ms
  I0112 16:22:19.862364 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.239592ms
  I0112 16:22:22.268547 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:22:22.268599 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0112 16:22:22.272896 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16365"},"items":null}

  I0112 16:22:22.277181 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16365"},"items":null}

  I0112 16:22:22.290435 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4116" for this suite. @ 01/12/25 16:22:22.295
• [10.794 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 01/12/25 16:22:22.31
  I0112 16:22:22.310920 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename taint-multiple-pods @ 01/12/25 16:22:22.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:22:22.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:22:22.352
  I0112 16:22:22.356827 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0112 16:23:22.357411 21 util.go:393] Waiting for terminating namespaces to be deleted...
  I0112 16:23:22.361873 21 taints.go:144] Starting informer...
  STEP: Starting pods... @ 01/12/25 16:23:22.362
  I0112 16:23:22.590823 21 taints.go:463] Pod1 is running on ubuntu. Tainting Node
  I0112 16:23:24.833131 21 taints.go:471] Pod2 is running on ubuntu. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/12/25 16:23:24.833
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/12/25 16:23:24.854
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 01/12/25 16:23:24.858
  I0112 16:23:31.429072 21 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0112 16:23:50.789857 21 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/12/25 16:23:50.817
  I0112 16:23:50.821839 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-1775" for this suite. @ 01/12/25 16:23:50.825
• [88.532 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 01/12/25 16:23:50.842
  I0112 16:23:50.842861 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 16:23:50.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:23:50.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:23:50.875
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/12/25 16:23:50.88
  STEP: Saw pod success @ 01/12/25 16:23:54.916
  I0112 16:23:54.921423 21 output.go:196] Trying to get logs from node ubuntu pod pod-9d0bb73b-9faa-4896-99e6-bd778ecdfbb1 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 16:23:54.935
  I0112 16:23:54.988802 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6936" for this suite. @ 01/12/25 16:23:54.992
• [4.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 01/12/25 16:23:55.006
  I0112 16:23:55.006944 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 16:23:55.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:23:55.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:23:55.058
  STEP: Creating configMap with name configmap-test-upd-8512e23b-cbdd-4f50-880b-fb4c73b25daf @ 01/12/25 16:23:55.065
  STEP: Creating the pod @ 01/12/25 16:23:55.078
  STEP: Updating configmap configmap-test-upd-8512e23b-cbdd-4f50-880b-fb4c73b25daf @ 01/12/25 16:23:57.115
  STEP: waiting to observe update in volume @ 01/12/25 16:23:57.133
  I0112 16:23:59.148499 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2945" for this suite. @ 01/12/25 16:23:59.153
• [4.172 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 01/12/25 16:23:59.179
  I0112 16:23:59.179410 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 16:23:59.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:23:59.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:23:59.223
  STEP: creating service in namespace services-9743 @ 01/12/25 16:23:59.228
  STEP: creating service affinity-nodeport-transition in namespace services-9743 @ 01/12/25 16:23:59.228
  STEP: creating replication controller affinity-nodeport-transition in namespace services-9743 @ 01/12/25 16:23:59.265
  I0112 16:23:59.321415      21 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-9743, replica count: 3
  I0112 16:24:02.373901      21 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 16:24:02.388250 21 resource.go:361] Creating new exec pod
  I0112 16:24:05.416153 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9743 exec execpod-affinitydk8jk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0112 16:24:05.604408 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0112 16:24:05.604446 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 16:24:05.604531 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9743 exec execpod-affinitydk8jk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.131 80'
  I0112 16:24:05.743879 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.131 80\nConnection to 10.152.183.131 80 port [tcp/http] succeeded!\n"
  I0112 16:24:05.743970 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 16:24:05.744070 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9743 exec execpod-affinitydk8jk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 30724'
  I0112 16:24:05.902689 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 30724\nConnection to 172.17.202.11 30724 port [tcp/*] succeeded!\n"
  I0112 16:24:05.902728 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 16:24:05.902814 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9743 exec execpod-affinitydk8jk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.207.20 30724'
  I0112 16:24:06.055151 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.207.20 30724\nConnection to 172.17.207.20 30724 port [tcp/*] succeeded!\n"
  I0112 16:24:06.055230 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 16:24:06.075317 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9743 exec execpod-affinitydk8jk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.17.202.11:30724/ ; done'
  I0112 16:24:06.300492 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n"
  I0112 16:24:06.300548 21 builder.go:147] stdout: "\naffinity-nodeport-transition-blbz8\naffinity-nodeport-transition-td5h5\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-td5h5\naffinity-nodeport-transition-blbz8\naffinity-nodeport-transition-td5h5\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-blbz8\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-blbz8\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-td5h5\naffinity-nodeport-transition-td5h5\naffinity-nodeport-transition-blbz8\naffinity-nodeport-transition-qq72d"
  I0112 16:24:06.300571 21 service.go:242] Received response from host: affinity-nodeport-transition-blbz8
  I0112 16:24:06.300588 21 service.go:242] Received response from host: affinity-nodeport-transition-td5h5
  I0112 16:24:06.300604 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.300622 21 service.go:242] Received response from host: affinity-nodeport-transition-td5h5
  I0112 16:24:06.300643 21 service.go:242] Received response from host: affinity-nodeport-transition-blbz8
  I0112 16:24:06.300663 21 service.go:242] Received response from host: affinity-nodeport-transition-td5h5
  I0112 16:24:06.300679 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.300694 21 service.go:242] Received response from host: affinity-nodeport-transition-blbz8
  I0112 16:24:06.300710 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.300724 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.300739 21 service.go:242] Received response from host: affinity-nodeport-transition-blbz8
  I0112 16:24:06.300754 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.300769 21 service.go:242] Received response from host: affinity-nodeport-transition-td5h5
  I0112 16:24:06.300784 21 service.go:242] Received response from host: affinity-nodeport-transition-td5h5
  I0112 16:24:06.300798 21 service.go:242] Received response from host: affinity-nodeport-transition-blbz8
  I0112 16:24:06.300812 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.317922 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9743 exec execpod-affinitydk8jk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.17.202.11:30724/ ; done'
  I0112 16:24:06.546642 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30724/\n"
  I0112 16:24:06.546714 21 builder.go:147] stdout: "\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d\naffinity-nodeport-transition-qq72d"
  I0112 16:24:06.546743 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.546766 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.546862 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.546878 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.546894 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.546909 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.546920 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.546963 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.546973 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.546982 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.546991 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.547001 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.547010 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.547019 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.547030 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.547038 21 service.go:242] Received response from host: affinity-nodeport-transition-qq72d
  I0112 16:24:06.547095 21 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-9743, will wait for the garbage collector to delete the pods @ 01/12/25 16:24:06.59
  I0112 16:24:06.681981 21 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 32.570628ms
  I0112 16:24:06.782440 21 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.505953ms
  I0112 16:24:09.769817 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9743" for this suite. @ 01/12/25 16:24:09.776
• [10.618 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 01/12/25 16:24:09.798
  I0112 16:24:09.798158 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 16:24:09.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:24:09.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:24:09.847
  STEP: Creating resourceQuota "e2e-rq-status-wbqhx" @ 01/12/25 16:24:09.855
  I0112 16:24:09.869053 21 resource_quota.go:1102] Resource quota "e2e-rq-status-wbqhx" reports spec: hard cpu limit of 500m
  I0112 16:24:09.869111 21 resource_quota.go:1104] Resource quota "e2e-rq-status-wbqhx" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-wbqhx" /status @ 01/12/25 16:24:09.869
  STEP: Confirm /status for "e2e-rq-status-wbqhx" resourceQuota via watch @ 01/12/25 16:24:09.911
  I0112 16:24:09.914614 21 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-wbqhx" in namespace "resourcequota-1933" with hard status: v1.ResourceList(nil)
  I0112 16:24:09.914840 21 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-wbqhx" in namespace "resourcequota-1933" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0112 16:24:09.914897 21 resource_quota.go:1141] ResourceQuota "e2e-rq-status-wbqhx" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 01/12/25 16:24:09.919
  I0112 16:24:09.940025 21 resource_quota.go:1152] Resource quota "e2e-rq-status-wbqhx" reports spec: hard cpu limit of 1
  I0112 16:24:09.940080 21 resource_quota.go:1153] Resource quota "e2e-rq-status-wbqhx" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-wbqhx" /status @ 01/12/25 16:24:09.94
  STEP: Confirm /status for "e2e-rq-status-wbqhx" resourceQuota via watch @ 01/12/25 16:24:09.961
  I0112 16:24:09.964730 21 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-wbqhx" in namespace "resourcequota-1933" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0112 16:24:09.964901 21 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-wbqhx" in namespace "resourcequota-1933" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0112 16:24:09.964963 21 resource_quota.go:1185] ResourceQuota "e2e-rq-status-wbqhx" /status was patched
  STEP: Get "e2e-rq-status-wbqhx" /status @ 01/12/25 16:24:09.965
  I0112 16:24:09.971441 21 resource_quota.go:1196] Resourcequota "e2e-rq-status-wbqhx" reports status: hard cpu of 1
  I0112 16:24:09.971545 21 resource_quota.go:1198] Resourcequota "e2e-rq-status-wbqhx" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-wbqhx" /status before checking Spec is unchanged @ 01/12/25 16:24:09.977
  I0112 16:24:09.994111 21 resource_quota.go:1218] Resourcequota "e2e-rq-status-wbqhx" reports status: hard cpu of 2
  I0112 16:24:09.994222 21 resource_quota.go:1220] Resourcequota "e2e-rq-status-wbqhx" reports status: hard memory of 2Gi
  I0112 16:24:09.997266 21 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-wbqhx" in namespace "resourcequota-1933" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0112 16:24:10.003327 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044bcc18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044bcc48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044bcc78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:24:15.003922 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e3d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:24:20.008756 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044bcdb0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044bcde0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044bce10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:24:25.005110 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044bcf30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044bcf60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044bcf90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:24:30.004820 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e5a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e5d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:24:35.005444 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044bd0b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044bd0e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044bd128), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:24:40.006609 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e7e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e810), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:24:45.007268 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bcdb0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bcdf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bce28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:24:50.005983 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc0d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:24:55.007565 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e0a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:25:00.003834 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc330), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc3a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc3d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:25:05.005616 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e2d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:25:10.005385 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc5b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc5e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:25:15.004793 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e4b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e4f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:25:20.007391 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc7c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:25:25.005801 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e6c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e6f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e768), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:25:30.002906 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e8a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e8e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e978), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:25:35.004736 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a0d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:25:40.005119 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388eae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388eb28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388eb70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:25:45.003369 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a210), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a288), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:25:50.009561 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a3a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a3f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:25:55.004255 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388ecf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388ed20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388ed68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:26:00.003111 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc990), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc9c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bca08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:26:05.007082 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bcb70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bcba0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bcbd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:26:10.003473 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a540), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a570), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a5a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:26:15.005433 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bcf30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bcf60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bcf90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:26:20.007844 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a6c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a6f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:26:25.005036 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388ef00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388ef78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388efa8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:26:30.007656 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a888), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a8b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a8e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:26:35.007776 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f140), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f188), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f1b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:26:40.004327 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f308), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f350), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f380), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:26:45.002591 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bd0e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bd128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bd158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:26:50.002788 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a090), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:26:55.005021 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a1e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a210), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:27:00.004875 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e0a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:27:05.006673 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a3a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a3f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:27:10.005917 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e2d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:27:15.009821 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a570), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:27:20.007027 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e4b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e4f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:27:25.007587 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc0d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:27:30.004522 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e6c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e6f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e738), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:27:35.005159 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc3a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc3d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:27:40.006183 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e8b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388e930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:27:45.004522 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388ea98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388eac8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388eaf8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:27:50.004796 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a6c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a6f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:27:55.002763 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388ec90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388ecc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388ed08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:28:00.005334 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a858), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a888), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a8b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:28:05.007072 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388ee88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388eed0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388ef48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:28:10.006208 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451a9c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451aa08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00451aa68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:28:15.005161 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f0f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:28:20.008516 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc5e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc630), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:28:25.004138 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f2f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f338), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f368), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:28:30.006417 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc7c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039bc858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:28:35.004789 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wbqhx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wbqhx", GenerateName:"", Namespace:"resourcequota-1933", SelfLink:"", UID:"d894387c-da9c-4196-8c35-665af7c35831", ResourceVersion:"16882", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wbqhx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f4b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 16, 24, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00388f578), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 16:28:40.004155 21 resource_quota.go:1260] ResourceQuota "e2e-rq-status-wbqhx" Spec was unchanged and /status reset
  I0112 16:28:40.004464 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1933" for this suite. @ 01/12/25 16:28:40.011
• [270.230 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 01/12/25 16:28:40.028
  I0112 16:28:40.028978 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename namespaces @ 01/12/25 16:28:40.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:28:40.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:28:40.071
  STEP: Creating a test namespace @ 01/12/25 16:28:40.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:28:40.14
  STEP: Creating a service in the namespace @ 01/12/25 16:28:40.144
  STEP: Deleting the namespace @ 01/12/25 16:28:40.168
  STEP: Waiting for the namespace to be removed. @ 01/12/25 16:28:40.218
  STEP: Recreating the namespace @ 01/12/25 16:28:46.224
  STEP: Verifying there is no service in the namespace @ 01/12/25 16:28:46.255
  I0112 16:28:46.260176 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3987" for this suite. @ 01/12/25 16:28:46.264
  STEP: Destroying namespace "nsdeletetest-8978" for this suite. @ 01/12/25 16:28:46.277
  I0112 16:28:46.281581 21 framework.go:370] Namespace nsdeletetest-8978 was already deleted
  STEP: Destroying namespace "nsdeletetest-7064" for this suite. @ 01/12/25 16:28:46.281
• [6.275 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 01/12/25 16:28:46.304
  I0112 16:28:46.304056 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 16:28:46.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:28:46.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:28:46.337
  STEP: Creating a pod to test service account token:  @ 01/12/25 16:28:46.341
  STEP: Saw pod success @ 01/12/25 16:28:50.382
  I0112 16:28:50.386153 21 output.go:196] Trying to get logs from node ubuntu pod test-pod-b788911f-d352-4cb0-8b28-a80ba7061144 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 16:28:50.398
  I0112 16:28:50.432151 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6378" for this suite. @ 01/12/25 16:28:50.436
• [4.155 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 01/12/25 16:28:50.459
  I0112 16:28:50.459186 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 16:28:50.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:28:50.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:28:50.495
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/12/25 16:28:50.5
  STEP: Saw pod success @ 01/12/25 16:28:54.533
  I0112 16:28:54.538598 21 output.go:196] Trying to get logs from node ubuntu pod pod-6d9dfee9-e71b-4862-993b-e6306f01ecde container test-container: <nil>
  STEP: delete the pod @ 01/12/25 16:28:54.548
  I0112 16:28:54.595073 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5813" for this suite. @ 01/12/25 16:28:54.598
• [4.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 01/12/25 16:28:54.624
  I0112 16:28:54.624122 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 16:28:54.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:28:54.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:28:54.673
  STEP: Creating configMap with name configmap-test-volume-map-01e21b5d-99b8-4292-83d5-2b1d2aa02cd5 @ 01/12/25 16:28:54.677
  STEP: Creating a pod to test consume configMaps @ 01/12/25 16:28:54.697
  STEP: Saw pod success @ 01/12/25 16:28:58.73
  I0112 16:28:58.733997 21 output.go:196] Trying to get logs from node ubuntu pod pod-configmaps-0503e940-ca46-4765-b38b-b5cda228bfcd container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 16:28:58.74
  I0112 16:28:58.772343 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-801" for this suite. @ 01/12/25 16:28:58.776
• [4.169 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 01/12/25 16:28:58.792
  I0112 16:28:58.792811 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename subpath @ 01/12/25 16:28:58.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:28:58.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:28:58.827
  STEP: Setting up data @ 01/12/25 16:28:58.831
  STEP: Creating pod pod-subpath-test-secret-t72t @ 01/12/25 16:28:58.856
  STEP: Creating a pod to test atomic-volume-subpath @ 01/12/25 16:28:58.856
  STEP: Saw pod success @ 01/12/25 16:29:22.94
  I0112 16:29:22.943998 21 output.go:196] Trying to get logs from node ubuntu pod pod-subpath-test-secret-t72t container test-container-subpath-secret-t72t: <nil>
  STEP: delete the pod @ 01/12/25 16:29:22.951
  STEP: Deleting pod pod-subpath-test-secret-t72t @ 01/12/25 16:29:22.993
  I0112 16:29:22.993493 21 delete.go:62] Deleting pod "pod-subpath-test-secret-t72t" in namespace "subpath-4506"
  I0112 16:29:22.996833 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4506" for this suite. @ 01/12/25 16:29:23.001
• [24.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 01/12/25 16:29:23.015
  I0112 16:29:23.015779 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 16:29:23.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:29:23.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:29:23.063
  STEP: Creating service test in namespace statefulset-187 @ 01/12/25 16:29:23.075
  STEP: Creating a new StatefulSet @ 01/12/25 16:29:23.098
  I0112 16:29:23.146421 21 wait.go:40] Found 0 stateful pods, waiting for 3
  I0112 16:29:33.147504 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0112 16:29:33.147566 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0112 16:29:33.147595 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0112 16:29:33.161395 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-187 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 16:29:33.331243 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 16:29:33.331324 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 16:29:33.331352 21 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/12/25 16:29:43.34
  I0112 16:29:43.358211 21 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 01/12/25 16:29:43.358
  STEP: Updating Pods in reverse ordinal order @ 01/12/25 16:29:53.369
  I0112 16:29:53.375180 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-187 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 16:29:53.539843 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 16:29:53.540048 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 16:29:53.540079 21 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 01/12/25 16:30:03.556
  I0112 16:30:03.556531 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-187 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 16:30:03.707821 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 16:30:03.707918 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 16:30:03.707991 21 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 16:30:13.733107 21 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 01/12/25 16:30:23.748
  I0112 16:30:23.754251 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-187 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 16:30:23.908537 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 16:30:23.908600 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 16:30:23.908647 21 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 16:30:33.923834 21 statefulset.go:138] Deleting all statefulset in ns statefulset-187
  I0112 16:30:33.927194 21 rest.go:150] Scaling statefulset ss2 to 0
  I0112 16:30:43.950313 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 16:30:43.954249 21 rest.go:88] Deleting statefulset ss2
  I0112 16:30:43.987662 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-187" for this suite. @ 01/12/25 16:30:43.992
• [81.009 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 01/12/25 16:30:44.024
  I0112 16:30:44.024970 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sched-pred @ 01/12/25 16:30:44.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:30:44.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:30:44.069
  I0112 16:30:44.073088 21 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0112 16:30:44.081728 21 util.go:393] Waiting for terminating namespaces to be deleted...
  I0112 16:30:44.085996 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu before test
  I0112 16:30:44.091965 21 predicates.go:957] calico-node-mw2qz from kube-system started at 2025-01-12 15:34:15 +0000 UTC (1 container statuses recorded)
  I0112 16:30:44.092032 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 16:30:44.092045 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-844ad7800bd94b40-vgdlw from sonobuoy started at 2025-01-12 15:36:51 +0000 UTC (2 container statuses recorded)
  I0112 16:30:44.092058 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 16:30:44.092085 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0112 16:30:44.092096 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu2 before test
  I0112 16:30:44.098352 21 predicates.go:957] calico-kube-controllers-759cd8b574-lsskf from kube-system started at 2025-01-12 16:23:25 +0000 UTC (1 container statuses recorded)
  I0112 16:30:44.098413 21 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0112 16:30:44.098441 21 predicates.go:957] calico-node-crr24 from kube-system started at 2025-01-12 15:34:17 +0000 UTC (1 container statuses recorded)
  I0112 16:30:44.098449 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 16:30:44.098459 21 predicates.go:957] coredns-7896dbf49-r5lvc from kube-system started at 2025-01-12 16:23:25 +0000 UTC (1 container statuses recorded)
  I0112 16:30:44.098467 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0112 16:30:44.098476 21 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-12 15:36:44 +0000 UTC (1 container statuses recorded)
  I0112 16:30:44.098483 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0112 16:30:44.098493 21 predicates.go:957] sonobuoy-e2e-job-68164fd1082c40a9 from sonobuoy started at 2025-01-12 15:36:51 +0000 UTC (2 container statuses recorded)
  I0112 16:30:44.098501 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0112 16:30:44.098522 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 16:30:44.098549 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-844ad7800bd94b40-9xrjt from sonobuoy started at 2025-01-12 15:36:52 +0000 UTC (2 container statuses recorded)
  I0112 16:30:44.098557 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 16:30:44.098567 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/12/25 16:30:44.098
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/12/25 16:30:46.129
  STEP: Trying to apply a random label on the found node. @ 01/12/25 16:30:46.163
  STEP: verifying the node has the label kubernetes.io/e2e-27a2c8ff-120b-445c-b21c-43f60c61d84f 42 @ 01/12/25 16:30:46.194
  STEP: Trying to relaunch the pod, now with labels. @ 01/12/25 16:30:46.203
  STEP: removing the label kubernetes.io/e2e-27a2c8ff-120b-445c-b21c-43f60c61d84f off the node ubuntu @ 01/12/25 16:30:48.234
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-27a2c8ff-120b-445c-b21c-43f60c61d84f @ 01/12/25 16:30:48.257
  I0112 16:30:48.261896 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4629" for this suite. @ 01/12/25 16:30:48.266
• [4.257 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 01/12/25 16:30:48.282
  I0112 16:30:48.282373 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 16:30:48.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:30:48.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:30:48.316
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/12/25 16:30:48.321
  I0112 16:30:48.321473 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2385 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0112 16:30:48.421297 21 builder.go:146] stderr: ""
  I0112 16:30:48.421349 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 01/12/25 16:30:48.421
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/12/25 16:30:53.473
  I0112 16:30:53.473441 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2385 get pod e2e-test-httpd-pod -o json'
  I0112 16:30:53.566909 21 builder.go:146] stderr: ""
  I0112 16:30:53.567127 21 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"ee3dd2f68179a26608c531c96d6067c910b6a38e91f4ee0a013453bfdf6637f4\",\n            \"cni.projectcalico.org/podIP\": \"10.1.243.216/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.1.243.216/32\"\n        },\n        \"creationTimestamp\": \"2025-01-12T16:30:48Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2385\",\n        \"resourceVersion\": \"18139\",\n        \"uid\": \"8d5cdbd4-2a71-4770-9b65-57b841b08016\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-ms8zq\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ubuntu\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-ms8zq\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-12T16:30:49Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-12T16:30:48Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-12T16:30:49Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-12T16:30:49Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-12T16:30:48Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://52a0a92c67f56d701caad3d4fadc9adeb1b1a1a9d2bf7a73556e927706dbdf1d\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-01-12T16:30:49Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-ms8zq\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.17.202.11\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.17.202.11\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.1.243.216\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.1.243.216\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-01-12T16:30:48Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 01/12/25 16:30:53.567
  I0112 16:30:53.567265 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2385 replace -f -'
  I0112 16:30:53.770051 21 builder.go:146] stderr: ""
  I0112 16:30:53.770131 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 01/12/25 16:30:53.77
  I0112 16:30:53.780482 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2385 delete pods e2e-test-httpd-pod'
  I0112 16:30:55.733195 21 builder.go:146] stderr: ""
  I0112 16:30:55.733248 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0112 16:30:55.733370 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2385" for this suite. @ 01/12/25 16:30:55.737
• [7.468 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 01/12/25 16:30:55.751
  I0112 16:30:55.751158 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sched-preemption @ 01/12/25 16:30:55.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:30:55.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:30:55.793
  I0112 16:30:55.828317 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0112 16:31:55.833623 21 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/12/25 16:31:55.836
  I0112 16:31:55.875353 21 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I0112 16:31:55.913215 21 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I0112 16:31:55.942135 21 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I0112 16:31:55.976642 21 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/12/25 16:31:55.976
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 01/12/25 16:31:58.006
  I0112 16:32:02.133815 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6813" for this suite. @ 01/12/25 16:32:02.141
• [66.404 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 01/12/25 16:32:02.155
  I0112 16:32:02.155645 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename replication-controller @ 01/12/25 16:32:02.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:32:02.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:32:02.193
  STEP: creating a ReplicationController @ 01/12/25 16:32:02.203
  STEP: waiting for RC to be added @ 01/12/25 16:32:02.217
  STEP: waiting for available Replicas @ 01/12/25 16:32:02.218
  STEP: patching ReplicationController @ 01/12/25 16:32:03.957
  STEP: waiting for RC to be modified @ 01/12/25 16:32:03.973
  STEP: patching ReplicationController status @ 01/12/25 16:32:03.974
  STEP: waiting for RC to be modified @ 01/12/25 16:32:03.99
  STEP: waiting for available Replicas @ 01/12/25 16:32:03.991
  STEP: fetching ReplicationController status @ 01/12/25 16:32:04.014
  STEP: patching ReplicationController scale @ 01/12/25 16:32:04.018
  STEP: waiting for RC to be modified @ 01/12/25 16:32:04.041
  STEP: waiting for ReplicationController's scale to be the max amount @ 01/12/25 16:32:04.042
  STEP: fetching ReplicationController; ensuring that it's patched @ 01/12/25 16:32:05.723
  STEP: updating ReplicationController status @ 01/12/25 16:32:05.728
  STEP: waiting for RC to be modified @ 01/12/25 16:32:05.743
  STEP: listing all ReplicationControllers @ 01/12/25 16:32:05.743
  STEP: checking that ReplicationController has expected values @ 01/12/25 16:32:05.747
  STEP: deleting ReplicationControllers by collection @ 01/12/25 16:32:05.747
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 01/12/25 16:32:05.767
  I0112 16:32:05.922667 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0112 16:32:05.923182      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-514" for this suite. @ 01/12/25 16:32:05.928
• [3.788 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 01/12/25 16:32:05.943
  I0112 16:32:05.943783 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 16:32:05.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:32:05.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:32:05.993
  I0112 16:32:06.012795 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7829" for this suite. @ 01/12/25 16:32:06.017
• [0.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 01/12/25 16:32:06.039
  I0112 16:32:06.039759 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 16:32:06.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:32:06.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:32:06.078
  STEP: Creating secret with name secret-test-11001870-47dd-4ded-87f5-2ea3e6d81015 @ 01/12/25 16:32:06.085
  STEP: Creating a pod to test consume secrets @ 01/12/25 16:32:06.097
  E0112 16:32:06.924038      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:07.924798      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:08.925331      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:09.925869      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:32:10.142
  I0112 16:32:10.146860 21 output.go:196] Trying to get logs from node ubuntu pod pod-secrets-fad342ca-218b-4d87-ab3c-386589d0ecbb container secret-env-test: <nil>
  STEP: delete the pod @ 01/12/25 16:32:10.161
  I0112 16:32:10.204770 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9692" for this suite. @ 01/12/25 16:32:10.209
• [4.185 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 01/12/25 16:32:10.225
  I0112 16:32:10.225212 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 16:32:10.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:32:10.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:32:10.267
  STEP: Creating secret with name s-test-opt-del-e35edf13-614f-4947-82db-ed7137ff9ea8 @ 01/12/25 16:32:10.275
  STEP: Creating secret with name s-test-opt-upd-df3ac6f7-1852-49f5-843e-ebd6f6822dd9 @ 01/12/25 16:32:10.296
  STEP: Creating the pod @ 01/12/25 16:32:10.317
  E0112 16:32:10.926253      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:11.926685      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-e35edf13-614f-4947-82db-ed7137ff9ea8 @ 01/12/25 16:32:12.383
  STEP: Updating secret s-test-opt-upd-df3ac6f7-1852-49f5-843e-ebd6f6822dd9 @ 01/12/25 16:32:12.409
  STEP: Creating secret with name s-test-opt-create-5760dae7-2ac6-4f09-8178-72b6d456fc4d @ 01/12/25 16:32:12.456
  STEP: waiting to observe update in volume @ 01/12/25 16:32:12.476
  E0112 16:32:12.927070      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:13.927489      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:14.503209 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9685" for this suite. @ 01/12/25 16:32:14.507
• [4.296 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 01/12/25 16:32:14.521
  I0112 16:32:14.521909 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename deployment @ 01/12/25 16:32:14.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:32:14.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:32:14.555
  I0112 16:32:14.590587 21 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0112 16:32:14.928390      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:15.929179      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:16.929113      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:17.929511      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:18.929998      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:19.596168 21 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/12/25 16:32:19.596
  I0112 16:32:19.596294 21 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0112 16:32:19.930241      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:20.930554      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:21.601374 21 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0112 16:32:21.626804 21 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0112 16:32:21.931371      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:22.931768      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:23.636387 21 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0112 16:32:23.643999 21 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0112 16:32:23.650868 21 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0112 16:32:23.671211 21 deployment.go:313] Updating deployment test-rollover-deployment
  I0112 16:32:23.671295 21 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0112 16:32:23.931914      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:24.932569      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:25.683785 21 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0112 16:32:25.697227 21 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0112 16:32:25.710171 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0112 16:32:25.710297 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 16:32:25.933530      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:26.933876      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:27.721224 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0112 16:32:27.721382 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 16:32:27.934344      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:28.934740      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:29.724230 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0112 16:32:29.724471 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 16:32:29.935354      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:30.936377      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:31.722993 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0112 16:32:31.723117 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 16:32:31.937234      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:32.937594      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:33.720527 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0112 16:32:33.720648 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 32, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 16:32:33.938332      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:34.938674      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:35.719447 21 deployment.go:94] 
  I0112 16:32:35.719529 21 deployment.go:974] Ensure that both old replica sets have no replicas
  I0112 16:32:35.729769 21 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f2c46b7-54b7-44cb-ba94-6cde8ce3bee8",
      ResourceVersion: (string) (len=5) "18764",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872296341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296355,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296355,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 16:32:35.735768 21 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7dcf0717-d459-4d3a-8394-0be805c1c03b",
      ResourceVersion: (string) (len=5) "18754",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872296343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "2f2c46b7-54b7-44cb-ba94-6cde8ce3bee8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 66 32 63 34 36  62 37 2d 35 34 62 37 2d  |\"2f2c46b7-54b7-|
              00000120  34 34 63 62 2d 62 61 39  34 2d 36 63 64 65 38 63  |44cb-ba94-6cde8c|
              00000130  65 33 62 65 65 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e3bee8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296355,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 16:32:35.737407 21 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0112 16:32:35.737649 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4710a7d5-abf2-47a9-aeb1-064c68389f1b",
      ResourceVersion: (string) (len=5) "18763",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872296334,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "2f2c46b7-54b7-44cb-ba94-6cde8ce3bee8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296334,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296355,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  32 66 32 63 34 36 62 37  2d 35 34 62 37 2d 34 34  |2f2c46b7-54b7-44|
              000000c0  63 62 2d 62 61 39 34 2d  36 63 64 65 38 63 65 33  |cb-ba94-6cde8ce3|
              000000d0  62 65 65 38 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |bee8\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296355,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 16:32:35.739656 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c612b024-3e6e-4640-81cd-8ade3ef76771",
      ResourceVersion: (string) (len=5) "18716",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872296341,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "2f2c46b7-54b7-44cb-ba94-6cde8ce3bee8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 66 32 63 34 36  62 37 2d 35 34 62 37 2d  |\"2f2c46b7-54b7-|
              00000120  34 34 63 62 2d 62 61 39  34 2d 36 63 64 65 38 63  |44cb-ba94-6cde8c|
              00000130  65 33 62 65 65 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e3bee8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 16:32:35.745544 21 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-tx7dt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-tx7dt",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-1407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b8bb9f2-b5c4-4255-8665-ed75d2207706",
      ResourceVersion: (string) (len=5) "18732",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872296343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "05a61769b60cc55c6d5fa1a1948b5aa3cc8e3d05c8bffbdf5d5add336368acf4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.223/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.223/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "7dcf0717-d459-4d3a-8394-0be805c1c03b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  63 66 30 37 31 37 2d 64  |d\":\"7dcf0717-d|
              00000090  34 35 39 2d 34 64 33 61  2d 38 33 39 34 2d 30 62  |459-4d3a-8394-0b|
              000000a0  65 38 30 35 63 31 63 30  33 62 5c 22 7d 22 3a 7b  |e805c1c03b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  32 33 5c 22 7d 22 3a 7b  |.1.243.223\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n4m6d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n4m6d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.223",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.223"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872296343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872296344,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://292dbb7a71650489a50ab29dc91f5f26416136942a948a6cdfd56bab990f6c95",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n4m6d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 16:32:35.749402 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1407" for this suite. @ 01/12/25 16:32:35.753
• [21.244 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 01/12/25 16:32:35.766
  I0112 16:32:35.766551 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 16:32:35.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:32:35.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:32:35.839
  STEP: Creating pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848 @ 01/12/25 16:32:35.842
  E0112 16:32:35.938922      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:36.939181      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 16:32:37.868
  I0112 16:32:37.873089 21 container_probe.go:1749] Initial restart count of pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 is 0
  I0112 16:32:37.877819 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:32:37.939424      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:38.940078      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:39.883085 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:32:39.940530      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:40.941297      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:41.888393 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:32:41.941575      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:42.942226      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:43.893825 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:32:43.943251      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:44.943867      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:45.898093 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:32:45.944570      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:46.945672      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:47.902534 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:32:47.946819      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:48.947570      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:49.907188 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:32:49.947225      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:50.947636      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:51.912369 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:32:51.948746      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:52.949154      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:53.917599 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:32:53.950131      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:54.950733      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:55.921780 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:32:55.951252      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:56.951899      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:57.927593 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:32:57.953017      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:32:58.953538      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:32:59.933316 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:32:59.954575      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:00.954884      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:01.940247 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:01.955743      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:02.956331      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:03.945567 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:03.957041      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:04.957464      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:05.951256 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:05.958533      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:06.959399      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:07.955912 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:07.960248      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:08.961244      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:09.961715      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:09.961724 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:10.962750      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:11.963084      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:11.967428 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:12.963209      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:13.963533      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:13.971872 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:14.963896      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:15.964234      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:15.979117 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:16.964458      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:17.965515      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:17.985334 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:18.966602      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:19.966777      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:19.991066 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:20.966917      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:21.967614      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:21.995771 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:22.968109      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:23.968605      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:24.000716 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:24.969207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:25.969670      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:26.006382 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:26.971008      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:27.971465      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:28.011313 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:28.971850      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:29.972577      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:30.016687 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:30.972703      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:31.973062      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:32.021410 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:32.973355      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:33.974446      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:34.025745 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:34.974764      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:35.975130      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:36.031084 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:36.975666      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:37.976084      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:38.036760 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:38.976906      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:39.977247      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:40.042012 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:40.978116      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:41.978708      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:42.046737 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:42.978844      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:43.979396      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:44.053334 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:44.980542      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:45.981099      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:46.061529 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:46.981277      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:47.981727      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:48.068754 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:48.982676      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:49.983160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:50.077580 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:50.983209      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:51.984202      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:52.082118 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:52.984916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:53.985368      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:54.088373 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:54.985646      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:55.986190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:56.094532 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:56.987056      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:57.987543      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:33:58.100148 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:33:58.988354      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:33:59.988809      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:00.105774 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:00.989761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:01.990065      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:02.112132 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:02.990676      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:03.991240      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:04.119198 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:04.991474      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:05.992053      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:06.123294 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:06.992464      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:07.993532      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:08.128743 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:08.993760      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:09.994259      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:10.135269 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:10.995334      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:11.995411      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:12.141413 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:12.995587      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:13.996132      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:14.149642 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:14.996622      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:15.997155      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:16.154301 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:16.998016      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:17.998683      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:18.160365 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:18.999404      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:19.999854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:20.168675 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:21.000170      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:22.001059      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:22.176497 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:23.001639      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:24.002333      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:24.183425 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:25.003466      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:26.004309      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:26.189925 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:27.005318      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:28.006276      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:28.197303 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:29.006354      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:30.006915      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:30.202888 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:31.007116      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:32.007199      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:32.208723 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:33.007590      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:34.008190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:34.212680 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:35.008752      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:36.008995      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:36.218389 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:37.010044      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:38.010643      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:38.224573 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:39.011502      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:40.012082      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:40.228632 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:41.012466      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:42.013572      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:42.235163 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:43.014037      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:44.014378      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:44.245146 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:45.015156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:46.016056      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:46.249219 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:47.016383      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:48.016843      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:48.254191 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:49.018367      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:50.017903      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:50.264168 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:51.018126      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:52.018321      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:52.268726 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:53.018657      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:54.019111      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:54.274568 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:55.019346      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:56.019695      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:56.281116 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:57.020070      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:34:58.020443      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:34:58.288518 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:34:59.021670      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:00.023003      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:00.294058 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:01.023238      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:02.024466      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:02.300228 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:03.025303      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:04.025677      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:04.305297 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:05.026251      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:06.026744      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:06.310664 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:07.027542      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:08.028043      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:08.317043 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:09.029026      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:10.029309      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:10.321328 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:11.029365      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:12.030135      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:12.328227 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:13.031215      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:14.031718      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:14.334107 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:15.031910      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:16.032350      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:16.338817 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:17.033453      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:18.034009      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:18.345099 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:19.034877      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:20.035375      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:20.352429 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:21.036164      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:22.036297      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:22.358530 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:23.036349      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:24.036824      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:24.363857 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:25.038162      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:26.038513      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:26.368739 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:27.039592      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:28.039995      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:28.376255 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:29.040324      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:30.040867      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:30.381878 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:31.041420      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:32.042077      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:32.388187 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:33.043004      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:34.043396      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:34.400144 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:35.043924      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:36.044980      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:36.406112 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:37.046028      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:38.046322      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:38.411553 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:39.046442      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:40.046914      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:40.418739 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:41.047451      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:42.047916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:42.423455 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:43.048364      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:44.048851      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:44.427483 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:45.049225      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:46.049597      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:46.432641 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:47.050384      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:48.051096      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:48.437238 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:49.051506      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:50.052067      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:50.443528 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:51.052211      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:52.053170      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:52.447631 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:53.053301      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:54.053839      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:54.451831 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:55.054992      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:56.055309      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:56.456550 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:57.055384      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:35:58.056097      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:35:58.460766 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:35:59.056393      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:00.056885      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:00.467365 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:01.057108      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:02.057482      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:02.473726 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:03.058659      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:04.059379      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:04.478595 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:05.060590      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:06.061059      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:06.483622 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:07.061394      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:08.061800      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:08.488591 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:09.062288      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:10.062591      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:10.494995 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:11.062632      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:12.062781      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:12.501740 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:13.063083      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:14.063583      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:14.506285 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:15.064098      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:16.064516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:16.510613 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:17.065548      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:18.066081      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:18.514533 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:19.066233      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:20.066662      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:20.520400 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:21.067100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:22.067406      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:22.526028 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:23.067665      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:24.068013      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:24.532342 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:25.068215      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:26.068783      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:26.537585 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:27.069115      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:28.069504      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:28.542594 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:29.070537      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:30.071169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:30.548560 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:31.072140      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:32.072502      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:32.553700 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:33.073612      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:34.074064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:34.558756 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:35.074381      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:36.075137      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:36.563599 21 container_probe.go:1759] Get pod busybox-d4cbc650-d33a-47a9-96d0-0c4a31816a23 in namespace container-probe-5848
  E0112 16:36:37.075474      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:38.075870      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/12/25 16:36:38.565
  I0112 16:36:38.618801 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5848" for this suite. @ 01/12/25 16:36:38.627
• [242.884 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 01/12/25 16:36:38.65
  I0112 16:36:38.650682 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename replication-controller @ 01/12/25 16:36:38.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:36:38.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:36:38.695
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 01/12/25 16:36:38.7
  E0112 16:36:39.076116      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:40.076378      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 01/12/25 16:36:40.731
  STEP: Then the orphan pod is adopted @ 01/12/25 16:36:40.745
  E0112 16:36:41.076797      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:41.755637 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2354" for this suite. @ 01/12/25 16:36:41.76
• [3.128 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 01/12/25 16:36:41.778
  I0112 16:36:41.778418 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 16:36:41.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:36:41.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:36:41.828
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 16:36:41.832
  E0112 16:36:42.077033      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:43.077777      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:44.077889      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:45.078307      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:36:45.866
  I0112 16:36:45.872865 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-5c57c177-b8c9-45b7-83a1-ccae15fb45f1 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 16:36:45.889
  I0112 16:36:45.930992 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4175" for this suite. @ 01/12/25 16:36:45.935
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 01/12/25 16:36:45.951
  I0112 16:36:45.951177 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 16:36:45.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:36:45.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:36:46.01
  STEP: Creating configMap with name configmap-test-volume-map-af37e716-d229-41b0-8ba0-53bc3fa0649a @ 01/12/25 16:36:46.017
  STEP: Creating a pod to test consume configMaps @ 01/12/25 16:36:46.039
  E0112 16:36:46.078781      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:47.079036      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:48.079131      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:49.079828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:36:50.077
  E0112 16:36:50.079838      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:50.081228 21 output.go:196] Trying to get logs from node ubuntu pod pod-configmaps-9a84295f-2df9-4fa3-a2fc-68fddf080985 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 16:36:50.087
  I0112 16:36:50.123048 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1210" for this suite. @ 01/12/25 16:36:50.127
• [4.197 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 01/12/25 16:36:50.153
  I0112 16:36:50.153830 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename replicaset @ 01/12/25 16:36:50.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:36:50.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:36:50.2
  STEP: Create a ReplicaSet @ 01/12/25 16:36:50.204
  STEP: Verify that the required pods have come up @ 01/12/25 16:36:50.217
  I0112 16:36:50.222272 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0112 16:36:51.080203      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:52.081052      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:53.081515      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:54.081811      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:55.082163      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:36:55.226632 21 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 01/12/25 16:36:55.226
  I0112 16:36:55.230512 21 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 01/12/25 16:36:55.23
  STEP: DeleteCollection of the ReplicaSets @ 01/12/25 16:36:55.234
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 01/12/25 16:36:55.25
  I0112 16:36:55.254906 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6946" for this suite. @ 01/12/25 16:36:55.261
• [5.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 01/12/25 16:36:55.312
  I0112 16:36:55.312670 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sched-preemption @ 01/12/25 16:36:55.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:36:55.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:36:55.594
  I0112 16:36:55.658801 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0112 16:36:56.082264      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:57.082470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:58.083284      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:36:59.083772      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:00.084446      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:01.084867      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:02.085311      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:03.085719      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:04.087008      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:05.087201      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:06.088222      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:07.088548      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:08.089751      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:09.090298      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:10.091295      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:11.091816      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:12.093049      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:13.094221      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:14.094699      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:15.094877      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:16.096004      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:17.096907      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:18.097338      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:19.097962      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:20.098787      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:21.099072      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:22.099293      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:23.099724      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:24.100573      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:25.100989      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:26.101476      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:27.102168      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:28.102330      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:29.103209      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:30.103681      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:31.104197      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:32.105209      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:33.105570      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:34.105612      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:35.105866      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:36.107055      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:37.107437      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:38.107630      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:39.108205      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:40.109078      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:41.109580      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:42.110166      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:43.110626      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:44.111622      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:45.111757      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:46.112607      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:47.113470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:48.114118      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:49.114470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:50.114819      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:51.115235      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:52.115681      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:53.116139      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:54.117363      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:55.117850      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:37:55.664886 21 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 01/12/25 16:37:55.669
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 01/12/25 16:37:55.689
  I0112 16:37:55.741201 21 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 01/12/25 16:37:55.741
  E0112 16:37:56.118086      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:57.119258      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 01/12/25 16:37:57.751
  I0112 16:37:57.767047 21 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 01/12/25 16:37:57.767
  E0112 16:37:58.119362      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:37:59.120281      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 01/12/25 16:37:59.775
  I0112 16:37:59.779871 21 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0112 16:38:00.121354      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:00.310576 21 pod_client.go:173] Successfully updated pod "victim-pod"
  I0112 16:38:00.390534 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6385" for this suite. @ 01/12/25 16:38:00.397
• [65.105 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 01/12/25 16:38:00.417
  I0112 16:38:00.417752 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 16:38:00.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:38:00.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:38:00.469
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 16:38:00.474
  E0112 16:38:01.122426      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:02.122523      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:03.123547      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:04.124055      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:38:04.511
  I0112 16:38:04.518167 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-1a3e6543-9c1e-450c-b6e7-78c444ffdd0d container client-container: <nil>
  STEP: delete the pod @ 01/12/25 16:38:04.528
  I0112 16:38:04.575166 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5482" for this suite. @ 01/12/25 16:38:04.579
• [4.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 01/12/25 16:38:04.612
  I0112 16:38:04.612894 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 16:38:04.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:38:04.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:38:04.663
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/12/25 16:38:04.667
  E0112 16:38:05.125092      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:06.125418      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:07.126032      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:08.126411      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:38:08.698
  I0112 16:38:08.703084 21 output.go:196] Trying to get logs from node ubuntu pod pod-84ee6e99-63da-42d1-b1c3-accf6f231d54 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 16:38:08.711
  I0112 16:38:08.745596 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-531" for this suite. @ 01/12/25 16:38:08.75
• [4.154 seconds]
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 01/12/25 16:38:08.767
  I0112 16:38:08.767129 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 16:38:08.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:38:08.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:38:08.802
  STEP: creating service multiprotocol-test in namespace services-5647 @ 01/12/25 16:38:08.807
  STEP: creating pod pod1 in namespace services-5647 @ 01/12/25 16:38:08.848
  STEP: Creating pod pod1 in namespace services-5647 @ 01/12/25 16:38:08.848
  E0112 16:38:09.127074      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:10.127597      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-5647 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 01/12/25 16:38:10.9
  I0112 16:38:10.915530 21 service.go:4392] successfully validated that service multiprotocol-test in namespace services-5647 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 01/12/25 16:38:10.915
  I0112 16:38:10.915686 21 resource.go:361] Creating new exec pod
  E0112 16:38:11.128553      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:12.129442      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:12.946074 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-5647 exec execpod4k25g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80'
  E0112 16:38:13.129843      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:13.138510 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.111 80\nConnection to 10.152.183.111 80 port [tcp/http] succeeded!\n"
  I0112 16:38:13.138584 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 16:38:13.138694 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-5647 exec execpod4k25g -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.111 80'
  E0112 16:38:14.130380      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:15.130648      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:16.130809      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:17.131882      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:17.389906 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.111 80\nConnection to 10.152.183.111 80 port [udp/*] succeeded!\n"
  I0112 16:38:17.390027 21 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 01/12/25 16:38:17.39
  I0112 16:38:17.419580 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-5647 exec execpod4k25g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80'
  I0112 16:38:17.570329 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.111 80\nConnection to 10.152.183.111 80 port [tcp/http] succeeded!\n"
  I0112 16:38:17.570385 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 16:38:17.570524 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-5647 exec execpod4k25g -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.111 80'
  E0112 16:38:18.132184      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:19.132601      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:20.133241      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:21.134282      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:21.710152 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.111 80\nConnection to 10.152.183.111 80 port [udp/*] succeeded!\n"
  I0112 16:38:21.710218 21 builder.go:147] stdout: ""
  I0112 16:38:21.710314 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-5647 exec execpod4k25g -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.111 80'
  E0112 16:38:22.134737      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:23.135124      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:24.136025      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:25.136473      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:26.018735 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.111 80\nConnection to 10.152.183.111 80 port [udp/*] succeeded!\n"
  I0112 16:38:26.018813 21 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 01/12/25 16:38:26.018
  I0112 16:38:26.066573 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-5647 exec execpod4k25g -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.111 80'
  E0112 16:38:26.137377      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:27.137563      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:28.138271      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:29.139034      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:30.140106      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:30.219736 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.111 80\nConnection to 10.152.183.111 80 port [udp/*] succeeded!\n"
  I0112 16:38:30.219810 21 builder.go:147] stdout: "pod1"
  I0112 16:38:30.220004 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-5647 exec execpod4k25g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80'
  E0112 16:38:31.140663      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:32.141454      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:32.375991 21 builder.go:135] rc: 1
  I0112 16:38:32.376111 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-5647 exec execpod4k25g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.111 80
  nc: connect to 10.152.183.111 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0112 16:38:32.376225 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-5647 exec execpod4k25g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80'
  E0112 16:38:33.142221      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:34.142833      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:34.521781 21 builder.go:135] rc: 1
  I0112 16:38:34.521873 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-5647 exec execpod4k25g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.111 80
  nc: connect to 10.152.183.111 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0112 16:38:34.522195 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-5647 exec execpod4k25g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80'
  E0112 16:38:35.143014      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:36.144341      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:36.669728 21 builder.go:135] rc: 1
  I0112 16:38:36.669849 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-5647 exec execpod4k25g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.111 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.111 80
  nc: connect to 10.152.183.111 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0112 16:38:36.670148 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5647" for this suite. @ 01/12/25 16:38:36.676
• [27.926 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 01/12/25 16:38:36.693
  I0112 16:38:36.693785 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 16:38:36.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:38:36.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:38:36.744
  I0112 16:38:36.750487 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  E0112 16:38:37.145057      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/12/25 16:38:38.06
  I0112 16:38:38.060258 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-953 --namespace=crd-publish-openapi-953 create -f -'
  E0112 16:38:38.145830      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:38.184840 21 builder.go:146] stderr: ""
  I0112 16:38:38.184903 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5479-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0112 16:38:38.184988 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-953 --namespace=crd-publish-openapi-953 delete e2e-test-crd-publish-openapi-5479-crds test-cr'
  I0112 16:38:38.273285 21 builder.go:146] stderr: ""
  I0112 16:38:38.273339 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5479-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0112 16:38:38.273392 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-953 --namespace=crd-publish-openapi-953 apply -f -'
  I0112 16:38:38.373519 21 builder.go:146] stderr: ""
  I0112 16:38:38.373629 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5479-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0112 16:38:38.373739 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-953 --namespace=crd-publish-openapi-953 delete e2e-test-crd-publish-openapi-5479-crds test-cr'
  I0112 16:38:38.473662 21 builder.go:146] stderr: ""
  I0112 16:38:38.473763 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5479-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/12/25 16:38:38.473
  I0112 16:38:38.473865 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-953 explain e2e-test-crd-publish-openapi-5479-crds'
  I0112 16:38:38.551601 21 builder.go:146] stderr: ""
  I0112 16:38:38.551748 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5479-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0112 16:38:39.145914      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:39.853759 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-953" for this suite. @ 01/12/25 16:38:39.862
• [3.196 seconds]
------------------------------
S
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 01/12/25 16:38:39.89
  I0112 16:38:39.890201 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 16:38:39.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:38:39.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:38:39.969
  STEP: creating an Endpoint @ 01/12/25 16:38:39.977
  STEP: waiting for available Endpoint @ 01/12/25 16:38:40.018
  STEP: listing all Endpoints @ 01/12/25 16:38:40.02
  STEP: updating the Endpoint @ 01/12/25 16:38:40.024
  STEP: fetching the Endpoint @ 01/12/25 16:38:40.054
  STEP: patching the Endpoint @ 01/12/25 16:38:40.057
  STEP: fetching the Endpoint @ 01/12/25 16:38:40.084
  STEP: deleting the Endpoint by Collection @ 01/12/25 16:38:40.088
  STEP: waiting for Endpoint deletion @ 01/12/25 16:38:40.115
  STEP: fetching the Endpoint @ 01/12/25 16:38:40.117
  I0112 16:38:40.121174 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5454" for this suite. @ 01/12/25 16:38:40.124
  E0112 16:38:40.147124      21 retrywatcher.go:131] "Watch failed" err="context canceled"
• [0.265 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 01/12/25 16:38:40.155
  I0112 16:38:40.155286 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 16:38:40.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:38:40.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:38:40.22
  I0112 16:38:40.296291 21 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0112 16:38:40.296370 21 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0112 16:38:40.314466 21 service_accounts.go:253] created pod pod-service-account-mountsa
  I0112 16:38:40.314514 21 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0112 16:38:40.350108 21 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0112 16:38:40.350183 21 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0112 16:38:40.428042 21 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0112 16:38:40.428149 21 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0112 16:38:40.539350 21 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0112 16:38:40.539424 21 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0112 16:38:40.660302 21 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0112 16:38:40.660374 21 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0112 16:38:40.773153 21 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0112 16:38:40.773222 21 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0112 16:38:40.833067 21 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0112 16:38:40.833109 21 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0112 16:38:40.910834 21 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0112 16:38:40.910949 21 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0112 16:38:40.911196 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1517" for this suite. @ 01/12/25 16:38:40.927
• [0.890 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 01/12/25 16:38:41.045
  I0112 16:38:41.045748 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename deployment @ 01/12/25 16:38:41.047
  E0112 16:38:41.147767      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:38:41.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:38:41.328
  I0112 16:38:41.335975 21 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0112 16:38:41.402547 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0112 16:38:42.148165      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:43.148478      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:44.148881      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:45.149415      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:46.149852      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:46.413365 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/12/25 16:38:46.413
  I0112 16:38:46.413486 21 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0112 16:38:46.443005 21 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0112 16:38:46.459026 21 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0112 16:38:47.150620      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:48.150975      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:48.467642 21 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0112 16:38:48.474845 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 38, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 38, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 38, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 38, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 16:38:49.151511      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:50.152100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:50.479695 21 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0112 16:38:50.490445 21 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13c45fa6-3dbb-44e0-a010-e74c15b194e3",
      ResourceVersion: (string) (len=5) "19980",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872296726,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 16:38:50.498114 21 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e77537c-4983-41fb-9cc2-c0ad3b08a561",
      ResourceVersion: (string) (len=5) "19966",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872296726,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "13c45fa6-3dbb-44e0-a010-e74c15b194e3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 33 63 34 35 66  61 36 2d 33 64 62 62 2d  |\"13c45fa6-3dbb-|
              00000120  34 34 65 30 2d 61 30 31  30 2d 65 37 34 63 31 35  |44e0-a010-e74c15|
              00000130  62 31 39 34 65 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b194e3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 16:38:50.500212 21 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0112 16:38:50.500510 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "256e6148-0d78-4851-8c9c-d906771983be",
      ResourceVersion: (string) (len=5) "19979",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872296721,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "13c45fa6-3dbb-44e0-a010-e74c15b194e3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296721,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 31 33 63 34 35 66 61  |"uid\":\"13c45fa|
              000000b0  36 2d 33 64 62 62 2d 34  34 65 30 2d 61 30 31 30  |6-3dbb-44e0-a010|
              000000c0  2d 65 37 34 63 31 35 62  31 39 34 65 33 5c 22 7d  |-e74c15b194e3\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 16:38:50.507889 21 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-vkhsd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-vkhsd",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-6341",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c8f25ba-b34d-42c1-bdc9-5c1cad5e66c9",
      ResourceVersion: (string) (len=5) "19965",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872296726,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9d77719edbb0d8c5505653dc91c4535283b391cf242adbe2be60f4b26e786039",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.242/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.242/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "3e77537c-4983-41fb-9cc2-c0ad3b08a561",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 65  37 37 35 33 37 63 2d 34  |d\":\"3e77537c-4|
              00000090  39 38 33 2d 34 31 66 62  2d 39 63 63 32 2d 63 30  |983-41fb-9cc2-c0|
              000000a0  61 64 33 62 30 38 61 35  36 31 5c 22 7d 22 3a 7b  |ad3b08a561\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296727,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  34 32 5c 22 7d 22 3a 7b  |.1.243.242\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mhlsd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mhlsd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872296726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.242",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.242"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872296726,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872296728,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://bff498d3aa9a3210bf005e33e180f9c433c56ac491828796c3b436af662bc6f7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mhlsd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 16:38:50.512047 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6341" for this suite. @ 01/12/25 16:38:50.517
• [9.489 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 01/12/25 16:38:50.535
  I0112 16:38:50.535254 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-runtime @ 01/12/25 16:38:50.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:38:50.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:38:50.603
  STEP: create the container @ 01/12/25 16:38:50.606
  W0112 16:38:50.632090      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/12/25 16:38:50.632
  E0112 16:38:51.153117      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:52.153292      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:53.153380      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/12/25 16:38:53.653
  STEP: the container should be terminated @ 01/12/25 16:38:53.657
  STEP: the termination message should be set @ 01/12/25 16:38:53.657
  I0112 16:38:53.657847 21 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 01/12/25 16:38:53.657
  I0112 16:38:53.705862 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1716" for this suite. @ 01/12/25 16:38:53.711
• [3.190 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 01/12/25 16:38:53.725
  I0112 16:38:53.725841 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename crd-webhook @ 01/12/25 16:38:53.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:38:53.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:38:53.78
  STEP: Setting up server cert @ 01/12/25 16:38:53.788
  E0112 16:38:54.154307      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/12/25 16:38:54.38
  STEP: Deploying the custom resource conversion webhook pod @ 01/12/25 16:38:54.399
  STEP: Wait for the deployment to be ready @ 01/12/25 16:38:54.422
  I0112 16:38:54.429635 21 deployment.go:222] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0112 16:38:55.154793      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:56.155089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/12/25 16:38:56.443
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 16:38:56.47
  E0112 16:38:57.156283      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:38:57.471208 21 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0112 16:38:57.481306 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  E0112 16:38:58.157183      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:38:59.157698      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 01/12/25 16:39:00.051
  STEP: Create a v2 custom resource @ 01/12/25 16:39:00.089
  STEP: List CRs in v1 @ 01/12/25 16:39:00.111
  STEP: List CRs in v2 @ 01/12/25 16:39:00.116
  E0112 16:39:00.158499      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:00.736834 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7172" for this suite. @ 01/12/25 16:39:00.741
• [7.051 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 01/12/25 16:39:00.777
  I0112 16:39:00.777200 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 16:39:00.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:39:00.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:39:00.931
  STEP: Creating service test in namespace statefulset-1667 @ 01/12/25 16:39:00.936
  STEP: Creating statefulset ss in namespace statefulset-1667 @ 01/12/25 16:39:00.96
  I0112 16:39:00.996878 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0112 16:39:01.158642      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:02.159732      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:03.160334      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:04.160813      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:05.161361      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:06.161757      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:07.162570      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:08.163533      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:09.164097      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:10.165280      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:10.997707 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 01/12/25 16:39:11.005
  STEP: Getting /status @ 01/12/25 16:39:11.029
  I0112 16:39:11.033650 21 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 01/12/25 16:39:11.033
  I0112 16:39:11.058307 21 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 01/12/25 16:39:11.058
  I0112 16:39:11.060065 21 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I0112 16:39:11.060149 21 statefulset.go:1111] Found Statefulset ss in namespace statefulset-1667 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0112 16:39:11.060165 21 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 01/12/25 16:39:11.06
  I0112 16:39:11.060198 21 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0112 16:39:11.073565 21 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 01/12/25 16:39:11.073
  I0112 16:39:11.075827 21 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I0112 16:39:11.076128 21 statefulset.go:138] Deleting all statefulset in ns statefulset-1667
  I0112 16:39:11.080471 21 rest.go:150] Scaling statefulset ss to 0
  E0112 16:39:11.165883      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:12.166333      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:13.166646      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:14.167129      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:15.167609      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:16.168575      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:17.168589      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:18.169049      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:19.169541      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:20.170081      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:21.105598 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 16:39:21.108709 21 rest.go:88] Deleting statefulset ss
  I0112 16:39:21.131031 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1667" for this suite. @ 01/12/25 16:39:21.134
• [20.384 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 01/12/25 16:39:21.162
  I0112 16:39:21.162162 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/12/25 16:39:21.162
  E0112 16:39:21.170785      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:39:21.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:39:21.241
  STEP: creating the policy @ 01/12/25 16:39:21.262
  STEP: waiting until the marker is denied @ 01/12/25 16:39:21.299
  STEP: testing a replicated Deployment to be allowed @ 01/12/25 16:39:21.859
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/12/25 16:39:22.019
  E0112 16:39:22.171206      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:22.384146 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2671" for this suite. @ 01/12/25 16:39:22.387
• [1.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 01/12/25 16:39:22.439
  I0112 16:39:22.439663 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 16:39:22.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:39:22.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:39:22.511
  STEP: Creating pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457 @ 01/12/25 16:39:22.517
  E0112 16:39:23.172236      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:24.172789      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 16:39:24.557
  I0112 16:39:24.561872 21 container_probe.go:1749] Initial restart count of pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d is 0
  I0112 16:39:24.566274 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:25.173082      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:26.173552      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:26.569907 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:27.173800      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:28.174150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:28.575261 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:29.175338      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:30.175735      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:30.579693 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:31.176504      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:32.177440      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:32.583747 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:33.177643      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:34.178173      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:34.588622 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:35.178353      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:36.178625      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:36.595345 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:37.179199      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:38.179605      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:38.603253 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:39.180720      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:40.181118      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:40.607546 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:41.181489      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:42.181573      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:42.613816 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:43.181878      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:44.182708      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:44.619180 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:45.182830      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:46.183588      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:46.624362 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:47.183998      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:48.184461      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:48.628875 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:49.184845      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:50.185459      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:50.632772 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:51.185751      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:52.186483      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:52.637496 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:53.187613      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:54.188159      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:54.644290 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:55.189096      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:56.189356      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:56.649537 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:57.190518      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:39:58.190995      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:39:58.657546 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:39:59.191287      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:00.191803      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:00.669388 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:01.192213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:02.192170      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:02.676328 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:03.193125      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:04.193608      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:04.682571 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:05.194107      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:06.194539      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:06.689542 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:07.195318      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:08.195620      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:08.697915 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:09.196772      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:10.197491      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:10.703134 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:11.197577      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:12.198448      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:12.710813 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:13.199408      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:14.199826      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:14.716597 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:15.200234      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:16.200563      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:16.721510 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:17.201069      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:18.201453      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:18.727184 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:19.202001      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:20.202452      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:20.735634 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:21.203451      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:22.204550      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:22.743487 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:23.205375      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:24.205718      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:24.749811 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:25.206319      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:26.206672      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:26.754920 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:27.207719      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:28.208174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:28.762169 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:29.208796      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:30.209850      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:30.766327 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:31.210091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:32.211117      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:32.772156 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:33.212192      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:34.212214      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:34.779057 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:35.212589      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:36.212893      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:36.785013 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:37.213878      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:38.214418      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:38.791335 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:39.214989      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:40.215358      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:40.799048 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:41.215502      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:42.216473      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:42.803828 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:43.217583      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:44.218091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:44.808303 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:45.219199      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:46.219683      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:46.813982 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:47.220645      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:48.221381      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:48.818093 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:49.221601      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:50.221958      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:50.824161 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:51.222915      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:52.224165      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:52.833052 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:53.224421      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:54.225070      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:54.836822 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:55.225364      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:56.225691      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:56.844439 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:57.225903      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:40:58.226355      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:40:58.852110 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:40:59.226442      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:00.226737      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:00.857583 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:01.227788      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:02.227856      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:02.861720 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:03.228156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:04.228452      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:04.869527 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:05.228909      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:06.229348      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:06.873870 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:07.229420      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:08.230602      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:08.879020 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:09.231710      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:10.232094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:10.885070 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:11.232120      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:12.232519      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:12.890300 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:13.232755      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:14.233644      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:14.896635 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:15.234169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:16.234618      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:16.902105 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:17.235743      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:18.236146      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:18.906586 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:19.237427      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:20.237852      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:20.912206 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:21.239049      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:22.239204      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:22.918608 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:23.240417      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:24.241278      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:24.924062 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:25.241614      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:26.242023      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:26.932106 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:27.242239      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:28.242721      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:28.939715 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:29.243058      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:30.243448      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:30.944550 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:31.244361      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:32.245416      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:32.950443 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:33.245898      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:34.246410      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:34.956219 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:35.246749      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:36.247326      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:36.961403 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:37.248138      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:38.248638      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:38.969669 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:39.249030      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:40.249438      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:40.975064 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:41.249516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:42.249881      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:42.981836 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:43.250261      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:44.251121      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:44.987201 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:45.252067      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:46.252806      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:46.992562 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:47.254043      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:48.254439      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:48.997564 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:49.255165      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:50.255677      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:51.003685 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:51.256125      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:52.256837      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:53.009246 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:53.258174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:54.258551      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:55.013750 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:55.259196      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:56.259566      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:57.017469 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:57.259887      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:41:58.260388      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:41:59.022096 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:41:59.260449      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:00.261207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:01.025973 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:01.261438      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:02.262335      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:03.031555 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:03.263294      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:04.263638      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:05.036622 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:05.264301      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:06.264789      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:07.040413 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:07.265033      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:08.265342      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:09.044163 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:09.265677      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:10.266136      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:11.077127 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:11.266335      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:12.267312      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:13.081799 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:13.268180      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:14.268681      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:15.088640 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:15.269422      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:16.269836      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:17.093853 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:17.270536      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:18.270877      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:19.099760 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:19.271119      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:20.271667      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:21.104305 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:21.272113      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:22.272415      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:23.109831 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:23.273310      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:24.273757      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:25.114243 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:25.274737      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:26.275650      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:27.120854 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:27.276359      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:28.276839      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:29.126023 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:29.277221      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:30.277732      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:31.132061 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:31.277759      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:32.278207      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:33.137646 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:33.279154      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:34.279790      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:35.142303 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:35.280876      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:36.281043      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:37.147774 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:37.281235      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:38.281840      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:39.152093 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:39.282689      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:40.283310      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:41.156638 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:41.284504      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:42.285366      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:43.162197 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:43.285615      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:44.285806      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:45.168054 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:45.286467      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:46.286565      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:47.175715 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:47.287323      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:48.287787      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:49.183331 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:49.288557      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:50.288902      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:51.191188 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:51.290111      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:52.290696      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:53.199869 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:53.290978      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:54.291479      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:55.207190 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:55.292440      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:56.292906      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:57.213045 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:57.293999      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:42:58.294404      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:42:59.218859 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:42:59.295374      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:00.296089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:01.224812 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:43:01.296425      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:02.297140      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:03.232113 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:43:03.297468      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:04.298249      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:05.237539 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:43:05.299105      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:06.299167      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:07.242580 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:43:07.300073      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:08.300391      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:09.249559 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:43:09.301252      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:10.301916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:11.255406 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:43:11.302508      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:12.302892      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:13.261028 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:43:13.303354      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:14.303824      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:15.269231 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:43:15.304412      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:16.305588      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:17.275820 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:43:17.306238      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:18.306814      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:19.280622 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:43:19.307186      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:20.307488      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:21.284577 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:43:21.307913      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:22.308273      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:23.288761 21 container_probe.go:1759] Get pod test-grpc-a3aecff8-4ea7-4971-aaf3-4ec880f1478d in namespace container-probe-5457
  E0112 16:43:23.309281      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:24.309710      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/12/25 16:43:25.289
  E0112 16:43:25.310559      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:25.388192 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5457" for this suite. @ 01/12/25 16:43:25.393
• [242.983 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 01/12/25 16:43:25.422
  I0112 16:43:25.423037 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-runtime @ 01/12/25 16:43:25.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:43:25.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:43:25.498
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 01/12/25 16:43:25.516
  E0112 16:43:26.311729      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:27.312128      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:28.313256      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:29.313670      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:30.314000      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:31.314732      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:32.315402      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:33.315580      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:34.316340      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:35.317747      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:36.318514      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:37.319224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:38.320316      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:39.321252      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:40.321383      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:41.321503      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:42.321984      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:43.323026      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:44.323880      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 01/12/25 16:43:44.639
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 01/12/25 16:43:44.645
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 01/12/25 16:43:44.655
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 01/12/25 16:43:44.655
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 01/12/25 16:43:44.706
  E0112 16:43:45.324560      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:46.324697      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:47.325470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 01/12/25 16:43:47.73
  E0112 16:43:48.326044      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 01/12/25 16:43:48.746
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 01/12/25 16:43:48.758
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 01/12/25 16:43:48.759
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 01/12/25 16:43:48.813
  E0112 16:43:49.326150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 01/12/25 16:43:49.822
  E0112 16:43:50.327155      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:51.328128      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 01/12/25 16:43:51.842
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 01/12/25 16:43:51.855
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 01/12/25 16:43:51.856
  I0112 16:43:51.905432 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9677" for this suite. @ 01/12/25 16:43:51.911
• [26.506 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 01/12/25 16:43:51.929
  I0112 16:43:51.929709 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename runtimeclass @ 01/12/25 16:43:51.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:43:51.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:43:51.971
  STEP: Deleting RuntimeClass runtimeclass-2465-delete-me @ 01/12/25 16:43:51.991
  STEP: Waiting for the RuntimeClass to disappear @ 01/12/25 16:43:52.005
  I0112 16:43:52.016244 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2465" for this suite. @ 01/12/25 16:43:52.02
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 01/12/25 16:43:52.035
  I0112 16:43:52.035807 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename replication-controller @ 01/12/25 16:43:52.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:43:52.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:43:52.088
  I0112 16:43:52.095755 21 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0112 16:43:52.328316      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 01/12/25 16:43:53.116
  STEP: Checking rc "condition-test" has the desired failure condition set @ 01/12/25 16:43:53.132
  E0112 16:43:53.328847      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 01/12/25 16:43:54.14
  I0112 16:43:54.164105 21 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 01/12/25 16:43:54.164
  E0112 16:43:54.329055      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:55.172470 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1202" for this suite. @ 01/12/25 16:43:55.176
• [3.162 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 01/12/25 16:43:55.198
  I0112 16:43:55.198065 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 16:43:55.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:43:55.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:43:55.248
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/12/25 16:43:55.264
  I0112 16:43:55.265031 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2527 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0112 16:43:55.329499      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:55.356566 21 builder.go:146] stderr: ""
  I0112 16:43:55.356623 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 01/12/25 16:43:55.356
  I0112 16:43:55.356721 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2527 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0112 16:43:55.452740 21 builder.go:146] stderr: ""
  I0112 16:43:55.452836 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/12/25 16:43:55.452
  I0112 16:43:55.457730 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2527 delete pods e2e-test-httpd-pod'
  E0112 16:43:56.330757      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:43:57.165009 21 builder.go:146] stderr: ""
  I0112 16:43:57.165081 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0112 16:43:57.165247 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2527" for this suite. @ 01/12/25 16:43:57.169
• [1.986 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 01/12/25 16:43:57.183
  I0112 16:43:57.183973 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 16:43:57.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:43:57.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:43:57.232
  STEP: Setting up server cert @ 01/12/25 16:43:57.32
  E0112 16:43:57.331139      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 16:43:57.828
  STEP: Deploying the webhook pod @ 01/12/25 16:43:57.849
  STEP: Wait for the deployment to be ready @ 01/12/25 16:43:57.875
  I0112 16:43:57.885026 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0112 16:43:58.331534      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:43:59.332074      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/12/25 16:43:59.899
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 16:43:59.928
  E0112 16:44:00.335371      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:44:00.928840 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 01/12/25 16:44:00.937
  STEP: Creating a custom resource definition that should be denied by the webhook @ 01/12/25 16:44:00.961
  I0112 16:44:00.961365 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:44:01.126912 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1983" for this suite. @ 01/12/25 16:44:01.131
  STEP: Destroying namespace "webhook-markers-6114" for this suite. @ 01/12/25 16:44:01.148
• [3.987 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 01/12/25 16:44:01.17
  I0112 16:44:01.170956 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pod-network-test @ 01/12/25 16:44:01.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:44:01.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:44:01.2
  STEP: Performing setup for networking test in namespace pod-network-test-6207 @ 01/12/25 16:44:01.216
  STEP: creating a selector @ 01/12/25 16:44:01.216
  STEP: Creating the service pods in kubernetes @ 01/12/25 16:44:01.216
  I0112 16:44:01.216277 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0112 16:44:01.335963      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:02.336151      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:03.337243      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:04.337757      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:05.338611      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:06.339230      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:07.339483      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:08.340186      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:09.341195      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:10.341636      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:11.341969      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:12.342276      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:13.342487      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:14.342924      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:15.343421      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:16.344181      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:17.344217      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:18.345068      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:19.345490      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:20.345959      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:21.346758      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:22.347213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:23.348272      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/12/25 16:44:23.363
  E0112 16:44:24.348767      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:25.349108      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:44:25.427868 21 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0112 16:44:25.427977 21 utils.go:496] Going to poll 10.1.243.252 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0112 16:44:25.432151 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.243.252 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6207 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 16:44:25.432443 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:44:25.433295 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 16:44:25.433513 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6207/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.243.252+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0112 16:44:26.352063      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:44:26.506300 21 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0112 16:44:26.506353 21 utils.go:496] Going to poll 10.1.152.120 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0112 16:44:26.511554 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.152.120 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6207 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 16:44:26.511609 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:44:26.512194 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 16:44:26.512273 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6207/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.152.120+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0112 16:44:27.352675      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:44:27.581902 21 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0112 16:44:27.582205 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6207" for this suite. @ 01/12/25 16:44:27.589
• [26.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 01/12/25 16:44:27.618
  I0112 16:44:27.618390 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename endpointslice @ 01/12/25 16:44:27.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:44:27.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:44:27.664
  STEP: getting /apis @ 01/12/25 16:44:27.67
  STEP: getting /apis/discovery.k8s.io @ 01/12/25 16:44:27.675
  STEP: getting /apis/discovery.k8s.iov1 @ 01/12/25 16:44:27.676
  STEP: creating @ 01/12/25 16:44:27.677
  STEP: getting @ 01/12/25 16:44:27.727
  STEP: listing @ 01/12/25 16:44:27.73
  STEP: watching @ 01/12/25 16:44:27.733
  I0112 16:44:27.733620 21 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 01/12/25 16:44:27.735
  STEP: cluster-wide watching @ 01/12/25 16:44:27.738
  I0112 16:44:27.738336 21 endpointslice.go:459] starting watch
  STEP: patching @ 01/12/25 16:44:27.739
  STEP: updating @ 01/12/25 16:44:27.774
  I0112 16:44:27.803361 21 endpointslice.go:482] waiting for watch events with expected annotations
  I0112 16:44:27.803438 21 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 01/12/25 16:44:27.803
  STEP: deleting a collection @ 01/12/25 16:44:27.823
  I0112 16:44:27.859051 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8758" for this suite. @ 01/12/25 16:44:27.864
• [0.260 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 01/12/25 16:44:27.878
  I0112 16:44:27.878891 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 16:44:27.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:44:27.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:44:27.913
  STEP: Creating a ResourceQuota @ 01/12/25 16:44:27.918
  STEP: Getting a ResourceQuota @ 01/12/25 16:44:27.932
  STEP: Updating a ResourceQuota @ 01/12/25 16:44:27.935
  STEP: Verifying a ResourceQuota was modified @ 01/12/25 16:44:27.966
  STEP: Deleting a ResourceQuota @ 01/12/25 16:44:27.969
  STEP: Verifying the deleted ResourceQuota @ 01/12/25 16:44:27.991
  I0112 16:44:27.994328 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3563" for this suite. @ 01/12/25 16:44:27.998
• [0.134 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 01/12/25 16:44:28.013
  I0112 16:44:28.013491 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 16:44:28.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:44:28.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:44:28.059
  STEP: Creating configMap with name projected-configmap-test-volume-map-b778b499-b12f-44e2-8592-df97cb89e5fc @ 01/12/25 16:44:28.062
  STEP: Creating a pod to test consume configMaps @ 01/12/25 16:44:28.074
  E0112 16:44:28.353271      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:29.354105      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:30.355183      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:31.355885      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:44:32.121
  I0112 16:44:32.125772 21 output.go:196] Trying to get logs from node ubuntu pod pod-projected-configmaps-5146cb35-43ce-4dd1-82be-59e6ba785b9e container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 16:44:32.137
  I0112 16:44:32.190164 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8933" for this suite. @ 01/12/25 16:44:32.194
• [4.215 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 01/12/25 16:44:32.228
  I0112 16:44:32.228382 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 16:44:32.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:44:32.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:44:32.274
  STEP: Setting up server cert @ 01/12/25 16:44:32.334
  E0112 16:44:32.356862      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 16:44:32.933
  STEP: Deploying the webhook pod @ 01/12/25 16:44:32.968
  STEP: Wait for the deployment to be ready @ 01/12/25 16:44:32.992
  I0112 16:44:33.035583 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0112 16:44:33.357045      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:34.357723      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:44:35.048114 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 16, 44, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 44, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 44, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 44, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 16:44:35.358645      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:36.359436      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/12/25 16:44:37.053
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 16:44:37.081
  E0112 16:44:37.359898      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:44:38.081950 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/12/25 16:44:38.088
  STEP: create a pod @ 01/12/25 16:44:38.109
  E0112 16:44:38.361069      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:39.361334      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 01/12/25 16:44:40.13
  I0112 16:44:40.130594 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=webhook-5269 attach --namespace=webhook-5269 to-be-attached-pod -i -c=container1'
  I0112 16:44:40.221948 21 builder.go:135] rc: 1
  I0112 16:44:40.350183 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5269" for this suite. @ 01/12/25 16:44:40.356
  E0112 16:44:40.361900      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-9430" for this suite. @ 01/12/25 16:44:40.402
• [8.225 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 01/12/25 16:44:40.453
  I0112 16:44:40.453467 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubelet-test @ 01/12/25 16:44:40.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:44:40.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:44:40.528
  E0112 16:44:41.362423      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:42.363063      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:44:42.578709 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8788" for this suite. @ 01/12/25 16:44:42.583
• [2.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 01/12/25 16:44:42.599
  I0112 16:44:42.599250 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 16:44:42.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:44:42.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:44:42.633
  STEP: Creating projection with secret that has name projected-secret-test-map-662d32eb-9aac-4915-8fdc-72aaadb01d5d @ 01/12/25 16:44:42.644
  STEP: Creating a pod to test consume secrets @ 01/12/25 16:44:42.659
  E0112 16:44:43.363655      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:44.364431      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:45.364391      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:46.365311      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:44:46.689
  I0112 16:44:46.693157 21 output.go:196] Trying to get logs from node ubuntu pod pod-projected-secrets-b640bbaf-35c8-4244-b04d-18627e2e9319 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 16:44:46.699
  I0112 16:44:46.754355 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2137" for this suite. @ 01/12/25 16:44:46.758
• [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 01/12/25 16:44:46.776
  I0112 16:44:46.776041 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename podtemplate @ 01/12/25 16:44:46.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:44:46.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:44:46.814
  STEP: Create a pod template @ 01/12/25 16:44:46.821
  STEP: Replace a pod template @ 01/12/25 16:44:46.834
  I0112 16:44:46.851553 21 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0112 16:44:46.851702 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-598" for this suite. @ 01/12/25 16:44:46.855
• [0.092 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 01/12/25 16:44:46.868
  I0112 16:44:46.868235 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename gc @ 01/12/25 16:44:46.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:44:46.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:44:46.91
  STEP: create the rc @ 01/12/25 16:44:46.917
  W0112 16:44:46.935814      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0112 16:44:47.366234      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:48.366872      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:49.367648      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:50.367827      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:51.368557      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:52.368808      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:53.369909      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:54.370053      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/12/25 16:44:54.943
  STEP: wait for the rc to be deleted @ 01/12/25 16:44:55.107
  E0112 16:44:55.371086      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:56.371312      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:57.371591      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:58.372153      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:44:59.373355      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 01/12/25 16:45:00.116
  E0112 16:45:00.373845      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:01.373855      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:02.374014      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:03.374675      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:04.375169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:05.376210      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:06.377461      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:07.378265      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:08.380159      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:09.380358      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:10.381392      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:11.382510      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:12.382688      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:13.383027      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:14.383448      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:15.383790      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:16.385446      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:17.385753      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:18.386436      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:19.386736      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:20.387177      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:21.388111      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:22.388925      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:23.389423      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:24.389812      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:25.390166      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:26.391032      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:27.391436      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:28.391884      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:29.392191      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/12/25 16:45:30.133
  W0112 16:45:30.139203      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0112 16:45:30.139285 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0112 16:45:30.139477 21 delete.go:95] Deleting pod "simpletest.rc-292p9" in namespace "gc-312"
  I0112 16:45:30.185139 21 delete.go:95] Deleting pod "simpletest.rc-2qfch" in namespace "gc-312"
  I0112 16:45:30.246254 21 delete.go:95] Deleting pod "simpletest.rc-486kw" in namespace "gc-312"
  I0112 16:45:30.290521 21 delete.go:95] Deleting pod "simpletest.rc-4clzc" in namespace "gc-312"
  E0112 16:45:30.392888      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:30.425958 21 delete.go:95] Deleting pod "simpletest.rc-55bg2" in namespace "gc-312"
  I0112 16:45:30.505817 21 delete.go:95] Deleting pod "simpletest.rc-568mx" in namespace "gc-312"
  I0112 16:45:30.594838 21 delete.go:95] Deleting pod "simpletest.rc-56gfm" in namespace "gc-312"
  I0112 16:45:30.690944 21 delete.go:95] Deleting pod "simpletest.rc-69dsq" in namespace "gc-312"
  I0112 16:45:30.786741 21 delete.go:95] Deleting pod "simpletest.rc-6bx6x" in namespace "gc-312"
  I0112 16:45:30.834516 21 delete.go:95] Deleting pod "simpletest.rc-6fwq2" in namespace "gc-312"
  I0112 16:45:30.970002 21 delete.go:95] Deleting pod "simpletest.rc-6qvmx" in namespace "gc-312"
  I0112 16:45:31.041382 21 delete.go:95] Deleting pod "simpletest.rc-6rlqz" in namespace "gc-312"
  I0112 16:45:31.167445 21 delete.go:95] Deleting pod "simpletest.rc-77z59" in namespace "gc-312"
  I0112 16:45:31.275564 21 delete.go:95] Deleting pod "simpletest.rc-79kc7" in namespace "gc-312"
  E0112 16:45:31.393418      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:31.512350 21 delete.go:95] Deleting pod "simpletest.rc-7ggnc" in namespace "gc-312"
  I0112 16:45:31.612352 21 delete.go:95] Deleting pod "simpletest.rc-7kz4k" in namespace "gc-312"
  I0112 16:45:31.705906 21 delete.go:95] Deleting pod "simpletest.rc-85jgk" in namespace "gc-312"
  I0112 16:45:31.869512 21 delete.go:95] Deleting pod "simpletest.rc-8rvtg" in namespace "gc-312"
  I0112 16:45:31.951909 21 delete.go:95] Deleting pod "simpletest.rc-9c94h" in namespace "gc-312"
  I0112 16:45:32.093432 21 delete.go:95] Deleting pod "simpletest.rc-9rdtk" in namespace "gc-312"
  I0112 16:45:32.197699 21 delete.go:95] Deleting pod "simpletest.rc-b7jml" in namespace "gc-312"
  I0112 16:45:32.325340 21 delete.go:95] Deleting pod "simpletest.rc-bg5pb" in namespace "gc-312"
  E0112 16:45:32.394433      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:32.450874 21 delete.go:95] Deleting pod "simpletest.rc-bjtwt" in namespace "gc-312"
  I0112 16:45:32.596528 21 delete.go:95] Deleting pod "simpletest.rc-blp9c" in namespace "gc-312"
  I0112 16:45:32.752307 21 delete.go:95] Deleting pod "simpletest.rc-bxqdh" in namespace "gc-312"
  I0112 16:45:32.829412 21 delete.go:95] Deleting pod "simpletest.rc-c8qqs" in namespace "gc-312"
  I0112 16:45:32.954320 21 delete.go:95] Deleting pod "simpletest.rc-c8xjz" in namespace "gc-312"
  I0112 16:45:33.065391 21 delete.go:95] Deleting pod "simpletest.rc-cw9rb" in namespace "gc-312"
  I0112 16:45:33.244125 21 delete.go:95] Deleting pod "simpletest.rc-d6m2p" in namespace "gc-312"
  I0112 16:45:33.364911 21 delete.go:95] Deleting pod "simpletest.rc-dc4l8" in namespace "gc-312"
  E0112 16:45:33.394645      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:33.501326 21 delete.go:95] Deleting pod "simpletest.rc-f595z" in namespace "gc-312"
  I0112 16:45:33.612078 21 delete.go:95] Deleting pod "simpletest.rc-fnbv9" in namespace "gc-312"
  I0112 16:45:33.752462 21 delete.go:95] Deleting pod "simpletest.rc-g87jm" in namespace "gc-312"
  I0112 16:45:33.873355 21 delete.go:95] Deleting pod "simpletest.rc-gtmct" in namespace "gc-312"
  I0112 16:45:33.974224 21 delete.go:95] Deleting pod "simpletest.rc-gvr7r" in namespace "gc-312"
  I0112 16:45:34.095067 21 delete.go:95] Deleting pod "simpletest.rc-h5jzx" in namespace "gc-312"
  I0112 16:45:34.206717 21 delete.go:95] Deleting pod "simpletest.rc-h6kw6" in namespace "gc-312"
  I0112 16:45:34.377917 21 delete.go:95] Deleting pod "simpletest.rc-h9xdx" in namespace "gc-312"
  E0112 16:45:34.395628      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:34.595238 21 delete.go:95] Deleting pod "simpletest.rc-hbqfv" in namespace "gc-312"
  I0112 16:45:34.704977 21 delete.go:95] Deleting pod "simpletest.rc-hlrdz" in namespace "gc-312"
  I0112 16:45:34.893869 21 delete.go:95] Deleting pod "simpletest.rc-hqshg" in namespace "gc-312"
  I0112 16:45:34.995541 21 delete.go:95] Deleting pod "simpletest.rc-ht8wg" in namespace "gc-312"
  I0112 16:45:35.066887 21 delete.go:95] Deleting pod "simpletest.rc-hvjk8" in namespace "gc-312"
  I0112 16:45:35.185987 21 delete.go:95] Deleting pod "simpletest.rc-j5rvr" in namespace "gc-312"
  I0112 16:45:35.273129 21 delete.go:95] Deleting pod "simpletest.rc-j68d7" in namespace "gc-312"
  E0112 16:45:35.396472      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:35.407691 21 delete.go:95] Deleting pod "simpletest.rc-j9jhx" in namespace "gc-312"
  I0112 16:45:35.572209 21 delete.go:95] Deleting pod "simpletest.rc-jnkxm" in namespace "gc-312"
  I0112 16:45:35.690709 21 delete.go:95] Deleting pod "simpletest.rc-jtb7g" in namespace "gc-312"
  I0112 16:45:35.802165 21 delete.go:95] Deleting pod "simpletest.rc-jtlcz" in namespace "gc-312"
  I0112 16:45:35.900593 21 delete.go:95] Deleting pod "simpletest.rc-jtvj8" in namespace "gc-312"
  I0112 16:45:36.021417 21 delete.go:95] Deleting pod "simpletest.rc-jtztb" in namespace "gc-312"
  I0112 16:45:36.167801 21 delete.go:95] Deleting pod "simpletest.rc-jx6fn" in namespace "gc-312"
  I0112 16:45:36.299877 21 delete.go:95] Deleting pod "simpletest.rc-ktv52" in namespace "gc-312"
  E0112 16:45:36.397082      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:36.474671 21 delete.go:95] Deleting pod "simpletest.rc-ljkjv" in namespace "gc-312"
  I0112 16:45:36.599250 21 delete.go:95] Deleting pod "simpletest.rc-lp75p" in namespace "gc-312"
  I0112 16:45:36.739023 21 delete.go:95] Deleting pod "simpletest.rc-lt4cq" in namespace "gc-312"
  I0112 16:45:36.889886 21 delete.go:95] Deleting pod "simpletest.rc-m7g4w" in namespace "gc-312"
  I0112 16:45:36.950474 21 delete.go:95] Deleting pod "simpletest.rc-mgqpf" in namespace "gc-312"
  I0112 16:45:37.068469 21 delete.go:95] Deleting pod "simpletest.rc-np8hs" in namespace "gc-312"
  I0112 16:45:37.160270 21 delete.go:95] Deleting pod "simpletest.rc-ppkm2" in namespace "gc-312"
  I0112 16:45:37.254645 21 delete.go:95] Deleting pod "simpletest.rc-pxm94" in namespace "gc-312"
  I0112 16:45:37.334417 21 delete.go:95] Deleting pod "simpletest.rc-q2kl5" in namespace "gc-312"
  E0112 16:45:37.397048      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:37.429424 21 delete.go:95] Deleting pod "simpletest.rc-qd9nw" in namespace "gc-312"
  I0112 16:45:37.487382 21 delete.go:95] Deleting pod "simpletest.rc-qkm74" in namespace "gc-312"
  I0112 16:45:37.588638 21 delete.go:95] Deleting pod "simpletest.rc-qm9cw" in namespace "gc-312"
  I0112 16:45:37.655231 21 delete.go:95] Deleting pod "simpletest.rc-rp4q5" in namespace "gc-312"
  I0112 16:45:37.790513 21 delete.go:95] Deleting pod "simpletest.rc-rwzwd" in namespace "gc-312"
  I0112 16:45:37.906637 21 delete.go:95] Deleting pod "simpletest.rc-rzxn5" in namespace "gc-312"
  I0112 16:45:38.055217 21 delete.go:95] Deleting pod "simpletest.rc-s8btc" in namespace "gc-312"
  I0112 16:45:38.221327 21 delete.go:95] Deleting pod "simpletest.rc-sp2sj" in namespace "gc-312"
  I0112 16:45:38.327088 21 delete.go:95] Deleting pod "simpletest.rc-svk87" in namespace "gc-312"
  E0112 16:45:38.397607      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:38.464309 21 delete.go:95] Deleting pod "simpletest.rc-sxvgg" in namespace "gc-312"
  I0112 16:45:38.669469 21 delete.go:95] Deleting pod "simpletest.rc-t55g6" in namespace "gc-312"
  I0112 16:45:38.803075 21 delete.go:95] Deleting pod "simpletest.rc-tk2ss" in namespace "gc-312"
  I0112 16:45:38.902553 21 delete.go:95] Deleting pod "simpletest.rc-tr59f" in namespace "gc-312"
  I0112 16:45:39.028997 21 delete.go:95] Deleting pod "simpletest.rc-tvdpp" in namespace "gc-312"
  I0112 16:45:39.135632 21 delete.go:95] Deleting pod "simpletest.rc-txmlq" in namespace "gc-312"
  I0112 16:45:39.255449 21 delete.go:95] Deleting pod "simpletest.rc-v9c9z" in namespace "gc-312"
  I0112 16:45:39.313556 21 delete.go:95] Deleting pod "simpletest.rc-vdxtr" in namespace "gc-312"
  E0112 16:45:39.397634      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:39.455058 21 delete.go:95] Deleting pod "simpletest.rc-w4r4g" in namespace "gc-312"
  I0112 16:45:39.546393 21 delete.go:95] Deleting pod "simpletest.rc-w6bfn" in namespace "gc-312"
  I0112 16:45:39.701595 21 delete.go:95] Deleting pod "simpletest.rc-w6pg4" in namespace "gc-312"
  I0112 16:45:39.850998 21 delete.go:95] Deleting pod "simpletest.rc-wcgbc" in namespace "gc-312"
  I0112 16:45:39.952163 21 delete.go:95] Deleting pod "simpletest.rc-wtwd4" in namespace "gc-312"
  I0112 16:45:40.061920 21 delete.go:95] Deleting pod "simpletest.rc-x2tnz" in namespace "gc-312"
  I0112 16:45:40.140612 21 delete.go:95] Deleting pod "simpletest.rc-x49qb" in namespace "gc-312"
  I0112 16:45:40.237775 21 delete.go:95] Deleting pod "simpletest.rc-xff6d" in namespace "gc-312"
  I0112 16:45:40.349978 21 delete.go:95] Deleting pod "simpletest.rc-xh6lx" in namespace "gc-312"
  E0112 16:45:40.399819      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:40.541880 21 delete.go:95] Deleting pod "simpletest.rc-xl86d" in namespace "gc-312"
  I0112 16:45:40.661353 21 delete.go:95] Deleting pod "simpletest.rc-xsfcl" in namespace "gc-312"
  I0112 16:45:40.790172 21 delete.go:95] Deleting pod "simpletest.rc-xtrpf" in namespace "gc-312"
  I0112 16:45:40.989373 21 delete.go:95] Deleting pod "simpletest.rc-xwpnw" in namespace "gc-312"
  I0112 16:45:41.133715 21 delete.go:95] Deleting pod "simpletest.rc-xwtqz" in namespace "gc-312"
  I0112 16:45:41.280548 21 delete.go:95] Deleting pod "simpletest.rc-xxkqg" in namespace "gc-312"
  I0112 16:45:41.371567 21 delete.go:95] Deleting pod "simpletest.rc-xxtmr" in namespace "gc-312"
  E0112 16:45:41.400407      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:41.506637 21 delete.go:95] Deleting pod "simpletest.rc-xzjtt" in namespace "gc-312"
  I0112 16:45:41.602271 21 delete.go:95] Deleting pod "simpletest.rc-z5vfk" in namespace "gc-312"
  I0112 16:45:41.708722 21 delete.go:95] Deleting pod "simpletest.rc-z6bjn" in namespace "gc-312"
  I0112 16:45:41.815388 21 delete.go:95] Deleting pod "simpletest.rc-z84jz" in namespace "gc-312"
  I0112 16:45:41.895131 21 delete.go:95] Deleting pod "simpletest.rc-zst8d" in namespace "gc-312"
  I0112 16:45:41.945551 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-312" for this suite. @ 01/12/25 16:45:41.96
• [55.188 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 01/12/25 16:45:42.058
  I0112 16:45:42.058196 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename dns @ 01/12/25 16:45:42.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:45:42.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:45:42.156
  STEP: Creating a test externalName service @ 01/12/25 16:45:42.172
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4280.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-4280.svc.cluster.local; sleep 1; done
   @ 01/12/25 16:45:42.212
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4280.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4280.svc.cluster.local; sleep 1; done
   @ 01/12/25 16:45:42.212
  STEP: creating a pod to probe DNS @ 01/12/25 16:45:42.212
  STEP: submitting the pod to kubernetes @ 01/12/25 16:45:42.212
  E0112 16:45:42.400903      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:43.401153      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:44.402253      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:45.403258      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/12/25 16:45:46.268
  STEP: looking for the results for each expected name from probers @ 01/12/25 16:45:46.273
  I0112 16:45:46.283868 21 dns_common.go:552] DNS probes using dns-test-03e64e4c-55e8-4e17-b8c7-2235cbff6345 succeeded

  STEP: changing the externalName to bar.example.com @ 01/12/25 16:45:46.283
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4280.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-4280.svc.cluster.local; sleep 1; done
   @ 01/12/25 16:45:46.301
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4280.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4280.svc.cluster.local; sleep 1; done
   @ 01/12/25 16:45:46.301
  STEP: creating a second pod to probe DNS @ 01/12/25 16:45:46.301
  STEP: submitting the pod to kubernetes @ 01/12/25 16:45:46.301
  E0112 16:45:46.403732      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:47.403987      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/12/25 16:45:48.319
  STEP: looking for the results for each expected name from probers @ 01/12/25 16:45:48.322
  I0112 16:45:48.327139 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-4280.svc.cluster.local from pod  dns-4280/dns-test-903a4f87-28b9-45ae-8efb-9d806616d5f7 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0112 16:45:48.337231 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-4280.svc.cluster.local from pod  dns-4280/dns-test-903a4f87-28b9-45ae-8efb-9d806616d5f7 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0112 16:45:48.337312 21 dns_common.go:489] Lookups using dns-4280/dns-test-903a4f87-28b9-45ae-8efb-9d806616d5f7 failed for: [wheezy_udp@dns-test-service-3.dns-4280.svc.cluster.local jessie_udp@dns-test-service-3.dns-4280.svc.cluster.local]

  I0112 16:45:48.343644 21 dns_common.go:495] Pod client logs for webserver: 
  I0112 16:45:48.350534 21 dns_common.go:495] Pod client logs for querier: 
  I0112 16:45:48.358337 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0112 16:45:48.404777      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:49.405416      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:50.405522      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:51.406411      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:52.406790      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:45:53.330872 21 dns_common.go:552] DNS probes using dns-test-903a4f87-28b9-45ae-8efb-9d806616d5f7 succeeded

  STEP: changing the service to type=ClusterIP @ 01/12/25 16:45:53.33
  W0112 16:45:53.380772      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4280.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-4280.svc.cluster.local; sleep 1; done
   @ 01/12/25 16:45:53.38
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4280.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-4280.svc.cluster.local; sleep 1; done
   @ 01/12/25 16:45:53.38
  STEP: creating a third pod to probe DNS @ 01/12/25 16:45:53.38
  STEP: submitting the pod to kubernetes @ 01/12/25 16:45:53.384
  E0112 16:45:53.406968      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:54.407765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:55.408309      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:56.409051      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:57.409629      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:58.410341      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:45:59.410304      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:00.411327      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:01.411815      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:02.412610      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:03.413378      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:04.413487      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:05.414247      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:06.414761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:07.415266      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:08.415464      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:09.415733      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:10.416001      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:11.416811      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:12.417860      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:13.418186      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:14.418438      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:15.419216      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/12/25 16:46:15.492
  STEP: looking for the results for each expected name from probers @ 01/12/25 16:46:15.497
  I0112 16:46:15.507143 21 dns_common.go:552] DNS probes using dns-test-b1ee0cd5-1899-4cc5-b995-f7432a337798 succeeded

  STEP: deleting the pod @ 01/12/25 16:46:15.507
  STEP: deleting the pod @ 01/12/25 16:46:15.548
  STEP: deleting the pod @ 01/12/25 16:46:15.605
  STEP: deleting the test externalName service @ 01/12/25 16:46:15.688
  I0112 16:46:15.772616 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4280" for this suite. @ 01/12/25 16:46:15.787
• [33.742 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 01/12/25 16:46:15.8
  I0112 16:46:15.800726 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename prestop @ 01/12/25 16:46:15.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:46:15.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:46:15.849
  STEP: Creating server pod server in namespace prestop-9831 @ 01/12/25 16:46:15.88
  STEP: Waiting for pods to come up. @ 01/12/25 16:46:15.903
  E0112 16:46:16.419428      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:17.419892      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-9831 @ 01/12/25 16:46:17.92
  E0112 16:46:18.420204      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:19.420644      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 01/12/25 16:46:19.944
  E0112 16:46:20.420867      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:21.421603      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:22.421711      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:23.422215      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:24.423031      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:46:24.964679 21 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 01/12/25 16:46:24.965
  I0112 16:46:25.015276 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9831" for this suite. @ 01/12/25 16:46:25.02
• [9.248 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 01/12/25 16:46:25.049
  I0112 16:46:25.049352 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename taint-single-pod @ 01/12/25 16:46:25.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:46:25.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:46:25.102
  I0112 16:46:25.106505 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0112 16:46:25.423814      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:26.425008      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:27.425452      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:28.426139      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:29.426323      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:30.427281      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:31.428430      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:32.428701      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:33.429032      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:34.429409      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:35.430139      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:36.430828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:37.431916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:38.432384      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:39.433578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:40.433879      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:41.434149      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:42.434504      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:43.435237      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:44.435534      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:45.436182      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:46.436740      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:47.437244      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:48.438322      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:49.439502      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:50.440400      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:51.441296      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:52.441453      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:53.442038      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:54.442398      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:55.443262      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:56.443638      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:57.444420      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:58.444852      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:46:59.445800      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:00.446243      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:01.446795      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:02.447399      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:03.447592      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:04.448142      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:05.448195      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:06.449220      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:07.450132      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:08.450463      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:09.450873      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:10.451302      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:11.452554      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:12.453032      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:13.453136      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:14.453509      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:15.453855      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:16.454745      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:17.455221      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:18.455587      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:19.456107      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:20.456568      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:21.457650      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:22.458064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:23.459148      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:24.459592      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:47:25.106890 21 util.go:393] Waiting for terminating namespaces to be deleted...
  I0112 16:47:25.111661 21 taints.go:144] Starting informer...
  STEP: Starting pod... @ 01/12/25 16:47:25.111
  I0112 16:47:25.341274 21 taints.go:294] Pod is running on ubuntu. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/12/25 16:47:25.341
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/12/25 16:47:25.369
  STEP: Waiting short time to make sure Pod is queued for deletion @ 01/12/25 16:47:25.374
  I0112 16:47:25.374282 21 taints.go:313] Pod wasn't evicted. Proceeding
  I0112 16:47:25.374310 21 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/12/25 16:47:25.392
  STEP: Waiting some time to make sure that toleration time passed. @ 01/12/25 16:47:25.396
  E0112 16:47:25.460398      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:26.460975      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:27.461466      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:28.461779      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:29.462175      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:30.462572      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:31.462758      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:32.463160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:33.463261      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:34.463614      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:35.464014      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:36.465190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:37.465766      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:38.466175      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:39.466504      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:40.466898      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:41.467916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:42.468272      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:43.468492      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:44.468711      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:45.469292      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:46.470339      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:47.471070      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:48.471385      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:49.471880      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:50.472397      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:51.473650      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:52.474155      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:53.474716      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:54.475274      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:55.476328      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:56.477017      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:57.477712      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:58.477903      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:47:59.478677      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:00.479133      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:01.480200      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:02.480925      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:03.481589      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:04.482124      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:05.482187      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:06.482464      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:07.482906      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:08.483774      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:09.484175      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:10.484561      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:11.485651      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:12.486242      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:13.486982      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:14.487490      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:15.488306      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:16.489328      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:17.490053      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:18.490544      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:19.491458      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:20.491883      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:21.492793      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:22.493095      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:23.493684      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:24.494141      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:25.494545      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:26.495535      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:27.496291      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:28.496817      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:29.497263      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:30.497491      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:31.498637      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:32.499152      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:33.499711      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:34.500260      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:35.500630      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:36.501449      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:37.501883      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:38.502299      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:39.502630      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:48:40.396839 21 taints.go:329] Pod wasn't evicted. Test successful
  I0112 16:48:40.397242 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3665" for this suite. @ 01/12/25 16:48:40.403
• [135.372 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 01/12/25 16:48:40.421
  I0112 16:48:40.421437 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename csistoragecapacity @ 01/12/25 16:48:40.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:48:40.5
  E0112 16:48:40.503372      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:48:40.505
  STEP: getting /apis @ 01/12/25 16:48:40.509
  STEP: getting /apis/storage.k8s.io @ 01/12/25 16:48:40.513
  STEP: getting /apis/storage.k8s.io/v1 @ 01/12/25 16:48:40.515
  STEP: creating @ 01/12/25 16:48:40.517
  STEP: watching @ 01/12/25 16:48:40.549
  I0112 16:48:40.549668 21 csistoragecapacity.go:143] starting watch
  STEP: getting @ 01/12/25 16:48:40.564
  STEP: listing in namespace @ 01/12/25 16:48:40.568
  STEP: listing across namespaces @ 01/12/25 16:48:40.572
  STEP: patching @ 01/12/25 16:48:40.575
  STEP: updating @ 01/12/25 16:48:40.589
  I0112 16:48:40.602337 21 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0112 16:48:40.602476 21 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 01/12/25 16:48:40.602
  STEP: deleting a collection @ 01/12/25 16:48:40.623
  I0112 16:48:40.662664 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-7870" for this suite. @ 01/12/25 16:48:40.666
• [0.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 01/12/25 16:48:40.68
  I0112 16:48:40.680812 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pods @ 01/12/25 16:48:40.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:48:40.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:48:40.713
  I0112 16:48:40.718172 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: creating the pod @ 01/12/25 16:48:40.718
  STEP: submitting the pod to kubernetes @ 01/12/25 16:48:40.719
  E0112 16:48:41.503579      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:42.504036      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:48:42.784909 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6996" for this suite. @ 01/12/25 16:48:42.789
• [2.133 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 01/12/25 16:48:42.813
  I0112 16:48:42.813678 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename proxy @ 01/12/25 16:48:42.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:48:42.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:48:42.85
  I0112 16:48:42.854303 21 proxy.go:387] Creating pod...
  E0112 16:48:43.504199      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:44.504677      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:48:44.890372 21 proxy.go:411] Creating service...
  I0112 16:48:44.914753 21 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/pods/agnhost/proxy?method=DELETE
  I0112 16:48:44.920777 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0112 16:48:44.920831 21 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/pods/agnhost/proxy?method=OPTIONS
  I0112 16:48:44.925452 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0112 16:48:44.925594 21 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/pods/agnhost/proxy?method=PATCH
  I0112 16:48:44.930756 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0112 16:48:44.930835 21 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/pods/agnhost/proxy?method=POST
  I0112 16:48:44.935921 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0112 16:48:44.936014 21 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/pods/agnhost/proxy?method=PUT
  I0112 16:48:44.940854 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0112 16:48:44.940953 21 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/services/e2e-proxy-test-service/proxy?method=DELETE
  I0112 16:48:44.949303 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0112 16:48:44.949385 21 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0112 16:48:44.959155 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0112 16:48:44.959259 21 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/services/e2e-proxy-test-service/proxy?method=PATCH
  I0112 16:48:44.966745 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0112 16:48:44.966830 21 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/services/e2e-proxy-test-service/proxy?method=POST
  I0112 16:48:44.973360 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0112 16:48:44.973444 21 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/services/e2e-proxy-test-service/proxy?method=PUT
  I0112 16:48:44.979724 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0112 16:48:44.979780 21 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/pods/agnhost/proxy?method=GET
  I0112 16:48:44.983447 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0112 16:48:44.983530 21 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/services/e2e-proxy-test-service/proxy?method=GET
  I0112 16:48:44.988367 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0112 16:48:44.988459 21 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/pods/agnhost/proxy?method=HEAD
  I0112 16:48:44.991774 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0112 16:48:44.991840 21 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9160/services/e2e-proxy-test-service/proxy?method=HEAD
  I0112 16:48:44.997358 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0112 16:48:44.997566 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9160" for this suite. @ 01/12/25 16:48:45.002
• [2.202 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 01/12/25 16:48:45.015
  I0112 16:48:45.015688 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename security-context-test @ 01/12/25 16:48:45.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:48:45.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:48:45.047
  E0112 16:48:45.505536      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:46.506667      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:47.506830      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:48.507578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:49.507891      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:50.508570      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:48:51.097593 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9004" for this suite. @ 01/12/25 16:48:51.102
• [6.107 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 01/12/25 16:48:51.122
  I0112 16:48:51.122593 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename cronjob @ 01/12/25 16:48:51.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:48:51.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:48:51.169
  STEP: Creating a ReplaceConcurrent cronjob @ 01/12/25 16:48:51.173
  STEP: Ensuring a job is scheduled @ 01/12/25 16:48:51.191
  E0112 16:48:51.509529      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:52.510541      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:53.510606      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:54.510767      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:55.511972      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:56.512701      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:57.513030      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:58.513351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:48:59.514241      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:00.514765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 01/12/25 16:49:01.195
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/12/25 16:49:01.198
  STEP: Ensuring the job is replaced with a new one @ 01/12/25 16:49:01.201
  E0112 16:49:01.515520      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:02.515747      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:03.515903      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:04.516632      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:05.517618      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:06.518747      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:07.519975      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:08.520305      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:09.520576      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:10.521083      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:11.521379      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:12.521830      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:13.522981      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:14.524153      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:15.524230      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:16.524284      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:17.524363      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:18.524853      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:19.525508      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:20.525994      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:21.526253      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:22.526604      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:23.527764      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:24.528078      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:25.529045      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:26.529224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:27.530212      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:28.530803      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:29.531897      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:30.532344      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:31.533540      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:32.534184      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:33.534882      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:34.535351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:35.536332      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:36.537239      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:37.538122      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:38.538796      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:39.538977      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:40.539425      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:41.539803      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:42.540227      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:43.541243      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:44.541816      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:45.542640      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:46.542775      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:47.543719      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:48.544143      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:49.545010      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:50.545379      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:51.546825      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:52.547328      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:53.548257      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:54.548679      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:55.549094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:56.549796      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:57.550550      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:58.551118      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:49:59.551819      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:00.552285      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 01/12/25 16:50:01.207
  I0112 16:50:01.225699 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3629" for this suite. @ 01/12/25 16:50:01.232
• [70.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 01/12/25 16:50:01.261
  I0112 16:50:01.261863 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-runtime @ 01/12/25 16:50:01.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:01.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:01.311
  STEP: create the container @ 01/12/25 16:50:01.317
  W0112 16:50:01.332468      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 01/12/25 16:50:01.332
  E0112 16:50:01.553395      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:02.553769      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:03.554226      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/12/25 16:50:04.35
  STEP: the container should be terminated @ 01/12/25 16:50:04.354
  STEP: the termination message should be set @ 01/12/25 16:50:04.354
  I0112 16:50:04.354411 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/12/25 16:50:04.354
  I0112 16:50:04.397908 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7302" for this suite. @ 01/12/25 16:50:04.402
• [3.155 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 01/12/25 16:50:04.417
  I0112 16:50:04.417348 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 16:50:04.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:04.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:04.465
  STEP: Creating secret with name secret-test-map-83581ca8-332e-4cef-893f-db362180f063 @ 01/12/25 16:50:04.468
  STEP: Creating a pod to test consume secrets @ 01/12/25 16:50:04.488
  E0112 16:50:04.554841      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:05.555185      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:06.556011      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:07.556403      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:50:08.522
  I0112 16:50:08.526225 21 output.go:196] Trying to get logs from node ubuntu pod pod-secrets-9861848c-3471-415b-90be-cbb5a6169e1d container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 16:50:08.532
  E0112 16:50:08.556566      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:08.563393 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4693" for this suite. @ 01/12/25 16:50:08.567
• [4.165 seconds]
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 01/12/25 16:50:08.582
  I0112 16:50:08.582653 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename events @ 01/12/25 16:50:08.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:08.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:08.625
  STEP: creating a test event @ 01/12/25 16:50:08.629
  STEP: listing events in all namespaces @ 01/12/25 16:50:08.641
  STEP: listing events in test namespace @ 01/12/25 16:50:08.645
  STEP: listing events with field selection filtering on source @ 01/12/25 16:50:08.65
  STEP: listing events with field selection filtering on reportingController @ 01/12/25 16:50:08.653
  STEP: getting the test event @ 01/12/25 16:50:08.657
  STEP: patching the test event @ 01/12/25 16:50:08.661
  STEP: getting the test event @ 01/12/25 16:50:08.68
  STEP: updating the test event @ 01/12/25 16:50:08.684
  STEP: getting the test event @ 01/12/25 16:50:08.699
  STEP: deleting the test event @ 01/12/25 16:50:08.703
  STEP: listing events in all namespaces @ 01/12/25 16:50:08.718
  STEP: listing events in test namespace @ 01/12/25 16:50:08.722
  I0112 16:50:08.726819 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8687" for this suite. @ 01/12/25 16:50:08.731
• [0.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 01/12/25 16:50:08.752
  I0112 16:50:08.752864 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 16:50:08.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:08.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:08.794
  STEP: Creating projection with secret that has name projected-secret-test-5460c802-78e2-4120-918a-3e442deda5a2 @ 01/12/25 16:50:08.799
  STEP: Creating a pod to test consume secrets @ 01/12/25 16:50:08.81
  E0112 16:50:09.557183      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:10.557666      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:11.558525      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:12.559199      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:50:12.844
  I0112 16:50:12.850776 21 output.go:196] Trying to get logs from node ubuntu pod pod-projected-secrets-00c80270-1a5a-43ed-a4c7-f5bee1fd0381 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 16:50:12.859
  I0112 16:50:12.899410 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-834" for this suite. @ 01/12/25 16:50:12.904
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 01/12/25 16:50:12.927
  I0112 16:50:12.927255 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename containers @ 01/12/25 16:50:12.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:12.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:12.959
  STEP: Creating a pod to test override command @ 01/12/25 16:50:12.963
  E0112 16:50:13.560216      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:14.560839      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:15.561089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:16.562128      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:50:16.994
  I0112 16:50:16.997880 21 output.go:196] Trying to get logs from node ubuntu pod client-containers-6b448d5f-59f7-4a08-8dde-733844abb6f8 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 16:50:17.004
  I0112 16:50:17.039143 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-715" for this suite. @ 01/12/25 16:50:17.042
• [4.139 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 01/12/25 16:50:17.066
  I0112 16:50:17.066340 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 16:50:17.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:17.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:17.11
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 16:50:17.123
  E0112 16:50:17.563338      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:18.564079      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:19.565225      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:20.565582      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:50:21.166
  I0112 16:50:21.171643 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-587993a2-0aa3-4a2d-9757-27ce02a7b4e7 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 16:50:21.18
  I0112 16:50:21.213688 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3474" for this suite. @ 01/12/25 16:50:21.218
• [4.167 seconds]
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 01/12/25 16:50:21.232
  I0112 16:50:21.232956 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename controllerrevisions @ 01/12/25 16:50:21.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:21.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:21.275
  STEP: Creating DaemonSet "e2e-5gpnb-daemon-set" @ 01/12/25 16:50:21.306
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/12/25 16:50:21.319
  I0112 16:50:21.328350 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-5gpnb-daemon-set: 0
  I0112 16:50:21.328447 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  E0112 16:50:21.566145      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:22.328002 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-5gpnb-daemon-set: 0
  I0112 16:50:22.328076 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  E0112 16:50:22.566408      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:23.328133 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-5gpnb-daemon-set: 2
  I0112 16:50:23.328199 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-5gpnb-daemon-set
  STEP: Confirm DaemonSet "e2e-5gpnb-daemon-set" successfully created with "daemonset-name=e2e-5gpnb-daemon-set" label @ 01/12/25 16:50:23.332
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-5gpnb-daemon-set" @ 01/12/25 16:50:23.34
  I0112 16:50:23.344658 21 controller_revision.go:162] Located ControllerRevision: "e2e-5gpnb-daemon-set-7b64b47ff6"
  STEP: Patching ControllerRevision "e2e-5gpnb-daemon-set-7b64b47ff6" @ 01/12/25 16:50:23.348
  I0112 16:50:23.365725 21 controller_revision.go:173] e2e-5gpnb-daemon-set-7b64b47ff6 has been patched
  STEP: Create a new ControllerRevision @ 01/12/25 16:50:23.365
  I0112 16:50:23.377709 21 controller_revision.go:191] Created ControllerRevision: e2e-5gpnb-daemon-set-87d7965f4
  STEP: Confirm that there are two ControllerRevisions @ 01/12/25 16:50:23.377
  I0112 16:50:23.377864 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0112 16:50:23.382101 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-5gpnb-daemon-set-7b64b47ff6" @ 01/12/25 16:50:23.382
  STEP: Confirm that there is only one ControllerRevision @ 01/12/25 16:50:23.403
  I0112 16:50:23.403587 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0112 16:50:23.406798 21 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-5gpnb-daemon-set-87d7965f4" @ 01/12/25 16:50:23.41
  I0112 16:50:23.433507 21 controller_revision.go:220] e2e-5gpnb-daemon-set-87d7965f4 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 01/12/25 16:50:23.433
  W0112 16:50:23.446390      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 01/12/25 16:50:23.446
  I0112 16:50:23.446537 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0112 16:50:23.567114      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:24.447642 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0112 16:50:24.451235 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-5gpnb-daemon-set-87d7965f4=updated" @ 01/12/25 16:50:24.451
  STEP: Confirm that there is only one ControllerRevision @ 01/12/25 16:50:24.477
  I0112 16:50:24.477264 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0112 16:50:24.480415 21 controller_revision.go:265] Found 1 ControllerRevisions
  I0112 16:50:24.483659 21 controller_revision.go:246] ControllerRevision "e2e-5gpnb-daemon-set-697499d8f9" has revision 3
  STEP: Deleting DaemonSet "e2e-5gpnb-daemon-set" @ 01/12/25 16:50:24.487
  STEP: deleting DaemonSet.extensions e2e-5gpnb-daemon-set in namespace controllerrevisions-1864, will wait for the garbage collector to delete the pods @ 01/12/25 16:50:24.487
  E0112 16:50:24.567608      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:24.570201 21 resources.go:139] Deleting DaemonSet.extensions e2e-5gpnb-daemon-set took: 29.152062ms
  I0112 16:50:24.671293 21 resources.go:163] Terminating DaemonSet.extensions e2e-5gpnb-daemon-set pods took: 101.09242ms
  E0112 16:50:25.568721      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:26.077771 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-5gpnb-daemon-set: 0
  I0112 16:50:26.077853 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-5gpnb-daemon-set
  I0112 16:50:26.082690 21 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24898"},"items":null}

  I0112 16:50:26.087755 21 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24898"},"items":null}

  I0112 16:50:26.098285 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1864" for this suite. @ 01/12/25 16:50:26.101
• [4.883 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 01/12/25 16:50:26.116
  I0112 16:50:26.116278 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 16:50:26.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:26.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:26.183
  STEP: creating service nodeport-test with type=NodePort in namespace services-2890 @ 01/12/25 16:50:26.187
  STEP: creating replication controller nodeport-test in namespace services-2890 @ 01/12/25 16:50:26.222
  I0112 16:50:26.240843      21 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-2890, replica count: 2
  E0112 16:50:26.568924      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:27.569206      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:28.570311      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:29.292321      21 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 16:50:29.292381 21 resource.go:361] Creating new exec pod
  E0112 16:50:29.571094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:30.571385      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:31.572214      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:32.319296 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0112 16:50:32.488483 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0112 16:50:32.488552 21 builder.go:147] stdout: ""
  E0112 16:50:32.572859      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:33.320044 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0112 16:50:33.474434 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0112 16:50:33.474507 21 builder.go:147] stdout: ""
  E0112 16:50:33.573023      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:34.320084 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0112 16:50:34.481907 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0112 16:50:34.481974 21 builder.go:147] stdout: ""
  E0112 16:50:34.573250      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:35.320461 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0112 16:50:35.475874 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0112 16:50:35.475969 21 builder.go:147] stdout: "nodeport-test-lqthj"
  I0112 16:50:35.476039 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.241 80'
  E0112 16:50:35.573747      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:35.631003 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.241 80\nConnection to 10.152.183.241 80 port [tcp/http] succeeded!\n"
  I0112 16:50:35.631061 21 builder.go:147] stdout: ""
  I0112 16:50:36.476604 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.241 80'
  E0112 16:50:36.574852      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:36.670181 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.241 80\nConnection to 10.152.183.241 80 port [tcp/http] succeeded!\n"
  I0112 16:50:36.670261 21 builder.go:147] stdout: ""
  I0112 16:50:37.477191 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.241 80'
  E0112 16:50:37.575905      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:37.634021 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.241 80\nConnection to 10.152.183.241 80 port [tcp/http] succeeded!\n"
  I0112 16:50:37.634114 21 builder.go:147] stdout: ""
  I0112 16:50:38.477102 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.241 80'
  E0112 16:50:38.576897      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:38.635023 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.241 80\nConnection to 10.152.183.241 80 port [tcp/http] succeeded!\n"
  I0112 16:50:38.635110 21 builder.go:147] stdout: ""
  I0112 16:50:39.477220 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.241 80'
  E0112 16:50:39.577214      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:39.633780 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.241 80\nConnection to 10.152.183.241 80 port [tcp/http] succeeded!\n"
  I0112 16:50:39.633850 21 builder.go:147] stdout: ""
  I0112 16:50:40.476989 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.241 80'
  E0112 16:50:40.577852      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:40.629889 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.241 80\nConnection to 10.152.183.241 80 port [tcp/http] succeeded!\n"
  I0112 16:50:40.629979 21 builder.go:147] stdout: ""
  I0112 16:50:41.476250 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.241 80'
  E0112 16:50:41.577876      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:41.635126 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.241 80\nConnection to 10.152.183.241 80 port [tcp/http] succeeded!\n"
  I0112 16:50:41.635178 21 builder.go:147] stdout: "nodeport-test-m29l9"
  I0112 16:50:41.635270 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 30583'
  I0112 16:50:41.787662 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 30583\nConnection to 172.17.202.11 30583 port [tcp/*] succeeded!\n"
  I0112 16:50:41.787742 21 builder.go:147] stdout: "nodeport-test-m29l9"
  I0112 16:50:41.787834 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2890 exec execpodll7mz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.207.20 30583'
  I0112 16:50:41.939786 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.207.20 30583\nConnection to 172.17.207.20 30583 port [tcp/*] succeeded!\n"
  I0112 16:50:41.939859 21 builder.go:147] stdout: "nodeport-test-m29l9"
  I0112 16:50:41.940015 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2890" for this suite. @ 01/12/25 16:50:41.944
• [15.848 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 01/12/25 16:50:41.964
  I0112 16:50:41.964166 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 16:50:41.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:41.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:42.003
  STEP: Creating ServiceAccount "e2e-sa-qdxq4"  @ 01/12/25 16:50:42.008
  I0112 16:50:42.020146 21 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-qdxq4"  @ 01/12/25 16:50:42.02
  I0112 16:50:42.034851 21 service_accounts.go:839] AutomountServiceAccountToken: true
  I0112 16:50:42.035040 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1190" for this suite. @ 01/12/25 16:50:42.038
• [0.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 01/12/25 16:50:42.052
  I0112 16:50:42.052088 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 16:50:42.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:42.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:42.092
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2973 @ 01/12/25 16:50:42.101
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/12/25 16:50:42.125
  STEP: creating service externalsvc in namespace services-2973 @ 01/12/25 16:50:42.125
  STEP: creating replication controller externalsvc in namespace services-2973 @ 01/12/25 16:50:42.164
  I0112 16:50:42.205544      21 runners.go:193] Created replication controller with name: externalsvc, namespace: services-2973, replica count: 2
  E0112 16:50:42.579005      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:43.579213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:44.579460      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:45.257388      21 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 01/12/25 16:50:45.262
  I0112 16:50:45.298655 21 resource.go:361] Creating new exec pod
  E0112 16:50:45.580376      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:46.581056      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:47.323223 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-2973 exec execpodznnvs -- /bin/sh -x -c nslookup clusterip-service.services-2973.svc.cluster.local'
  I0112 16:50:47.542413 21 builder.go:146] stderr: "+ nslookup clusterip-service.services-2973.svc.cluster.local\n"
  I0112 16:50:47.542472 21 builder.go:147] stdout: "Server:\t\t10.152.183.10\nAddress:\t10.152.183.10#53\n\nclusterip-service.services-2973.svc.cluster.local\tcanonical name = externalsvc.services-2973.svc.cluster.local.\nName:\texternalsvc.services-2973.svc.cluster.local\nAddress: 10.152.183.56\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2973, will wait for the garbage collector to delete the pods @ 01/12/25 16:50:47.542
  E0112 16:50:47.581592      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:47.609163 21 resources.go:139] Deleting ReplicationController externalsvc took: 12.129743ms
  I0112 16:50:47.710055 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.892122ms
  E0112 16:50:48.582527      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:49.583786      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:50.584694      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:51.258523 21 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0112 16:50:51.297470 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2973" for this suite. @ 01/12/25 16:50:51.302
• [9.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 01/12/25 16:50:51.317
  I0112 16:50:51.317303 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 16:50:51.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:51.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:51.351
  STEP: Creating a pod to test substitution in container's args @ 01/12/25 16:50:51.355
  E0112 16:50:51.585398      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:52.585828      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:53.586167      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:54.586827      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:50:55.4
  I0112 16:50:55.403651 21 output.go:196] Trying to get logs from node ubuntu pod var-expansion-360c347f-4000-420b-92b1-1089ae56adc3 container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 16:50:55.41
  I0112 16:50:55.446610 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4585" for this suite. @ 01/12/25 16:50:55.451
• [4.151 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 01/12/25 16:50:55.468
  I0112 16:50:55.468739 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 16:50:55.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:55.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:55.523
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/12/25 16:50:55.547
  E0112 16:50:55.587610      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:56.588458      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:57.589438      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:50:58.589916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:50:59.587
  E0112 16:50:59.590259      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:50:59.593267 21 output.go:196] Trying to get logs from node ubuntu pod pod-d793ebfb-be59-4fd1-ad6f-caffa0f7d984 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 16:50:59.6
  I0112 16:50:59.638995 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-600" for this suite. @ 01/12/25 16:50:59.643
• [4.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 01/12/25 16:50:59.666
  I0112 16:50:59.666118 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename hostport @ 01/12/25 16:50:59.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:50:59.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:50:59.711
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 01/12/25 16:50:59.722
  E0112 16:51:00.591241      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:01.591379      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.17.202.11 on the node which pod1 resides and expect scheduled @ 01/12/25 16:51:01.753
  E0112 16:51:02.592173      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:03.592635      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:04.592778      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:05.593379      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.17.202.11 but use UDP protocol on the node which pod2 resides @ 01/12/25 16:51:05.786
  E0112 16:51:06.594281      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:07.594617      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:08.595241      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:09.595546      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 01/12/25 16:51:09.841
  I0112 16:51:09.841596 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.17.202.11 http://127.0.0.1:54323/hostname] Namespace:hostport-414 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 16:51:09.841618 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:51:09.842133 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 16:51:09.842188 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-414/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.17.202.11+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.17.202.11, port: 54323 @ 01/12/25 16:51:09.912
  I0112 16:51:09.912465 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.17.202.11:54323/hostname] Namespace:hostport-414 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 16:51:09.912493 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:51:09.913109 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 16:51:09.913189 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-414/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.17.202.11%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.17.202.11, port: 54323 UDP @ 01/12/25 16:51:09.984
  I0112 16:51:09.984118 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.17.202.11 54323] Namespace:hostport-414 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 16:51:09.984137 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:51:09.984679 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 16:51:09.984749 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-414/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.17.202.11+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0112 16:51:10.596159      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:11.597409      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:12.597779      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:13.598133      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:14.598535      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:15.059240 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-414" for this suite. @ 01/12/25 16:51:15.065
• [15.417 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 01/12/25 16:51:15.083
  I0112 16:51:15.083617 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 16:51:15.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:51:15.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:51:15.12
  STEP: Creating a pod to test substitution in container's command @ 01/12/25 16:51:15.132
  E0112 16:51:15.599064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:16.599520      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:17.599885      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:18.600383      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:51:19.165
  I0112 16:51:19.169152 21 output.go:196] Trying to get logs from node ubuntu pod var-expansion-8ffbdadb-504e-49e8-af1d-f6b0cef42171 container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 16:51:19.176
  I0112 16:51:19.212599 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6284" for this suite. @ 01/12/25 16:51:19.216
• [4.147 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 01/12/25 16:51:19.23
  I0112 16:51:19.230872 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 16:51:19.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:51:19.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:51:19.273
  STEP: Creating pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612 @ 01/12/25 16:51:19.276
  E0112 16:51:19.600467      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:20.601153      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 16:51:21.309
  I0112 16:51:21.312816 21 container_probe.go:1749] Initial restart count of pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec is 0
  I0112 16:51:21.316392 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:21.602101      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:22.602503      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:23.320618 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:23.603431      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:24.603758      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:25.324817 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:25.604602      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:26.605648      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:27.329873 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:27.606712      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:28.607269      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:29.335300 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:29.607982      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:30.608416      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:31.342306 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:31.608680      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:32.609310      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:33.348417 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:33.610150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:34.610492      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:35.355672 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:35.611223      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:36.612380      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:37.360513 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:37.613078      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:38.613917      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:39.364722 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:39.614132      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:40.614981      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:41.369677 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  I0112 16:51:41.369735 21 container_probe.go:1763] Restart count of pod container-probe-3612/liveness-06342b5c-4429-4084-82b7-6278a453d0ec is now 1 (20.05688732s elapsed)
  E0112 16:51:41.615447      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:42.615898      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:43.373440 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:43.617127      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:44.617594      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:45.380575 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:45.618237      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:46.618139      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:47.384600 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:47.619125      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:48.619385      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:49.389135 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:49.619523      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:50.619647      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:51.395092 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:51.620571      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:52.621139      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:53.402212 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:53.621559      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:54.621992      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:55.411669 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:55.623040      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:56.623904      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:57.417282 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:57.624699      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:51:58.625168      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:51:59.425504 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:51:59.626340      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:00.626532      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:01.432607 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  I0112 16:52:01.432706 21 container_probe.go:1763] Restart count of pod container-probe-3612/liveness-06342b5c-4429-4084-82b7-6278a453d0ec is now 2 (40.119856128s elapsed)
  E0112 16:52:01.626924      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:02.627458      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:03.438272 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:03.627672      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:04.628249      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:05.444248 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:05.628907      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:06.629138      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:07.448822 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:07.629146      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:08.629581      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:09.453780 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:09.630268      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:10.630911      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:11.459392 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:11.631755      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:12.632330      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:13.464697 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:13.633220      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:14.633767      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:15.470231 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:15.634648      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:16.635727      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:17.474975 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:17.636756      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:18.636898      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:19.482389 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:19.637807      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:20.638334      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:21.488914 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  I0112 16:52:21.489007 21 container_probe.go:1763] Restart count of pod container-probe-3612/liveness-06342b5c-4429-4084-82b7-6278a453d0ec is now 3 (1m0.176159275s elapsed)
  E0112 16:52:21.639404      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:22.639750      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:23.497116 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:23.640637      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:24.641143      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:25.501793 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:25.642124      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:26.642342      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:27.509643 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:27.643170      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:28.644050      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:29.517036 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:29.644418      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:30.645053      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:31.522087 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:31.645612      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:32.646078      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:33.526581 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:33.647194      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:34.647467      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:35.530923 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:35.648474      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:36.648634      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:37.535651 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:37.649035      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:38.649789      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:39.540992 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:39.650403      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:40.650724      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:41.545324 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  I0112 16:52:41.545390 21 container_probe.go:1763] Restart count of pod container-probe-3612/liveness-06342b5c-4429-4084-82b7-6278a453d0ec is now 4 (1m20.232541822s elapsed)
  E0112 16:52:41.652324      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:42.652300      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:43.551104 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:43.653562      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:44.653882      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:45.555494 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:45.655134      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:46.656121      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:47.560897 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:47.656358      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:48.656637      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:49.567600 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:49.656788      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:50.657152      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:51.573030 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:51.657400      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:52.657922      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:53.577233 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:53.658566      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:54.659220      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:55.581410 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:55.659989      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:56.660203      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:57.586414 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:57.660773      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:52:58.661413      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:52:59.592082 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:52:59.662357      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:00.662678      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:01.598102 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:01.663849      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:02.663491      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:03.604293 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:03.664564      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:04.664894      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:05.609173 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:05.665528      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:06.665830      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:07.615029 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:07.666205      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:08.667355      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:09.621079 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:09.668501      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:10.669110      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:11.626096 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:11.669440      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:12.669900      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:13.632496 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:13.670829      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:14.671405      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:15.637453 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:15.671722      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:16.672813      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:17.643771 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:17.673044      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:18.673667      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:19.650799 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:19.674208      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:20.674772      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:21.655716 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:21.675102      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:22.675580      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:23.664369 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:23.675746      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:24.676337      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:25.669167 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:25.677472      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:26.677492      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:27.675078 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:27.678362      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:28.678891      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:29.679696      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:29.680280 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:30.680334      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:31.681235      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:31.685211 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:32.682333      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:33.682781      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:33.692340 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:34.683470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:35.683919      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:35.697353 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:36.684054      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:37.684342      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:37.702500 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:38.684820      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:39.685132      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:39.708981 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:40.686164      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:41.686518      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:41.717689 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:42.687624      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:43.688563      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:43.722817 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:44.688886      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:45.689577      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:45.728406 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  E0112 16:53:46.690029      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:47.690164      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:53:47.734435 21 container_probe.go:1759] Get pod liveness-06342b5c-4429-4084-82b7-6278a453d0ec in namespace container-probe-3612
  I0112 16:53:47.734497 21 container_probe.go:1763] Restart count of pod container-probe-3612/liveness-06342b5c-4429-4084-82b7-6278a453d0ec is now 5 (2m26.421648948s elapsed)
  STEP: deleting the pod @ 01/12/25 16:53:47.734
  I0112 16:53:47.767530 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3612" for this suite. @ 01/12/25 16:53:47.772
• [148.569 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 01/12/25 16:53:47.799
  I0112 16:53:47.799874 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 16:53:47.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:53:47.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:53:47.847
  STEP: creating the pod @ 01/12/25 16:53:47.852
  STEP: waiting for pod running @ 01/12/25 16:53:47.871
  E0112 16:53:48.690449      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:49.690862      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 01/12/25 16:53:49.881
  I0112 16:53:49.886829 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6124 PodName:var-expansion-50c51a66-d154-435d-b067-b31fcfb2ce90 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 16:53:49.886875 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:53:49.887584 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 16:53:49.887688 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-6124/pods/var-expansion-50c51a66-d154-435d-b067-b31fcfb2ce90/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 01/12/25 16:53:49.958
  I0112 16:53:49.963467 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6124 PodName:var-expansion-50c51a66-d154-435d-b067-b31fcfb2ce90 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 16:53:49.963519 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:53:49.964122 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 16:53:49.964188 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-6124/pods/var-expansion-50c51a66-d154-435d-b067-b31fcfb2ce90/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 01/12/25 16:53:50.032
  I0112 16:53:50.555142 21 pod_client.go:173] Successfully updated pod "var-expansion-50c51a66-d154-435d-b067-b31fcfb2ce90"
  STEP: waiting for annotated pod running @ 01/12/25 16:53:50.555
  STEP: deleting the pod gracefully @ 01/12/25 16:53:50.559
  I0112 16:53:50.559349 21 delete.go:62] Deleting pod "var-expansion-50c51a66-d154-435d-b067-b31fcfb2ce90" in namespace "var-expansion-6124"
  I0112 16:53:50.575537 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-50c51a66-d154-435d-b067-b31fcfb2ce90" to be fully deleted
  E0112 16:53:50.691700      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:51.691853      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:52.692735      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:53.693218      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:54.693495      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:55.693697      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:56.694765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:57.695175      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:58.696074      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:53:59.696801      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:00.697736      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:01.698417      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:02.698806      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:03.699389      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:04.700367      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:05.700707      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:06.701060      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:07.701375      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:08.701973      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:09.702404      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:10.703362      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:11.703878      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:12.704358      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:13.705074      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:14.706105      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:15.706653      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:16.707324      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:17.707678      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:18.708712      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:19.709406      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:20.710158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:21.711168      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:22.712297      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:23.713385      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:24.704231 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6124" for this suite. @ 01/12/25 16:54:24.708
  E0112 16:54:24.713916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
• [36.926 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 01/12/25 16:54:24.725
  I0112 16:54:24.725901 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubelet-test @ 01/12/25 16:54:24.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:54:24.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:54:24.774
  I0112 16:54:24.898837 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-880" for this suite. @ 01/12/25 16:54:24.903
• [0.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 01/12/25 16:54:24.926
  I0112 16:54:24.926852 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 16:54:24.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:54:24.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:54:24.959
  STEP: create deployment with httpd image @ 01/12/25 16:54:24.963
  I0112 16:54:24.963590 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1926 create -f -'
  I0112 16:54:25.084139 21 builder.go:146] stderr: ""
  I0112 16:54:25.084199 21 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 01/12/25 16:54:25.084
  I0112 16:54:25.084354 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1926 diff -f -'
  E0112 16:54:25.714409      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:26.714498      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:27.714739      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:28.715134      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:29.555383 21 builder.go:135] rc: 1
  I0112 16:54:29.555563 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1926 delete -f -'
  I0112 16:54:29.646841 21 builder.go:146] stderr: ""
  I0112 16:54:29.646963 21 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0112 16:54:29.647124 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1926" for this suite. @ 01/12/25 16:54:29.651
• [4.746 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 01/12/25 16:54:29.672
  I0112 16:54:29.672915 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 16:54:29.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:54:29.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:54:29.714
  E0112 16:54:29.715753      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:29.748282 21 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 01/12/25 16:54:29.772
  I0112 16:54:29.778042 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:54:29.778107 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 01/12/25 16:54:29.778
  I0112 16:54:29.811096 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:54:29.811150 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  E0112 16:54:30.716222      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:30.811578 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:54:30.811694 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  E0112 16:54:31.716450      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:31.808468 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 16:54:31.808524 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 01/12/25 16:54:31.811
  I0112 16:54:31.837999 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 16:54:31.838041 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0112 16:54:32.716785      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:32.837863 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:54:32.837992 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 01/12/25 16:54:32.838
  I0112 16:54:32.858711 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:54:32.858776 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  E0112 16:54:33.717031      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:33.859617 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:54:33.859694 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  E0112 16:54:34.717519      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:34.859275 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 16:54:34.859363 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/12/25 16:54:34.867
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6836, will wait for the garbage collector to delete the pods @ 01/12/25 16:54:34.867
  I0112 16:54:34.941710 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 19.965256ms
  I0112 16:54:35.042069 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.355887ms
  E0112 16:54:35.717657      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:36.718172      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:37.718263      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:37.949112 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 16:54:37.949166 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0112 16:54:37.954996 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25920"},"items":null}

  I0112 16:54:37.960491 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25920"},"items":null}

  I0112 16:54:37.990446 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6836" for this suite. @ 01/12/25 16:54:37.994
• [8.364 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 01/12/25 16:54:38.036
  I0112 16:54:38.036710 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pods @ 01/12/25 16:54:38.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:54:38.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:54:38.078
  I0112 16:54:38.082837 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: creating the pod @ 01/12/25 16:54:38.083
  STEP: submitting the pod to kubernetes @ 01/12/25 16:54:38.083
  E0112 16:54:38.719022      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:39.719300      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:40.216589 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7959" for this suite. @ 01/12/25 16:54:40.221
• [2.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 01/12/25 16:54:40.235
  I0112 16:54:40.235552 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 16:54:40.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:54:40.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:54:40.264
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-032ac86d-4b87-4999-a884-7516bb95c3d2 @ 01/12/25 16:54:40.272
  STEP: Creating the pod @ 01/12/25 16:54:40.282
  E0112 16:54:40.720082      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:41.720695      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-032ac86d-4b87-4999-a884-7516bb95c3d2 @ 01/12/25 16:54:42.332
  STEP: waiting to observe update in volume @ 01/12/25 16:54:42.347
  E0112 16:54:42.721282      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:43.721696      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:44.364129 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3595" for this suite. @ 01/12/25 16:54:44.369
• [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 01/12/25 16:54:44.386
  I0112 16:54:44.386341 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubelet-test @ 01/12/25 16:54:44.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:54:44.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:54:44.438
  E0112 16:54:44.722284      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:45.722694      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:46.480016 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7045" for this suite. @ 01/12/25 16:54:46.484
• [2.114 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 01/12/25 16:54:46.5
  I0112 16:54:46.500991 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename limitrange @ 01/12/25 16:54:46.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:54:46.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:54:46.544
  STEP: Creating LimitRange "e2e-limitrange-2bbtk" in namespace "limitrange-3469" @ 01/12/25 16:54:46.547
  STEP: Creating another limitRange in another namespace @ 01/12/25 16:54:46.559
  I0112 16:54:46.592633 21 limit_range.go:299] Namespace "e2e-limitrange-2bbtk-4177" created
  I0112 16:54:46.592669 21 limit_range.go:300] Creating LimitRange "e2e-limitrange-2bbtk" in namespace "e2e-limitrange-2bbtk-4177"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-2bbtk" @ 01/12/25 16:54:46.616
  I0112 16:54:46.619682 21 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-2bbtk" in "limitrange-3469" namespace @ 01/12/25 16:54:46.619
  I0112 16:54:46.652441 21 limit_range.go:335] LimitRange "e2e-limitrange-2bbtk" has been patched
  STEP: Delete LimitRange "e2e-limitrange-2bbtk" by Collection with labelSelector: "e2e-limitrange-2bbtk=patched" @ 01/12/25 16:54:46.652
  STEP: Confirm that the limitRange "e2e-limitrange-2bbtk" has been deleted @ 01/12/25 16:54:46.684
  I0112 16:54:46.684701 21 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0112 16:54:46.688975 21 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-2bbtk=patched"
  I0112 16:54:46.689031 21 limit_range.go:344] LimitRange "e2e-limitrange-2bbtk" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-2bbtk" @ 01/12/25 16:54:46.689
  I0112 16:54:46.692185 21 limit_range.go:350] Found 1 limitRange
  I0112 16:54:46.692305 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3469" for this suite. @ 01/12/25 16:54:46.696
  STEP: Destroying namespace "e2e-limitrange-2bbtk-4177" for this suite. @ 01/12/25 16:54:46.709
  E0112 16:54:46.722896      21 retrywatcher.go:131] "Watch failed" err="context canceled"
• [0.222 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 01/12/25 16:54:46.723
  I0112 16:54:46.723241 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sched-pred @ 01/12/25 16:54:46.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:54:46.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:54:46.761
  I0112 16:54:46.764320 21 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0112 16:54:46.771325 21 util.go:393] Waiting for terminating namespaces to be deleted...
  I0112 16:54:46.775272 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu before test
  I0112 16:54:46.781808 21 predicates.go:957] calico-node-mw2qz from kube-system started at 2025-01-12 15:34:15 +0000 UTC (1 container statuses recorded)
  I0112 16:54:46.781890 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 16:54:46.781983 21 predicates.go:957] busybox-scheduling-8b6eb762-cbdd-49f6-82bb-3d273918f674 from kubelet-test-7045 started at 2025-01-12 16:54:44 +0000 UTC (1 container statuses recorded)
  I0112 16:54:46.781994 21 predicates.go:959] 	Container busybox-scheduling-8b6eb762-cbdd-49f6-82bb-3d273918f674 ready: true, restart count 0
  I0112 16:54:46.782004 21 predicates.go:957] pod-exec-websocket-5127ea58-a3b7-4743-aac7-d2d09a7cf9ad from pods-7959 started at 2025-01-12 16:54:38 +0000 UTC (1 container statuses recorded)
  I0112 16:54:46.782012 21 predicates.go:959] 	Container main ready: true, restart count 0
  I0112 16:54:46.782021 21 predicates.go:957] pod-projected-configmaps-a2a08599-738d-490a-948f-f4ad74870ac7 from projected-3595 started at 2025-01-12 16:54:40 +0000 UTC (1 container statuses recorded)
  I0112 16:54:46.782029 21 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I0112 16:54:46.782038 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-844ad7800bd94b40-vgdlw from sonobuoy started at 2025-01-12 15:36:51 +0000 UTC (2 container statuses recorded)
  I0112 16:54:46.782046 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 16:54:46.782054 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0112 16:54:46.782063 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu2 before test
  I0112 16:54:46.788663 21 predicates.go:957] calico-kube-controllers-759cd8b574-lsskf from kube-system started at 2025-01-12 16:23:25 +0000 UTC (1 container statuses recorded)
  I0112 16:54:46.788732 21 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0112 16:54:46.788746 21 predicates.go:957] calico-node-crr24 from kube-system started at 2025-01-12 15:34:17 +0000 UTC (1 container statuses recorded)
  I0112 16:54:46.788755 21 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 16:54:46.788766 21 predicates.go:957] coredns-7896dbf49-r5lvc from kube-system started at 2025-01-12 16:23:25 +0000 UTC (1 container statuses recorded)
  I0112 16:54:46.788774 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0112 16:54:46.788783 21 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-12 15:36:44 +0000 UTC (1 container statuses recorded)
  I0112 16:54:46.788791 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0112 16:54:46.788801 21 predicates.go:957] sonobuoy-e2e-job-68164fd1082c40a9 from sonobuoy started at 2025-01-12 15:36:51 +0000 UTC (2 container statuses recorded)
  I0112 16:54:46.788809 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0112 16:54:46.788817 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 16:54:46.788825 21 predicates.go:957] sonobuoy-systemd-logs-daemon-set-844ad7800bd94b40-9xrjt from sonobuoy started at 2025-01-12 15:36:52 +0000 UTC (2 container statuses recorded)
  I0112 16:54:46.788846 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 16:54:46.788854 21 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 01/12/25 16:54:46.788
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.181a004150237f3e], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 01/12/25 16:54:46.853
  E0112 16:54:47.723470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:47.826509 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7542" for this suite. @ 01/12/25 16:54:47.833
• [1.129 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 01/12/25 16:54:47.852
  I0112 16:54:47.852108 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 16:54:47.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:54:47.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:54:47.889
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/12/25 16:54:47.893
  E0112 16:54:48.723616      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:49.724128      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:50.724846      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:51.725615      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:54:51.926
  I0112 16:54:51.930494 21 output.go:196] Trying to get logs from node ubuntu pod pod-25fc9b3a-52e0-43a2-87eb-d03c5c38e70a container test-container: <nil>
  STEP: delete the pod @ 01/12/25 16:54:51.938
  I0112 16:54:51.971708 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8201" for this suite. @ 01/12/25 16:54:51.975
• [4.138 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 01/12/25 16:54:51.989
  I0112 16:54:51.989910 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename gc @ 01/12/25 16:54:51.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:54:52.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:54:52.04
  I0112 16:54:52.204839 21 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"05affa4b-ee23-420c-9f25-ad8c80a4080c", Controller:(*bool)(0xc00483a27e), BlockOwnerDeletion:(*bool)(0xc00483a27f)}}
  I0112 16:54:52.225523 21 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"81ac2cdb-03c5-4040-89a5-d309d6fae2cb", Controller:(*bool)(0xc00483a52a), BlockOwnerDeletion:(*bool)(0xc00483a52b)}}
  I0112 16:54:52.239519 21 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"2887472a-8cb5-4c67-8ffd-cd4663a6f1e0", Controller:(*bool)(0xc00483a7e6), BlockOwnerDeletion:(*bool)(0xc00483a7e7)}}
  E0112 16:54:52.726134      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:53.726598      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:54.727081      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:55.727802      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:56.729046      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:54:57.258088 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4923" for this suite. @ 01/12/25 16:54:57.261
• [5.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 01/12/25 16:54:57.291
  I0112 16:54:57.291651 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 16:54:57.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:54:57.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:54:57.321
  STEP: Creating a ResourceQuota @ 01/12/25 16:54:57.325
  STEP: Getting a ResourceQuota @ 01/12/25 16:54:57.344
  STEP: Listing all ResourceQuotas with LabelSelector @ 01/12/25 16:54:57.347
  STEP: Patching the ResourceQuota @ 01/12/25 16:54:57.35
  STEP: Deleting a Collection of ResourceQuotas @ 01/12/25 16:54:57.371
  STEP: Verifying the deleted ResourceQuota @ 01/12/25 16:54:57.395
  I0112 16:54:57.398812 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9728" for this suite. @ 01/12/25 16:54:57.403
• [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 01/12/25 16:54:57.417
  I0112 16:54:57.417858 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 16:54:57.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:54:57.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:54:57.451
  STEP: Creating configMap with name configmap-test-volume-a18fb976-11ec-4021-98bf-354432b51557 @ 01/12/25 16:54:57.457
  STEP: Creating a pod to test consume configMaps @ 01/12/25 16:54:57.472
  E0112 16:54:57.730133      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:58.731032      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:54:59.731360      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:00.732498      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:55:01.512
  I0112 16:55:01.518169 21 output.go:196] Trying to get logs from node ubuntu pod pod-configmaps-52684832-fef9-4248-82cb-eda2f43a67c1 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 16:55:01.527
  I0112 16:55:01.565054 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8583" for this suite. @ 01/12/25 16:55:01.569
• [4.173 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 01/12/25 16:55:01.591
  I0112 16:55:01.591544 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename chunking @ 01/12/25 16:55:01.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:55:01.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:55:01.636
  STEP: creating a large number of resources @ 01/12/25 16:55:01.639
  E0112 16:55:01.733439      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:02.733834      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:03.734386      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:04.735609      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:05.736426      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:06.737476      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:07.738033      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:08.738505      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:09.739306      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:10.739944      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:11.740027      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:12.740655      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:13.741868      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:14.743059      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:15.743747      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:16.743814      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:17.743856      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:18.744221      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 01/12/25 16:55:19.305
  I0112 16:55:19.351108 21 chunking.go:163] Retrieved 40/40 results with rv 26636 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY2MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 01/12/25 16:55:19.351
  E0112 16:55:19.744622      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:20.745109      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:21.745758      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:22.746209      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:23.746730      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:24.747196      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:25.747705      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:26.748024      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:27.748518      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:28.748907      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:29.749650      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:30.750280      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:31.751327      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:32.752423      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:33.752859      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:34.753213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:35.753687      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:36.753844      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:37.754169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:38.754552      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:55:39.360354 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY2MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0112 16:55:39.755488      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:40.756459      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:41.756570      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:42.757228      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:43.757699      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:44.758177      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:45.759403      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:46.759816      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:47.760286      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:48.761235      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:49.761697      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:50.762402      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:51.763322      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:52.763844      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:53.764351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:54.764614      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:55.765588      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:56.766062      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:57.766763      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:55:58.767300      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:55:59.361664 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY2MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0112 16:55:59.768168      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:00.768521      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:01.768637      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:02.768847      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:03.769423      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:04.770161      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:05.770681      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:06.771589      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:07.772295      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:08.773087      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:09.773300      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:10.773778      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:11.775024      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:12.775526      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:13.775981      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:14.776527      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:15.777670      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:16.778123      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:17.778738      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:18.779715      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:56:19.361569 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY2MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0112 16:56:19.780257      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:20.780668      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:21.782091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:22.782664      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:23.783214      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:24.783861      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:25.784487      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:26.784716      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:27.785127      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:28.785632      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:29.786139      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:30.786515      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:31.787761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:32.788247      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:33.788792      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:34.789156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:35.789456      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:36.790110      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:37.790463      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:38.791037      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:56:39.366101 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY2MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0112 16:56:39.791390      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:40.792052      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:41.792318      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:42.792412      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:43.792924      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:44.793537      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:45.794023      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:46.795256      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:47.795302      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:48.795693      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:49.796142      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:50.796782      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:51.796915      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:52.797520      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:53.798013      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:54.798429      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:55.798847      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:56.799924      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:57.800390      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:56:58.801057      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:56:59.368249 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY2MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0112 16:56:59.801863      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:00.802100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:01.802395      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:02.803061      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:03.803662      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:04.803912      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:05.804330      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:06.805056      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:07.805189      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:08.805481      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:09.806613      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:10.807033      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:11.807891      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:12.808489      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:13.808881      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:14.809069      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:15.809661      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:16.809765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:17.810100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:18.810523      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:57:19.363816 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY2MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0112 16:57:19.811620      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:20.812049      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:21.813110      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:22.813570      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:23.814136      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:24.814834      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:25.815241      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:26.816284      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:27.816706      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:28.817050      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:29.817683      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:30.818064      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:31.818464      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:32.819124      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:33.819598      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:34.820171      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:35.820784      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:36.821082      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:37.821255      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:38.821741      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:57:39.360255 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY2MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0112 16:57:39.821917      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:40.822083      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:41.822737      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:42.823133      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:43.823242      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:44.823757      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:45.824247      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:46.824837      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:47.825353      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:48.825916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:49.826530      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:50.826835      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:51.827861      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:52.828970      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:53.829294      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:54.829664      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:55.829764      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:56.830122      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:57.830781      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:57:58.831210      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:57:59.360814 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY2MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0112 16:57:59.831855      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:00.832215      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:01.832916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:02.833470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:03.834288      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:04.834679      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:05.835416      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:06.836373      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:07.836731      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:08.837091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:09.837487      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:10.837851      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:11.838440      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:12.838917      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:13.839654      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:14.840210      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:15.840613      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:16.840854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:17.841516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:18.841810      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:58:19.360249 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY2MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0112 16:58:19.842410      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:20.843268      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:21.843895      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:22.844188      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:23.844508      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:24.844861      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:25.845226      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:26.846279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:27.846709      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:28.847159      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:29.847542      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:30.847772      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:31.847906      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:32.848404      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:33.849034      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:34.849496      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:35.850060      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:36.850151      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:37.850497      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:38.850886      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:58:39.362182 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY2MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0112 16:58:39.851132      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:40.851099      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:41.852075      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:42.852432      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:43.853038      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:44.853645      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:45.854056      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:46.854968      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:47.855629      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:48.856187      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:49.856813      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:50.857246      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:51.858274      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:52.858809      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:53.859220      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:54.859674      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:55.860105      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:56.861248      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:57.861777      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:58:58.862413      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:58:59.362242 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY2MzYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0112 16:58:59.863413      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:00.864251      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:01.865341      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:02.865281      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:03.866096      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:04.866458      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:05.866815      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:06.866923      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:07.867189      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:08.867615      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:09.868684      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:10.869233      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:11.870281      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:12.870728      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:13.871210      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:14.871643      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:15.872722      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:16.873107      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:17.873512      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:18.873993      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:59:19.358288 21 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0112 16:59:19.358364 21 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 01/12/25 16:59:19.358
  STEP: retrieving all remaining pages @ 01/12/25 16:59:19.368
  I0112 16:59:19.376215 21 chunking.go:221] Retrieved 40/40 results with rv 26981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0112 16:59:19.383642 21 chunking.go:221] Retrieved 40/40 results with rv 26981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0112 16:59:19.393036 21 chunking.go:221] Retrieved 40/40 results with rv 26981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0112 16:59:19.402822 21 chunking.go:221] Retrieved 40/40 results with rv 26981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0112 16:59:19.410316 21 chunking.go:221] Retrieved 40/40 results with rv 26981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0112 16:59:19.420701 21 chunking.go:221] Retrieved 40/40 results with rv 26981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0112 16:59:19.428043 21 chunking.go:221] Retrieved 40/40 results with rv 26981 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY5ODEsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0112 16:59:19.434546 21 chunking.go:221] Retrieved 40/40 results with rv 26981 and continue 
  I0112 16:59:19.434806 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6366" for this suite. @ 01/12/25 16:59:19.44
• [257.872 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 01/12/25 16:59:19.463
  I0112 16:59:19.463684 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 16:59:19.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:59:19.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:59:19.497
  STEP: Creating configMap with name projected-configmap-test-volume-map-28c3c821-0b70-4e95-80b7-cc462855b6a1 @ 01/12/25 16:59:19.501
  STEP: Creating a pod to test consume configMaps @ 01/12/25 16:59:19.513
  E0112 16:59:19.874151      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:20.875228      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:21.875921      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:22.876590      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 16:59:23.56
  I0112 16:59:23.564298 21 output.go:196] Trying to get logs from node ubuntu pod pod-projected-configmaps-dcc12892-1127-4c2a-9fea-b44778a898ec container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 16:59:23.577
  I0112 16:59:23.632624 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9639" for this suite. @ 01/12/25 16:59:23.636
• [4.185 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 01/12/25 16:59:23.649
  I0112 16:59:23.649284 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename endpointslice @ 01/12/25 16:59:23.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:59:23.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:59:23.691
  E0112 16:59:23.877410      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:24.877887      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:25.878143      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 01/12/25 16:59:25.94
  STEP: referencing matching pods with named port @ 01/12/25 16:59:25.948
  I0112 16:59:25.953023 21 endpointslice.go:946] Expected at least 2 EndpointSlices for Service endpointslice-7533/example-named-port, got 1
  I0112 16:59:25.953443 21 endpointslice.go:952] 0 - {"metadata":{"name":"example-named-port-mz8p9","generateName":"example-named-port-","namespace":"endpointslice-7533","uid":"1a463a22-7984-422b-8551-5ddc8d1faf45","resourceVersion":"27124","generation":2,"creationTimestamp":"2025-01-12T16:59:23Z","labels":{"endpointslice.kubernetes.io/managed-by":"endpointslice-controller.k8s.io","kubernetes.io/service-name":"example-named-port"},"annotations":{"endpoints.kubernetes.io/last-change-trigger-time":"2025-01-12T16:59:25Z"},"ownerReferences":[{"apiVersion":"v1","kind":"Service","name":"example-named-port","uid":"e423b604-dfa9-40d6-a615-74bf0402e6a2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kubelite","operation":"Update","apiVersion":"discovery.k8s.io/v1","time":"2025-01-12T16:59:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:addressType":{},"f:endpoints":{},"f:metadata":{"f:annotations":{".":{},"f:endpoints.kubernetes.io/last-change-trigger-time":{}},"f:generateName":{},"f:labels":{".":{},"f:endpointslice.kubernetes.io/managed-by":{},"f:kubernetes.io/service-name":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e423b604-dfa9-40d6-a615-74bf0402e6a2\"}":{}}},"f:ports":{}}}]},"addressType":"IPv4","endpoints":[{"addresses":["10.1.243.225"],"conditions":{"ready":true,"serving":true,"terminating":false},"targetRef":{"kind":"Pod","namespace":"endpointslice-7533","name":"pod2","uid":"adc1276e-7b49-4ea6-b4dc-a63005d1ac24"},"nodeName":"ubuntu"}],"ports":[{"name":"http","protocol":"TCP","port":3001}]}
  E0112 16:59:26.878429      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:27.878729      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 01/12/25 16:59:27.958
  STEP: recreating EndpointSlices after they've been deleted @ 01/12/25 16:59:27.966
  I0112 16:59:28.008376 21 endpointslice.go:938] EndpointSlice for Service endpointslice-7533/example-named-port not found
  E0112 16:59:28.879337      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:29.879529      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:59:30.015707 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7533" for this suite. @ 01/12/25 16:59:30.02
• [6.386 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 01/12/25 16:59:30.04
  I0112 16:59:30.040354 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename deployment @ 01/12/25 16:59:30.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:59:30.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:59:30.094
  STEP: creating a Deployment @ 01/12/25 16:59:30.12
  I0112 16:59:30.121052 21 deployment.go:507] Creating simple deployment test-deployment-767w9
  I0112 16:59:30.149654 21 deployment.go:222] new replicaset for deployment "test-deployment-767w9" is yet to be created
  E0112 16:59:30.880288      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:31.880909      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting /status @ 01/12/25 16:59:32.165
  I0112 16:59:32.168587 21 deployment.go:532] Deployment test-deployment-767w9 has Conditions: [{Available True 2025-01-12 16:59:31 +0000 UTC 2025-01-12 16:59:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-01-12 16:59:31 +0000 UTC 2025-01-12 16:59:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-767w9-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 01/12/25 16:59:32.168
  I0112 16:59:32.189701 21 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 59, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 59, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 16, 59, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 16, 59, 30, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-767w9-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 01/12/25 16:59:32.189
  I0112 16:59:32.192253 21 deployment.go:579] Observed &Deployment event: ADDED
  I0112 16:59:32.192350 21 deployment.go:575] Observed Deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-12 16:59:30 +0000 UTC 2025-01-12 16:59:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-767w9-f4dbbbf74"}
  I0112 16:59:32.192470 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0112 16:59:32.192492 21 deployment.go:575] Observed Deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-12 16:59:30 +0000 UTC 2025-01-12 16:59:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-767w9-f4dbbbf74"}
  I0112 16:59:32.192505 21 deployment.go:575] Observed Deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-12 16:59:30 +0000 UTC 2025-01-12 16:59:30 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0112 16:59:32.192576 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0112 16:59:32.192592 21 deployment.go:575] Observed Deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-12 16:59:30 +0000 UTC 2025-01-12 16:59:30 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0112 16:59:32.192605 21 deployment.go:575] Observed Deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-12 16:59:30 +0000 UTC 2025-01-12 16:59:30 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-767w9-f4dbbbf74" is progressing.}
  I0112 16:59:32.192674 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0112 16:59:32.192693 21 deployment.go:575] Observed Deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-12 16:59:31 +0000 UTC 2025-01-12 16:59:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0112 16:59:32.192706 21 deployment.go:575] Observed Deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-12 16:59:31 +0000 UTC 2025-01-12 16:59:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-767w9-f4dbbbf74" has successfully progressed.}
  I0112 16:59:32.192771 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0112 16:59:32.192824 21 deployment.go:575] Observed Deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-12 16:59:31 +0000 UTC 2025-01-12 16:59:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0112 16:59:32.192840 21 deployment.go:575] Observed Deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-12 16:59:31 +0000 UTC 2025-01-12 16:59:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-767w9-f4dbbbf74" has successfully progressed.}
  I0112 16:59:32.192861 21 deployment.go:572] Found Deployment test-deployment-767w9 in namespace deployment-590 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0112 16:59:32.192881 21 deployment.go:583] Deployment test-deployment-767w9 has an updated status
  STEP: patching the Statefulset Status @ 01/12/25 16:59:32.192
  I0112 16:59:32.192963 21 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0112 16:59:32.214764 21 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 01/12/25 16:59:32.214
  I0112 16:59:32.217657 21 deployment.go:616] Observed &Deployment event: ADDED
  I0112 16:59:32.217743 21 deployment.go:612] Observed deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-12 16:59:30 +0000 UTC 2025-01-12 16:59:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-767w9-f4dbbbf74"}
  I0112 16:59:32.217958 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0112 16:59:32.218005 21 deployment.go:612] Observed deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-12 16:59:30 +0000 UTC 2025-01-12 16:59:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-767w9-f4dbbbf74"}
  I0112 16:59:32.218033 21 deployment.go:612] Observed deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-12 16:59:30 +0000 UTC 2025-01-12 16:59:30 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0112 16:59:32.218197 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0112 16:59:32.218266 21 deployment.go:612] Observed deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-12 16:59:30 +0000 UTC 2025-01-12 16:59:30 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0112 16:59:32.218292 21 deployment.go:612] Observed deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-12 16:59:30 +0000 UTC 2025-01-12 16:59:30 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-767w9-f4dbbbf74" is progressing.}
  I0112 16:59:32.218426 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0112 16:59:32.218447 21 deployment.go:612] Observed deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-12 16:59:31 +0000 UTC 2025-01-12 16:59:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0112 16:59:32.218513 21 deployment.go:612] Observed deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-12 16:59:31 +0000 UTC 2025-01-12 16:59:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-767w9-f4dbbbf74" has successfully progressed.}
  I0112 16:59:32.218595 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0112 16:59:32.218620 21 deployment.go:612] Observed deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-12 16:59:31 +0000 UTC 2025-01-12 16:59:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0112 16:59:32.218633 21 deployment.go:612] Observed deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-12 16:59:31 +0000 UTC 2025-01-12 16:59:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-767w9-f4dbbbf74" has successfully progressed.}
  I0112 16:59:32.218645 21 deployment.go:612] Observed deployment test-deployment-767w9 in namespace deployment-590 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0112 16:59:32.218733 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0112 16:59:32.218827 21 deployment.go:609] Found deployment test-deployment-767w9 in namespace deployment-590 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0112 16:59:32.218848 21 deployment.go:620] Deployment test-deployment-767w9 has a patched status
  I0112 16:59:32.224057 21 deployment.go:633] Deployment "test-deployment-767w9":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-767w9",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb5ef44c-11ce-490c-adc9-56a8cc3ca8af",
      ResourceVersion: (string) (len=5) "27511",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872297970,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297972,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 16:59:32.230446 21 deployment.go:39] New ReplicaSet "test-deployment-767w9-f4dbbbf74" of Deployment "test-deployment-767w9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-767w9-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4aa9c175-a92e-4914-a9e4-0fea45c4401e",
      ResourceVersion: (string) (len=5) "27508",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872297970,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-767w9",
          UID: (types.UID) (len=36) "eb5ef44c-11ce-490c-adc9-56a8cc3ca8af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 65 62 35  |k:{\"uid\":\"eb5|
              00000120  65 66 34 34 63 2d 31 31  63 65 2d 34 39 30 63 2d  |ef44c-11ce-490c-|
              00000130  61 64 63 39 2d 35 36 61  38 63 63 33 63 61 38 61  |adc9-56a8cc3ca8a|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 16:59:32.237184 21 deployment.go:67] Pod "test-deployment-767w9-f4dbbbf74-xmrr7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-767w9-f4dbbbf74-xmrr7",
      GenerateName: (string) (len=32) "test-deployment-767w9-f4dbbbf74-",
      Namespace: (string) (len=14) "deployment-590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d217a7c-8f7f-43fc-bf60-61dc08f5469b",
      ResourceVersion: (string) (len=5) "27507",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872297970,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8860ffac3cf26ff06b36d2a5780cd5bf7ab7c0ba19af4900124fa5b997b4620d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.238/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.238/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-767w9-f4dbbbf74",
          UID: (types.UID) (len=36) "4aa9c175-a92e-4914-a9e4-0fea45c4401e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 34 61 61 39 63 31 37  35 2d 61 39 32 65 2d 34  |"4aa9c175-a92e-4|
              000000a0  39 31 34 2d 61 39 65 34  2d 30 66 65 61 34 35 63  |914-a9e4-0fea45c|
              000000b0  34 34 30 31 65 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |4401e\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  33 38 5c 22 7d 22 3a 7b  |.1.243.238\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pbtpb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pbtpb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872297970,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.238",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.238"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872297970,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872297971,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://54fdd32394b90bcc57ba423265ab3380e0037ac3e2e6344d8c9c978154f78479",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pbtpb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 16:59:32.242022 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-590" for this suite. @ 01/12/25 16:59:32.247
• [2.220 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 01/12/25 16:59:32.26
  I0112 16:59:32.260699 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 16:59:32.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:59:32.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:59:32.303
  STEP: apply creating a deployment @ 01/12/25 16:59:32.308
  I0112 16:59:32.324417 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8473" for this suite. @ 01/12/25 16:59:32.329
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 01/12/25 16:59:32.341
  I0112 16:59:32.341677 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pod-network-test @ 01/12/25 16:59:32.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:59:32.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:59:32.379
  STEP: Performing setup for networking test in namespace pod-network-test-1234 @ 01/12/25 16:59:32.383
  STEP: creating a selector @ 01/12/25 16:59:32.383
  STEP: Creating the service pods in kubernetes @ 01/12/25 16:59:32.383
  I0112 16:59:32.383340 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0112 16:59:32.881860      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:33.882644      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:34.883745      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:35.884030      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:36.884521      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:37.884968      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:38.885578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:39.885830      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:40.886380      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:41.886954      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:42.888160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:43.888293      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:44.889185      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:45.889527      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:46.890726      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:47.891313      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:48.891425      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:49.891732      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:50.892579      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:51.893367      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:52.894518      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:53.895058      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/12/25 16:59:54.495
  E0112 16:59:54.896017      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:55.896463      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 16:59:56.520768 21 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0112 16:59:56.520831 21 networking.go:42] Breadth first check of 10.1.243.218 on host 172.17.202.11...
  I0112 16:59:56.524425 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.243.213:9080/dial?request=hostname&protocol=http&host=10.1.243.218&port=8083&tries=1'] Namespace:pod-network-test-1234 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 16:59:56.524476 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:59:56.524922 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 16:59:56.525034 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1234/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.243.213%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.243.218%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0112 16:59:56.594119 21 utils.go:356] Waiting for responses: map[]
  I0112 16:59:56.594189 21 utils.go:360] reached 10.1.243.218 after 0/1 tries
  I0112 16:59:56.594220 21 networking.go:42] Breadth first check of 10.1.152.115 on host 172.17.207.20...
  I0112 16:59:56.598595 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.243.213:9080/dial?request=hostname&protocol=http&host=10.1.152.115&port=8083&tries=1'] Namespace:pod-network-test-1234 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 16:59:56.598667 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 16:59:56.599286 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 16:59:56.599356 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1234/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.243.213%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.152.115%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0112 16:59:56.669827 21 utils.go:356] Waiting for responses: map[]
  I0112 16:59:56.669887 21 utils.go:360] reached 10.1.152.115 after 0/1 tries
  I0112 16:59:56.669902 21 networking.go:53] Going to retry 0 out of 2 pods....
  I0112 16:59:56.670061 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1234" for this suite. @ 01/12/25 16:59:56.674
• [24.349 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 01/12/25 16:59:56.69
  I0112 16:59:56.690625 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 16:59:56.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 16:59:56.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 16:59:56.727
  STEP: Creating configMap with name configmap-test-volume-9dbf4980-9e63-4b33-bd4a-781e1d67c1a8 @ 01/12/25 16:59:56.733
  STEP: Creating a pod to test consume configMaps @ 01/12/25 16:59:56.744
  E0112 16:59:56.896561      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:57.896759      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:58.897657      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 16:59:59.898157      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:00:00.776
  I0112 17:00:00.780491 21 output.go:196] Trying to get logs from node ubuntu pod pod-configmaps-a69c9c1e-cf57-4d90-b0dd-30e543802c8f container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 17:00:00.789
  I0112 17:00:00.823923 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8683" for this suite. @ 01/12/25 17:00:00.829
• [4.154 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 01/12/25 17:00:00.845
  I0112 17:00:00.845248 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename crd-watch @ 01/12/25 17:00:00.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:00:00.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:00:00.885
  I0112 17:00:00.897181 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  E0112 17:00:00.898093      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:01.899145      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:02.899856      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 01/12/25 17:00:03.453
  I0112 17:00:03.464104 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-12T17:00:03Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-12T17:00:03Z]] name:name1 resourceVersion:27739 uid:cc7a279e-ed43-42a1-8af1-e38ee68a3a57] num:map[num1:9223372036854775807 num2:1000000]]}
  E0112 17:00:03.900997      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:04.901228      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:05.901522      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:06.902069      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:07.902342      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:08.902861      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:09.903664      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:10.904292      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:11.904825      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:12.905267      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 01/12/25 17:00:13.464
  I0112 17:00:13.480768 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-12T17:00:13Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-12T17:00:13Z]] name:name2 resourceVersion:27765 uid:21111b94-c2d4-4821-a8af-48a188e26cb3] num:map[num1:9223372036854775807 num2:1000000]]}
  E0112 17:00:13.905418      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:14.905963      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:15.906333      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:16.907520      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:17.907911      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:18.908564      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:19.909030      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:20.910083      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:21.910188      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:22.910407      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 01/12/25 17:00:23.481
  I0112 17:00:23.505538 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-12T17:00:03Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-12T17:00:23Z]] name:name1 resourceVersion:27780 uid:cc7a279e-ed43-42a1-8af1-e38ee68a3a57] num:map[num1:9223372036854775807 num2:1000000]]}
  E0112 17:00:23.911224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:24.911707      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:25.912192      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:26.912467      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:27.912709      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:28.913673      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:29.914262      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:30.914419      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:31.914901      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:32.915478      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 01/12/25 17:00:33.506
  I0112 17:00:33.526901 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-12T17:00:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-12T17:00:33Z]] name:name2 resourceVersion:27795 uid:21111b94-c2d4-4821-a8af-48a188e26cb3] num:map[num1:9223372036854775807 num2:1000000]]}
  E0112 17:00:33.915564      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:34.916221      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:35.916726      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:36.917888      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:37.918463      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:38.919060      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:39.919536      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:40.921381      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:41.922353      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:42.922721      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 01/12/25 17:00:43.527
  I0112 17:00:43.559424 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-12T17:00:03Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-12T17:00:23Z]] name:name1 resourceVersion:27810 uid:cc7a279e-ed43-42a1-8af1-e38ee68a3a57] num:map[num1:9223372036854775807 num2:1000000]]}
  E0112 17:00:43.922875      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:44.923305      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:45.923873      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:46.924351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:47.924730      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:48.925283      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:49.925648      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:50.926296      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:51.926915      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:52.927319      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 01/12/25 17:00:53.56
  I0112 17:00:53.583462 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-12T17:00:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-12T17:00:33Z]] name:name2 resourceVersion:27825 uid:21111b94-c2d4-4821-a8af-48a188e26cb3] num:map[num1:9223372036854775807 num2:1000000]]}
  E0112 17:00:53.927708      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:54.928318      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:55.928809      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:56.929283      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:57.929775      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:58.930297      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:00:59.930798      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:00.930873      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:01.931687      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:02.932184      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:03.933041      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:04.114265 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3835" for this suite. @ 01/12/25 17:01:04.121
• [63.296 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 01/12/25 17:01:04.141
  I0112 17:01:04.141690 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 17:01:04.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:01:04.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:01:04.187
  STEP: Setting up server cert @ 01/12/25 17:01:04.237
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 17:01:04.855
  STEP: Deploying the webhook pod @ 01/12/25 17:01:04.872
  STEP: Wait for the deployment to be ready @ 01/12/25 17:01:04.899
  I0112 17:01:04.908362 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0112 17:01:04.933805      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:05.934226      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:06.928773 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 1, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 1, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 1, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 1, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:01:06.935137      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:07.935573      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/12/25 17:01:08.934
  E0112 17:01:08.936319      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 17:01:08.971
  E0112 17:01:09.936849      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:09.972710 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 01/12/25 17:01:09.985
  STEP: create a namespace for the webhook @ 01/12/25 17:01:10.009
  STEP: create a configmap should be unconditionally rejected by the webhook @ 01/12/25 17:01:10.049
  I0112 17:01:10.183771 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2471" for this suite. @ 01/12/25 17:01:10.189
  STEP: Destroying namespace "webhook-markers-2086" for this suite. @ 01/12/25 17:01:10.215
  STEP: Destroying namespace "fail-closed-namespace-6870" for this suite. @ 01/12/25 17:01:10.276
• [6.176 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 01/12/25 17:01:10.317
  I0112 17:01:10.317742 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 17:01:10.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:01:10.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:01:10.377
  STEP: Creating configMap with name projected-configmap-test-volume-map-e1078124-0aa7-4742-89bf-f077eec1f80b @ 01/12/25 17:01:10.382
  STEP: Creating a pod to test consume configMaps @ 01/12/25 17:01:10.393
  E0112 17:01:10.938007      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:11.938669      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:12.939873      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:13.940497      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:01:14.429
  I0112 17:01:14.433116 21 output.go:196] Trying to get logs from node ubuntu pod pod-projected-configmaps-e9d4724f-ce82-4671-96cb-7658711d4f98 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 17:01:14.44
  I0112 17:01:14.481275 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9999" for this suite. @ 01/12/25 17:01:14.486
• [4.185 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 01/12/25 17:01:14.503
  I0112 17:01:14.503770 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename replicaset @ 01/12/25 17:01:14.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:01:14.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:01:14.548
  I0112 17:01:14.553407 21 replica_set.go:191] Creating ReplicaSet my-hostname-basic-4dd92a44-5dcf-47ad-a488-d0e547f2bfaa
  I0112 17:01:14.571369 21 resource.go:87] Pod name my-hostname-basic-4dd92a44-5dcf-47ad-a488-d0e547f2bfaa: Found 0 pods out of 1
  E0112 17:01:14.941228      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:15.941752      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:16.942091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:17.942583      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:18.943094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:19.575658 21 resource.go:87] Pod name my-hostname-basic-4dd92a44-5dcf-47ad-a488-d0e547f2bfaa: Found 1 pods out of 1
  I0112 17:01:19.575724 21 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-4dd92a44-5dcf-47ad-a488-d0e547f2bfaa" is running
  I0112 17:01:19.580209 21 replica_set.go:220] Pod "my-hostname-basic-4dd92a44-5dcf-47ad-a488-d0e547f2bfaa-9wc8s" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 17:01:15 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 17:01:14 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 17:01:15 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 17:01:15 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 17:01:14 +0000 UTC Reason: Message:}])
  I0112 17:01:19.580277 21 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/12/25 17:01:19.58
  I0112 17:01:19.593620 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8159" for this suite. @ 01/12/25 17:01:19.598
• [5.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 01/12/25 17:01:19.612
  I0112 17:01:19.612819 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename deployment @ 01/12/25 17:01:19.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:01:19.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:01:19.658
  I0112 17:01:19.663213 21 deployment.go:1196] Creating deployment "webserver-deployment"
  I0112 17:01:19.675276 21 deployment.go:1200] Waiting for observed generation 1
  E0112 17:01:19.943854      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:20.944256      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:21.685790 21 deployment.go:1205] Waiting for all required pods to come up
  I0112 17:01:21.694145 21 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 01/12/25 17:01:21.694
  E0112 17:01:21.944705      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:22.945353      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:23.721196 21 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0112 17:01:23.728623 21 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0112 17:01:23.749895 21 deployment.go:313] Updating deployment webserver-deployment
  I0112 17:01:23.750005 21 deployment.go:1224] Waiting for observed generation 2
  E0112 17:01:23.946442      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:24.946789      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:25.761799 21 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0112 17:01:25.767649 21 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0112 17:01:25.774012 21 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0112 17:01:25.791727 21 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0112 17:01:25.791832 21 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0112 17:01:25.797538 21 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0112 17:01:25.810252 21 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0112 17:01:25.810351 21 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0112 17:01:25.845416 21 deployment.go:313] Updating deployment webserver-deployment
  I0112 17:01:25.845614 21 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0112 17:01:25.857153 21 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  E0112 17:01:25.947461      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:26.948278      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:27.871077 21 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0112 17:01:27.884057 21 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c51bd4a-78e0-4cf8-8e42-60f44a049109",
      ResourceVersion: (string) (len=5) "28352",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 17:01:27.900457 21 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
      ResourceVersion: (string) (len=5) "28345",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298083,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "2c51bd4a-78e0-4cf8-8e42-60f44a049109",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 63 35 31 62 64  34 61 2d 37 38 65 30 2d  |\"2c51bd4a-78e0-|
              00000120  34 63 66 38 2d 38 65 34  32 2d 36 30 66 34 34 61  |4cf8-8e42-60f44a|
              00000130  30 34 39 31 30 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |049109\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 17:01:27.902758 21 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0112 17:01:27.903487 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
      ResourceVersion: (string) (len=5) "28305",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "2c51bd4a-78e0-4cf8-8e42-60f44a049109",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 63 35 31 62 64  34 61 2d 37 38 65 30 2d  |\"2c51bd4a-78e0-|
              00000120  34 63 66 38 2d 38 65 34  32 2d 36 30 66 34 34 61  |4cf8-8e42-60f44a|
              00000130  30 34 39 31 30 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |049109\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 17:01:27.935536 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-4svz7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-4svz7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "970bd61b-c9e5-49f4-8a70-1fa4a573f4cd",
      ResourceVersion: (string) (len=5) "28145",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1e1b3312bb9222c1d57b6579f4800867fea90fb8572b1641d28cb5cb603f4a03",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.152.107/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.152.107/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 31  30 37 5c 22 7d 22 3a 7b  |.1.152.107\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wnczl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wnczl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=12) "10.1.152.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.152.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872298081,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b4c06b60c0d6931235f135a9a9a58fb0d9b302b48c4de417ab559de7ba26400f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wnczl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:27.941998 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6lqtx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6lqtx",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e4bbf74-b612-4053-a1e8-0ee799e263e1",
      ResourceVersion: (string) (len=5) "28350",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kv2x7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kv2x7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kv2x7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:27.948556 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-7mg2l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7mg2l",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f614c6fc-ea46-4e15-8b30-df2438ac9369",
      ResourceVersion: (string) (len=5) "28366",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vmckt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vmckt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vmckt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  E0112 17:01:27.948668      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:27.955096 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-7wcsl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7wcsl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71f24f33-a4a6-435b-bb98-95abcb765757",
      ResourceVersion: (string) (len=5) "28297",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z7ndc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z7ndc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:27.958481 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-8dtc9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-8dtc9",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6d89983-2338-4d6a-8ab9-122f7874496a",
      ResourceVersion: (string) (len=5) "28365",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rqm4d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rqm4d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rqm4d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:27.963447 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9vvm4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9vvm4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2764c2ac-3287-4f5c-895a-8b1c7fbd22f0",
      ResourceVersion: (string) (len=5) "28360",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qw2dj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qw2dj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qw2dj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:27.971643 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-bjrwr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-bjrwr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a45985b-e19a-4fcb-859b-94b9a3f361ef",
      ResourceVersion: (string) (len=5) "28125",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c61fc43788d085b2d6a7ca65644ef8ac79dc24cd85a5b95a9464419e8db8ac1e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.231/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.231/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  33 31 5c 22 7d 22 3a 7b  |.1.243.231\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l6vfz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l6vfz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.231",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.231"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872298081,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6d5536d20df4cb31a4f506bfba1aa81c1356f2c7b57df257218a385158362042",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l6vfz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:27.979475 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-brzwm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-brzwm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c351081-1168-44b6-97d3-c258c63129ef",
      ResourceVersion: (string) (len=5) "28130",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a0985ce0ce2faf0a391c189e0066fdd0f58387ad28c93758fa2c045dfe64bc09",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.212/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.212/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  31 32 5c 22 7d 22 3a 7b  |.1.243.212\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dmjrf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dmjrf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.212",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.212"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872298081,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b25189c36fe8c793bf1e8a5d3444ef08f35fa027ee1c7644dabb6fe722af645e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dmjrf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:27.986385 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-bz49g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-bz49g",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1d1a8b3-3637-4d5c-abe1-d6accb85b10c",
      ResourceVersion: (string) (len=5) "28285",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9lrv5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9lrv5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9lrv5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:27.996534 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-bzjft" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-bzjft",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a60c65b4-3f67-4942-b4b6-b8888843f488",
      ResourceVersion: (string) (len=5) "28316",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b9458",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b9458",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b9458",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.001681 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-c6vhj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-c6vhj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72ec7775-8cda-444a-8b45-8cbd53d7fb48",
      ResourceVersion: (string) (len=5) "28347",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.245/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.245/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "22ed52e4e8f7a7b737023c84c849fb446d15a07c219bc8d6f140b46884e3052e"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n74w7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n74w7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n74w7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.009053 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-clzpr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-clzpr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "22648952-f94a-489c-a577-d83960494f1d",
      ResourceVersion: (string) (len=5) "28142",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "45a820bcf673ec7723f5f6e9d591441f8788619482f6b8960ee043c520fb6df8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.152.120/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.152.120/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 31  32 30 5c 22 7d 22 3a 7b  |.1.152.120\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5jg26",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5jg26",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=12) "10.1.152.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.152.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872298081,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0db0822cc0e7c72c684a49898b2752f18738b0d644dfe34e8b69a1043bc47ed0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5jg26",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.014244 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-d7lnf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-d7lnf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b23b0ad-f35f-4447-ad50-b703454d98db",
      ResourceVersion: (string) (len=5) "28150",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "027f236361558c57f6f52c04dc101db97a6abc6f8d296c79271bc6675be7e180",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.97/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.97/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 39  37 5c 22 7d 22 3a 7b 22  |.1.152.97\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4pcz8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4pcz8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=11) "10.1.152.97",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.152.97"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872298082,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://415e961b360f8d9c6de45552a68ccdad831f7b6a65224ded9630376b563a8848",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4pcz8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.020217 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fz75c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fz75c",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2902f0a2-f319-41ab-b8fe-9e147c0b4e3c",
      ResourceVersion: (string) (len=5) "28109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "32d04626fed5da7101fa6fcb6d1fda4b50aa440df5511db1fccd5d8a708e3aa6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.152.109/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.152.109/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 31  30 39 5c 22 7d 22 3a 7b  |.1.152.109\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-brn4n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-brn4n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=12) "10.1.152.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.152.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872298081,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7a4c9c1ba626bfa53c6afb4be1e5342cc38887d234749f03bcf96e7a165c2ba4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-brn4n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.031711 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hjvmj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hjvmj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71ec212b-bd35-46cd-bcda-881dff493ada",
      ResourceVersion: (string) (len=5) "28367",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "26d750f907bbca8acf3d07e632e866897e9949f94b62cd74bf017e53110421c6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.200/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.200/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2k9x6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2k9x6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2k9x6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.041494 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-p6fjp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-p6fjp",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b6afdea-9ed7-401e-b8c1-6362afa15556",
      ResourceVersion: (string) (len=5) "28121",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e7398bffb9e0bc825327a518f184a2c971672d2999bb92ffa716d6fe8ceea42e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.236/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.236/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  33 36 5c 22 7d 22 3a 7b  |.1.243.236\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z4tl9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z4tl9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.236",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.236"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872298081,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b0eb8b19d443c3432e0a702ebc62b58edbd09d6367ac19491eb60c913ca46ca0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z4tl9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.054575 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qf6js" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qf6js",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "494e2d81-e159-4011-b7a7-9140fb8fffd0",
      ResourceVersion: (string) (len=5) "28103",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c7776bb6d6fe94bebf851014d3eba7cd9272bfa94f58829abb73d213e7219401",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.152.119/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.152.119/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 31  31 39 5c 22 7d 22 3a 7b  |.1.152.119\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lzswx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lzswx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=12) "10.1.152.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.152.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872298081,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://896705bb96d4f89945a9d03b20e32c27666cbd6349771eb4a251d5658d9b256d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lzswx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.066476 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-r5z2s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-r5z2s",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01b663e6-d351-4f10-b5fe-59f926435294",
      ResourceVersion: (string) (len=5) "28302",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7j7pt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7j7pt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.070880 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-xxsb7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-xxsb7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3eeb2e07-4ce7-4e6d-842f-160ffd1b8fd5",
      ResourceVersion: (string) (len=5) "28348",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nd69l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nd69l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nd69l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.076077 21 deployment.go:67] Pod "webserver-deployment-64bcfc6446-zf9l9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-zf9l9",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6b6974d-265d-4516-aa88-a641e1c64c3d",
      ResourceVersion: (string) (len=5) "28328",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "59c9be7f-5b49-4b67-a79a-314a70aa2874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  63 39 62 65 37 66 2d 35  |d\":\"59c9be7f-5|
              00000090  62 34 39 2d 34 62 36 37  2d 61 37 39 61 2d 33 31  |b49-4b67-a79a-31|
              000000a0  34 61 37 30 61 61 32 38  37 34 5c 22 7d 22 3a 7b  |4a70aa2874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m8jxq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m8jxq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m8jxq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.081290 21 deployment.go:67] Pod "webserver-deployment-786f49d774-75rn4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-75rn4",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5609dc4f-ba57-4ec1-acba-52c6d44a3f1f",
      ResourceVersion: (string) (len=5) "28210",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298083,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1fbf2bd95fa05cbad55797536cf0ce4ae17f4ecfd9ce8f68dbfbde11d75169f4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.152.121/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.152.121/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dzxvb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dzxvb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298083,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dzxvb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.088909 21 deployment.go:67] Pod "webserver-deployment-786f49d774-96xq7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-96xq7",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4de4b42-b8d9-40be-9435-04ed82525fba",
      ResourceVersion: (string) (len=5) "28239",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "385b573aad01e89afb7596e87591dc48ef2a4bc207083e67abb8a60e6978598a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.243/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.243/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-82ksg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-82ksg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-82ksg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.096763 21 deployment.go:67] Pod "webserver-deployment-786f49d774-98k9n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-98k9n",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "523e3ca1-32f3-499a-b215-09c8b98fc0e2",
      ResourceVersion: (string) (len=5) "28225",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298083,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c351d9140245c37c670971a4037b3cf3abd1acfc6e4e1e51f67917c08e4a8031",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.232/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.232/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h2fwj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h2fwj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298083,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h2fwj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.103882 21 deployment.go:67] Pod "webserver-deployment-786f49d774-b2ll8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-b2ll8",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a210b596-7a2f-4ebc-9775-15aee64b1b82",
      ResourceVersion: (string) (len=5) "28333",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r6ffp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r6ffp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.107224 21 deployment.go:67] Pod "webserver-deployment-786f49d774-grp6d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-grp6d",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5dab214-1a4b-4e8b-b15e-18a716924a8a",
      ResourceVersion: (string) (len=5) "28354",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "47093818ac96698e1dac58c906f8d1267eb181dabfd9eb92bc4579c236bbc7d3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.89/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.89/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f9k7r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f9k7r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f9k7r",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.114343 21 deployment.go:67] Pod "webserver-deployment-786f49d774-hkzg5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-hkzg5",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3cbb014-8348-408e-a174-8a78f7a5fbd9",
      ResourceVersion: (string) (len=5) "28212",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298083,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0696e7c7f3bcf2eaad7316328ecf9f64ca9ff2f2bef54283ef4ebd1b46a6d98c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.241/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.241/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5jm9f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5jm9f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298083,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5jm9f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.121417 21 deployment.go:67] Pod "webserver-deployment-786f49d774-hxlxl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-hxlxl",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0061503d-0172-4280-8c89-2b6dfa438a48",
      ResourceVersion: (string) (len=5) "28341",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xqx9k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xqx9k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xqx9k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.128551 21 deployment.go:67] Pod "webserver-deployment-786f49d774-j7jwc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-j7jwc",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "775392d9-7230-4cb9-a825-73a23bd0e06f",
      ResourceVersion: (string) (len=5) "28236",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "93d7fd7839900158cf06e222ed0898588d66d4f5b5c5b9823ebb3269b843a78b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.79/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.79/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mqthf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mqthf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mqthf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.142240 21 deployment.go:67] Pod "webserver-deployment-786f49d774-llvl2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-llvl2",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7dfbcade-43c4-43a5-a078-7f6ed8b8ddea",
      ResourceVersion: (string) (len=5) "28312",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zdmvm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zdmvm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.149307 21 deployment.go:67] Pod "webserver-deployment-786f49d774-p48sx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-p48sx",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f240895f-b3d7-4927-b719-145e944e2bfc",
      ResourceVersion: (string) (len=5) "28358",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pmj87",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pmj87",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pmj87",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.158956 21 deployment.go:67] Pod "webserver-deployment-786f49d774-p5xrd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-p5xrd",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a2ad1dc-ca1d-489e-acb6-15745dedb812",
      ResourceVersion: (string) (len=5) "28314",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pr6h2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pr6h2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.163231 21 deployment.go:67] Pod "webserver-deployment-786f49d774-zl7wx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-zl7wx",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a701b9c-bb55-49c0-88e1-a2d280c6b965",
      ResourceVersion: (string) (len=5) "28338",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cc8rp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cc8rp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cc8rp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.177577 21 deployment.go:67] Pod "webserver-deployment-786f49d774-zsxxm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-zsxxm",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-2130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cb48445-bbb2-41b5-a223-04041e96e453",
      ResourceVersion: (string) (len=5) "28310",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5d4bd813-449f-4ab0-98a3-3c0290472a3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 64  34 62 64 38 31 33 2d 34  |d\":\"5d4bd813-4|
              00000090  34 39 66 2d 34 61 62 30  2d 39 38 61 33 2d 33 63  |49f-4ab0-98a3-3c|
              000000a0  30 32 39 30 34 37 32 61  33 62 5c 22 7d 22 3a 7b  |0290472a3b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2sktt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2sktt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 17:01:28.180174 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2130" for this suite. @ 01/12/25 17:01:28.189
• [8.752 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 01/12/25 17:01:28.374
  I0112 17:01:28.374109 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename runtimeclass @ 01/12/25 17:01:28.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:01:28.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:01:28.636
  E0112 17:01:28.949201      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:29.951687      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:30.909973 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3676" for this suite. @ 01/12/25 17:01:30.917
• [2.561 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 01/12/25 17:01:30.936
  I0112 17:01:30.936141 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 17:01:30.937
  E0112 17:01:30.952505      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:01:30.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:01:30.972
  STEP: creating Agnhost RC @ 01/12/25 17:01:30.982
  I0112 17:01:30.982877 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-9870 create -f -'
  I0112 17:01:31.130616 21 builder.go:146] stderr: ""
  I0112 17:01:31.130698 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/12/25 17:01:31.13
  E0112 17:01:31.952867      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:32.135533 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 17:01:32.135586 21 framework.go:733] Found 0 / 1
  E0112 17:01:32.953571      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:33.136146 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 17:01:33.136226 21 framework.go:733] Found 1 / 1
  I0112 17:01:33.136253 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 01/12/25 17:01:33.136
  I0112 17:01:33.141201 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 17:01:33.141257 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0112 17:01:33.141353 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-9870 patch pod agnhost-primary-22qwj -p {"metadata":{"annotations":{"x":"y"}}}'
  I0112 17:01:33.266767 21 builder.go:146] stderr: ""
  I0112 17:01:33.266874 21 builder.go:147] stdout: "pod/agnhost-primary-22qwj patched\n"
  STEP: checking annotations @ 01/12/25 17:01:33.266
  I0112 17:01:33.272176 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 17:01:33.272228 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0112 17:01:33.272412 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9870" for this suite. @ 01/12/25 17:01:33.277
• [2.367 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 01/12/25 17:01:33.303
  I0112 17:01:33.303170 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 17:01:33.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:01:33.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:01:33.366
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4560 @ 01/12/25 17:01:33.377
  STEP: changing the ExternalName service to type=NodePort @ 01/12/25 17:01:33.387
  STEP: creating replication controller externalname-service in namespace services-4560 @ 01/12/25 17:01:33.451
  I0112 17:01:33.463434      21 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4560, replica count: 2
  E0112 17:01:33.953641      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:34.954186      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:35.954265      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:36.514704      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0112 17:01:36.954458      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:37.954964      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:38.955239      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:39.515068      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 17:01:39.515202 21 resource.go:361] Creating new exec pod
  E0112 17:01:39.956044      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:40.957160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:41.957586      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:42.544796 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-4560 exec execpodmngzd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0112 17:01:42.707294 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0112 17:01:42.707353 21 builder.go:147] stdout: ""
  E0112 17:01:42.957823      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:43.545068 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-4560 exec execpodmngzd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0112 17:01:43.695002 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0112 17:01:43.695093 21 builder.go:147] stdout: ""
  E0112 17:01:43.958777      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:44.545784 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-4560 exec execpodmngzd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0112 17:01:44.701486 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0112 17:01:44.701581 21 builder.go:147] stdout: ""
  E0112 17:01:44.958921      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:45.545145 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-4560 exec execpodmngzd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0112 17:01:45.698286 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0112 17:01:45.698360 21 builder.go:147] stdout: "externalname-service-sd2fb"
  I0112 17:01:45.698468 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-4560 exec execpodmngzd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.144 80'
  I0112 17:01:45.855206 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.144 80\nConnection to 10.152.183.144 80 port [tcp/http] succeeded!\n"
  I0112 17:01:45.855285 21 builder.go:147] stdout: ""
  E0112 17:01:45.959602      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:46.699679 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-4560 exec execpodmngzd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.144 80'
  I0112 17:01:46.847067 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.144 80\nConnection to 10.152.183.144 80 port [tcp/http] succeeded!\n"
  I0112 17:01:46.847126 21 builder.go:147] stdout: "externalname-service-sd2fb"
  I0112 17:01:46.847254 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-4560 exec execpodmngzd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 31574'
  E0112 17:01:46.959781      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:47.000163 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 31574\nConnection to 172.17.202.11 31574 port [tcp/*] succeeded!\n"
  I0112 17:01:47.000225 21 builder.go:147] stdout: "externalname-service-sd2fb"
  I0112 17:01:47.000320 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-4560 exec execpodmngzd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.207.20 31574'
  I0112 17:01:47.140356 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.207.20 31574\nConnection to 172.17.207.20 31574 port [tcp/*] succeeded!\n"
  I0112 17:01:47.140428 21 builder.go:147] stdout: ""
  E0112 17:01:47.960741      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:48.001362 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-4560 exec execpodmngzd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.207.20 31574'
  I0112 17:01:48.163475 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.207.20 31574\nConnection to 172.17.207.20 31574 port [tcp/*] succeeded!\n"
  I0112 17:01:48.163545 21 builder.go:147] stdout: "externalname-service-sd2fb"
  I0112 17:01:48.163677 21 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0112 17:01:48.275051 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4560" for this suite. @ 01/12/25 17:01:48.279
• [14.989 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 01/12/25 17:01:48.292
  I0112 17:01:48.292583 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 17:01:48.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:01:48.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:01:48.329
  STEP: Creating projection with secret that has name projected-secret-test-17d9181e-3f2c-4534-975c-07364c9dc57d @ 01/12/25 17:01:48.338
  STEP: Creating a pod to test consume secrets @ 01/12/25 17:01:48.35
  E0112 17:01:48.961683      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:49.961767      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:50.962293      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:51.963097      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:01:52.379
  I0112 17:01:52.383396 21 output.go:196] Trying to get logs from node ubuntu pod pod-projected-secrets-6b25189b-5559-4b77-8cce-35e77fb1fd38 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 17:01:52.39
  I0112 17:01:52.423524 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2477" for this suite. @ 01/12/25 17:01:52.428
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 01/12/25 17:01:52.444
  I0112 17:01:52.444284 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/12/25 17:01:52.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:01:52.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:01:52.478
  STEP: getting /apis @ 01/12/25 17:01:52.498
  STEP: getting /apis/admissionregistration.k8s.io @ 01/12/25 17:01:52.503
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/12/25 17:01:52.505
  STEP: creating @ 01/12/25 17:01:52.507
  STEP: getting @ 01/12/25 17:01:52.547
  STEP: listing @ 01/12/25 17:01:52.551
  STEP: watching @ 01/12/25 17:01:52.555
  I0112 17:01:52.555706 21 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 01/12/25 17:01:52.557
  STEP: updating @ 01/12/25 17:01:52.586
  I0112 17:01:52.618362 21 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  I0112 17:01:52.618506 21 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  I0112 17:01:52.618805 21 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  I0112 17:01:52.618895 21 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 01/12/25 17:01:52.619
  STEP: patching /status @ 01/12/25 17:01:52.623
  STEP: updating /status @ 01/12/25 17:01:52.649
  STEP: deleting @ 01/12/25 17:01:52.698
  STEP: deleting a collection @ 01/12/25 17:01:52.716
  I0112 17:01:52.776514 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8315" for this suite. @ 01/12/25 17:01:52.782
• [0.354 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 01/12/25 17:01:52.799
  I0112 17:01:52.799653 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename csi-storageclass @ 01/12/25 17:01:52.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:01:52.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:01:52.833
  STEP: Creating a StorageClass @ 01/12/25 17:01:52.836
  STEP: Get StorageClass "e2e-zswxq" @ 01/12/25 17:01:52.863
  STEP: Patching the StorageClass "e2e-zswxq" @ 01/12/25 17:01:52.867
  STEP: Delete StorageClass "e2e-zswxq" @ 01/12/25 17:01:52.89
  STEP: Confirm deletion of StorageClass "e2e-zswxq" @ 01/12/25 17:01:52.912
  STEP: Create a replacement StorageClass @ 01/12/25 17:01:52.917
  STEP: Updating StorageClass "e2e-v2-zcj85" @ 01/12/25 17:01:52.936
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-zcj85=updated" @ 01/12/25 17:01:52.952
  STEP: Deleting StorageClass "e2e-v2-zcj85" via DeleteCollection @ 01/12/25 17:01:52.956
  E0112 17:01:52.963775      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Confirm deletion of StorageClass "e2e-v2-zcj85" @ 01/12/25 17:01:52.981
  I0112 17:01:52.989748 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-9446" for this suite. @ 01/12/25 17:01:52.996
• [0.216 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 01/12/25 17:01:53.015
  I0112 17:01:53.015388 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 17:01:53.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:01:53.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:01:53.056
  STEP: Setting up server cert @ 01/12/25 17:01:53.15
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 17:01:53.325
  STEP: Deploying the webhook pod @ 01/12/25 17:01:53.351
  STEP: Wait for the deployment to be ready @ 01/12/25 17:01:53.386
  I0112 17:01:53.395878 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0112 17:01:53.964917      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:54.965508      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/12/25 17:01:55.411
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 17:01:55.445
  E0112 17:01:55.966667      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:01:56.446783 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/12/25 17:01:56.455
  I0112 17:01:56.582075 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7562" for this suite. @ 01/12/25 17:01:56.586
  STEP: Destroying namespace "webhook-markers-9141" for this suite. @ 01/12/25 17:01:56.607
• [3.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 01/12/25 17:01:56.632
  I0112 17:01:56.632902 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/12/25 17:01:56.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:01:56.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:01:56.68
  STEP: Creating 50 configmaps @ 01/12/25 17:01:56.684
  E0112 17:01:56.967648      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 01/12/25 17:01:57.521
  I0112 17:01:57.543327 21 resource.go:87] Pod name wrapped-volume-race-397108d3-6e8c-4e46-b7bf-e92dd63b5952: Found 0 pods out of 5
  E0112 17:01:57.968006      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:58.968416      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:01:59.968726      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:00.969223      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:01.969882      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:02:02.553913 21 resource.go:87] Pod name wrapped-volume-race-397108d3-6e8c-4e46-b7bf-e92dd63b5952: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/12/25 17:02:02.553
  STEP: Creating RC which spawns configmap-volume pods @ 01/12/25 17:02:02.584
  I0112 17:02:02.610305 21 resource.go:87] Pod name wrapped-volume-race-f36aff5d-94bd-4611-94a6-9383a803b004: Found 0 pods out of 5
  E0112 17:02:02.970699      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:03.970455      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:04.971389      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:05.971669      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:06.971762      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:02:07.623304 21 resource.go:87] Pod name wrapped-volume-race-f36aff5d-94bd-4611-94a6-9383a803b004: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/12/25 17:02:07.623
  STEP: Creating RC which spawns configmap-volume pods @ 01/12/25 17:02:07.655
  I0112 17:02:07.685913 21 resource.go:87] Pod name wrapped-volume-race-2c1b28cb-9b53-454b-a00f-f50e86182bcc: Found 0 pods out of 5
  E0112 17:02:07.972215      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:08.973259      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:09.973640      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:10.973883      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:11.974653      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:02:12.702108 21 resource.go:87] Pod name wrapped-volume-race-2c1b28cb-9b53-454b-a00f-f50e86182bcc: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/12/25 17:02:12.702
  STEP: deleting ReplicationController wrapped-volume-race-2c1b28cb-9b53-454b-a00f-f50e86182bcc in namespace emptydir-wrapper-1411, will wait for the garbage collector to delete the pods @ 01/12/25 17:02:12.727
  I0112 17:02:12.798296 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-2c1b28cb-9b53-454b-a00f-f50e86182bcc took: 15.884959ms
  I0112 17:02:12.898889 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-2c1b28cb-9b53-454b-a00f-f50e86182bcc pods took: 100.589579ms
  E0112 17:02:12.975312      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:13.976183      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-f36aff5d-94bd-4611-94a6-9383a803b004 in namespace emptydir-wrapper-1411, will wait for the garbage collector to delete the pods @ 01/12/25 17:02:14.503
  I0112 17:02:14.598332 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-f36aff5d-94bd-4611-94a6-9383a803b004 took: 37.301139ms
  I0112 17:02:14.799199 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-f36aff5d-94bd-4611-94a6-9383a803b004 pods took: 200.868751ms
  E0112 17:02:14.976717      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:15.977217      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-397108d3-6e8c-4e46-b7bf-e92dd63b5952 in namespace emptydir-wrapper-1411, will wait for the garbage collector to delete the pods @ 01/12/25 17:02:16.399
  I0112 17:02:16.469641 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-397108d3-6e8c-4e46-b7bf-e92dd63b5952 took: 14.654055ms
  I0112 17:02:16.670855 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-397108d3-6e8c-4e46-b7bf-e92dd63b5952 pods took: 201.195947ms
  E0112 17:02:16.978169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:17.979242      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 01/12/25 17:02:18.471
  E0112 17:02:18.979421      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:02:19.398480 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1411" for this suite. @ 01/12/25 17:02:19.402
• [22.782 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 01/12/25 17:02:19.415
  I0112 17:02:19.415310 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 17:02:19.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:02:19.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:02:19.466
  I0112 17:02:19.473561 21 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-741"
  I0112 17:02:19.487835 21 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-741"
  E0112 17:02:19.979625      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 01/12/25 17:02:19.988
  I0112 17:02:19.993100 21 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-741"
  I0112 17:02:20.008644 21 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-741"
  STEP: waiting for the root ca configmap reconciled @ 01/12/25 17:02:20.509
  I0112 17:02:20.513376 21 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-741"
  I0112 17:02:20.513500 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-741" for this suite. @ 01/12/25 17:02:20.517
• [1.116 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 01/12/25 17:02:20.532
  I0112 17:02:20.532075 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 17:02:20.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:02:20.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:02:20.572
  STEP: Creating simple DaemonSet "daemon-set" @ 01/12/25 17:02:20.599
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/12/25 17:02:20.612
  I0112 17:02:20.622806 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 17:02:20.622880 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  E0112 17:02:20.980456      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:02:21.623403 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 17:02:21.623472 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  E0112 17:02:21.980840      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:02:22.625610 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 17:02:22.625687 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 01/12/25 17:02:22.63
  STEP: DeleteCollection of the DaemonSets @ 01/12/25 17:02:22.634
  STEP: Verify that ReplicaSets have been deleted @ 01/12/25 17:02:22.648
  I0112 17:02:22.664025 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29663"},"items":null}

  I0112 17:02:22.668406 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29663"},"items":[{"metadata":{"name":"daemon-set-phfg9","generateName":"daemon-set-","namespace":"daemonsets-2768","uid":"b0041b60-7fe1-4636-8e7e-342b63cd234e","resourceVersion":"29657","creationTimestamp":"2025-01-12T17:02:20Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"6c5edeb79c399ba69cc07d6addd6bd576866596c154fcf54ee6c92a4d002609d","cni.projectcalico.org/podIP":"10.1.152.111/32","cni.projectcalico.org/podIPs":"10.1.152.111/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c3e1e745-79e6-4276-a828-53e89b6cd1dd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-01-12T17:02:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c3e1e745-79e6-4276-a828-53e89b6cd1dd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-01-12T17:02:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-01-12T17:02:22Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.152.111\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xrrpn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xrrpn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ubuntu2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ubuntu2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-12T17:02:22Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-12T17:02:20Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-12T17:02:22Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-12T17:02:22Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-12T17:02:20Z"}],"hostIP":"172.17.207.20","hostIPs":[{"ip":"172.17.207.20"}],"podIP":"10.1.152.111","podIPs":[{"ip":"10.1.152.111"}],"startTime":"2025-01-12T17:02:20Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-12T17:02:21Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://32d3046eeee5462cbe12ba1909ab17bf7d7f562ff795fa76bb538a5224185986","started":true,"volumeMounts":[{"name":"kube-api-access-xrrpn","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-rgzqz","generateName":"daemon-set-","namespace":"daemonsets-2768","uid":"5374b8b9-39f0-417f-8b9e-026e07172515","resourceVersion":"29659","creationTimestamp":"2025-01-12T17:02:20Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"1e98ca736811c9ab49f2c852b63b99242ad978d6b0c04efba596668818445955","cni.projectcalico.org/podIP":"10.1.243.208/32","cni.projectcalico.org/podIPs":"10.1.243.208/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c3e1e745-79e6-4276-a828-53e89b6cd1dd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-01-12T17:02:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c3e1e745-79e6-4276-a828-53e89b6cd1dd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-01-12T17:02:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-01-12T17:02:22Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.243.208\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5knrp","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5knrp","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ubuntu","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ubuntu"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-12T17:02:22Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-12T17:02:20Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-12T17:02:22Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-12T17:02:22Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-12T17:02:20Z"}],"hostIP":"172.17.202.11","hostIPs":[{"ip":"172.17.202.11"}],"podIP":"10.1.243.208","podIPs":[{"ip":"10.1.243.208"}],"startTime":"2025-01-12T17:02:20Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-12T17:02:21Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://74cc349da0d5c78290878f443c6594b91a18366e79b7982d13a5b5ed8bf2b74a","started":true,"volumeMounts":[{"name":"kube-api-access-5knrp","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0112 17:02:22.682389 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2768" for this suite. @ 01/12/25 17:02:22.687
• [2.179 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 01/12/25 17:02:22.71
  I0112 17:02:22.710873 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 17:02:22.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:02:22.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:02:22.748
  STEP: Starting the proxy @ 01/12/25 17:02:22.752
  I0112 17:02:22.752692 21 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-9948 proxy --unix-socket=/tmp/kubectl-proxy-unix3225949967/test'
  STEP: retrieving proxy /api/ output @ 01/12/25 17:02:22.809
  I0112 17:02:22.809766 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9948" for this suite. @ 01/12/25 17:02:22.815
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 01/12/25 17:02:22.83
  I0112 17:02:22.830570 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 17:02:22.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:02:22.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:02:22.874
  STEP: Creating secret with name secret-test-64b246a8-df60-4325-a062-0406ef3e706a @ 01/12/25 17:02:22.879
  STEP: Creating a pod to test consume secrets @ 01/12/25 17:02:22.9
  E0112 17:02:22.981947      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:23.982216      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:24.983183      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:25.983832      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:02:26.949
  I0112 17:02:26.955598 21 output.go:196] Trying to get logs from node ubuntu pod pod-secrets-855dc51f-7af1-4d4b-8787-f7d5ed8b862e container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 17:02:26.967
  E0112 17:02:26.984628      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:02:27.004043 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6050" for this suite. @ 01/12/25 17:02:27.008
• [4.193 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 01/12/25 17:02:27.023
  I0112 17:02:27.023740 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 17:02:27.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:02:27.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:02:27.056
  STEP: Creating secret with name secret-test-acff0d9e-acce-459d-aca2-4c714664fa3a @ 01/12/25 17:02:27.061
  STEP: Creating a pod to test consume secrets @ 01/12/25 17:02:27.073
  E0112 17:02:27.985485      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:28.986212      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:29.986896      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:30.987370      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:02:31.101
  I0112 17:02:31.105681 21 output.go:196] Trying to get logs from node ubuntu pod pod-secrets-9f4ed4d7-10ac-484e-9647-5ecc8443e98d container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 17:02:31.112
  I0112 17:02:31.144843 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-638" for this suite. @ 01/12/25 17:02:31.149
• [4.140 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 01/12/25 17:02:31.164
  I0112 17:02:31.164355 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename subpath @ 01/12/25 17:02:31.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:02:31.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:02:31.208
  STEP: Setting up data @ 01/12/25 17:02:31.212
  STEP: Creating pod pod-subpath-test-downwardapi-8tn2 @ 01/12/25 17:02:31.246
  STEP: Creating a pod to test atomic-volume-subpath @ 01/12/25 17:02:31.246
  E0112 17:02:31.987923      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:32.988587      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:33.988765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:34.989221      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:35.989590      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:36.990384      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:37.990735      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:38.991135      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:39.992335      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:40.992692      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:41.993150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:42.993397      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:43.994014      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:44.994404      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:45.995047      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:46.995684      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:47.996365      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:48.997206      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:49.998438      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:50.998906      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:51.999081      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:52.999441      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:53.999894      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:55.000841      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:02:55.33
  I0112 17:02:55.335911 21 output.go:196] Trying to get logs from node ubuntu pod pod-subpath-test-downwardapi-8tn2 container test-container-subpath-downwardapi-8tn2: <nil>
  STEP: delete the pod @ 01/12/25 17:02:55.345
  STEP: Deleting pod pod-subpath-test-downwardapi-8tn2 @ 01/12/25 17:02:55.383
  I0112 17:02:55.383308 21 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-8tn2" in namespace "subpath-2134"
  I0112 17:02:55.386903 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2134" for this suite. @ 01/12/25 17:02:55.391
• [24.250 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 01/12/25 17:02:55.414
  I0112 17:02:55.414178 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename deployment @ 01/12/25 17:02:55.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:02:55.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:02:55.47
  STEP: creating a Deployment @ 01/12/25 17:02:55.479
  STEP: waiting for Deployment to be created @ 01/12/25 17:02:55.494
  STEP: waiting for all Replicas to be Ready @ 01/12/25 17:02:55.496
  I0112 17:02:55.498037 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 17:02:55.498098 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 17:02:55.524737 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 17:02:55.524794 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 17:02:55.541267 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 17:02:55.541334 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 17:02:55.684131 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 17:02:55.684185 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0112 17:02:56.001732      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:57.002054      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:02:57.290405 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0112 17:02:57.290506 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0112 17:02:57.387999 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 01/12/25 17:02:57.388
  I0112 17:02:57.403439 21 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 01/12/25 17:02:57.403
  I0112 17:02:57.405553 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0
  I0112 17:02:57.405601 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0
  I0112 17:02:57.405651 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0
  I0112 17:02:57.405674 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0
  I0112 17:02:57.405695 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0
  I0112 17:02:57.405710 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0
  I0112 17:02:57.405813 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0
  I0112 17:02:57.405890 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 0
  I0112 17:02:57.405982 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  I0112 17:02:57.406030 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  I0112 17:02:57.406081 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:02:57.406099 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:02:57.406245 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:02:57.406264 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:02:57.446181 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:02:57.446280 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:02:57.535003 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:02:57.535061 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:02:57.603185 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  I0112 17:02:57.603249 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  I0112 17:02:57.663603 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  I0112 17:02:57.663658 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  E0112 17:02:58.002099      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:02:59.003308      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:02:59.441306 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:02:59.441374 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:02:59.545411 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  STEP: listing Deployments @ 01/12/25 17:02:59.545
  I0112 17:02:59.550841 21 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 01/12/25 17:02:59.55
  I0112 17:02:59.581579 21 deployment.go:360] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 01/12/25 17:02:59.581
  I0112 17:02:59.593838 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 17:02:59.651891 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 17:02:59.784086 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 17:02:59.834369 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 17:02:59.896165 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0112 17:03:00.003569      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:01.004119      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:03:01.306174 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 17:03:01.442483 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 17:03:01.636864 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 17:03:01.684035 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0112 17:03:02.004394      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:03.004740      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:03:03.336324 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 01/12/25 17:03:03.435
  STEP: fetching the DeploymentStatus @ 01/12/25 17:03:03.453
  I0112 17:03:03.462541 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  I0112 17:03:03.462649 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  I0112 17:03:03.462680 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  I0112 17:03:03.462714 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  I0112 17:03:03.463054 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 1
  I0112 17:03:03.463090 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:03:03.463113 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 3
  I0112 17:03:03.463246 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:03:03.463264 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 2
  I0112 17:03:03.463283 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2406 with ReadyReplicas 3
  STEP: deleting the Deployment @ 01/12/25 17:03:03.463
  I0112 17:03:03.482423 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.482531 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.482560 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.482910 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.483108 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.483208 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.483372 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.483497 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.483710 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.483740 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.484111 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.484144 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.484165 21 deployment.go:475] observed event type MODIFIED
  I0112 17:03:03.488747 21 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0112 17:03:03.495549 21 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd67dfa3-3dae-4cd0-927c-d0ae7d1fb156",
      ResourceVersion: (string) (len=5) "30127",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298179,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "7dcf1ba4-bcf5-4e31-90cc-68066a353366",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 64 63 66  31 62 61 34 2d 62 63 66  |":\"7dcf1ba4-bcf|
              00000130  35 2d 34 65 33 31 2d 39  30 63 63 2d 36 38 30 36  |5-4e31-90cc-6806|
              00000140  36 61 33 35 33 33 36 36  5c 22 7d 22 3a 7b 7d 7d  |6a353366\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298183,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0112 17:03:03.505684 21 deployment.go:669] pod: "test-deployment-6c86c7f765-dkcws":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-dkcws",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-2406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2759340-467a-49c3-8f73-84c75983f619",
      ResourceVersion: (string) (len=5) "30088",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298179,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3e76154c864541a826a902b57f9e20e2802aac5de62e571ecb0c7aa4c570214f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.214/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.214/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "bd67dfa3-3dae-4cd0-927c-d0ae7d1fb156",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 64 36 37 64 66 61 33  |uid\":\"bd67dfa3|
              000000a0  2d 33 64 61 65 2d 34 63  64 30 2d 39 32 37 63 2d  |-3dae-4cd0-927c-|
              000000b0  64 30 61 65 37 64 31 66  62 31 35 36 5c 22 7d 22  |d0ae7d1fb156\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298180,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  31 34 5c 22 7d 22 3a 7b  |.1.243.214\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pl65q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pl65q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.214",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.214"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298179,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872298180,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://640eb21015ddfe5272d5b438fb65bd45b87be507ca6e0083bf379b64f20e0e25",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pl65q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0112 17:03:03.511009 21 deployment.go:669] pod: "test-deployment-6c86c7f765-fzqmx":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-fzqmx",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-2406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a797a7c-a1a2-4eab-a0b3-2a1722bcc27f",
      ResourceVersion: (string) (len=5) "30126",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298181,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.78/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1c6363205343f931fb257f943e97f313a501833e9c7b1c52ba970e8778a1bc9d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.78/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "bd67dfa3-3dae-4cd0-927c-d0ae7d1fb156",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 64 36 37 64 66 61 33  |uid\":\"bd67dfa3|
              000000a0  2d 33 64 61 65 2d 34 63  64 30 2d 39 32 37 63 2d  |-3dae-4cd0-927c-|
              000000b0  64 30 61 65 37 64 31 66  62 31 35 36 5c 22 7d 22  |d0ae7d1fb156\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298183,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 37  38 5c 22 7d 22 3a 7b 22  |.1.152.78\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s46mq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s46mq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298183,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298183,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298183,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=11) "10.1.152.78",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.152.78"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298181,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872298182,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://794dde4914a7fb07abb4f2d6dd31eb14f98f9b8c8c79546563c5dda81f741c49",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s46mq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0112 17:03:03.516997 21 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2772903d-1ee4-4fd8-a4c2-d628f01f5e67",
      ResourceVersion: (string) (len=5) "30135",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298177,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "7dcf1ba4-bcf5-4e31-90cc-68066a353366",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298183,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 64 63 66  31 62 61 34 2d 62 63 66  |":\"7dcf1ba4-bcf|
              00000130  35 2d 34 65 33 31 2d 39  30 63 63 2d 36 38 30 36  |5-4e31-90cc-6806|
              00000140  36 61 33 35 33 33 36 36  5c 22 7d 22 3a 7b 7d 7d  |6a353366\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298183,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0112 17:03:03.525007 21 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-5jfkd":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-5jfkd",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-2406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eae7ac84-b21d-4490-a23c-7528922a5584",
      ResourceVersion: (string) (len=5) "30131",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298179,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298185,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6bf6b5e88dd68ebbb3aa78dc313f2ae0045d1f7d807ab1e74e12e222e8da2341",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.99/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.99/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "2772903d-1ee4-4fd8-a4c2-d628f01f5e67",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 37 37 32 39 30 33 64  |uid\":\"2772903d|
              000000a0  2d 31 65 65 34 2d 34 66  64 38 2d 61 34 63 32 2d  |-1ee4-4fd8-a4c2-|
              000000b0  64 36 32 38 66 30 31 66  35 65 36 37 5c 22 7d 22  |d628f01f5e67\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298180,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 39  39 5c 22 7d 22 3a 7b 22  |.1.152.99\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-chmst",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-chmst",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298181,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=11) "10.1.152.99",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.152.99"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298179,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872298180,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://b7701f1cbddbd6874b9c1dfbe575facba74edf857ba9475835a0177f39c45ace",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-chmst",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0112 17:03:03.530855 21 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0957ceb-e55e-406e-9b9f-9244b4844a71",
      ResourceVersion: (string) (len=5) "30021",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "7dcf1ba4-bcf5-4e31-90cc-68066a353366",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 64 63 66  31 62 61 34 2d 62 63 66  |":\"7dcf1ba4-bcf|
              00000130  35 2d 34 65 33 31 2d 39  30 63 63 2d 36 38 30 36  |5-4e31-90cc-6806|
              00000140  36 61 33 35 33 33 36 36  5c 22 7d 22 3a 7b 7d 7d  |6a353366\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298179,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0112 17:03:03.539414 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2406" for this suite. @ 01/12/25 17:03:03.544
• [8.156 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 01/12/25 17:03:03.57
  I0112 17:03:03.570352 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 17:03:03.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:03.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:03.614
  STEP: Setting up server cert @ 01/12/25 17:03:03.715
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 17:03:03.894
  STEP: Deploying the webhook pod @ 01/12/25 17:03:03.926
  STEP: Wait for the deployment to be ready @ 01/12/25 17:03:03.962
  I0112 17:03:03.972667 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0112 17:03:04.005074      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:05.005284      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/12/25 17:03:05.994
  E0112 17:03:06.005537      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 17:03:06.037
  E0112 17:03:07.006180      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:03:07.037375 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 01/12/25 17:03:07.045
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 01/12/25 17:03:07.093
  STEP: Creating a configMap that should not be mutated @ 01/12/25 17:03:07.119
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 01/12/25 17:03:07.166
  STEP: Creating a configMap that should be mutated @ 01/12/25 17:03:07.181
  I0112 17:03:07.362756 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7379" for this suite. @ 01/12/25 17:03:07.367
  STEP: Destroying namespace "webhook-markers-2180" for this suite. @ 01/12/25 17:03:07.389
• [3.843 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 01/12/25 17:03:07.414
  I0112 17:03:07.414132 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 17:03:07.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:07.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:07.456
  STEP: Creating configMap with name configmap-test-volume-map-57b20e5b-638b-4bd3-923f-2debd664e5dc @ 01/12/25 17:03:07.462
  STEP: Creating a pod to test consume configMaps @ 01/12/25 17:03:07.475
  E0112 17:03:08.006773      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:09.007305      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:10.007329      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:11.007761      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:03:11.507
  I0112 17:03:11.511852 21 output.go:196] Trying to get logs from node ubuntu pod pod-configmaps-38961ab6-b46e-4187-83d3-400c39ba5d2a container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 17:03:11.519
  I0112 17:03:11.565420 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-712" for this suite. @ 01/12/25 17:03:11.57
• [4.171 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 01/12/25 17:03:11.584
  I0112 17:03:11.585024 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename server-version @ 01/12/25 17:03:11.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:11.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:11.623
  STEP: Request ServerVersion @ 01/12/25 17:03:11.629
  STEP: Confirm major version @ 01/12/25 17:03:11.63
  I0112 17:03:11.631023 21 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 01/12/25 17:03:11.631
  I0112 17:03:11.631118 21 server_version.go:58] cleanMinorVersion: 31
  I0112 17:03:11.631156 21 server_version.go:62] Minor version: 31
  I0112 17:03:11.631296 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7512" for this suite. @ 01/12/25 17:03:11.636
• [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 01/12/25 17:03:11.649
  I0112 17:03:11.649977 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/12/25 17:03:11.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:11.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:11.717
  I0112 17:03:11.720309 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  E0112 17:03:12.008569      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:13.008814      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:14.009451      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:03:14.802104 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6998" for this suite. @ 01/12/25 17:03:14.806
• [3.173 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 01/12/25 17:03:14.822
  I0112 17:03:14.822808 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-runtime @ 01/12/25 17:03:14.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:14.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:14.857
  STEP: create the container @ 01/12/25 17:03:14.861
  W0112 17:03:14.881551      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/12/25 17:03:14.881
  E0112 17:03:15.009897      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:16.010886      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:17.011184      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/12/25 17:03:17.902
  STEP: the container should be terminated @ 01/12/25 17:03:17.908
  STEP: the termination message should be set @ 01/12/25 17:03:17.908
  I0112 17:03:17.908378 21 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 01/12/25 17:03:17.908
  I0112 17:03:17.954858 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4684" for this suite. @ 01/12/25 17:03:17.96
• [3.153 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 01/12/25 17:03:17.975
  I0112 17:03:17.975975 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename apf @ 01/12/25 17:03:17.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:18.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:18.01
  E0112 17:03:18.011457      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting /apis @ 01/12/25 17:03:18.02
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/12/25 17:03:18.026
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/12/25 17:03:18.027
  STEP: creating @ 01/12/25 17:03:18.029
  STEP: getting @ 01/12/25 17:03:18.071
  STEP: listing @ 01/12/25 17:03:18.075
  STEP: watching @ 01/12/25 17:03:18.078
  I0112 17:03:18.078721 21 flowcontrol.go:620] starting watch
  STEP: patching @ 01/12/25 17:03:18.08
  STEP: updating @ 01/12/25 17:03:18.093
  I0112 17:03:18.107725 21 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 01/12/25 17:03:18.107
  STEP: patching /status @ 01/12/25 17:03:18.111
  STEP: updating /status @ 01/12/25 17:03:18.131
  STEP: deleting @ 01/12/25 17:03:18.146
  STEP: deleting a collection @ 01/12/25 17:03:18.167
  I0112 17:03:18.201247 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9079" for this suite. @ 01/12/25 17:03:18.205
• [0.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 01/12/25 17:03:18.218
  I0112 17:03:18.218328 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 17:03:18.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:18.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:18.248
  STEP: creating secret secrets-2150/secret-test-27c9006b-180a-45e7-8772-6b64cfbc3776 @ 01/12/25 17:03:18.253
  STEP: Creating a pod to test consume secrets @ 01/12/25 17:03:18.264
  E0112 17:03:19.011669      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:20.011850      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:21.012249      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:22.013032      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:03:22.291
  I0112 17:03:22.296283 21 output.go:196] Trying to get logs from node ubuntu pod pod-configmaps-86fea23c-1ab8-4b9c-a936-97dcfa99c6e8 container env-test: <nil>
  STEP: delete the pod @ 01/12/25 17:03:22.305
  I0112 17:03:22.338813 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2150" for this suite. @ 01/12/25 17:03:22.343
• [4.141 seconds]
------------------------------
S
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 01/12/25 17:03:22.359
  I0112 17:03:22.359136 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename certificates @ 01/12/25 17:03:22.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:22.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:22.402
  E0112 17:03:23.013296      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting /apis @ 01/12/25 17:03:23.166
  STEP: getting /apis/certificates.k8s.io @ 01/12/25 17:03:23.172
  STEP: getting /apis/certificates.k8s.io/v1 @ 01/12/25 17:03:23.174
  STEP: creating @ 01/12/25 17:03:23.175
  STEP: getting @ 01/12/25 17:03:23.218
  STEP: listing @ 01/12/25 17:03:23.221
  STEP: watching @ 01/12/25 17:03:23.224
  I0112 17:03:23.224495 21 certificates.go:316] starting watch
  STEP: patching @ 01/12/25 17:03:23.226
  STEP: updating @ 01/12/25 17:03:23.238
  I0112 17:03:23.257475 21 certificates.go:332] waiting for watch events with expected annotations
  I0112 17:03:23.257598 21 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 01/12/25 17:03:23.257
  STEP: patching /approval @ 01/12/25 17:03:23.264
  STEP: updating /approval @ 01/12/25 17:03:23.285
  STEP: getting /status @ 01/12/25 17:03:23.301
  STEP: patching /status @ 01/12/25 17:03:23.305
  STEP: updating /status @ 01/12/25 17:03:23.327
  STEP: deleting @ 01/12/25 17:03:23.34
  STEP: deleting a collection @ 01/12/25 17:03:23.387
  I0112 17:03:23.422602 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4629" for this suite. @ 01/12/25 17:03:23.426
• [1.084 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 01/12/25 17:03:23.443
  I0112 17:03:23.443598 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename disruption @ 01/12/25 17:03:23.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:23.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:23.478
  STEP: creating the pdb @ 01/12/25 17:03:23.482
  STEP: Waiting for the pdb to be processed @ 01/12/25 17:03:23.493
  E0112 17:03:24.014543      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:25.014678      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 01/12/25 17:03:25.497
  STEP: Waiting for the pdb to be processed @ 01/12/25 17:03:25.521
  E0112 17:03:26.015281      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:27.015516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 01/12/25 17:03:27.526
  STEP: Waiting for the pdb to be processed @ 01/12/25 17:03:27.543
  E0112 17:03:28.016387      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:29.016766      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 01/12/25 17:03:29.568
  I0112 17:03:29.572082 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9030" for this suite. @ 01/12/25 17:03:29.576
• [6.149 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 01/12/25 17:03:29.592
  I0112 17:03:29.592499 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename sysctl @ 01/12/25 17:03:29.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:29.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:29.642
  STEP: Creating a pod with one valid and two invalid sysctls @ 01/12/25 17:03:29.645
  I0112 17:03:29.651727 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6045" for this suite. @ 01/12/25 17:03:29.656
• [0.080 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 01/12/25 17:03:29.672
  I0112 17:03:29.672695 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 17:03:29.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:29.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:29.705
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 17:03:29.71
  E0112 17:03:30.017216      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:31.017556      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:32.017661      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:33.018319      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:03:33.748
  I0112 17:03:33.755781 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-f7b53898-c8da-4aa5-aace-64b74877893e container client-container: <nil>
  STEP: delete the pod @ 01/12/25 17:03:33.764
  I0112 17:03:33.807995 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9625" for this suite. @ 01/12/25 17:03:33.813
• [4.157 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 01/12/25 17:03:33.829
  I0112 17:03:33.829673 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 17:03:33.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:33.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:33.863
  STEP: creating the pod @ 01/12/25 17:03:33.871
  I0112 17:03:33.871465 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2654 create -f -'
  E0112 17:03:34.019164      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:03:34.021679 21 builder.go:146] stderr: ""
  I0112 17:03:34.021736 21 builder.go:147] stdout: "pod/pause created\n"
  E0112 17:03:35.019743      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:36.019997      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 01/12/25 17:03:36.031
  I0112 17:03:36.031464 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2654 label pods pause testing-label=testing-label-value'
  I0112 17:03:36.125456 21 builder.go:146] stderr: ""
  I0112 17:03:36.125535 21 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 01/12/25 17:03:36.125
  I0112 17:03:36.125642 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2654 get pod pause -L testing-label'
  I0112 17:03:36.196456 21 builder.go:146] stderr: ""
  I0112 17:03:36.196522 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 01/12/25 17:03:36.196
  I0112 17:03:36.196642 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2654 label pods pause testing-label-'
  I0112 17:03:36.284999 21 builder.go:146] stderr: ""
  I0112 17:03:36.285067 21 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 01/12/25 17:03:36.285
  I0112 17:03:36.285161 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2654 get pod pause -L testing-label'
  I0112 17:03:36.364674 21 builder.go:146] stderr: ""
  I0112 17:03:36.364736 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 01/12/25 17:03:36.364
  I0112 17:03:36.364840 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2654 delete --grace-period=0 --force -f -'
  I0112 17:03:36.489889 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 17:03:36.489994 21 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0112 17:03:36.490094 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2654 get rc,svc -l name=pause --no-headers'
  I0112 17:03:36.574798 21 builder.go:146] stderr: "No resources found in kubectl-2654 namespace.\n"
  I0112 17:03:36.574875 21 builder.go:147] stdout: ""
  I0112 17:03:36.574965 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-2654 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0112 17:03:36.643097 21 builder.go:146] stderr: ""
  I0112 17:03:36.643173 21 builder.go:147] stdout: ""
  I0112 17:03:36.643295 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2654" for this suite. @ 01/12/25 17:03:36.647
• [2.841 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 01/12/25 17:03:36.671
  I0112 17:03:36.671371 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 17:03:36.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:36.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:36.717
  E0112 17:03:37.021122      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:38.021605      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:03:38.758830 21 delete.go:62] Deleting pod "var-expansion-eb9c10cb-b781-424d-b1b3-ca4edbf8725d" in namespace "var-expansion-4686"
  I0112 17:03:38.776701 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-eb9c10cb-b781-424d-b1b3-ca4edbf8725d" to be fully deleted
  E0112 17:03:39.022324      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:40.022392      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:03:40.786715 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4686" for this suite. @ 01/12/25 17:03:40.792
• [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 01/12/25 17:03:40.816
  I0112 17:03:40.816899 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 17:03:40.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:40.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:40.85
  STEP: Discovering how many secrets are in namespace by default @ 01/12/25 17:03:40.855
  E0112 17:03:41.023415      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:42.023459      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:43.024230      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:44.024485      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:45.025502      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 01/12/25 17:03:45.86
  E0112 17:03:46.025716      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:47.026457      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:48.026811      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:49.026921      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:50.027983      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/12/25 17:03:50.866
  STEP: Ensuring resource quota status is calculated @ 01/12/25 17:03:50.9
  E0112 17:03:51.028735      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:52.029502      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 01/12/25 17:03:52.905
  STEP: Ensuring resource quota status captures secret creation @ 01/12/25 17:03:52.933
  E0112 17:03:53.030158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:54.030815      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 01/12/25 17:03:54.939
  STEP: Ensuring resource quota status released usage @ 01/12/25 17:03:54.964
  E0112 17:03:55.031410      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:56.031702      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:03:56.971027 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9125" for this suite. @ 01/12/25 17:03:56.978
• [16.190 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 01/12/25 17:03:57.006
  I0112 17:03:57.006775 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 17:03:57.007
  E0112 17:03:57.032764      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:03:57.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:03:57.039
  STEP: Counting existing ResourceQuota @ 01/12/25 17:03:57.044
  E0112 17:03:58.033505      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:03:59.034158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:00.035191      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:01.036276      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:02.037044      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/12/25 17:04:02.049
  STEP: Ensuring resource quota status is calculated @ 01/12/25 17:04:02.064
  E0112 17:04:03.037450      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:04.038226      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:04:04.070688 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-897" for this suite. @ 01/12/25 17:04:04.076
• [7.089 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 01/12/25 17:04:04.096
  I0112 17:04:04.096491 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubelet-test @ 01/12/25 17:04:04.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:04:04.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:04:04.132
  E0112 17:04:05.039056      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:06.039377      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:07.040581      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:08.041079      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:04:08.172005 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2145" for this suite. @ 01/12/25 17:04:08.176
• [4.103 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 01/12/25 17:04:08.199
  I0112 17:04:08.199372 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 17:04:08.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:04:08.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:04:08.255
  STEP: Creating a ResourceQuota with best effort scope @ 01/12/25 17:04:08.26
  STEP: Ensuring ResourceQuota status is calculated @ 01/12/25 17:04:08.276
  E0112 17:04:09.041119      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:10.041796      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 01/12/25 17:04:10.282
  STEP: Ensuring ResourceQuota status is calculated @ 01/12/25 17:04:10.299
  E0112 17:04:11.042914      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:12.043829      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 01/12/25 17:04:12.304
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 01/12/25 17:04:12.346
  E0112 17:04:13.044297      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:14.044852      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 01/12/25 17:04:14.35
  E0112 17:04:15.045446      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:16.045811      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/12/25 17:04:16.356
  STEP: Ensuring resource quota status released the pod usage @ 01/12/25 17:04:16.422
  E0112 17:04:17.046162      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:18.046697      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 01/12/25 17:04:18.428
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 01/12/25 17:04:18.463
  E0112 17:04:19.046904      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:20.047591      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 01/12/25 17:04:20.467
  E0112 17:04:21.047774      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:22.048371      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/12/25 17:04:22.472
  STEP: Ensuring resource quota status released the pod usage @ 01/12/25 17:04:22.528
  E0112 17:04:23.048312      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:24.048834      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:04:24.533520 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6894" for this suite. @ 01/12/25 17:04:24.537
• [16.354 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 01/12/25 17:04:24.553
  I0112 17:04:24.553633 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 17:04:24.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:04:24.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:04:24.591
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1888 @ 01/12/25 17:04:24.596
  STEP: changing the ExternalName service to type=ClusterIP @ 01/12/25 17:04:24.608
  STEP: creating replication controller externalname-service in namespace services-1888 @ 01/12/25 17:04:24.65
  I0112 17:04:24.663220      21 runners.go:193] Created replication controller with name: externalname-service, namespace: services-1888, replica count: 2
  E0112 17:04:25.049914      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:26.050138      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:27.050417      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:04:27.714410      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 17:04:27.714522 21 resource.go:361] Creating new exec pod
  E0112 17:04:28.050725      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:29.051162      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:30.051291      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:04:30.736469 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-1888 exec execpod4phpt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0112 17:04:30.880797 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0112 17:04:30.880875 21 builder.go:147] stdout: ""
  E0112 17:04:31.052345      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:04:31.736604 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-1888 exec execpod4phpt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0112 17:04:31.882495 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0112 17:04:31.882553 21 builder.go:147] stdout: "externalname-service-rbqk9"
  I0112 17:04:31.882648 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-1888 exec execpod4phpt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.199 80'
  I0112 17:04:32.043597 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.199 80\nConnection to 10.152.183.199 80 port [tcp/http] succeeded!\n"
  I0112 17:04:32.043661 21 builder.go:147] stdout: ""
  E0112 17:04:32.052903      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:04:32.883102 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-1888 exec execpod4phpt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.199 80'
  I0112 17:04:33.039053 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.199 80\nConnection to 10.152.183.199 80 port [tcp/http] succeeded!\n"
  I0112 17:04:33.039126 21 builder.go:147] stdout: ""
  E0112 17:04:33.053342      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:04:33.883638 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-1888 exec execpod4phpt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.199 80'
  I0112 17:04:34.032984 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.199 80\nConnection to 10.152.183.199 80 port [tcp/http] succeeded!\n"
  I0112 17:04:34.033103 21 builder.go:147] stdout: "externalname-service-rbqk9"
  I0112 17:04:34.033190 21 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  E0112 17:04:34.054366      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:04:34.079373 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1888" for this suite. @ 01/12/25 17:04:34.084
• [9.554 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 01/12/25 17:04:34.107
  I0112 17:04:34.107961 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename init-container @ 01/12/25 17:04:34.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:04:34.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:04:34.186
  STEP: creating the pod @ 01/12/25 17:04:34.192
  I0112 17:04:34.192784 21 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0112 17:04:35.055011      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:36.055144      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:37.056299      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:04:38.039860 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3526" for this suite. @ 01/12/25 17:04:38.044
  E0112 17:04:38.056382      21 retrywatcher.go:131] "Watch failed" err="context canceled"
• [3.950 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 01/12/25 17:04:38.058
  I0112 17:04:38.058419 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 17:04:38.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:04:38.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:04:38.151
  STEP: Creating secret with name secret-test-map-15351d97-5115-420c-b28e-ddafe91f5e54 @ 01/12/25 17:04:38.157
  STEP: Creating a pod to test consume secrets @ 01/12/25 17:04:38.181
  E0112 17:04:39.056511      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:40.056811      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:41.057793      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:42.058416      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:04:42.237
  I0112 17:04:42.244237 21 output.go:196] Trying to get logs from node ubuntu pod pod-secrets-7616b3d4-3e07-4113-afa1-ef98b0191dc1 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 17:04:42.253
  I0112 17:04:42.283568 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1462" for this suite. @ 01/12/25 17:04:42.288
• [4.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 01/12/25 17:04:42.314
  I0112 17:04:42.314589 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename job @ 01/12/25 17:04:42.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:04:42.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:04:42.346
  STEP: Creating a job @ 01/12/25 17:04:42.351
  STEP: Ensuring active pods == parallelism @ 01/12/25 17:04:42.363
  E0112 17:04:43.059157      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:44.059846      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete a job @ 01/12/25 17:04:44.367
  STEP: deleting Job.batch foo in namespace job-3580, will wait for the garbage collector to delete the pods @ 01/12/25 17:04:44.367
  I0112 17:04:44.449429 21 resources.go:139] Deleting Job.batch foo took: 27.631559ms
  I0112 17:04:44.550254 21 resources.go:163] Terminating Job.batch foo pods took: 100.824317ms
  E0112 17:04:45.060344      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:46.060323      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 01/12/25 17:04:46.951
  I0112 17:04:46.957026 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3580" for this suite. @ 01/12/25 17:04:46.962
• [4.664 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 01/12/25 17:04:46.978
  I0112 17:04:46.979020 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 17:04:46.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:04:47.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:04:47.01
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 17:04:47.022
  E0112 17:04:47.061043      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:48.061501      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:49.061833      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:50.062251      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:04:51.055
  I0112 17:04:51.060295 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-b41970af-b127-4bcc-aa6c-cbb9be786390 container client-container: <nil>
  E0112 17:04:51.063314      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod @ 01/12/25 17:04:51.068
  I0112 17:04:51.107730 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8330" for this suite. @ 01/12/25 17:04:51.111
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 01/12/25 17:04:51.126
  I0112 17:04:51.126211 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 17:04:51.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:04:51.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:04:51.214
  STEP: Creating secret with name s-test-opt-del-5413ec65-ea57-4dfc-a3a8-537731a3943b @ 01/12/25 17:04:51.222
  STEP: Creating secret with name s-test-opt-upd-115936c2-0192-4d85-bf9e-d6d77129fc4e @ 01/12/25 17:04:51.252
  STEP: Creating the pod @ 01/12/25 17:04:51.272
  E0112 17:04:52.063865      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:53.064550      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-5413ec65-ea57-4dfc-a3a8-537731a3943b @ 01/12/25 17:04:53.332
  STEP: Updating secret s-test-opt-upd-115936c2-0192-4d85-bf9e-d6d77129fc4e @ 01/12/25 17:04:53.348
  STEP: Creating secret with name s-test-opt-create-5f8f515f-e20d-4302-afd5-577488ffc6ca @ 01/12/25 17:04:53.362
  STEP: waiting to observe update in volume @ 01/12/25 17:04:53.375
  E0112 17:04:54.065704      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:55.066362      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:04:55.414460 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6844" for this suite. @ 01/12/25 17:04:55.419
• [4.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 01/12/25 17:04:55.442
  I0112 17:04:55.442456 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename limitrange @ 01/12/25 17:04:55.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:04:55.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:04:55.485
  STEP: Creating a LimitRange @ 01/12/25 17:04:55.489
  STEP: Setting up watch @ 01/12/25 17:04:55.489
  STEP: Submitting a LimitRange @ 01/12/25 17:04:55.595
  STEP: Verifying LimitRange creation was observed @ 01/12/25 17:04:55.612
  STEP: Fetching the LimitRange to ensure it has proper values @ 01/12/25 17:04:55.612
  I0112 17:04:55.617615 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0112 17:04:55.617676 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 01/12/25 17:04:55.617
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 01/12/25 17:04:55.63
  I0112 17:04:55.634377 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0112 17:04:55.634416 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 01/12/25 17:04:55.634
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 01/12/25 17:04:55.663
  I0112 17:04:55.666911 21 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0112 17:04:55.667065 21 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 01/12/25 17:04:55.667
  STEP: Failing to create a Pod with more than max resources @ 01/12/25 17:04:55.669
  STEP: Updating a LimitRange @ 01/12/25 17:04:55.672
  STEP: Verifying LimitRange updating is effective @ 01/12/25 17:04:55.724
  E0112 17:04:56.067008      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:57.068215      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 01/12/25 17:04:57.73
  STEP: Failing to create a Pod with more than max resources @ 01/12/25 17:04:57.746
  STEP: Deleting a LimitRange @ 01/12/25 17:04:57.75
  STEP: Verifying the LimitRange was deleted @ 01/12/25 17:04:57.769
  E0112 17:04:58.069150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:04:59.069637      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:00.070106      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:01.070502      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:02.071567      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:02.777255 21 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 01/12/25 17:05:02.777
  I0112 17:05:02.798921 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7366" for this suite. @ 01/12/25 17:05:02.803
• [7.386 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 01/12/25 17:05:02.828
  I0112 17:05:02.828469 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 01/12/25 17:05:02.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:05:02.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:05:02.897
  STEP: Setting up the test @ 01/12/25 17:05:02.911
  STEP: Creating hostNetwork=false pod @ 01/12/25 17:05:02.911
  E0112 17:05:03.072492      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:04.073117      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 01/12/25 17:05:04.948
  E0112 17:05:05.073247      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:06.073782      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Running the test @ 01/12/25 17:05:06.973
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 01/12/25 17:05:06.973
  I0112 17:05:06.973219 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6980 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:05:06.973244 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:05:06.974024 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:05:06.974122 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6980/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0112 17:05:07.045637 21 exec_util.go:111] Exec stderr: ""
  I0112 17:05:07.045733 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6980 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:05:07.045770 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:05:07.046412 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:05:07.046496 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6980/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0112 17:05:07.073839      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:07.115837 21 exec_util.go:111] Exec stderr: ""
  I0112 17:05:07.115898 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6980 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:05:07.115911 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:05:07.116447 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:05:07.116526 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6980/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0112 17:05:07.214369 21 exec_util.go:111] Exec stderr: ""
  I0112 17:05:07.214444 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6980 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:05:07.214469 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:05:07.215131 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:05:07.215258 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6980/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0112 17:05:07.285749 21 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 01/12/25 17:05:07.285
  I0112 17:05:07.286003 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6980 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:05:07.286052 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:05:07.286913 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:05:07.287018 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6980/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0112 17:05:07.369297 21 exec_util.go:111] Exec stderr: ""
  I0112 17:05:07.369361 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6980 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:05:07.369374 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:05:07.369982 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:05:07.370052 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6980/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0112 17:05:07.441033 21 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 01/12/25 17:05:07.441
  I0112 17:05:07.441145 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6980 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:05:07.441168 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:05:07.441655 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:05:07.441719 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6980/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0112 17:05:07.509624 21 exec_util.go:111] Exec stderr: ""
  I0112 17:05:07.509710 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6980 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:05:07.509736 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:05:07.510273 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:05:07.510345 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6980/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0112 17:05:07.575219 21 exec_util.go:111] Exec stderr: ""
  I0112 17:05:07.575274 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6980 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:05:07.575294 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:05:07.575797 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:05:07.575950 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6980/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0112 17:05:07.653997 21 exec_util.go:111] Exec stderr: ""
  I0112 17:05:07.654076 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6980 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:05:07.654100 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:05:07.654739 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:05:07.654809 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6980/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0112 17:05:07.724755 21 exec_util.go:111] Exec stderr: ""
  I0112 17:05:07.724854 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6980" for this suite. @ 01/12/25 17:05:07.728
• [4.914 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 01/12/25 17:05:07.742
  I0112 17:05:07.742957 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 17:05:07.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:05:07.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:05:07.772
  STEP: Creating service test in namespace statefulset-9042 @ 01/12/25 17:05:07.776
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 01/12/25 17:05:07.788
  STEP: Creating stateful set ss in namespace statefulset-9042 @ 01/12/25 17:05:07.793
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9042 @ 01/12/25 17:05:07.815
  I0112 17:05:07.821471 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0112 17:05:08.074415      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:09.074922      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:10.075660      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:11.076126      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:12.076979      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:13.077356      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:14.077749      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:15.078185      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:16.078632      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:17.078885      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:17.819127 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 01/12/25 17:05:17.819
  I0112 17:05:17.822735 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-9042 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 17:05:18.017393 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 17:05:18.017448 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 17:05:18.017465 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 17:05:18.021229 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0112 17:05:18.079593      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:19.079959      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:20.080453      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:21.080961      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:22.081350      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:23.082153      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:24.082731      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:25.083670      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:26.084007      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:27.084187      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:28.022287 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0112 17:05:28.022345 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0112 17:05:28.047904 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.9999996s
  E0112 17:05:28.085373      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:29.055887 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.995312321s
  E0112 17:05:29.086461      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:30.061812 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.987558746s
  E0112 17:05:30.087149      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:31.069786 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.981385581s
  E0112 17:05:31.088199      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:32.074802 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.973495323s
  E0112 17:05:32.089383      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:33.079868 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.968885378s
  E0112 17:05:33.090244      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:34.084439 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.963738341s
  E0112 17:05:34.090975      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:35.089114 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.958808112s
  E0112 17:05:35.091367      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:36.092428      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:36.096082 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.954291092s
  E0112 17:05:37.092523      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:37.102013 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 946.862176ms
  E0112 17:05:38.092789      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9042 @ 01/12/25 17:05:38.102
  I0112 17:05:38.109671 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-9042 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 17:05:38.267479 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 17:05:38.267535 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 17:05:38.267644 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 17:05:38.272571 21 wait.go:40] Found 1 stateful pods, waiting for 3
  E0112 17:05:39.093557      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:40.094197      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:41.095167      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:42.096310      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:43.096660      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:44.096998      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:45.097457      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:46.097893      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:47.098674      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:48.099105      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:48.274525 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0112 17:05:48.274635 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0112 17:05:48.274659 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 01/12/25 17:05:48.274
  STEP: Scale down will halt with unhealthy stateful pod @ 01/12/25 17:05:48.274
  I0112 17:05:48.285548 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-9042 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 17:05:48.448780 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 17:05:48.448896 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 17:05:48.448922 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 17:05:48.449035 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-9042 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 17:05:48.611358 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 17:05:48.611491 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 17:05:48.611515 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 17:05:48.611597 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-9042 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 17:05:48.777845 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 17:05:48.777966 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 17:05:48.778002 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 17:05:48.778035 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0112 17:05:48.782068 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0112 17:05:49.099659      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:50.099923      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:51.100408      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:52.101086      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:53.101571      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:54.102060      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:55.102648      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:56.103987      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:57.104082      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:05:58.104642      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:58.788662 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0112 17:05:58.788731 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0112 17:05:58.788746 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0112 17:05:58.826628 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.9999996s
  E0112 17:05:59.104848      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:05:59.832215 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.995476072s
  E0112 17:06:00.105646      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:00.837908 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.989183149s
  E0112 17:06:01.106358      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:01.844147 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.983669436s
  E0112 17:06:02.106504      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:02.850368 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.97771583s
  E0112 17:06:03.106737      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:03.856476 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.971426331s
  E0112 17:06:04.106766      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:04.865114 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.96522554s
  E0112 17:06:05.107383      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:05.870180 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.956931954s
  E0112 17:06:06.107650      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:06.878500 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.950912579s
  E0112 17:06:07.108093      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:07.884588 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 943.074409ms
  E0112 17:06:08.108992      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9042 @ 01/12/25 17:06:08.885
  I0112 17:06:08.890600 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-9042 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 17:06:09.045503 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 17:06:09.045575 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 17:06:09.045593 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 17:06:09.045652 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-9042 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0112 17:06:09.109310      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:09.196248 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 17:06:09.196321 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 17:06:09.196350 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 17:06:09.196416 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=statefulset-9042 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 17:06:09.342088 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 17:06:09.342135 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 17:06:09.342152 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 17:06:09.342172 21 rest.go:150] Scaling statefulset ss to 0
  E0112 17:06:10.110170      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:11.111490      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:12.112568      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:13.113634      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:14.114265      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:15.114525      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:16.115036      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:17.115978      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:18.116481      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:19.116759      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 01/12/25 17:06:19.355
  I0112 17:06:19.355608 21 statefulset.go:138] Deleting all statefulset in ns statefulset-9042
  I0112 17:06:19.361778 21 rest.go:150] Scaling statefulset ss to 0
  I0112 17:06:19.371627 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 17:06:19.375057 21 rest.go:88] Deleting statefulset ss
  I0112 17:06:19.410063 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9042" for this suite. @ 01/12/25 17:06:19.414
• [71.712 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 01/12/25 17:06:19.455
  I0112 17:06:19.455297 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 17:06:19.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:06:19.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:06:19.525
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 17:06:19.528
  E0112 17:06:20.117010      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:21.117424      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:22.117980      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:23.118277      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:06:23.569
  I0112 17:06:23.574673 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-4062b060-2868-46bd-8020-d3088d5514c6 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 17:06:23.582
  I0112 17:06:23.642752 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1678" for this suite. @ 01/12/25 17:06:23.646
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 01/12/25 17:06:23.675
  I0112 17:06:23.675817 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename security-context-test @ 01/12/25 17:06:23.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:06:23.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:06:23.708
  E0112 17:06:24.119318      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:25.119617      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:26.120250      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:27.120886      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:27.750028 21 security_context.go:538] Got logs for pod "busybox-privileged-false-737ba84b-b9e4-49d3-beb9-b71c8062ada6": "ip: RTNETLINK answers: Operation not permitted\n"
  I0112 17:06:27.750171 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6188" for this suite. @ 01/12/25 17:06:27.753
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 01/12/25 17:06:27.768
  I0112 17:06:27.768303 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename secrets @ 01/12/25 17:06:27.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:06:27.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:06:27.815
  STEP: Creating projection with secret that has name secret-emptykey-test-f2e9e660-3282-4d7f-82c6-7ec4e58889c6 @ 01/12/25 17:06:27.818
  I0112 17:06:27.821202 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6160" for this suite. @ 01/12/25 17:06:27.826
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 01/12/25 17:06:27.849
  I0112 17:06:27.849302 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 17:06:27.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:06:27.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:06:27.884
  STEP: Creating pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378 @ 01/12/25 17:06:27.889
  E0112 17:06:28.122006      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:29.123094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 17:06:29.916
  I0112 17:06:29.921169 21 container_probe.go:1749] Initial restart count of pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 is 0
  I0112 17:06:29.925911 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:30.123164      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:31.123628      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:31.932221 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:32.124646      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:33.125097      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:33.936217 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:34.125785      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:35.126267      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:35.942691 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:36.127050      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:37.127832      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:37.947197 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:38.128695      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:39.129078      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:39.951053 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:40.129426      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:41.129733      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:41.955393 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:42.129884      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:43.130323      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:43.960448 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:44.131065      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:45.131532      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:45.964363 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:46.131905      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:47.132002      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:47.969626 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:48.133257      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:49.134080      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:49.979309 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:50.134819      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:51.135441      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:51.985851 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:52.136245      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:53.136587      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:53.990419 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:54.136874      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:55.137380      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:55.995193 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:56.137450      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:57.138385      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:06:57.999820 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:06:58.139331      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:06:59.139960      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:00.005421 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:00.140907      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:01.141598      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:02.011732 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:02.142275      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:03.142672      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:04.020618 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:04.142855      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:05.143138      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:06.026383 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:06.143689      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:07.143898      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:08.031665 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:08.145078      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:09.145470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:10.038626 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:10.146401      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:11.146966      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:12.048246 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:12.147634      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:13.147922      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:14.055285 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:14.148500      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:15.148843      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:16.060051 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:16.149551      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:17.149836      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:18.066039 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:18.150512      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:19.150908      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:20.073266 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:20.151667      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:21.152180      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:22.080824 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:22.153195      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:23.154336      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:24.085036 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:24.154136      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:25.154545      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:26.089604 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:26.155110      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:27.156080      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:28.095380 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:28.157213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:29.157659      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:30.103827 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:30.158402      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:31.159072      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:32.109500 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:32.159729      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:33.160272      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:34.116415 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  E0112 17:07:34.160663      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:35.161024      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:36.121023 21 container_probe.go:1759] Get pod test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 in namespace container-probe-5378
  I0112 17:07:36.121100 21 container_probe.go:1763] Restart count of pod container-probe-5378/test-grpc-dd22934a-dcb8-450a-be0e-7a73bdddb257 is now 1 (1m6.199850303s elapsed)
  STEP: deleting the pod @ 01/12/25 17:07:36.121
  I0112 17:07:36.158347 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0112 17:07:36.161472      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-5378" for this suite. @ 01/12/25 17:07:36.163
• [68.335 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 01/12/25 17:07:36.184
  I0112 17:07:36.184825 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 17:07:36.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:07:36.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:07:36.243
  STEP: Setting up server cert @ 01/12/25 17:07:36.303
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 17:07:36.929
  STEP: Deploying the webhook pod @ 01/12/25 17:07:36.956
  STEP: Wait for the deployment to be ready @ 01/12/25 17:07:36.99
  I0112 17:07:36.998181 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0112 17:07:37.162548      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:38.163160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/12/25 17:07:39.009
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 17:07:39.034
  E0112 17:07:39.163202      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:40.034520 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 01/12/25 17:07:40.043
  STEP: create a pod that should be updated by the webhook @ 01/12/25 17:07:40.068
  E0112 17:07:40.164215      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:40.243317 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5700" for this suite. @ 01/12/25 17:07:40.247
  STEP: Destroying namespace "webhook-markers-7428" for this suite. @ 01/12/25 17:07:40.269
• [4.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 01/12/25 17:07:40.283
  I0112 17:07:40.283118 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pods @ 01/12/25 17:07:40.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:07:40.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:07:40.315
  STEP: creating the pod @ 01/12/25 17:07:40.327
  STEP: submitting the pod to kubernetes @ 01/12/25 17:07:40.328
  E0112 17:07:41.164686      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:42.165049      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 01/12/25 17:07:42.358
  STEP: updating the pod @ 01/12/25 17:07:42.363
  I0112 17:07:42.887346 21 pod_client.go:173] Successfully updated pod "pod-update-f11e492e-f8f4-45b4-80a0-f39491f7153d"
  STEP: verifying the updated pod is in kubernetes @ 01/12/25 17:07:42.891
  I0112 17:07:42.896162 21 pods.go:391] Pod update OK
  I0112 17:07:42.896334 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8092" for this suite. @ 01/12/25 17:07:42.901
• [2.632 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 01/12/25 17:07:42.915
  I0112 17:07:42.915539 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 17:07:42.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:07:42.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:07:42.983
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 17:07:42.987
  E0112 17:07:43.166190      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:44.166749      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:45.167508      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:46.167730      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:07:47.023
  I0112 17:07:47.027820 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-7038da5c-6416-44ce-bbbb-f14185da3582 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 17:07:47.035
  I0112 17:07:47.066960 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2798" for this suite. @ 01/12/25 17:07:47.07
• [4.174 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 01/12/25 17:07:47.09
  I0112 17:07:47.090046 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 17:07:47.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:07:47.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:07:47.145
  I0112 17:07:47.149280 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-396 create -f -'
  E0112 17:07:47.168957      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:47.308324 21 builder.go:146] stderr: ""
  I0112 17:07:47.308384 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0112 17:07:47.308464 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-396 create -f -'
  I0112 17:07:47.481091 21 builder.go:146] stderr: ""
  I0112 17:07:47.481167 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/12/25 17:07:47.481
  E0112 17:07:48.169241      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:48.485668 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 17:07:48.485722 21 framework.go:733] Found 1 / 1
  I0112 17:07:48.485740 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0112 17:07:48.489174 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 17:07:48.489234 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0112 17:07:48.489280 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-396 describe pod agnhost-primary-vwt4j'
  I0112 17:07:48.582512 21 builder.go:146] stderr: ""
  I0112 17:07:48.582654 21 builder.go:147] stdout: "Name:             agnhost-primary-vwt4j\nNamespace:        kubectl-396\nPriority:         0\nService Account:  default\nNode:             ubuntu/172.17.202.11\nStart Time:       Sun, 12 Jan 2025 17:07:47 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 4a77a534c66b73743d8ad67a154f6ce741e2f8f04c9425d90e1f7fc3cddfab37\n                  cni.projectcalico.org/podIP: 10.1.243.242/32\n                  cni.projectcalico.org/podIPs: 10.1.243.242/32\nStatus:           Running\nIP:               10.1.243.242\nIPs:\n  IP:           10.1.243.242\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://6862327ce0048ceeaa618552512e70cdae39860965e99c825207dd51c2f10801\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sun, 12 Jan 2025 17:07:48 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-zrq42 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-zrq42:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-396/agnhost-primary-vwt4j to ubuntu\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0112 17:07:48.582753 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-396 describe rc agnhost-primary'
  I0112 17:07:48.698076 21 builder.go:146] stderr: ""
  I0112 17:07:48.698179 21 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-396\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-vwt4j\n"
  I0112 17:07:48.698308 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-396 describe service agnhost-primary'
  I0112 17:07:48.796841 21 builder.go:146] stderr: ""
  I0112 17:07:48.796919 21 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-396\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.127\nIPs:                      10.152.183.127\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.1.243.242:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0112 17:07:48.801559 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-396 describe node ubuntu'
  I0112 17:07:48.906640 21 builder.go:146] stderr: ""
  I0112 17:07:48.906784 21 builder.go:147] stdout: "Name:               ubuntu\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ubuntu\n                    kubernetes.io/os=linux\n                    microk8s.io/cluster=true\n                    node.kubernetes.io/microk8s-controlplane=microk8s-controlplane\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 172.17.202.11/20\n                    projectcalico.org/IPv4VXLANTunnelAddr: 10.1.243.192\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 12 Jan 2025 15:33:33 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ubuntu\n  AcquireTime:     <unset>\n  RenewTime:       Sun, 12 Jan 2025 17:07:40 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sun, 12 Jan 2025 15:34:28 +0000   Sun, 12 Jan 2025 15:34:28 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sun, 12 Jan 2025 17:04:31 +0000   Sun, 12 Jan 2025 15:33:33 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sun, 12 Jan 2025 17:04:31 +0000   Sun, 12 Jan 2025 15:33:33 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sun, 12 Jan 2025 17:04:31 +0000   Sun, 12 Jan 2025 15:33:33 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sun, 12 Jan 2025 17:04:31 +0000   Sun, 12 Jan 2025 15:34:12 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.17.202.11\n  Hostname:    ubuntu\nCapacity:\n  cpu:                    4\n  ephemeral-storage:      99472504Ki\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 8131332Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  1\nAllocatable:\n  cpu:                    4\n  ephemeral-storage:      98423928Ki\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 8028932Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  1\nSystem Info:\n  Machine ID:                 a1ac71774562422dade9903e828c9fc6\n  System UUID:                c475727a-6ceb-44f6-a2d0-a03ca7f058de\n  Boot ID:                    b21659f3-82c9-4d98-a74a-84b424514b27\n  Kernel Version:             6.8.0-51-generic\n  OS Image:                   Ubuntu 24.04.1 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.28\n  Kubelet Version:            v1.31.3\n  Kube-Proxy Version:         v1.31.3\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-mw2qz                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         93m\n  kubectl-396                 agnhost-primary-vwt4j                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         1s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-844ad7800bd94b40-vgdlw    0 (0%)        0 (0%)      0 (0%)           0 (0%)         90m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests   Limits\n  --------               --------   ------\n  cpu                    250m (6%)  0 (0%)\n  memory                 0 (0%)     0 (0%)\n  ephemeral-storage      0 (0%)     0 (0%)\n  hugepages-1Gi          0 (0%)     0 (0%)\n  hugepages-2Mi          0 (0%)     0 (0%)\n  example.com/fakecpu    0          0\n  scheduling.k8s.io/foo  0          0\nEvents:                  <none>\n"
  I0112 17:07:48.906992 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-396 describe namespace kubectl-396'
  I0112 17:07:48.999737 21 builder.go:146] stderr: ""
  I0112 17:07:48.999822 21 builder.go:147] stdout: "Name:         kubectl-396\nLabels:       e2e-framework=kubectl\n              e2e-run=a97af45b-8ee5-4c8a-a844-7910e460e31d\n              kubernetes.io/metadata.name=kubectl-396\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0112 17:07:48.999994 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-396" for this suite. @ 01/12/25 17:07:49.004
• [1.928 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 01/12/25 17:07:49.018
  I0112 17:07:49.018621 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 17:07:49.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:07:49.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:07:49.069
  STEP: creating all guestbook components @ 01/12/25 17:07:49.073
  I0112 17:07:49.073452 21 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0112 17:07:49.073592 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1787 create -f -'
  E0112 17:07:49.170239      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:49.231444 21 builder.go:146] stderr: ""
  I0112 17:07:49.231495 21 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0112 17:07:49.231543 21 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0112 17:07:49.231745 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1787 create -f -'
  I0112 17:07:49.399227 21 builder.go:146] stderr: ""
  I0112 17:07:49.399299 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0112 17:07:49.399352 21 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0112 17:07:49.399643 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1787 create -f -'
  I0112 17:07:49.573990 21 builder.go:146] stderr: ""
  I0112 17:07:49.574059 21 builder.go:147] stdout: "service/frontend created\n"
  I0112 17:07:49.574157 21 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0112 17:07:49.574411 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1787 create -f -'
  I0112 17:07:49.681237 21 builder.go:146] stderr: ""
  I0112 17:07:49.681304 21 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0112 17:07:49.681358 21 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0112 17:07:49.681734 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1787 create -f -'
  I0112 17:07:49.879908 21 builder.go:146] stderr: ""
  I0112 17:07:49.879985 21 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0112 17:07:49.880062 21 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0112 17:07:49.880315 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1787 create -f -'
  I0112 17:07:50.128403 21 builder.go:146] stderr: ""
  I0112 17:07:50.128457 21 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 01/12/25 17:07:50.128
  I0112 17:07:50.128497 21 kubectl.go:2272] Waiting for all frontend pods to be Running.
  E0112 17:07:50.171150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:51.172102      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:52.172344      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:53.172705      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:54.173136      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:55.173919      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:07:55.180387 21 kubectl.go:2276] Waiting for frontend to serve content.
  I0112 17:07:55.191982 21 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I0112 17:07:55.207386 21 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 01/12/25 17:07:55.217
  I0112 17:07:55.217335 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1787 delete --grace-period=0 --force -f -'
  I0112 17:07:55.348703 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 17:07:55.348758 21 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 01/12/25 17:07:55.348
  I0112 17:07:55.348911 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1787 delete --grace-period=0 --force -f -'
  I0112 17:07:55.544661 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 17:07:55.544732 21 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/12/25 17:07:55.544
  I0112 17:07:55.544865 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1787 delete --grace-period=0 --force -f -'
  I0112 17:07:55.680651 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 17:07:55.680745 21 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/12/25 17:07:55.68
  I0112 17:07:55.680954 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1787 delete --grace-period=0 --force -f -'
  I0112 17:07:55.773432 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 17:07:55.773484 21 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/12/25 17:07:55.773
  I0112 17:07:55.773618 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1787 delete --grace-period=0 --force -f -'
  I0112 17:07:55.967992 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 17:07:55.968069 21 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/12/25 17:07:55.968
  I0112 17:07:55.968212 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-1787 delete --grace-period=0 --force -f -'
  I0112 17:07:56.132232 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 17:07:56.132303 21 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0112 17:07:56.132460 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1787" for this suite. @ 01/12/25 17:07:56.141
  E0112 17:07:56.174866      21 retrywatcher.go:131] "Watch failed" err="context canceled"
• [7.182 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 01/12/25 17:07:56.2
  I0112 17:07:56.200522 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 17:07:56.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:07:56.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:07:56.346
  STEP: Creating configMap with name configmap-test-volume-df84acc5-5970-4eb8-8e2d-401bc0828982 @ 01/12/25 17:07:56.362
  STEP: Creating a pod to test consume configMaps @ 01/12/25 17:07:56.378
  E0112 17:07:57.175054      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:58.175707      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:07:59.176329      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:00.176859      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:08:00.449
  I0112 17:08:00.452791 21 output.go:196] Trying to get logs from node ubuntu pod pod-configmaps-01564412-bd70-4e55-b3b7-8817bdfffa4e container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 17:08:00.458
  I0112 17:08:00.487786 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4000" for this suite. @ 01/12/25 17:08:00.492
• [4.306 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 01/12/25 17:08:00.506
  I0112 17:08:00.506672 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 17:08:00.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:08:00.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:08:00.558
  STEP: Creating pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 in namespace container-probe-1637 @ 01/12/25 17:08:00.562
  E0112 17:08:01.177802      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:02.178470      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 17:08:02.589
  I0112 17:08:02.594035 21 container_probe.go:1749] Initial restart count of pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 is 0
  I0112 17:08:02.598744 21 container_probe.go:1759] Get pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 in namespace container-probe-1637
  E0112 17:08:03.179770      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:04.180388      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:04.604097 21 container_probe.go:1759] Get pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 in namespace container-probe-1637
  E0112 17:08:05.181069      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:06.181447      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:06.611588 21 container_probe.go:1759] Get pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 in namespace container-probe-1637
  E0112 17:08:07.182493      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:08.183013      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:08.617353 21 container_probe.go:1759] Get pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 in namespace container-probe-1637
  E0112 17:08:09.183060      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:10.183603      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:10.623193 21 container_probe.go:1759] Get pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 in namespace container-probe-1637
  E0112 17:08:11.184018      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:12.184118      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:12.627136 21 container_probe.go:1759] Get pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 in namespace container-probe-1637
  E0112 17:08:13.185296      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:14.185681      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:14.631671 21 container_probe.go:1759] Get pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 in namespace container-probe-1637
  E0112 17:08:15.186579      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:16.187089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:16.636897 21 container_probe.go:1759] Get pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 in namespace container-probe-1637
  E0112 17:08:17.187724      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:18.188273      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:18.641244 21 container_probe.go:1759] Get pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 in namespace container-probe-1637
  E0112 17:08:19.189162      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:20.189656      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:20.644885 21 container_probe.go:1759] Get pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 in namespace container-probe-1637
  E0112 17:08:21.190787      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:22.191621      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:22.652487 21 container_probe.go:1759] Get pod liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 in namespace container-probe-1637
  I0112 17:08:22.652666 21 container_probe.go:1763] Restart count of pod container-probe-1637/liveness-f51e8e6e-bf8e-4aad-951f-df926b710154 is now 1 (20.05855932s elapsed)
  STEP: deleting the pod @ 01/12/25 17:08:22.652
  I0112 17:08:22.691659 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1637" for this suite. @ 01/12/25 17:08:22.697
• [22.218 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 01/12/25 17:08:22.725
  I0112 17:08:22.725128 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/12/25 17:08:22.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:08:22.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:08:22.801
  STEP: creating @ 01/12/25 17:08:22.805
  STEP: getting @ 01/12/25 17:08:22.839
  STEP: listing in namespace @ 01/12/25 17:08:22.849
  STEP: patching @ 01/12/25 17:08:22.854
  STEP: deleting @ 01/12/25 17:08:22.913
  I0112 17:08:22.945222 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6362" for this suite. @ 01/12/25 17:08:22.949
• [0.250 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 01/12/25 17:08:22.974
  I0112 17:08:22.974957 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 17:08:22.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:08:23.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:08:23.053
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/12/25 17:08:23.057
  E0112 17:08:23.192368      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:24.193386      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:25.194406      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:26.194820      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:08:27.096
  I0112 17:08:27.104234 21 output.go:196] Trying to get logs from node ubuntu pod pod-44b8f595-0f08-4091-884d-81ec099079d3 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 17:08:27.111
  I0112 17:08:27.146129 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5422" for this suite. @ 01/12/25 17:08:27.151
• [4.199 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 01/12/25 17:08:27.174
  I0112 17:08:27.174158 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename namespaces @ 01/12/25 17:08:27.174
  E0112 17:08:27.194887      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:08:27.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:08:27.232
  STEP: Updating Namespace "namespaces-8156" @ 01/12/25 17:08:27.237
  I0112 17:08:27.254510 21 namespace.go:389] Namespace "namespaces-8156" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"a97af45b-8ee5-4c8a-a844-7910e460e31d", "kubernetes.io/metadata.name":"namespaces-8156", "namespaces-8156":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0112 17:08:27.254673 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8156" for this suite. @ 01/12/25 17:08:27.258
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 01/12/25 17:08:27.271
  I0112 17:08:27.271648 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 17:08:27.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:08:27.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:08:27.302
  STEP: Creating the pod @ 01/12/25 17:08:27.308
  E0112 17:08:28.195176      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:29.195863      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:29.880491 21 pod_client.go:173] Successfully updated pod "labelsupdate2f20df57-c1d4-4089-adb3-766d450ec9e9"
  E0112 17:08:30.196165      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:31.196644      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:32.196986      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:33.197541      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:33.904292 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9676" for this suite. @ 01/12/25 17:08:33.908
• [6.654 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 01/12/25 17:08:33.925
  I0112 17:08:33.925730 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 17:08:33.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:08:33.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:08:33.961
  STEP: creating service multi-endpoint-test in namespace services-9295 @ 01/12/25 17:08:33.966
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9295 to expose endpoints map[] @ 01/12/25 17:08:33.989
  I0112 17:08:33.993853 21 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0112 17:08:34.197563      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:35.007551 21 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9295 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9295 @ 01/12/25 17:08:35.007
  E0112 17:08:35.197897      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:36.198720      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9295 to expose endpoints map[pod1:[100]] @ 01/12/25 17:08:37.041
  I0112 17:08:37.055249 21 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9295 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-9295 @ 01/12/25 17:08:37.055
  E0112 17:08:37.199489      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:38.199796      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9295 to expose endpoints map[pod1:[100] pod2:[101]] @ 01/12/25 17:08:39.08
  I0112 17:08:39.097076 21 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9295 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 01/12/25 17:08:39.097
  I0112 17:08:39.097173 21 resource.go:361] Creating new exec pod
  E0112 17:08:39.200126      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:40.200680      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:41.201279      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:42.120896 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9295 exec execpodg7ns5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0112 17:08:42.202267      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:42.275792 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0112 17:08:42.275892 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 17:08:42.276039 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9295 exec execpodg7ns5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.41 80'
  I0112 17:08:42.427877 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.41 80\nConnection to 10.152.183.41 80 port [tcp/http] succeeded!\n"
  I0112 17:08:42.427995 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 17:08:42.428104 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9295 exec execpodg7ns5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0112 17:08:42.578088 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0112 17:08:42.578170 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 17:08:42.578291 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9295 exec execpodg7ns5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.41 81'
  I0112 17:08:42.719519 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.41 81\nConnection to 10.152.183.41 81 port [tcp/*] succeeded!\n"
  I0112 17:08:42.719579 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9295 @ 01/12/25 17:08:42.719
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9295 to expose endpoints map[pod2:[101]] @ 01/12/25 17:08:42.789
  E0112 17:08:43.203014      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:44.204395      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:44.814203 21 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9295 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-9295 @ 01/12/25 17:08:44.814
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9295 to expose endpoints map[] @ 01/12/25 17:08:44.877
  E0112 17:08:45.204609      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:46.204830      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:46.901110 21 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9295 exposes endpoints map[]
  I0112 17:08:46.959059 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9295" for this suite. @ 01/12/25 17:08:46.963
• [13.055 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 01/12/25 17:08:46.98
  I0112 17:08:46.980911 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename subjectreview @ 01/12/25 17:08:46.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:08:47.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:08:47.03
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7465" @ 01/12/25 17:08:47.034
  I0112 17:08:47.045489 21 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-7465:e2e"
  I0112 17:08:47.045560 21 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7465"}
  I0112 17:08:47.045579 21 subjectreviews.go:71] saUID: "e163ee33-cfb1-4c84-95bb-688f693d8b3a"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7465:e2e" @ 01/12/25 17:08:47.045
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7465:e2e" @ 01/12/25 17:08:47.045
  I0112 17:08:47.048790 21 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:true, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7465:e2e" api 'list' configmaps in "subjectreview-7465" namespace @ 01/12/25 17:08:47.048
  I0112 17:08:47.053101 21 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7465:e2e" @ 01/12/25 17:08:47.053
  I0112 17:08:47.056285 21 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:true, Denied:false, Reason:"", EvaluationError:""}
  I0112 17:08:47.056355 21 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0112 17:08:47.056493 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7465" for this suite. @ 01/12/25 17:08:47.061
• [0.094 seconds]
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 01/12/25 17:08:47.075
  I0112 17:08:47.075318 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pods @ 01/12/25 17:08:47.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:08:47.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:08:47.107
  STEP: creating pod @ 01/12/25 17:08:47.112
  E0112 17:08:47.205870      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:48.206361      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:49.148786 21 pods.go:83] Pod pod-hostip-db669c97-3120-4aca-91d3-986548a29c77 has hostIP: 172.17.202.11
  I0112 17:08:49.149046 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8055" for this suite. @ 01/12/25 17:08:49.154
• [2.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 01/12/25 17:08:49.18
  I0112 17:08:49.180360 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename disruption @ 01/12/25 17:08:49.181
  E0112 17:08:49.207142      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:08:49.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:08:49.231
  STEP: Creating a kubernetes client @ 01/12/25 17:08:49.235
  I0112 17:08:49.235759 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename disruption-2 @ 01/12/25 17:08:49.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:08:49.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:08:49.286
  STEP: Waiting for the pdb to be processed @ 01/12/25 17:08:49.304
  E0112 17:08:50.208150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:51.208626      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 01/12/25 17:08:51.323
  E0112 17:08:52.209776      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:53.210222      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 01/12/25 17:08:53.346
  E0112 17:08:54.210574      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:08:55.211213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 01/12/25 17:08:55.35
  STEP: listing a collection of PDBs in namespace disruption-1924 @ 01/12/25 17:08:55.354
  STEP: deleting a collection of PDBs @ 01/12/25 17:08:55.358
  STEP: Waiting for the PDB collection to be deleted @ 01/12/25 17:08:55.386
  I0112 17:08:55.391290 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-5377" for this suite. @ 01/12/25 17:08:55.395
  I0112 17:08:55.411143 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1924" for this suite. @ 01/12/25 17:08:55.416
• [6.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 01/12/25 17:08:55.432
  I0112 17:08:55.433026 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename proxy @ 01/12/25 17:08:55.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:08:55.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:08:55.479
  STEP: starting an echo server on multiple ports @ 01/12/25 17:08:55.508
  STEP: creating replication controller proxy-service-tqnx5 in namespace proxy-2626 @ 01/12/25 17:08:55.508
  I0112 17:08:55.527549      21 runners.go:193] Created replication controller with name: proxy-service-tqnx5, namespace: proxy-2626, replica count: 1
  E0112 17:08:56.211437      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:56.578599      21 runners.go:193] proxy-service-tqnx5 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0112 17:08:57.211785      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:57.579767      21 runners.go:193] proxy-service-tqnx5 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0112 17:08:58.211869      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:08:58.581190      21 runners.go:193] proxy-service-tqnx5 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 17:08:58.586734 21 proxy.go:230] setup took 3.10288326s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 01/12/25 17:08:58.586
  I0112 17:08:58.598196 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 10.784704ms)
  I0112 17:08:58.599419 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 12.152404ms)
  I0112 17:08:58.601850 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 14.613205ms)
  I0112 17:08:58.601989 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 14.653905ms)
  I0112 17:08:58.601985 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 14.638505ms)
  I0112 17:08:58.602027 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 15.034505ms)
  I0112 17:08:58.604846 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 17.358106ms)
  I0112 17:08:58.606781 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 19.280707ms)
  I0112 17:08:58.606795 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 19.805907ms)
  I0112 17:08:58.606859 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 19.598407ms)
  I0112 17:08:58.606911 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 19.798607ms)
  I0112 17:08:58.610981 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 23.562308ms)
  I0112 17:08:58.611011 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 23.600908ms)
  I0112 17:08:58.611658 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 24.487008ms)
  I0112 17:08:58.611729 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 24.572908ms)
  I0112 17:08:58.611753 21 proxy.go:558] (0) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 24.553908ms)
  I0112 17:08:58.617705 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 5.496101ms)
  I0112 17:08:58.617808 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 5.933402ms)
  I0112 17:08:58.618822 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 6.618302ms)
  I0112 17:08:58.618847 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 7.032003ms)
  I0112 17:08:58.618863 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 6.813403ms)
  I0112 17:08:58.618895 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 6.979503ms)
  I0112 17:08:58.621035 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 8.767002ms)
  I0112 17:08:58.621035 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 8.743202ms)
  I0112 17:08:58.621080 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 8.949903ms)
  I0112 17:08:58.621093 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 8.998903ms)
  I0112 17:08:58.621100 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 9.131303ms)
  I0112 17:08:58.623597 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 11.347803ms)
  I0112 17:08:58.623648 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 11.635704ms)
  I0112 17:08:58.623652 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 11.516504ms)
  I0112 17:08:58.623671 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 11.493203ms)
  I0112 17:08:58.623674 21 proxy.go:558] (1) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 11.423203ms)
  I0112 17:08:58.629657 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 5.623002ms)
  I0112 17:08:58.629832 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 6.026202ms)
  I0112 17:08:58.629884 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 5.731802ms)
  I0112 17:08:58.629910 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 6.128202ms)
  I0112 17:08:58.632521 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 8.709003ms)
  I0112 17:08:58.633241 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 9.534704ms)
  I0112 17:08:58.633240 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 9.334204ms)
  I0112 17:08:58.633283 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 9.381204ms)
  I0112 17:08:58.633301 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 9.150004ms)
  I0112 17:08:58.633287 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 9.175404ms)
  I0112 17:08:58.635267 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 11.057503ms)
  I0112 17:08:58.635323 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 11.203304ms)
  I0112 17:08:58.635326 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 11.285804ms)
  I0112 17:08:58.635340 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 11.390504ms)
  I0112 17:08:58.635342 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 11.370804ms)
  I0112 17:08:58.637244 21 proxy.go:558] (2) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 13.234405ms)
  I0112 17:08:58.643289 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 5.745102ms)
  I0112 17:08:58.643580 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 6.011702ms)
  I0112 17:08:58.643595 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 6.001802ms)
  I0112 17:08:58.643611 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 6.129502ms)
  I0112 17:08:58.646439 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 8.951303ms)
  I0112 17:08:58.647500 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 9.882303ms)
  I0112 17:08:58.647531 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 9.874803ms)
  I0112 17:08:58.647562 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 10.030703ms)
  I0112 17:08:58.648138 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 10.707703ms)
  I0112 17:08:58.648834 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 11.224204ms)
  I0112 17:08:58.649296 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 11.733904ms)
  I0112 17:08:58.649293 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 11.650204ms)
  I0112 17:08:58.650238 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 12.839204ms)
  I0112 17:08:58.650238 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 12.647704ms)
  I0112 17:08:58.650304 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 12.788704ms)
  I0112 17:08:58.652242 21 proxy.go:558] (3) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 14.598205ms)
  I0112 17:08:58.657755 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 5.269702ms)
  I0112 17:08:58.658410 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 5.994002ms)
  I0112 17:08:58.660571 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 8.178903ms)
  I0112 17:08:58.660793 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 8.161203ms)
  I0112 17:08:58.660825 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 8.318603ms)
  I0112 17:08:58.660890 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 8.351503ms)
  I0112 17:08:58.660900 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 8.326103ms)
  I0112 17:08:58.661255 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 8.583703ms)
  I0112 17:08:58.662619 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 9.956503ms)
  I0112 17:08:58.663237 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 10.536704ms)
  I0112 17:08:58.664655 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 12.201304ms)
  I0112 17:08:58.665204 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 12.860304ms)
  I0112 17:08:58.665238 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 12.644204ms)
  I0112 17:08:58.665203 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 12.635704ms)
  I0112 17:08:58.666095 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 13.481504ms)
  I0112 17:08:58.667144 21 proxy.go:558] (4) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 14.649805ms)
  I0112 17:08:58.672781 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 5.472202ms)
  I0112 17:08:58.672781 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 5.073602ms)
  I0112 17:08:58.673135 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 5.800302ms)
  I0112 17:08:58.673139 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 5.553602ms)
  I0112 17:08:58.673148 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 5.626102ms)
  I0112 17:08:58.675474 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 7.989403ms)
  I0112 17:08:58.675474 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 7.907003ms)
  I0112 17:08:58.676651 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 9.044003ms)
  I0112 17:08:58.677217 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 9.571403ms)
  I0112 17:08:58.677298 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 9.848803ms)
  I0112 17:08:58.677802 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 10.152903ms)
  I0112 17:08:58.679159 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 11.743204ms)
  I0112 17:08:58.679157 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 11.432204ms)
  I0112 17:08:58.679159 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 11.446704ms)
  I0112 17:08:58.679580 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 11.925604ms)
  I0112 17:08:58.679593 21 proxy.go:558] (5) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 11.859704ms)
  I0112 17:08:58.685842 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 6.025002ms)
  I0112 17:08:58.685842 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 5.647802ms)
  I0112 17:08:58.687282 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 7.181303ms)
  I0112 17:08:58.689673 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 9.871303ms)
  I0112 17:08:58.690296 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 10.580904ms)
  I0112 17:08:58.690346 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 10.213904ms)
  I0112 17:08:58.690354 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 10.437804ms)
  I0112 17:08:58.690357 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 10.377004ms)
  I0112 17:08:58.690889 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 10.754004ms)
  I0112 17:08:58.691745 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 11.904404ms)
  I0112 17:08:58.691797 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 12.040104ms)
  I0112 17:08:58.691805 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 12.128404ms)
  I0112 17:08:58.692042 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 12.175104ms)
  I0112 17:08:58.693805 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 13.910505ms)
  I0112 17:08:58.695967 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 15.709905ms)
  I0112 17:08:58.695989 21 proxy.go:558] (6) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 15.775005ms)
  I0112 17:08:58.702592 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 6.237102ms)
  I0112 17:08:58.705025 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 8.968103ms)
  I0112 17:08:58.705097 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 8.864202ms)
  I0112 17:08:58.705097 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 8.803402ms)
  I0112 17:08:58.706352 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 9.945903ms)
  I0112 17:08:58.708777 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 12.612304ms)
  I0112 17:08:58.708777 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 12.668805ms)
  I0112 17:08:58.711260 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 15.213006ms)
  I0112 17:08:58.711260 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 15.027105ms)
  I0112 17:08:58.711293 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 14.931705ms)
  I0112 17:08:58.711321 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 15.037505ms)
  I0112 17:08:58.711297 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 14.901905ms)
  I0112 17:08:58.711797 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 15.448905ms)
  I0112 17:08:58.711885 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 15.470105ms)
  I0112 17:08:58.711890 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 15.436105ms)
  I0112 17:08:58.714828 21 proxy.go:558] (7) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 18.362606ms)
  I0112 17:08:58.719914 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 4.795201ms)
  I0112 17:08:58.720079 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 5.096801ms)
  I0112 17:08:58.720640 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 5.295902ms)
  I0112 17:08:58.721878 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 6.646302ms)
  I0112 17:08:58.722768 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 7.565402ms)
  I0112 17:08:58.723783 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 8.542703ms)
  I0112 17:08:58.724358 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 9.047403ms)
  I0112 17:08:58.724578 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 9.377803ms)
  I0112 17:08:58.729761 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 14.613405ms)
  I0112 17:08:58.729762 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 14.469805ms)
  I0112 17:08:58.729800 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 14.471505ms)
  I0112 17:08:58.729810 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 14.550505ms)
  I0112 17:08:58.733261 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 18.162306ms)
  I0112 17:08:58.734255 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 19.119706ms)
  I0112 17:08:58.734302 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 19.131906ms)
  I0112 17:08:58.735010 21 proxy.go:558] (8) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 19.719306ms)
  I0112 17:08:58.742371 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 7.276503ms)
  I0112 17:08:58.742380 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 7.103702ms)
  I0112 17:08:58.742381 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 7.126002ms)
  I0112 17:08:58.743264 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 7.937702ms)
  I0112 17:08:58.743289 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 7.923702ms)
  I0112 17:08:58.748222 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 13.123805ms)
  I0112 17:08:58.748271 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 12.831304ms)
  I0112 17:08:58.748239 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 12.837804ms)
  I0112 17:08:58.748304 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 13.108104ms)
  I0112 17:08:58.748315 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 13.167505ms)
  I0112 17:08:58.748316 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 12.969504ms)
  I0112 17:08:58.749253 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 13.862304ms)
  I0112 17:08:58.749253 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 13.815304ms)
  I0112 17:08:58.749279 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 13.812704ms)
  I0112 17:08:58.750916 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 15.486405ms)
  I0112 17:08:58.751001 21 proxy.go:558] (9) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 15.623105ms)
  I0112 17:08:58.757537 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 6.357402ms)
  I0112 17:08:58.758086 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 6.783302ms)
  I0112 17:08:58.759672 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 8.608103ms)
  I0112 17:08:58.760254 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 9.019603ms)
  I0112 17:08:58.760500 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 9.116603ms)
  I0112 17:08:58.760517 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 9.258403ms)
  I0112 17:08:58.760504 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 9.330903ms)
  I0112 17:08:58.760530 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 9.248603ms)
  I0112 17:08:58.761378 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 10.217503ms)
  I0112 17:08:58.761407 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 10.028103ms)
  I0112 17:08:58.764369 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 13.053004ms)
  I0112 17:08:58.764395 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 13.058704ms)
  I0112 17:08:58.764369 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 12.992504ms)
  I0112 17:08:58.764384 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 13.029804ms)
  I0112 17:08:58.764817 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 13.503604ms)
  I0112 17:08:58.764825 21 proxy.go:558] (10) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 13.476904ms)
  I0112 17:08:58.769237 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 4.350702ms)
  I0112 17:08:58.770504 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 5.421002ms)
  I0112 17:08:58.772322 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 7.271803ms)
  I0112 17:08:58.772621 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 7.513603ms)
  I0112 17:08:58.772636 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 7.625703ms)
  I0112 17:08:58.772777 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 7.671903ms)
  I0112 17:08:58.773014 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 8.029403ms)
  I0112 17:08:58.774166 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 9.201904ms)
  I0112 17:08:58.775727 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 10.698004ms)
  I0112 17:08:58.776418 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 11.368904ms)
  I0112 17:08:58.778277 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 13.186705ms)
  I0112 17:08:58.781065 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 16.085906ms)
  I0112 17:08:58.781062 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 16.055806ms)
  I0112 17:08:58.781884 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 16.972506ms)
  I0112 17:08:58.782620 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 17.729006ms)
  I0112 17:08:58.782646 21 proxy.go:558] (11) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 17.580106ms)
  I0112 17:08:58.790654 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 7.906303ms)
  I0112 17:08:58.797132 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 14.174305ms)
  I0112 17:08:58.798976 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 16.093006ms)
  I0112 17:08:58.800892 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 17.901906ms)
  I0112 17:08:58.801155 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 18.360307ms)
  I0112 17:08:58.805419 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 22.634908ms)
  I0112 17:08:58.805432 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 22.447308ms)
  I0112 17:08:58.805458 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 22.733508ms)
  I0112 17:08:58.806786 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 23.833708ms)
  I0112 17:08:58.807626 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 24.814909ms)
  I0112 17:08:58.807704 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 24.870009ms)
  I0112 17:08:58.807711 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 24.856109ms)
  I0112 17:08:58.807957 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 25.044109ms)
  I0112 17:08:58.808813 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 25.915709ms)
  I0112 17:08:58.809246 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 26.251809ms)
  I0112 17:08:58.809312 21 proxy.go:558] (12) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 26.443409ms)
  I0112 17:08:58.818612 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 9.184103ms)
  I0112 17:08:58.818630 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 8.708403ms)
  I0112 17:08:58.825560 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 15.747906ms)
  I0112 17:08:58.827481 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 17.963306ms)
  I0112 17:08:58.827553 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 17.485606ms)
  I0112 17:08:58.827982 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 18.207306ms)
  I0112 17:08:58.828015 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 18.466606ms)
  I0112 17:08:58.827980 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 17.996206ms)
  I0112 17:08:58.828387 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 18.252006ms)
  I0112 17:08:58.828425 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 18.716507ms)
  I0112 17:08:58.828442 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 18.812807ms)
  I0112 17:08:58.828433 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 18.594807ms)
  I0112 17:08:58.832174 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 22.514108ms)
  I0112 17:08:58.832178 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 22.284708ms)
  I0112 17:08:58.834439 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 24.403009ms)
  I0112 17:08:58.834466 21 proxy.go:558] (13) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 24.716009ms)
  I0112 17:08:58.847090 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 12.569804ms)
  I0112 17:08:58.847100 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 12.515604ms)
  I0112 17:08:58.850516 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 15.698105ms)
  I0112 17:08:58.850864 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 16.079105ms)
  I0112 17:08:58.850904 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 16.099605ms)
  I0112 17:08:58.850957 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 16.211605ms)
  I0112 17:08:58.851051 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 16.510505ms)
  I0112 17:08:58.854024 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 19.272706ms)
  I0112 17:08:58.854067 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 19.364906ms)
  I0112 17:08:58.861356 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 26.631409ms)
  I0112 17:08:58.861378 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 26.626809ms)
  I0112 17:08:58.861403 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 26.711609ms)
  I0112 17:08:58.861356 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 26.795509ms)
  I0112 17:08:58.861438 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 26.789209ms)
  I0112 17:08:58.861435 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 26.817409ms)
  I0112 17:08:58.862210 21 proxy.go:558] (14) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 27.558009ms)
  I0112 17:08:58.869737 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 7.399802ms)
  I0112 17:08:58.878350 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 15.540705ms)
  I0112 17:08:58.878889 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 16.443605ms)
  I0112 17:08:58.879918 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 17.022006ms)
  I0112 17:08:58.879912 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 17.583306ms)
  I0112 17:08:58.879963 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 17.408706ms)
  I0112 17:08:58.879998 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 17.567006ms)
  I0112 17:08:58.880773 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 18.278706ms)
  I0112 17:08:58.883198 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 20.634007ms)
  I0112 17:08:58.884190 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 21.688207ms)
  I0112 17:08:58.885071 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 22.545607ms)
  I0112 17:08:58.885119 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 22.188608ms)
  I0112 17:08:58.887080 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 24.547308ms)
  I0112 17:08:58.887135 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 24.719308ms)
  I0112 17:08:58.887532 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 25.145508ms)
  I0112 17:08:58.887586 21 proxy.go:558] (15) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 25.081208ms)
  I0112 17:08:58.895266 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 7.237603ms)
  I0112 17:08:58.897256 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 9.343004ms)
  I0112 17:08:58.898106 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 10.115304ms)
  I0112 17:08:58.898138 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 10.166304ms)
  I0112 17:08:58.898167 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 10.147504ms)
  I0112 17:08:58.898450 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 10.698004ms)
  I0112 17:08:58.899093 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 11.173304ms)
  I0112 17:08:58.899117 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 11.036604ms)
  I0112 17:08:58.900530 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 12.371304ms)
  I0112 17:08:58.902146 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 14.019204ms)
  I0112 17:08:58.902151 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 14.288505ms)
  I0112 17:08:58.904395 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 16.193905ms)
  I0112 17:08:58.905371 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 17.303506ms)
  I0112 17:08:58.905371 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 17.160405ms)
  I0112 17:08:58.905487 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 17.250705ms)
  I0112 17:08:58.906228 21 proxy.go:558] (16) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 17.899206ms)
  I0112 17:08:58.914215 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 7.605302ms)
  I0112 17:08:58.915583 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 9.012203ms)
  I0112 17:08:58.915604 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 9.080403ms)
  I0112 17:08:58.915646 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 9.311703ms)
  I0112 17:08:58.916566 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 10.074203ms)
  I0112 17:08:58.916586 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 9.805203ms)
  I0112 17:08:58.918138 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 11.453504ms)
  I0112 17:08:58.918192 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 11.395504ms)
  I0112 17:08:58.918229 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 11.582604ms)
  I0112 17:08:58.918906 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 12.110804ms)
  I0112 17:08:58.918915 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 12.555104ms)
  I0112 17:08:58.918955 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 12.285204ms)
  I0112 17:08:58.918964 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 12.528904ms)
  I0112 17:08:58.921494 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 14.752005ms)
  I0112 17:08:58.921500 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 14.766505ms)
  I0112 17:08:58.921537 21 proxy.go:558] (17) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 14.940205ms)
  I0112 17:08:58.928090 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 6.365102ms)
  I0112 17:08:58.928164 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 6.398602ms)
  I0112 17:08:58.928186 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 6.398902ms)
  I0112 17:08:58.928877 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 7.288202ms)
  I0112 17:08:58.930998 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 9.335003ms)
  I0112 17:08:58.930998 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 9.171603ms)
  I0112 17:08:58.931476 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 9.887603ms)
  I0112 17:08:58.931551 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 9.735403ms)
  I0112 17:08:58.931645 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 9.898803ms)
  I0112 17:08:58.933625 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 11.951204ms)
  I0112 17:08:58.933625 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 11.808704ms)
  I0112 17:08:58.934164 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 12.437004ms)
  I0112 17:08:58.934199 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 12.360104ms)
  I0112 17:08:58.934481 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 12.688304ms)
  I0112 17:08:58.935242 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 13.516704ms)
  I0112 17:08:58.935264 21 proxy.go:558] (18) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 13.496004ms)
  I0112 17:08:58.941245 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 5.609602ms)
  I0112 17:08:58.941892 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:160/proxy/: foo (200; 6.534902ms)
  I0112 17:08:58.943073 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:460/proxy/: tls baz (200; 7.232703ms)
  I0112 17:08:58.943832 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname1/proxy/: foo (200; 7.966403ms)
  I0112 17:08:58.943872 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:443/proxy/tlsrewritem... (200; 8.383503ms)
  I0112 17:08:58.944699 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname1/proxy/: foo (200; 9.160703ms)
  I0112 17:08:58.945595 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">... (200; 9.826104ms)
  I0112 17:08:58.945632 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/services/http:proxy-service-tqnx5:portname2/proxy/: bar (200; 10.073204ms)
  I0112 17:08:58.945595 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname2/proxy/: tls qux (200; 9.924204ms)
  I0112 17:08:58.945649 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv/proxy/rewriteme">test</a> (200; 9.859104ms)
  I0112 17:08:58.946162 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/services/https:proxy-service-tqnx5:tlsportname1/proxy/: tls baz (200; 10.580704ms)
  I0112 17:08:58.946187 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/services/proxy-service-tqnx5:portname2/proxy/: bar (200; 10.458904ms)
  I0112 17:08:58.946267 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 10.570204ms)
  I0112 17:08:58.947197 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/pods/https:proxy-service-tqnx5-9bwzv:462/proxy/: tls qux (200; 11.589704ms)
  I0112 17:08:58.947198 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/: <a href="/api/v1/namespaces/proxy-2626/pods/proxy-service-tqnx5-9bwzv:1080/proxy/rewriteme">test<... (200; 11.316104ms)
  I0112 17:08:58.947430 21 proxy.go:558] (19) /api/v1/namespaces/proxy-2626/pods/http:proxy-service-tqnx5-9bwzv:162/proxy/: bar (200; 11.961804ms)
  STEP: deleting ReplicationController proxy-service-tqnx5 in namespace proxy-2626, will wait for the garbage collector to delete the pods @ 01/12/25 17:08:58.947
  I0112 17:08:59.019861 21 resources.go:139] Deleting ReplicationController proxy-service-tqnx5 took: 17.542205ms
  I0112 17:08:59.120800 21 resources.go:163] Terminating ReplicationController proxy-service-tqnx5 pods took: 100.928233ms
  E0112 17:08:59.212479      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:00.213254      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:09:00.822220 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2626" for this suite. @ 01/12/25 17:09:00.829
• [5.416 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 01/12/25 17:09:00.849
  I0112 17:09:00.849123 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename gc @ 01/12/25 17:09:00.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:09:00.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:09:00.904
  STEP: create the deployment @ 01/12/25 17:09:00.908
  W0112 17:09:00.921624      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/12/25 17:09:00.921
  E0112 17:09:01.213753      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 01/12/25 17:09:01.426
  STEP: wait for all rs to be garbage collected @ 01/12/25 17:09:01.45
  STEP: expected 0 rs, got 1 rs @ 01/12/25 17:09:01.454
  STEP: expected 0 pods, got 2 pods @ 01/12/25 17:09:01.459
  STEP: Gathering metrics @ 01/12/25 17:09:01.968
  W0112 17:09:01.978220      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0112 17:09:01.978316 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0112 17:09:01.978654 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9204" for this suite. @ 01/12/25 17:09:01.989
• [1.173 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 01/12/25 17:09:02.022
  I0112 17:09:02.022452 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename watch @ 01/12/25 17:09:02.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:09:02.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:09:02.075
  STEP: creating a watch on configmaps with a certain label @ 01/12/25 17:09:02.081
  STEP: creating a new configmap @ 01/12/25 17:09:02.082
  STEP: modifying the configmap once @ 01/12/25 17:09:02.113
  STEP: changing the label value of the configmap @ 01/12/25 17:09:02.134
  STEP: Expecting to observe a delete notification for the watched object @ 01/12/25 17:09:02.151
  I0112 17:09:02.151266 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-544  d0f4e2b6-d482-468e-9995-f97f07b3012c 32821 0 2025-01-12 17:09:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-12 17:09:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 17:09:02.151641 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-544  d0f4e2b6-d482-468e-9995-f97f07b3012c 32822 0 2025-01-12 17:09:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-12 17:09:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 17:09:02.151824 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-544  d0f4e2b6-d482-468e-9995-f97f07b3012c 32823 0 2025-01-12 17:09:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-12 17:09:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 01/12/25 17:09:02.151
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 01/12/25 17:09:02.167
  E0112 17:09:02.214691      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:03.215036      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:04.216087      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:05.216368      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:06.216757      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:07.217168      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:08.217578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:09.218083      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:10.218508      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:11.218906      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 01/12/25 17:09:12.168
  STEP: modifying the configmap a third time @ 01/12/25 17:09:12.192
  STEP: deleting the configmap @ 01/12/25 17:09:12.209
  E0112 17:09:12.220148      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 01/12/25 17:09:12.224
  I0112 17:09:12.224514 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-544  d0f4e2b6-d482-468e-9995-f97f07b3012c 32863 0 2025-01-12 17:09:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-12 17:09:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 17:09:12.224694 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-544  d0f4e2b6-d482-468e-9995-f97f07b3012c 32864 0 2025-01-12 17:09:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-12 17:09:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 17:09:12.224790 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-544  d0f4e2b6-d482-468e-9995-f97f07b3012c 32865 0 2025-01-12 17:09:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-12 17:09:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 17:09:12.224866 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-544" for this suite. @ 01/12/25 17:09:12.229
• [10.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 01/12/25 17:09:12.246
  I0112 17:09:12.246110 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename dns @ 01/12/25 17:09:12.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:09:12.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:09:12.281
  STEP: Creating a test headless service @ 01/12/25 17:09:12.285
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7024.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7024.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7024.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7024.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7024.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7024.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7024.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7024.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7024.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7024.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7024.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7024.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 188.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.188_udp@PTR;check="$$(dig +tcp +noall +answer +search 188.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.188_tcp@PTR;sleep 1; done
   @ 01/12/25 17:09:12.343
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7024.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7024.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7024.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7024.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7024.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7024.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7024.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7024.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7024.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7024.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7024.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7024.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 188.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.188_udp@PTR;check="$$(dig +tcp +noall +answer +search 188.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.188_tcp@PTR;sleep 1; done
   @ 01/12/25 17:09:12.343
  STEP: creating a pod to probe DNS @ 01/12/25 17:09:12.343
  STEP: submitting the pod to kubernetes @ 01/12/25 17:09:12.343
  E0112 17:09:13.220271      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:14.220772      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/12/25 17:09:14.393
  STEP: looking for the results for each expected name from probers @ 01/12/25 17:09:14.398
  I0112 17:09:14.403800 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7024.svc.cluster.local from pod dns-7024/dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a: the server could not find the requested resource (get pods dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a)
  I0112 17:09:14.408819 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7024.svc.cluster.local from pod dns-7024/dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a: the server could not find the requested resource (get pods dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a)
  I0112 17:09:14.413242 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7024.svc.cluster.local from pod dns-7024/dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a: the server could not find the requested resource (get pods dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a)
  I0112 17:09:14.417664 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7024.svc.cluster.local from pod dns-7024/dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a: the server could not find the requested resource (get pods dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a)
  I0112 17:09:14.439580 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7024.svc.cluster.local from pod dns-7024/dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a: the server could not find the requested resource (get pods dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a)
  I0112 17:09:14.444255 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7024.svc.cluster.local from pod dns-7024/dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a: the server could not find the requested resource (get pods dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a)
  I0112 17:09:14.449019 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7024.svc.cluster.local from pod dns-7024/dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a: the server could not find the requested resource (get pods dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a)
  I0112 17:09:14.453664 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7024.svc.cluster.local from pod dns-7024/dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a: the server could not find the requested resource (get pods dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a)
  I0112 17:09:14.471133 21 dns_common.go:489] Lookups using dns-7024/dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a failed for: [wheezy_udp@dns-test-service.dns-7024.svc.cluster.local wheezy_tcp@dns-test-service.dns-7024.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7024.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7024.svc.cluster.local jessie_udp@dns-test-service.dns-7024.svc.cluster.local jessie_tcp@dns-test-service.dns-7024.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7024.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7024.svc.cluster.local]

  I0112 17:09:14.478910 21 dns_common.go:495] Pod client logs for webserver: 
  I0112 17:09:14.486078 21 dns_common.go:495] Pod client logs for querier: 
  I0112 17:09:14.493187 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0112 17:09:15.221195      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:16.221447      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:17.221983      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:18.222404      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:19.222869      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:09:19.474229 21 dns_common.go:527] DNS probes using dns-7024/dns-test-0f77a2ea-07bd-43cf-9aed-a57db05b659a succeeded

  STEP: deleting the pod @ 01/12/25 17:09:19.474
  STEP: deleting the test service @ 01/12/25 17:09:19.58
  STEP: deleting the test headless service @ 01/12/25 17:09:19.724
  I0112 17:09:19.759328 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7024" for this suite. @ 01/12/25 17:09:19.766
• [7.550 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 01/12/25 17:09:19.796
  I0112 17:09:19.796282 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pods @ 01/12/25 17:09:19.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:09:19.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:09:19.864
  STEP: creating the pod @ 01/12/25 17:09:19.87
  STEP: submitting the pod to kubernetes @ 01/12/25 17:09:19.87
  W0112 17:09:19.898166      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0112 17:09:20.224200      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:21.224708      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 01/12/25 17:09:21.91
  STEP: updating the pod @ 01/12/25 17:09:21.914
  E0112 17:09:22.225917      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:09:22.440847 21 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-0c0afa54-910c-443c-be82-7319a8f12007"
  E0112 17:09:23.226409      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:24.226610      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:25.227078      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:26.227368      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:09:26.454189 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6799" for this suite. @ 01/12/25 17:09:26.458
• [6.679 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 01/12/25 17:09:26.474
  I0112 17:09:26.474834 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename containers @ 01/12/25 17:09:26.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:09:26.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:09:26.522
  STEP: Creating a pod to test override all @ 01/12/25 17:09:26.525
  E0112 17:09:27.227698      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:28.228783      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:29.228894      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:30.229266      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:09:30.554
  I0112 17:09:30.558480 21 output.go:196] Trying to get logs from node ubuntu pod client-containers-3f62ef75-db97-482d-867e-43b6d345aa0c container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 17:09:30.566
  I0112 17:09:30.598646 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7552" for this suite. @ 01/12/25 17:09:30.603
• [4.144 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 01/12/25 17:09:30.618
  I0112 17:09:30.618807 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 17:09:30.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:09:30.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:09:30.653
  STEP: Creating a pod to test downward api env vars @ 01/12/25 17:09:30.657
  E0112 17:09:31.230305      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:32.230621      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:33.231711      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:34.232679      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:09:34.7
  I0112 17:09:34.705734 21 output.go:196] Trying to get logs from node ubuntu pod downward-api-5f76c2d6-6f65-45a7-8436-d3adaa3f6c10 container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 17:09:34.714
  I0112 17:09:34.752260 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9708" for this suite. @ 01/12/25 17:09:34.757
• [4.154 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 01/12/25 17:09:34.773
  I0112 17:09:34.773150 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename subpath @ 01/12/25 17:09:34.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:09:34.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:09:34.814
  STEP: Setting up data @ 01/12/25 17:09:34.818
  STEP: Creating pod pod-subpath-test-configmap-ktjl @ 01/12/25 17:09:34.859
  STEP: Creating a pod to test atomic-volume-subpath @ 01/12/25 17:09:34.859
  E0112 17:09:35.233586      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:36.234258      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:37.235055      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:38.235686      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:39.235840      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:40.236238      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:41.236497      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:42.237177      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:43.238211      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:44.238606      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:45.238821      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:46.239370      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:47.240483      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:48.240821      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:49.241211      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:50.241693      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:51.242749      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:52.242973      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:53.243978      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:54.244511      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:55.245484      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:56.245986      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:57.246307      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:09:58.246605      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:09:58.943
  I0112 17:09:58.946877 21 output.go:196] Trying to get logs from node ubuntu pod pod-subpath-test-configmap-ktjl container test-container-subpath-configmap-ktjl: <nil>
  STEP: delete the pod @ 01/12/25 17:09:58.954
  STEP: Deleting pod pod-subpath-test-configmap-ktjl @ 01/12/25 17:09:58.986
  I0112 17:09:58.986958 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-ktjl" in namespace "subpath-8619"
  I0112 17:09:58.990389 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8619" for this suite. @ 01/12/25 17:09:58.995
• [24.237 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 01/12/25 17:09:59.01
  I0112 17:09:59.010151 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 17:09:59.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:09:59.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:09:59.058
  STEP: Creating a pod to test downward api env vars @ 01/12/25 17:09:59.063
  E0112 17:09:59.246859      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:00.247365      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:01.248160      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:02.249129      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:10:03.099
  I0112 17:10:03.103878 21 output.go:196] Trying to get logs from node ubuntu pod downward-api-a2f83331-2918-4e14-9f40-251a080d564c container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 17:10:03.113
  I0112 17:10:03.146506 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3529" for this suite. @ 01/12/25 17:10:03.151
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 01/12/25 17:10:03.173
  I0112 17:10:03.173746 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/12/25 17:10:03.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:10:03.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:10:03.22
  I0112 17:10:03.225755 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  E0112 17:10:03.249917      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:04.250620      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:05.251574      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:06.252618      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:10:06.378699 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3034" for this suite. @ 01/12/25 17:10:06.384
• [3.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 01/12/25 17:10:06.4
  I0112 17:10:06.401194 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 17:10:06.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:10:06.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:10:06.445
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 01/12/25 17:10:06.45
  I0112 17:10:06.451014 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  E0112 17:10:07.253681      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:10:07.803817 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  E0112 17:10:08.254068      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:09.254912      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:10.255733      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:11.255998      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:12.256122      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:10:13.151545 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1183" for this suite. @ 01/12/25 17:10:13.16
• [6.777 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 01/12/25 17:10:13.178
  I0112 17:10:13.178039 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 17:10:13.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:10:13.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:10:13.227
  STEP: creating a ServiceAccount @ 01/12/25 17:10:13.232
  STEP: watching for the ServiceAccount to be added @ 01/12/25 17:10:13.255
  E0112 17:10:13.256476      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching the ServiceAccount @ 01/12/25 17:10:13.256
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 01/12/25 17:10:13.271
  STEP: deleting the ServiceAccount @ 01/12/25 17:10:13.276
  I0112 17:10:13.327196 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-841" for this suite. @ 01/12/25 17:10:13.331
• [0.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 01/12/25 17:10:13.347
  I0112 17:10:13.347491 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 17:10:13.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:10:13.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:10:13.396
  STEP: Setting up server cert @ 01/12/25 17:10:13.449
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 17:10:13.844
  STEP: Deploying the webhook pod @ 01/12/25 17:10:13.861
  STEP: Wait for the deployment to be ready @ 01/12/25 17:10:13.886
  I0112 17:10:13.892924 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0112 17:10:14.257748      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:15.258763      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/12/25 17:10:15.905
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 17:10:15.945
  E0112 17:10:16.259693      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:10:16.946430 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/12/25 17:10:16.956
  STEP: create a pod that should be denied by the webhook @ 01/12/25 17:10:16.984
  STEP: create a pod that causes the webhook to hang @ 01/12/25 17:10:16.994
  E0112 17:10:17.259851      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:18.260030      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:19.260490      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:20.261010      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:21.261555      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:22.261763      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:23.262145      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:24.262453      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:25.262579      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:26.263256      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 01/12/25 17:10:27.004
  STEP: create a configmap that should be admitted by the webhook @ 01/12/25 17:10:27.016
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/12/25 17:10:27.042
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/12/25 17:10:27.051
  STEP: create a namespace that bypass the webhook @ 01/12/25 17:10:27.057
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 01/12/25 17:10:27.096
  E0112 17:10:27.264371      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:10:27.284705 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4399" for this suite. @ 01/12/25 17:10:27.288
  STEP: Destroying namespace "webhook-markers-9618" for this suite. @ 01/12/25 17:10:27.354
  STEP: Destroying namespace "exempted-namespace-8809" for this suite. @ 01/12/25 17:10:27.382
• [14.066 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 01/12/25 17:10:27.413
  I0112 17:10:27.413436 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 17:10:27.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:10:27.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:10:27.446
  E0112 17:10:28.265508      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:29.266329      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:30.266624      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:31.266794      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:32.267060      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:33.267037      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:34.267815      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:35.268110      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:36.268799      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:37.269175      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:38.269376      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:39.269389      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:40.270213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:41.271211      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:42.272222      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:43.272286      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:44.272923      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 01/12/25 17:10:44.456
  E0112 17:10:45.273494      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:46.273884      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:47.274224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:48.274463      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:49.275047      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/12/25 17:10:49.462
  STEP: Ensuring resource quota status is calculated @ 01/12/25 17:10:49.485
  E0112 17:10:50.275335      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:51.276180      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 01/12/25 17:10:51.492
  STEP: Ensuring resource quota status captures configMap creation @ 01/12/25 17:10:51.521
  E0112 17:10:52.277117      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:53.277419      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 01/12/25 17:10:53.527
  STEP: Ensuring resource quota status released usage @ 01/12/25 17:10:53.545
  E0112 17:10:54.277595      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:55.278158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:10:55.549890 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9312" for this suite. @ 01/12/25 17:10:55.553
• [28.162 seconds]
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 01/12/25 17:10:55.575
  I0112 17:10:55.575130 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 17:10:55.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:10:55.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:10:55.628
  STEP: fetching services @ 01/12/25 17:10:55.632
  I0112 17:10:55.637208 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3044" for this suite. @ 01/12/25 17:10:55.642
• [0.082 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 01/12/25 17:10:55.657
  I0112 17:10:55.657678 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename ingress @ 01/12/25 17:10:55.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:10:55.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:10:55.698
  STEP: getting /apis @ 01/12/25 17:10:55.703
  STEP: getting /apis/networking.k8s.io @ 01/12/25 17:10:55.708
  STEP: getting /apis/networking.k8s.iov1 @ 01/12/25 17:10:55.709
  STEP: creating @ 01/12/25 17:10:55.711
  STEP: getting @ 01/12/25 17:10:55.75
  STEP: listing @ 01/12/25 17:10:55.753
  STEP: watching @ 01/12/25 17:10:55.757
  I0112 17:10:55.757145 21 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 01/12/25 17:10:55.758
  STEP: cluster-wide watching @ 01/12/25 17:10:55.762
  I0112 17:10:55.762366 21 ingress.go:198] starting watch
  STEP: patching @ 01/12/25 17:10:55.764
  STEP: updating @ 01/12/25 17:10:55.778
  I0112 17:10:55.794319 21 ingress.go:221] waiting for watch events with expected annotations
  I0112 17:10:55.794435 21 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 01/12/25 17:10:55.794
  STEP: updating /status @ 01/12/25 17:10:55.806
  STEP: get /status @ 01/12/25 17:10:55.825
  STEP: deleting @ 01/12/25 17:10:55.828
  STEP: deleting a collection @ 01/12/25 17:10:55.848
  I0112 17:10:55.879141 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4638" for this suite. @ 01/12/25 17:10:55.882
• [0.238 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 01/12/25 17:10:55.895
  I0112 17:10:55.895439 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename dns @ 01/12/25 17:10:55.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:10:55.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:10:55.941
  STEP: Creating a test headless service @ 01/12/25 17:10:55.944
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1101 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1101;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1101 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1101;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1101.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1101.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1101.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1101.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1101.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1101.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1101.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1101.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1101.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1101.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1101.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1101.svc;check="$$(dig +notcp +noall +answer +search 51.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.51_udp@PTR;check="$$(dig +tcp +noall +answer +search 51.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.51_tcp@PTR;sleep 1; done
   @ 01/12/25 17:10:56.034
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1101 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1101;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1101 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1101;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1101.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1101.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1101.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1101.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1101.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1101.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1101.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1101.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1101.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1101.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1101.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1101.svc;check="$$(dig +notcp +noall +answer +search 51.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.51_udp@PTR;check="$$(dig +tcp +noall +answer +search 51.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.51_tcp@PTR;sleep 1; done
   @ 01/12/25 17:10:56.034
  STEP: creating a pod to probe DNS @ 01/12/25 17:10:56.034
  STEP: submitting the pod to kubernetes @ 01/12/25 17:10:56.034
  E0112 17:10:56.278502      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:57.279100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:58.279321      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:10:59.279788      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/12/25 17:11:00.098
  STEP: looking for the results for each expected name from probers @ 01/12/25 17:11:00.102
  I0112 17:11:00.108532 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.113345 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.117683 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1101 from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.122320 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1101 from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.126153 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1101.svc from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.129816 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1101.svc from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.133335 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1101.svc from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.136723 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1101.svc from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.154250 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.157499 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.161143 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1101 from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.164978 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1101 from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.169380 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1101.svc from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.173622 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1101.svc from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.177547 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1101.svc from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.181762 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1101.svc from pod dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146: the server could not find the requested resource (get pods dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146)
  I0112 17:11:00.196096 21 dns_common.go:489] Lookups using dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1101 wheezy_tcp@dns-test-service.dns-1101 wheezy_udp@dns-test-service.dns-1101.svc wheezy_tcp@dns-test-service.dns-1101.svc wheezy_udp@_http._tcp.dns-test-service.dns-1101.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1101.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1101 jessie_tcp@dns-test-service.dns-1101 jessie_udp@dns-test-service.dns-1101.svc jessie_tcp@dns-test-service.dns-1101.svc jessie_udp@_http._tcp.dns-test-service.dns-1101.svc jessie_tcp@_http._tcp.dns-test-service.dns-1101.svc]

  I0112 17:11:00.201799 21 dns_common.go:495] Pod client logs for webserver: 
  I0112 17:11:00.210818 21 dns_common.go:495] Pod client logs for querier: 
  I0112 17:11:00.216642 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0112 17:11:00.280007      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:01.281168      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:02.281337      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:03.282695      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:04.283277      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:05.201842 21 dns_common.go:527] DNS probes using dns-1101/dns-test-5f5d5a24-f8af-4d36-9b94-316c7b5c0146 succeeded

  STEP: deleting the pod @ 01/12/25 17:11:05.202
  E0112 17:11:05.284178      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the test service @ 01/12/25 17:11:05.339
  STEP: deleting the test headless service @ 01/12/25 17:11:05.437
  I0112 17:11:05.473871 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1101" for this suite. @ 01/12/25 17:11:05.476
• [9.594 seconds]
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 01/12/25 17:11:05.489
  I0112 17:11:05.489701 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename replication-controller @ 01/12/25 17:11:05.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:11:05.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:11:05.546
  STEP: Creating ReplicationController "e2e-rc-dwbtq" @ 01/12/25 17:11:05.552
  I0112 17:11:05.567254 21 rc.go:792] Get Replication Controller "e2e-rc-dwbtq" to confirm replicas
  E0112 17:11:06.285437      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:06.568121 21 rc.go:792] Get Replication Controller "e2e-rc-dwbtq" to confirm replicas
  I0112 17:11:06.572759 21 rc.go:801] Found 1 replicas for "e2e-rc-dwbtq" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-dwbtq" @ 01/12/25 17:11:06.572
  STEP: Updating a scale subresource @ 01/12/25 17:11:06.577
  STEP: Verifying replicas where modified for replication controller "e2e-rc-dwbtq" @ 01/12/25 17:11:06.601
  I0112 17:11:06.601742 21 rc.go:792] Get Replication Controller "e2e-rc-dwbtq" to confirm replicas
  E0112 17:11:07.286486      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:07.602274 21 rc.go:792] Get Replication Controller "e2e-rc-dwbtq" to confirm replicas
  I0112 17:11:07.606542 21 rc.go:801] Found 2 replicas for "e2e-rc-dwbtq" replication controller
  I0112 17:11:07.607259 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7805" for this suite. @ 01/12/25 17:11:07.612
• [2.156 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 01/12/25 17:11:07.645
  I0112 17:11:07.645884 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pod-network-test @ 01/12/25 17:11:07.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:11:07.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:11:07.714
  STEP: Performing setup for networking test in namespace pod-network-test-2469 @ 01/12/25 17:11:07.731
  STEP: creating a selector @ 01/12/25 17:11:07.731
  STEP: Creating the service pods in kubernetes @ 01/12/25 17:11:07.731
  I0112 17:11:07.731358 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0112 17:11:08.287339      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:09.287770      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:10.288857      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:11.289675      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:12.290163      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:13.290410      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:14.290453      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:15.291033      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:16.291684      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:17.292175      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:18.292444      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:19.293425      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/12/25 17:11:19.821
  E0112 17:11:20.293922      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:21.294813      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:21.880920 21 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0112 17:11:21.881045 21 utils.go:496] Going to poll 10.1.243.251 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0112 17:11:21.884912 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.243.251:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2469 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:11:21.884988 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:11:21.885426 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:11:21.885506 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2469/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.243.251%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0112 17:11:21.967441 21 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0112 17:11:21.967499 21 utils.go:496] Going to poll 10.1.152.126 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0112 17:11:21.971192 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.152.126:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2469 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:11:21.971335 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:11:21.971915 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:11:21.972039 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2469/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.152.126%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0112 17:11:22.040689 21 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0112 17:11:22.040843 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2469" for this suite. @ 01/12/25 17:11:22.045
• [14.424 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 01/12/25 17:11:22.07
  I0112 17:11:22.070168 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 17:11:22.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:11:22.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:11:22.11
  STEP: Creating configMap with name projected-configmap-test-volume-fce54eaa-1314-4d27-b92a-22f54873c9bd @ 01/12/25 17:11:22.114
  STEP: Creating a pod to test consume configMaps @ 01/12/25 17:11:22.126
  E0112 17:11:22.295910      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:23.296205      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:24.296737      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:25.297076      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:11:26.158
  I0112 17:11:26.162412 21 output.go:196] Trying to get logs from node ubuntu pod pod-projected-configmaps-4a44dd1b-b09c-4d94-8518-ed482904ad3d container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 17:11:26.17
  I0112 17:11:26.204827 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1813" for this suite. @ 01/12/25 17:11:26.208
• [4.160 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 01/12/25 17:11:26.23
  I0112 17:11:26.230369 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 17:11:26.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:11:26.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:11:26.262
  STEP: Creating a pod to test downward api env vars @ 01/12/25 17:11:26.276
  E0112 17:11:26.297875      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:27.298524      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:28.299365      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:29.299664      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:30.300089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:11:30.306
  I0112 17:11:30.310539 21 output.go:196] Trying to get logs from node ubuntu pod downward-api-d7487300-4c10-4c06-95d4-9fcccbadc36a container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 17:11:30.316
  I0112 17:11:30.357269 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4727" for this suite. @ 01/12/25 17:11:30.36
• [4.162 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 01/12/25 17:11:30.393
  I0112 17:11:30.393023 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 17:11:30.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:11:30.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:11:30.433
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/12/25 17:11:30.437
  E0112 17:11:31.300224      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:32.300535      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:33.301113      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:34.301556      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:11:34.479
  I0112 17:11:34.485860 21 output.go:196] Trying to get logs from node ubuntu pod pod-8588185c-3595-47f5-80f5-e5030b38fbd3 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 17:11:34.496
  I0112 17:11:34.540677 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1496" for this suite. @ 01/12/25 17:11:34.545
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 01/12/25 17:11:34.56
  I0112 17:11:34.560682 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 17:11:34.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:11:34.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:11:34.607
  STEP: Creating configMap that has name configmap-test-emptyKey-d1f1283a-5530-40e2-82c5-ca3128d5bb55 @ 01/12/25 17:11:34.611
  I0112 17:11:34.613690 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5525" for this suite. @ 01/12/25 17:11:34.618
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 01/12/25 17:11:34.635
  I0112 17:11:34.635018 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename dns @ 01/12/25 17:11:34.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:11:34.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:11:34.674
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 01/12/25 17:11:34.679
  I0112 17:11:34.697974 21 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-1378  0522e9a0-a144-483f-ad27-89352b56edfb 33800 0 2025-01-12 17:11:34 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-01-12 17:11:34 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ffhmw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ffhmw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0112 17:11:35.302048      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:36.302138      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 01/12/25 17:11:36.706
  I0112 17:11:36.706300 21 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-1378 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:11:36.706320 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:11:36.706861 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:11:36.706978 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-1378/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 01/12/25 17:11:36.792
  I0112 17:11:36.792328 21 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-1378 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:11:36.792353 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:11:36.792876 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:11:36.793004 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-1378/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0112 17:11:36.876470 21 dns.go:423] Deleting pod test-dns-nameservers...
  I0112 17:11:36.905531 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1378" for this suite. @ 01/12/25 17:11:36.911
• [2.292 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 01/12/25 17:11:36.927
  I0112 17:11:36.927704 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename security-context-test @ 01/12/25 17:11:36.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:11:36.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:11:36.971
  E0112 17:11:37.302668      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:38.303135      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:39.304228      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:40.305270      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:41.004459 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6242" for this suite. @ 01/12/25 17:11:41.009
• [4.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 01/12/25 17:11:41.028
  I0112 17:11:41.028209 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename endpointslice @ 01/12/25 17:11:41.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:11:41.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:11:41.09
  E0112 17:11:41.306293      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:42.306848      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:43.223158 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6323" for this suite. @ 01/12/25 17:11:43.227
• [2.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 01/12/25 17:11:43.244
  I0112 17:11:43.245009 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 17:11:43.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:11:43.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:11:43.288
  STEP: Creating pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600 @ 01/12/25 17:11:43.292
  E0112 17:11:43.307655      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:44.308442      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:45.309081      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 17:11:45.316
  I0112 17:11:45.319516 21 container_probe.go:1749] Initial restart count of pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 is 0
  I0112 17:11:45.323066 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:11:46.309298      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:47.310086      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:47.328859 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:11:48.310182      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:49.310875      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:49.334487 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:11:50.311600      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:51.312455      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:51.338996 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:11:52.312802      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:53.313213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:53.346136 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:11:54.314196      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:55.314629      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:55.350668 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:11:56.315408      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:57.315901      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:57.355827 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:11:58.316284      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:11:59.316494      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:11:59.359817 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:00.317404      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:01.317651      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:01.367871 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:02.318230      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:03.318780      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:03.372352 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:04.319541      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:05.319913      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:05.377717 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:06.320590      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:07.320879      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:07.383444 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:08.321479      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:09.321692      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:09.388409 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:10.322230      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:11.323325      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:11.392728 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:12.323733      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:13.324130      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:13.398343 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:14.324844      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:15.324656      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:15.404347 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:16.325598      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:17.326169      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:17.410421 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:18.326518      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:19.327088      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:19.416675 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:20.327816      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:21.328364      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:21.421417 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:22.329161      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:23.329709      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:23.427583 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:24.330672      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:25.331091      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:25.433700 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:26.331540      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:27.332694      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:27.441356 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:28.333669      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:29.334156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:29.447448 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:30.334391      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:31.334671      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:31.451607 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:32.335765      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:33.336139      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:33.458018 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  E0112 17:12:34.337159      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:35.337835      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:35.462757 21 container_probe.go:1759] Get pod busybox-253c9385-d74a-401d-82f9-e509bb9d1537 in namespace container-probe-3600
  I0112 17:12:35.462825 21 container_probe.go:1763] Restart count of pod container-probe-3600/busybox-253c9385-d74a-401d-82f9-e509bb9d1537 is now 1 (50.143252152s elapsed)
  STEP: deleting the pod @ 01/12/25 17:12:35.462
  I0112 17:12:35.549702 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3600" for this suite. @ 01/12/25 17:12:35.564
• [52.352 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 01/12/25 17:12:35.596
  I0112 17:12:35.596824 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 17:12:35.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:12:35.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:12:35.635
  STEP: Creating simple DaemonSet "daemon-set" @ 01/12/25 17:12:35.669
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/12/25 17:12:35.685
  I0112 17:12:35.695165 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 17:12:35.695229 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  E0112 17:12:36.338406      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:36.698101 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 17:12:36.698176 21 fixtures.go:130] Node ubuntu is running 0 daemon pod, expected 1
  E0112 17:12:37.338726      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:37.696476 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 17:12:37.696549 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 01/12/25 17:12:37.7
  I0112 17:12:37.704771 21 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 01/12/25 17:12:37.704
  I0112 17:12:37.726017 21 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 01/12/25 17:12:37.726
  I0112 17:12:37.728570 21 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0112 17:12:37.728811 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0112 17:12:37.729013 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0112 17:12:37.729196 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0112 17:12:37.729332 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0112 17:12:37.729365 21 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-4034 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0112 17:12:37.729384 21 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 01/12/25 17:12:37.729
  STEP: watching for the daemon set status to be patched @ 01/12/25 17:12:37.746
  I0112 17:12:37.748871 21 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0112 17:12:37.749084 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0112 17:12:37.749256 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0112 17:12:37.749388 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0112 17:12:37.749523 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0112 17:12:37.749643 21 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-4034 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0112 17:12:37.749831 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0112 17:12:37.749950 21 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-4034 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0112 17:12:37.749978 21 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 01/12/25 17:12:37.754
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4034, will wait for the garbage collector to delete the pods @ 01/12/25 17:12:37.754
  I0112 17:12:37.847363 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 38.206375ms
  I0112 17:12:37.948454 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.089334ms
  E0112 17:12:38.339585      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:39.340728      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:40.341354      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:40.555219 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 17:12:40.555272 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0112 17:12:40.560240 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34064"},"items":null}

  I0112 17:12:40.565033 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34064"},"items":null}

  I0112 17:12:40.578050 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4034" for this suite. @ 01/12/25 17:12:40.582
• [5.000 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 01/12/25 17:12:40.597
  I0112 17:12:40.597071 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename job @ 01/12/25 17:12:40.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:12:40.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:12:40.634
  STEP: Looking for a node to schedule job pod @ 01/12/25 17:12:40.639
  STEP: Creating a job @ 01/12/25 17:12:40.644
  STEP: Ensuring job fails @ 01/12/25 17:12:40.656
  E0112 17:12:41.342558      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:42.342675      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:43.343685      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:44.344365      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:44.668804 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-652" for this suite. @ 01/12/25 17:12:44.675
• [4.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 01/12/25 17:12:44.691
  I0112 17:12:44.691472 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 17:12:44.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:12:44.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:12:44.733
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 17:12:44.737
  E0112 17:12:45.345104      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:46.345769      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:47.346276      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:48.346614      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:12:48.767
  I0112 17:12:48.770654 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-dd311540-5665-430a-9b82-d420ef599f65 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 17:12:48.777
  I0112 17:12:48.809858 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2109" for this suite. @ 01/12/25 17:12:48.815
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 01/12/25 17:12:48.833
  I0112 17:12:48.833683 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename configmap @ 01/12/25 17:12:48.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:12:48.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:12:48.871
  STEP: Creating configMap with name cm-test-opt-del-12b8c3db-3910-4bbe-8537-20189e09834f @ 01/12/25 17:12:48.879
  STEP: Creating configMap with name cm-test-opt-upd-2099cf93-0a5c-49d3-84cc-58cc5e04cab7 @ 01/12/25 17:12:48.892
  STEP: Creating the pod @ 01/12/25 17:12:48.904
  E0112 17:12:49.347150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:50.347374      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-12b8c3db-3910-4bbe-8537-20189e09834f @ 01/12/25 17:12:50.959
  STEP: Updating configmap cm-test-opt-upd-2099cf93-0a5c-49d3-84cc-58cc5e04cab7 @ 01/12/25 17:12:50.974
  STEP: Creating configMap with name cm-test-opt-create-b65de64f-3a7f-4a7d-a00e-8510e6d688a0 @ 01/12/25 17:12:50.987
  STEP: waiting to observe update in volume @ 01/12/25 17:12:51.006
  E0112 17:12:51.347536      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:52.348197      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:53.035286 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8113" for this suite. @ 01/12/25 17:12:53.039
• [4.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 01/12/25 17:12:53.064
  I0112 17:12:53.064156 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename deployment @ 01/12/25 17:12:53.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:12:53.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:12:53.154
  I0112 17:12:53.185029 21 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0112 17:12:53.348275      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:54.348457      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:55.348813      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:56.349590      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:12:57.350294      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:12:58.203412 21 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/12/25 17:12:58.203
  I0112 17:12:58.203589 21 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 01/12/25 17:12:58.263
  I0112 17:12:58.281047 21 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9428",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06f2cc93-0391-41ac-89fb-434ba9ef4586",
      ResourceVersion: (string) (len=5) "34264",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872298778,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872298778,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 17:12:58.288133 21 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0112 17:12:58.293121 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9428" for this suite. @ 01/12/25 17:12:58.297
• [5.282 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 01/12/25 17:12:58.346
  I0112 17:12:58.346758 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename init-container @ 01/12/25 17:12:58.347
  E0112 17:12:58.350805      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:12:58.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:12:58.495
  STEP: creating the pod @ 01/12/25 17:12:58.498
  I0112 17:12:58.499011 21 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0112 17:12:59.351056      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:00.351351      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:01.352348      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:02.352686      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:02.830719 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4707" for this suite. @ 01/12/25 17:13:02.834
• [4.503 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 01/12/25 17:13:02.85
  I0112 17:13:02.850476 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/12/25 17:13:02.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:13:02.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:13:02.885
  E0112 17:13:03.353821      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:04.354281      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 01/12/25 17:13:04.952
  STEP: Cleaning up the configmap @ 01/12/25 17:13:04.967
  STEP: Cleaning up the pod @ 01/12/25 17:13:04.98
  I0112 17:13:05.010774 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1448" for this suite. @ 01/12/25 17:13:05.015
• [2.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 01/12/25 17:13:05.032
  I0112 17:13:05.032953 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 17:13:05.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:13:05.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:13:05.077
  STEP: Creating a pod to test env composition @ 01/12/25 17:13:05.081
  E0112 17:13:05.355415      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:06.356367      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:07.356339      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:08.356555      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:13:09.112
  I0112 17:13:09.117041 21 output.go:196] Trying to get logs from node ubuntu pod var-expansion-180af5eb-2bde-4b39-b570-2f140590e6a3 container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 17:13:09.124
  I0112 17:13:09.157784 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7891" for this suite. @ 01/12/25 17:13:09.163
• [4.145 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 01/12/25 17:13:09.177
  I0112 17:13:09.177885 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename disruption @ 01/12/25 17:13:09.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:13:09.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:13:09.214
  STEP: Waiting for the pdb to be processed @ 01/12/25 17:13:09.233
  E0112 17:13:09.357529      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:10.358368      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 01/12/25 17:13:11.321
  I0112 17:13:11.325229 21 disruption.go:691] running pods: 0 < 3
  E0112 17:13:11.359464      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:12.360085      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:13.331832 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6734" for this suite. @ 01/12/25 17:13:13.336
• [4.173 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 01/12/25 17:13:13.351
  I0112 17:13:13.351609 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename gc @ 01/12/25 17:13:13.352
  E0112 17:13:13.360620      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:13:13.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:13:13.388
  STEP: create the rc @ 01/12/25 17:13:13.393
  W0112 17:13:13.405743      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0112 17:13:14.360860      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:15.361216      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:16.362085      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:17.363347      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:18.363738      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/12/25 17:13:18.41
  STEP: wait for all pods to be garbage collected @ 01/12/25 17:13:18.469
  E0112 17:13:19.363700      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:20.364106      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:21.365100      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:22.365446      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:23.365856      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/12/25 17:13:23.481
  W0112 17:13:23.488009      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0112 17:13:23.488081 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0112 17:13:23.488353 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5219" for this suite. @ 01/12/25 17:13:23.492
• [10.164 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 01/12/25 17:13:23.515
  I0112 17:13:23.515831 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename init-container @ 01/12/25 17:13:23.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:13:23.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:13:23.558
  STEP: creating the pod @ 01/12/25 17:13:23.563
  I0112 17:13:23.563843 21 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0112 17:13:24.366555      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:25.366844      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:26.368022      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:26.726472 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3479" for this suite. @ 01/12/25 17:13:26.73
• [3.230 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 01/12/25 17:13:26.745
  I0112 17:13:26.746000 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 17:13:26.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:13:26.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:13:26.789
  I0112 17:13:26.813732 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  E0112 17:13:27.369002      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/12/25 17:13:28.134
  I0112 17:13:28.134723 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-8777 --namespace=crd-publish-openapi-8777 create -f -'
  I0112 17:13:28.243809 21 builder.go:146] stderr: ""
  I0112 17:13:28.243878 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3484-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0112 17:13:28.243961 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-8777 --namespace=crd-publish-openapi-8777 delete e2e-test-crd-publish-openapi-3484-crds test-cr'
  I0112 17:13:28.336894 21 builder.go:146] stderr: ""
  I0112 17:13:28.337005 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3484-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0112 17:13:28.337091 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-8777 --namespace=crd-publish-openapi-8777 apply -f -'
  E0112 17:13:28.369714      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:28.442739 21 builder.go:146] stderr: ""
  I0112 17:13:28.442816 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3484-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0112 17:13:28.442889 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-8777 --namespace=crd-publish-openapi-8777 delete e2e-test-crd-publish-openapi-3484-crds test-cr'
  I0112 17:13:28.531305 21 builder.go:146] stderr: ""
  I0112 17:13:28.531408 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3484-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/12/25 17:13:28.531
  I0112 17:13:28.531570 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=crd-publish-openapi-8777 explain e2e-test-crd-publish-openapi-3484-crds'
  I0112 17:13:28.624518 21 builder.go:146] stderr: ""
  I0112 17:13:28.624612 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3484-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0112 17:13:29.370168      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:29.961234 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8777" for this suite. @ 01/12/25 17:13:29.97
• [3.241 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 01/12/25 17:13:29.986
  I0112 17:13:29.986977 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename aggregator @ 01/12/25 17:13:29.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:13:30.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:13:30.021
  I0112 17:13:30.026736 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Registering the sample API server. @ 01/12/25 17:13:30.027
  E0112 17:13:30.371150      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:30.700742 21 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0112 17:13:30.761295 21 deployment.go:222] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  E0112 17:13:31.371907      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:32.372182      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:32.878131 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:33.372517      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:34.372882      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:34.885870 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:35.373773      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:36.374654      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:36.883038 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:37.374923      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:38.375455      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:38.882907 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:39.375647      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:40.376092      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:40.884178 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:41.376118      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:42.376631      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:42.883046 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:43.376702      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:44.376978      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:44.882533 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:45.377353      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:46.378309      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:46.883470 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:47.378588      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:48.379691      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:48.882170 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:49.381030      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:50.381130      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:50.884351 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:51.381811      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:52.382302      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:52.883998 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:53.382496      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:54.383638      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:54.883972 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:55.384574      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:56.385438      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:56.883107 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:57.385722      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:13:58.386353      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:13:58.883120 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 17, 13, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0112 17:13:59.386839      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:00.387796      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:01.016751 21 aggregator.go:755] Waited 114.229494ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 01/12/25 17:14:01.074
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 01/12/25 17:14:01.079
  STEP: List APIServices @ 01/12/25 17:14:01.091
  I0112 17:14:01.099658 21 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 01/12/25 17:14:01.099
  I0112 17:14:01.123015 21 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 01/12/25 17:14:01.123
  I0112 17:14:01.139135 21 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.January, 12, 17, 14, 0, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 01/12/25 17:14:01.139
  I0112 17:14:01.143116 21 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-01-12 17:14:00 +0000 UTC Passed all checks passed}
  I0112 17:14:01.143179 21 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0112 17:14:01.143195 21 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 01/12/25 17:14:01.143
  I0112 17:14:01.158556 21 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1602451817" @ 01/12/25 17:14:01.158
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 01/12/25 17:14:01.17
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 01/12/25 17:14:01.181
  STEP: Patch APIService Status @ 01/12/25 17:14:01.185
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 01/12/25 17:14:01.199
  I0112 17:14:01.204014 21 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-01-12 17:14:00 +0000 UTC Passed all checks passed}
  I0112 17:14:01.204101 21 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0112 17:14:01.204142 21 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0112 17:14:01.204175 21 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 01/12/25 17:14:01.204
  STEP: Confirm that the generated APIService has been deleted @ 01/12/25 17:14:01.222
  I0112 17:14:01.222110 21 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0112 17:14:01.227514 21 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0112 17:14:01.227655 21 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  E0112 17:14:01.388990      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:01.931713 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-5329" for this suite. @ 01/12/25 17:14:01.937
• [32.000 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 01/12/25 17:14:01.987
  I0112 17:14:01.987624 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 17:14:01.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:14:02.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:14:02.1
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 17:14:02.113
  E0112 17:14:02.390138      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:03.390582      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:04.391306      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:05.391788      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:14:06.15
  I0112 17:14:06.157363 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-196b517f-e2ec-4f34-b06a-d4087b9a334a container client-container: <nil>
  STEP: delete the pod @ 01/12/25 17:14:06.169
  I0112 17:14:06.204214 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5311" for this suite. @ 01/12/25 17:14:06.208
• [4.234 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 01/12/25 17:14:06.222
  I0112 17:14:06.222303 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 17:14:06.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:14:06.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:14:06.254
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 17:14:06.259
  E0112 17:14:06.392826      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:07.393050      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:08.393206      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:09.393568      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:14:10.292
  I0112 17:14:10.296014 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-a9baa125-72ce-4f2f-9111-cacbd96a1162 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 17:14:10.303
  I0112 17:14:10.343394 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4007" for this suite. @ 01/12/25 17:14:10.348
• [4.143 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 01/12/25 17:14:10.365
  I0112 17:14:10.365399 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 17:14:10.366
  E0112 17:14:10.393595      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:14:10.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:14:10.407
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 01/12/25 17:14:10.412
  E0112 17:14:11.394324      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:12.394829      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:13.395697      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:14.396041      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:14:14.444
  I0112 17:14:14.447421 21 output.go:196] Trying to get logs from node ubuntu pod pod-b223729a-74cd-4593-8a00-e03108613fc5 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 17:14:14.453
  I0112 17:14:14.485611 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-645" for this suite. @ 01/12/25 17:14:14.49
• [4.140 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 01/12/25 17:14:14.505
  I0112 17:14:14.505793 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 17:14:14.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:14:14.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:14:14.546
  STEP: creating Agnhost RC @ 01/12/25 17:14:14.551
  I0112 17:14:14.551684 21 kubectl.go:1537] namespace kubectl-6375
  I0112 17:14:14.551749 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-6375 create -f -'
  I0112 17:14:14.698818 21 builder.go:146] stderr: ""
  I0112 17:14:14.698873 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/12/25 17:14:14.698
  E0112 17:14:15.396382      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:15.702877 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 17:14:15.703014 21 framework.go:733] Found 0 / 1
  E0112 17:14:16.397238      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:16.703138 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 17:14:16.703209 21 framework.go:733] Found 0 / 1
  E0112 17:14:17.397902      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:17.703168 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 17:14:17.703229 21 framework.go:733] Found 1 / 1
  I0112 17:14:17.703256 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0112 17:14:17.706916 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 17:14:17.706986 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0112 17:14:17.706997 21 kubectl.go:1544] wait on agnhost-primary startup in kubectl-6375 
  I0112 17:14:17.707041 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-6375 logs agnhost-primary-wxqnp agnhost-primary'
  I0112 17:14:17.789745 21 builder.go:146] stderr: ""
  I0112 17:14:17.789851 21 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 01/12/25 17:14:17.789
  I0112 17:14:17.789982 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-6375 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0112 17:14:17.907478 21 builder.go:146] stderr: ""
  I0112 17:14:17.907553 21 builder.go:147] stdout: "service/rm2 exposed\n"
  I0112 17:14:17.911289 21 utils.go:1203] Service rm2 in namespace kubectl-6375 found.
  E0112 17:14:18.397968      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:19.398768      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: exposing service @ 01/12/25 17:14:19.919
  I0112 17:14:19.919753 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-6375 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0112 17:14:20.025158 21 builder.go:146] stderr: ""
  I0112 17:14:20.025206 21 builder.go:147] stdout: "service/rm3 exposed\n"
  I0112 17:14:20.029167 21 utils.go:1203] Service rm3 in namespace kubectl-6375 found.
  E0112 17:14:20.400156      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:21.401086      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:22.037066 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6375" for this suite. @ 01/12/25 17:14:22.04
• [7.548 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 01/12/25 17:14:22.053
  I0112 17:14:22.053770 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename job @ 01/12/25 17:14:22.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:14:22.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:14:22.085
  STEP: Creating a job @ 01/12/25 17:14:22.089
  STEP: Ensure pods equal to parallelism count is attached to the job @ 01/12/25 17:14:22.102
  E0112 17:14:22.401400      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:23.402503      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 01/12/25 17:14:24.108
  STEP: updating /status @ 01/12/25 17:14:24.128
  STEP: get /status @ 01/12/25 17:14:24.138
  I0112 17:14:24.142233 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7164" for this suite. @ 01/12/25 17:14:24.147
• [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 01/12/25 17:14:24.161
  I0112 17:14:24.161473 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 17:14:24.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:14:24.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:14:24.214
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 17:14:24.232
  E0112 17:14:24.402516      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:25.403506      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:26.404360      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:27.405081      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:14:28.275
  I0112 17:14:28.279360 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-cb2eee3b-efd7-4c5e-8c9a-3dca67e38dce container client-container: <nil>
  STEP: delete the pod @ 01/12/25 17:14:28.285
  I0112 17:14:28.324826 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4825" for this suite. @ 01/12/25 17:14:28.329
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 01/12/25 17:14:28.345
  I0112 17:14:28.345728 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 17:14:28.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:14:28.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:14:28.384
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-897 @ 01/12/25 17:14:28.387
  E0112 17:14:28.405401      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/12/25 17:14:28.424
  STEP: creating service externalsvc in namespace services-897 @ 01/12/25 17:14:28.425
  STEP: creating replication controller externalsvc in namespace services-897 @ 01/12/25 17:14:28.479
  I0112 17:14:28.505175      21 runners.go:193] Created replication controller with name: externalsvc, namespace: services-897, replica count: 2
  E0112 17:14:29.406818      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:30.407473      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:31.408089      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:31.556923      21 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 01/12/25 17:14:31.563
  I0112 17:14:31.609754 21 resource.go:361] Creating new exec pod
  E0112 17:14:32.408218      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:33.408625      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:33.632461 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-897 exec execpodjk8rx -- /bin/sh -x -c nslookup nodeport-service.services-897.svc.cluster.local'
  I0112 17:14:33.890572 21 builder.go:146] stderr: "+ nslookup nodeport-service.services-897.svc.cluster.local\n"
  I0112 17:14:33.890652 21 builder.go:147] stdout: "Server:\t\t10.152.183.10\nAddress:\t10.152.183.10#53\n\nnodeport-service.services-897.svc.cluster.local\tcanonical name = externalsvc.services-897.svc.cluster.local.\nName:\texternalsvc.services-897.svc.cluster.local\nAddress: 10.152.183.252\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-897, will wait for the garbage collector to delete the pods @ 01/12/25 17:14:33.891
  I0112 17:14:33.969571 21 resources.go:139] Deleting ReplicationController externalsvc took: 21.552278ms
  I0112 17:14:34.070416 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.847296ms
  E0112 17:14:34.409274      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:35.410659      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:36.410852      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:37.313855 21 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0112 17:14:37.340835 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-897" for this suite. @ 01/12/25 17:14:37.345
• [9.037 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 01/12/25 17:14:37.382
  I0112 17:14:37.382706 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename chunking @ 01/12/25 17:14:37.383
  E0112 17:14:37.411842      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:14:37.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:14:37.415
  STEP: creating a large number of resources @ 01/12/25 17:14:37.42
  E0112 17:14:38.413046      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:39.414040      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:40.414562      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:41.415046      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:42.416014      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:43.416575      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:44.417053      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:45.417354      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:46.417719      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:47.418677      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:48.418993      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:49.419745      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:50.420213      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:51.420917      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:52.421916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:53.422751      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:14:54.423026      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 01/12/25 17:14:55.098
  I0112 17:14:55.142597 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0112 17:14:55.192225 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0112 17:14:55.241597 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0112 17:14:55.291426 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0112 17:14:55.341738 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0112 17:14:55.390903 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  E0112 17:14:55.422955      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:55.441822 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0112 17:14:55.491264 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0112 17:14:55.540346 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0112 17:14:55.592518 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0112 17:14:55.639423 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0112 17:14:55.689099 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0112 17:14:55.741016 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0112 17:14:55.790563 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0112 17:14:55.840435 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0112 17:14:55.890826 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0112 17:14:55.940240 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0112 17:14:55.990755 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0112 17:14:56.040205 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0112 17:14:56.092837 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0112 17:14:56.142807 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0112 17:14:56.190882 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0112 17:14:56.240788 21 chunking.go:98] Retrieved 17/17 results with rv 35667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0112 17:14:56.290461 21 chunking.go:98] Retrieved 9/17 results with rv 35667 and continue 
  I0112 17:14:56.344231 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0112 17:14:56.391793 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  E0112 17:14:56.423882      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:56.444153 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0112 17:14:56.491584 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0112 17:14:56.540551 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0112 17:14:56.590509 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0112 17:14:56.641618 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0112 17:14:56.690776 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0112 17:14:56.741081 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0112 17:14:56.792706 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0112 17:14:56.840864 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0112 17:14:56.891198 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0112 17:14:56.941632 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0112 17:14:56.991232 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0112 17:14:57.041473 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0112 17:14:57.090324 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0112 17:14:57.140356 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0112 17:14:57.191488 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0112 17:14:57.242426 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0112 17:14:57.290692 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0112 17:14:57.340287 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0112 17:14:57.389126 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E0112 17:14:57.424402      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:57.439523 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0112 17:14:57.487500 21 chunking.go:98] Retrieved 9/17 results with rv 35671 and continue 
  I0112 17:14:57.541180 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0112 17:14:57.591862 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0112 17:14:57.640887 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0112 17:14:57.690261 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0112 17:14:57.745233 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0112 17:14:57.791822 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0112 17:14:57.841044 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0112 17:14:57.890002 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0112 17:14:57.944569 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0112 17:14:57.994657 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0112 17:14:58.040664 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0112 17:14:58.089536 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0112 17:14:58.139828 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0112 17:14:58.189343 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0112 17:14:58.239110 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0112 17:14:58.291223 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0112 17:14:58.340908 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0112 17:14:58.390116 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  E0112 17:14:58.425514      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:14:58.438594 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0112 17:14:58.490976 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0112 17:14:58.539210 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0112 17:14:58.588879 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0112 17:14:58.638344 21 chunking.go:98] Retrieved 17/17 results with rv 35671 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU2NzEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0112 17:14:58.691044 21 chunking.go:98] Retrieved 9/17 results with rv 35671 and continue 
  STEP: retrieving those results all at once @ 01/12/25 17:14:58.691
  I0112 17:14:58.758860 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9933" for this suite. @ 01/12/25 17:14:58.789
• [21.466 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 01/12/25 17:14:58.849
  I0112 17:14:58.849385 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pods @ 01/12/25 17:14:58.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:14:58.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:14:58.888
  STEP: creating the pod @ 01/12/25 17:14:58.894
  STEP: setting up watch @ 01/12/25 17:14:58.894
  STEP: submitting the pod to kubernetes @ 01/12/25 17:14:59
  STEP: verifying the pod is in kubernetes @ 01/12/25 17:14:59.017
  STEP: verifying pod creation was observed @ 01/12/25 17:14:59.021
  E0112 17:14:59.426695      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:00.427118      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:01.427327      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:02.427738      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 01/12/25 17:15:03.043
  STEP: verifying pod deletion was observed @ 01/12/25 17:15:03.061
  E0112 17:15:03.427833      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:04.109428 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3727" for this suite. @ 01/12/25 17:15:04.116
• [5.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 01/12/25 17:15:04.143
  I0112 17:15:04.143991 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename replicaset @ 01/12/25 17:15:04.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:15:04.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:15:04.212
  I0112 17:15:04.241695 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0112 17:15:04.428243      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:05.431092      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:06.431937      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:07.432296      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:08.432300      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:09.247596 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/12/25 17:15:09.247
  STEP: Scaling up "test-rs" replicaset @ 01/12/25 17:15:09.247
  I0112 17:15:09.270654 21 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 01/12/25 17:15:09.27
  I0112 17:15:09.303342 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8842 with ReadyReplicas 1, AvailableReplicas 1
  I0112 17:15:09.354295 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8842 with ReadyReplicas 1, AvailableReplicas 1
  E0112 17:15:09.432751      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:09.457086 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8842 with ReadyReplicas 1, AvailableReplicas 1
  I0112 17:15:09.535563 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8842 with ReadyReplicas 1, AvailableReplicas 1
  E0112 17:15:10.433625      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:11.106199 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8842 with ReadyReplicas 2, AvailableReplicas 2
  I0112 17:15:11.273540 21 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-8842 with ReadyReplicas 3 found true
  I0112 17:15:11.273789 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8842" for this suite. @ 01/12/25 17:15:11.278
• [7.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 01/12/25 17:15:11.293
  I0112 17:15:11.293786 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename services @ 01/12/25 17:15:11.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:15:11.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:15:11.343
  STEP: creating service endpoint-test2 in namespace services-9670 @ 01/12/25 17:15:11.347
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9670 to expose endpoints map[] @ 01/12/25 17:15:11.369
  I0112 17:15:11.376307 21 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0112 17:15:11.434544      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:12.389165 21 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9670 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9670 @ 01/12/25 17:15:12.389
  E0112 17:15:12.434700      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:13.435112      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9670 to expose endpoints map[pod1:[80]] @ 01/12/25 17:15:14.421
  I0112 17:15:14.433609 21 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9670 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 01/12/25 17:15:14.433
  I0112 17:15:14.433697 21 resource.go:361] Creating new exec pod
  E0112 17:15:14.435846      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:15.436291      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:16.436663      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:17.436960      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:17.458704 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9670 exec execpod726zl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0112 17:15:17.639200 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0112 17:15:17.639282 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 17:15:17.639398 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9670 exec execpod726zl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.44 80'
  I0112 17:15:17.806205 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.44 80\nConnection to 10.152.183.44 80 port [tcp/http] succeeded!\n"
  I0112 17:15:17.806281 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9670 @ 01/12/25 17:15:17.806
  E0112 17:15:18.437264      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:19.437444      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9670 to expose endpoints map[pod1:[80] pod2:[80]] @ 01/12/25 17:15:19.844
  I0112 17:15:19.864068 21 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9670 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 01/12/25 17:15:19.864
  E0112 17:15:20.437581      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:20.865234 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9670 exec execpod726zl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0112 17:15:21.022207 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0112 17:15:21.022274 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 17:15:21.022362 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9670 exec execpod726zl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.44 80'
  I0112 17:15:21.171082 21 builder.go:146] stderr: "+ + ncecho -v -t hostName -w\n 2 10.152.183.44 80\nConnection to 10.152.183.44 80 port [tcp/http] succeeded!\n"
  I0112 17:15:21.171210 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9670 @ 01/12/25 17:15:21.171
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9670 to expose endpoints map[pod2:[80]] @ 01/12/25 17:15:21.246
  E0112 17:15:21.437703      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:22.279362 21 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9670 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 01/12/25 17:15:22.279
  E0112 17:15:22.437978      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:23.280355 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9670 exec execpod726zl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0112 17:15:23.438148      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:23.443639 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0112 17:15:23.443680 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 17:15:23.443774 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=services-9670 exec execpod726zl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.44 80'
  I0112 17:15:23.595803 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.44 80\nConnection to 10.152.183.44 80 port [tcp/http] succeeded!\n"
  I0112 17:15:23.595867 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9670 @ 01/12/25 17:15:23.595
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9670 to expose endpoints map[] @ 01/12/25 17:15:23.643
  E0112 17:15:24.438807      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:24.656351 21 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9670 exposes endpoints map[]
  I0112 17:15:24.699256 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9670" for this suite. @ 01/12/25 17:15:24.704
• [13.427 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 01/12/25 17:15:24.721
  I0112 17:15:24.721180 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename gc @ 01/12/25 17:15:24.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:15:24.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:15:24.76
  STEP: create the rc1 @ 01/12/25 17:15:24.769
  STEP: create the rc2 @ 01/12/25 17:15:24.79
  E0112 17:15:25.439110      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:26.439290      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:27.439515      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:28.441563      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:29.442121      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:30.443075      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:31.443387      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:32.443651      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 01/12/25 17:15:32.818
  E0112 17:15:33.444529      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:34.445567      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:35.446085      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:36.446691      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:37.446790      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:38.447274      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:39.447895      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 01/12/25 17:15:40.231
  E0112 17:15:40.448805      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 01/12/25 17:15:40.515
  E0112 17:15:41.449677      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:42.450805      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:43.451451      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:44.452578      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:45.452952      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:45.607250 21 garbage_collector.go:762] 72 pods remaining
  I0112 17:15:45.607351 21 garbage_collector.go:769] 70 pods has nil DeletionTimestamp
  I0112 17:15:45.607375 21 garbage_collector.go:770] 
  E0112 17:15:46.458066      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:47.458248      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:48.459964      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:49.460174      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:50.461188      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/12/25 17:15:50.552
  W0112 17:15:50.574159      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0112 17:15:50.574260 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0112 17:15:50.574454 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-26mk2" in namespace "gc-142"
  I0112 17:15:50.787441 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2drc5" in namespace "gc-142"
  I0112 17:15:51.050198 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2jmd9" in namespace "gc-142"
  I0112 17:15:51.265551 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2kxfm" in namespace "gc-142"
  E0112 17:15:51.462085      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:51.516358 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2vh8q" in namespace "gc-142"
  I0112 17:15:51.801404 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4b257" in namespace "gc-142"
  I0112 17:15:52.165259 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4fkxl" in namespace "gc-142"
  I0112 17:15:52.310121 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4lmvg" in namespace "gc-142"
  I0112 17:15:52.450031 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4q2fv" in namespace "gc-142"
  E0112 17:15:52.462043      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:52.565493 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-54vmg" in namespace "gc-142"
  I0112 17:15:52.701998 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5gzzb" in namespace "gc-142"
  I0112 17:15:52.798375 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5j5cb" in namespace "gc-142"
  I0112 17:15:52.891162 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5krgq" in namespace "gc-142"
  I0112 17:15:52.980962 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5zpnm" in namespace "gc-142"
  I0112 17:15:53.105758 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-62cwq" in namespace "gc-142"
  I0112 17:15:53.287649 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-68pvj" in namespace "gc-142"
  I0112 17:15:53.457150 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-69pfg" in namespace "gc-142"
  E0112 17:15:53.462744      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:53.643572 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6mwwz" in namespace "gc-142"
  I0112 17:15:53.723121 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6zdcl" in namespace "gc-142"
  I0112 17:15:53.826609 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6zs6h" in namespace "gc-142"
  I0112 17:15:53.927657 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-75cl4" in namespace "gc-142"
  I0112 17:15:54.035958 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7mbdf" in namespace "gc-142"
  I0112 17:15:54.149185 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7p7fn" in namespace "gc-142"
  I0112 17:15:54.299734 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7pzvs" in namespace "gc-142"
  I0112 17:15:54.422310 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7wk89" in namespace "gc-142"
  E0112 17:15:54.462840      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:54.532738 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9j4h4" in namespace "gc-142"
  I0112 17:15:54.613101 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9kvs5" in namespace "gc-142"
  I0112 17:15:54.718482 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bsc6z" in namespace "gc-142"
  I0112 17:15:54.865181 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c2lv7" in namespace "gc-142"
  I0112 17:15:55.065621 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c55f4" in namespace "gc-142"
  I0112 17:15:55.243300 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cdq9t" in namespace "gc-142"
  I0112 17:15:55.394111 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cpbpf" in namespace "gc-142"
  E0112 17:15:55.466314      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:55.487848 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cszrk" in namespace "gc-142"
  I0112 17:15:55.620178 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cv9ch" in namespace "gc-142"
  I0112 17:15:55.766536 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d86x2" in namespace "gc-142"
  I0112 17:15:55.873275 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dhdqs" in namespace "gc-142"
  I0112 17:15:56.002354 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-djvmm" in namespace "gc-142"
  I0112 17:15:56.191581 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dkb7g" in namespace "gc-142"
  I0112 17:15:56.301105 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dnfw7" in namespace "gc-142"
  I0112 17:15:56.425098 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dpdt6" in namespace "gc-142"
  E0112 17:15:56.464202      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:56.490539 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ds2lt" in namespace "gc-142"
  I0112 17:15:56.557126 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f2vvg" in namespace "gc-142"
  I0112 17:15:56.638775 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fm6h2" in namespace "gc-142"
  I0112 17:15:56.815537 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fr9lr" in namespace "gc-142"
  I0112 17:15:56.926828 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fv65n" in namespace "gc-142"
  I0112 17:15:57.082916 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g8x4q" in namespace "gc-142"
  I0112 17:15:57.200351 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gff87" in namespace "gc-142"
  I0112 17:15:57.363686 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gm2dh" in namespace "gc-142"
  E0112 17:15:57.464984      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:15:57.510690 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h8gpj" in namespace "gc-142"
  I0112 17:15:57.635360 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j4nrv" in namespace "gc-142"
  I0112 17:15:57.816042 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-142" for this suite. @ 01/12/25 17:15:57.832
• [33.142 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 01/12/25 17:15:57.863
  I0112 17:15:57.863829 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename pods @ 01/12/25 17:15:57.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:15:57.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:15:57.958
  STEP: creating a Pod with a static label @ 01/12/25 17:15:57.971
  STEP: watching for Pod to be ready @ 01/12/25 17:15:58.016
  I0112 17:15:58.021391 21 pods.go:945] observed Pod pod-test in namespace pods-23 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0112 17:15:58.081637 21 pods.go:945] observed Pod pod-test in namespace pods-23 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC  }]
  I0112 17:15:58.158524 21 pods.go:945] observed Pod pod-test in namespace pods-23 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC  }]
  E0112 17:15:58.466405      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:15:59.466700      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:00.467345      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:01.468473      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:02.468810      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:16:02.550666 21 pods.go:945] observed Pod pod-test in namespace pods-23 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC  }]
  I0112 17:16:03.428298 21 pods.go:948] Found Pod pod-test in namespace pods-23 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:16:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:16:03 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:16:03 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 17:15:58 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 01/12/25 17:16:03.433
  STEP: getting the Pod and ensuring that it's patched @ 01/12/25 17:16:03.456
  STEP: replacing the Pod's status Ready condition to False @ 01/12/25 17:16:03.46
  E0112 17:16:03.469046      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the Pod again to ensure its Ready conditions are False @ 01/12/25 17:16:03.488
  STEP: deleting the Pod via a Collection with a LabelSelector @ 01/12/25 17:16:03.488
  STEP: watching for the Pod to be deleted @ 01/12/25 17:16:03.53
  I0112 17:16:03.534495 21 pods.go:1058] observed event type MODIFIED
  E0112 17:16:04.469710      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:16:05.443897 21 pods.go:1058] observed event type MODIFIED
  E0112 17:16:05.469872      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:16:05.731067 21 pods.go:1058] observed event type MODIFIED
  I0112 17:16:05.924878 21 pods.go:1058] observed event type MODIFIED
  I0112 17:16:06.450904 21 pods.go:1058] observed event type MODIFIED
  E0112 17:16:06.470198      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:16:06.480782 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-23" for this suite. @ 01/12/25 17:16:06.484
• [8.641 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 01/12/25 17:16:06.505
  I0112 17:16:06.505419 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 17:16:06.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:16:06.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:16:06.557
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 17:16:06.56
  E0112 17:16:07.471025      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:08.471101      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:09.471912      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:10.472135      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:16:10.598
  I0112 17:16:10.604600 21 output.go:196] Trying to get logs from node ubuntu pod downwardapi-volume-cbdb2f6d-1ae9-4f0f-8a27-7964bfd16fdc container client-container: <nil>
  STEP: delete the pod @ 01/12/25 17:16:10.626
  I0112 17:16:10.671590 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9228" for this suite. @ 01/12/25 17:16:10.676
• [4.189 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 01/12/25 17:16:10.694
  I0112 17:16:10.694916 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename subpath @ 01/12/25 17:16:10.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:16:10.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:16:10.734
  STEP: Setting up data @ 01/12/25 17:16:10.738
  STEP: Creating pod pod-subpath-test-projected-b8hp @ 01/12/25 17:16:10.788
  STEP: Creating a pod to test atomic-volume-subpath @ 01/12/25 17:16:10.788
  E0112 17:16:11.473223      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:12.473486      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:13.473623      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:14.473867      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:15.474038      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:16.474733      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:17.475268      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:18.475551      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:19.475823      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:20.476128      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:21.476311      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:22.476912      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:23.478087      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:24.478562      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:25.479281      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:26.480068      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:27.481270      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:28.481599      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:29.482347      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:30.483152      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:31.483337      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:32.484389      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:33.484698      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:34.485222      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:16:34.88
  I0112 17:16:34.885066 21 output.go:196] Trying to get logs from node ubuntu pod pod-subpath-test-projected-b8hp container test-container-subpath-projected-b8hp: <nil>
  STEP: delete the pod @ 01/12/25 17:16:34.892
  STEP: Deleting pod pod-subpath-test-projected-b8hp @ 01/12/25 17:16:34.926
  I0112 17:16:34.926512 21 delete.go:62] Deleting pod "pod-subpath-test-projected-b8hp" in namespace "subpath-6372"
  I0112 17:16:34.930621 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6372" for this suite. @ 01/12/25 17:16:34.936
• [24.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 01/12/25 17:16:34.952
  I0112 17:16:34.952540 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 17:16:34.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:16:34.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:16:34.988
  STEP: Creating Pod @ 01/12/25 17:16:34.997
  E0112 17:16:35.485158      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:36.485393      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 01/12/25 17:16:37.024
  I0112 17:16:37.024744 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3373 PodName:pod-sharedvolume-f63f249b-9388-4a3e-a664-88f96ef6b677 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 17:16:37.024786 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  I0112 17:16:37.025461 21 exec_util.go:66] ExecWithOptions: Clientset creation
  I0112 17:16:37.025566 21 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-3373/pods/pod-sharedvolume-f63f249b-9388-4a3e-a664-88f96ef6b677/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0112 17:16:37.098351 21 exec_util.go:111] Exec stderr: ""
  I0112 17:16:37.098470 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3373" for this suite. @ 01/12/25 17:16:37.103
• [2.167 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 01/12/25 17:16:37.12
  I0112 17:16:37.120112 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename kubectl-logs @ 01/12/25 17:16:37.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:16:37.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:16:37.177
  STEP: creating a pod @ 01/12/25 17:16:37.182
  I0112 17:16:37.182567 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-logs-2231 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0112 17:16:37.268697 21 builder.go:146] stderr: ""
  I0112 17:16:37.268768 21 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 01/12/25 17:16:37.268
  I0112 17:16:37.268888 21 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0112 17:16:37.486375      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:38.486810      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:16:39.279141 21 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 01/12/25 17:16:39.279
  I0112 17:16:39.279304 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-logs-2231 logs logs-generator logs-generator'
  I0112 17:16:39.362719 21 builder.go:146] stderr: ""
  I0112 17:16:39.362780 21 builder.go:147] stdout: "I0112 17:16:38.165521       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/zrv 527\nI0112 17:16:38.366136       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/m5s4 377\nI0112 17:16:38.566751       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/knk4 538\nI0112 17:16:38.766254       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/tbjq 518\nI0112 17:16:38.965797       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/wzp 506\nI0112 17:16:39.166345       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/j9nz 347\n"
  STEP: limiting log lines @ 01/12/25 17:16:39.362
  I0112 17:16:39.362891 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-logs-2231 logs logs-generator logs-generator --tail=1'
  I0112 17:16:39.450694 21 builder.go:146] stderr: ""
  I0112 17:16:39.450746 21 builder.go:147] stdout: "I0112 17:16:39.365708       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/phq 405\n"
  I0112 17:16:39.450771 21 logs.go:180] got output "I0112 17:16:39.365708       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/phq 405\n"
  STEP: limiting log bytes @ 01/12/25 17:16:39.45
  I0112 17:16:39.450867 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-logs-2231 logs logs-generator logs-generator --limit-bytes=1'
  E0112 17:16:39.487517      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:16:39.535071 21 builder.go:146] stderr: ""
  I0112 17:16:39.535142 21 builder.go:147] stdout: "I"
  I0112 17:16:39.535190 21 logs.go:186] got output "I"
  STEP: exposing timestamps @ 01/12/25 17:16:39.535
  I0112 17:16:39.535443 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-logs-2231 logs logs-generator logs-generator --tail=1 --timestamps'
  I0112 17:16:39.624572 21 builder.go:146] stderr: ""
  I0112 17:16:39.624659 21 builder.go:147] stdout: "2025-01-12T17:16:39.566492793Z I0112 17:16:39.566141       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/j89 388\n"
  I0112 17:16:39.624676 21 logs.go:192] got output "2025-01-12T17:16:39.566492793Z I0112 17:16:39.566141       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/j89 388\n"
  STEP: restricting to a time range @ 01/12/25 17:16:39.624
  E0112 17:16:40.487683      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:41.488498      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:16:42.125465 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-logs-2231 logs logs-generator logs-generator --since=1s'
  I0112 17:16:42.229959 21 builder.go:146] stderr: ""
  I0112 17:16:42.230042 21 builder.go:147] stdout: "I0112 17:16:41.366703       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/vk5 555\nI0112 17:16:41.566217       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/bjcf 415\nI0112 17:16:41.765761       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/c2k 463\nI0112 17:16:41.966442       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/fnh5 260\nI0112 17:16:42.165608       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/fwb 290\n"
  I0112 17:16:42.230127 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-logs-2231 logs logs-generator logs-generator --since=24h'
  I0112 17:16:42.329525 21 builder.go:146] stderr: ""
  I0112 17:16:42.329638 21 builder.go:147] stdout: "I0112 17:16:38.165521       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/zrv 527\nI0112 17:16:38.366136       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/m5s4 377\nI0112 17:16:38.566751       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/knk4 538\nI0112 17:16:38.766254       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/tbjq 518\nI0112 17:16:38.965797       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/wzp 506\nI0112 17:16:39.166345       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/j9nz 347\nI0112 17:16:39.365708       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/phq 405\nI0112 17:16:39.566141       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/j89 388\nI0112 17:16:39.765697       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/8s6 284\nI0112 17:16:39.966174       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/6z2 226\nI0112 17:16:40.165569       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/gl5b 332\nI0112 17:16:40.366106       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/gpz 533\nI0112 17:16:40.565732       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/f7q 595\nI0112 17:16:40.766324       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/fqds 396\nI0112 17:16:40.965751       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/rr8g 502\nI0112 17:16:41.165996       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/bvx 299\nI0112 17:16:41.366703       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/vk5 555\nI0112 17:16:41.566217       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/bjcf 415\nI0112 17:16:41.765761       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/c2k 463\nI0112 17:16:41.966442       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/fnh5 260\nI0112 17:16:42.165608       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/fwb 290\n"
  I0112 17:16:42.329762 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-407280450 --namespace=kubectl-logs-2231 delete pod logs-generator'
  E0112 17:16:42.488690      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:43.489077      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:16:43.644047 21 builder.go:146] stderr: ""
  I0112 17:16:43.644116 21 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0112 17:16:43.644271 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2231" for this suite. @ 01/12/25 17:16:43.648
• [6.566 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 01/12/25 17:16:43.686
  I0112 17:16:43.686249 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename projected @ 01/12/25 17:16:43.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:16:43.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:16:43.72
  STEP: Creating projection with secret that has name projected-secret-test-2e963c96-a033-4f53-9318-382c20f152f9 @ 01/12/25 17:16:43.724
  STEP: Creating a pod to test consume secrets @ 01/12/25 17:16:43.736
  E0112 17:16:44.489507      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:45.490166      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:46.490619      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:47.491181      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:16:47.764
  I0112 17:16:47.768213 21 output.go:196] Trying to get logs from node ubuntu pod pod-projected-secrets-59b4ca01-c5cd-4a21-b282-61e910c57005 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 17:16:47.774
  I0112 17:16:47.805683 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9679" for this suite. @ 01/12/25 17:16:47.809
• [4.146 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 01/12/25 17:16:47.832
  I0112 17:16:47.832265 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename webhook @ 01/12/25 17:16:47.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:16:47.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:16:47.875
  STEP: Setting up server cert @ 01/12/25 17:16:47.952
  E0112 17:16:48.491302      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 17:16:48.765
  STEP: Deploying the webhook pod @ 01/12/25 17:16:48.782
  STEP: Wait for the deployment to be ready @ 01/12/25 17:16:48.824
  I0112 17:16:48.835030 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0112 17:16:49.491916      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:50.492254      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/12/25 17:16:50.847
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 17:16:50.882
  E0112 17:16:51.493441      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:16:51.883240 21 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 01/12/25 17:16:51.894
  STEP: create a configmap that should be updated by the webhook @ 01/12/25 17:16:51.917
  I0112 17:16:52.087211 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2905" for this suite. @ 01/12/25 17:16:52.091
  STEP: Destroying namespace "webhook-markers-4516" for this suite. @ 01/12/25 17:16:52.112
• [4.309 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 01/12/25 17:16:52.141
  I0112 17:16:52.141144 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 17:16:52.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:16:52.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:16:52.197
  STEP: Creating a pod to test substitution in volume subpath @ 01/12/25 17:16:52.203
  E0112 17:16:52.494059      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:53.494412      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:54.495315      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:55.495724      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:16:56.243
  I0112 17:16:56.247211 21 output.go:196] Trying to get logs from node ubuntu pod var-expansion-f4d19906-0017-4903-a896-c2808778fabd container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 17:16:56.253
  I0112 17:16:56.310581 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-558" for this suite. @ 01/12/25 17:16:56.314
• [4.188 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 01/12/25 17:16:56.328
  I0112 17:16:56.328914 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 17:16:56.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:16:56.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:16:56.37
  I0112 17:16:56.375244 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  E0112 17:16:56.496701      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:57.497313      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:16:58.497635      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:16:59.497311 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0112 17:16:59.497657      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "field-validation-5492" for this suite. @ 01/12/25 17:16:59.501
• [3.191 seconds]
------------------------------
S
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 01/12/25 17:16:59.519
  I0112 17:16:59.519669 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename conformance-tests @ 01/12/25 17:16:59.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:16:59.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:16:59.565
  STEP: Getting node addresses @ 01/12/25 17:16:59.569
  I0112 17:16:59.569626 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0112 17:16:59.576715 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7093" for this suite. @ 01/12/25 17:16:59.581
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 01/12/25 17:16:59.596
  I0112 17:16:59.596171 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 17:16:59.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:16:59.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:16:59.632
  STEP: Creating the pod @ 01/12/25 17:16:59.638
  E0112 17:17:00.498020      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:01.498078      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:17:02.200663 21 pod_client.go:173] Successfully updated pod "labelsupdate2c132acb-8754-48da-831f-a08118b9b15d"
  E0112 17:17:02.498738      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:03.499686      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:04.499763      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:05.500109      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:17:06.229583 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8113" for this suite. @ 01/12/25 17:17:06.233
• [6.655 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 01/12/25 17:17:06.251
  I0112 17:17:06.251170 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 17:17:06.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:17:06.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:17:06.3
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/12/25 17:17:06.315
  E0112 17:17:06.501050      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:07.501218      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:08.501984      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:09.502101      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/12/25 17:17:10.347
  I0112 17:17:10.351693 21 output.go:196] Trying to get logs from node ubuntu pod pod-02e70626-273d-49af-9726-19c657ea256a container test-container: <nil>
  STEP: delete the pod @ 01/12/25 17:17:10.358
  I0112 17:17:10.412370 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5448" for this suite. @ 01/12/25 17:17:10.416
• [4.188 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 01/12/25 17:17:10.439
  I0112 17:17:10.439666 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename replicaset @ 01/12/25 17:17:10.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:17:10.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:17:10.494
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 01/12/25 17:17:10.498
  E0112 17:17:10.502530      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:17:10.513732 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0112 17:17:11.503721      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:12.503823      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:13.504209      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:14.504903      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:15.505127      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:17:15.518577 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/12/25 17:17:15.518
  STEP: getting scale subresource @ 01/12/25 17:17:15.518
  STEP: updating a scale subresource @ 01/12/25 17:17:15.523
  STEP: verifying the replicaset Spec.Replicas was modified @ 01/12/25 17:17:15.536
  STEP: Patch a scale subresource @ 01/12/25 17:17:15.541
  I0112 17:17:15.578212 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9693" for this suite. @ 01/12/25 17:17:15.584
• [5.194 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 01/12/25 17:17:15.634
  I0112 17:17:15.634059 21 util.go:499] >>> kubeConfig: /tmp/kubeconfig-407280450
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 17:17:15.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 17:17:15.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 17:17:15.721
  E0112 17:17:16.505337      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:17.505722      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:18.506076      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:19.506548      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:20.507363      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:21.508141      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:22.508821      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:23.509773      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:24.509358      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:25.509684      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:26.510593      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:27.511072      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:28.511391      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:29.512443      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:30.512606      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:31.512964      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:32.513508      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:33.514711      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:34.515597      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:35.515917      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:36.516687      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:37.516741      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:38.517152      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:39.517277      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:40.517700      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:41.517708      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:42.518054      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:43.519034      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:44.519521      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:45.519807      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:46.520552      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:47.521322      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:48.522200      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:49.522542      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:50.522988      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:51.523145      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:52.523592      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:53.524324      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:54.524576      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:55.524963      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:56.525849      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:57.526603      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:58.527161      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:17:59.527659      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:00.528226      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:01.529376      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:02.529880      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:03.530260      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:04.531402      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:05.531740      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:06.532445      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:07.533267      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:08.533370      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:09.534498      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:10.535094      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:11.535306      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:12.535584      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:13.536669      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:14.537643      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0112 17:18:15.537786      21 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0112 17:18:15.764666 21 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3017" for this suite. @ 01/12/25 17:18:15.768
• [60.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0112 17:18:15.783224 21 suites.go:34] Running AfterSuite actions on node 1
  I0112 17:18:15.783249 21 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.043 seconds]
------------------------------

Ran 404 of 6605 Specs in 6044.306 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h40m45.249875188s
Test Suite Passed
